  I0622 12:22:35.311739      19 e2e.go:117] Starting e2e run "d1420184-d040-484b-a2cd-f52bfe2caa64" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1719058954 - will randomize all specs

Will run 388 of 7408 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Jun 22 12:22:35.465: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 12:22:35.466: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Jun 22 12:22:35.499: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Jun 22 12:22:35.504: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Jun 22 12:22:35.504: INFO: e2e test version: v1.29.6
  Jun 22 12:22:35.505: INFO: kube-apiserver version: v1.29.6
  Jun 22 12:22:35.505: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 12:22:35.510: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.046 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 06/22/24 12:22:35.742
  Jun 22 12:22:35.742: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename job @ 06/22/24 12:22:35.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:22:35.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:22:35.768
  STEP: Creating a job @ 06/22/24 12:22:35.771
  STEP: Ensuring active pods == parallelism @ 06/22/24 12:22:35.778
  STEP: delete a job @ 06/22/24 12:22:37.783
  STEP: deleting Job.batch foo in namespace job-33, will wait for the garbage collector to delete the pods @ 06/22/24 12:22:37.783
  Jun 22 12:22:37.844: INFO: Deleting Job.batch foo took: 7.264899ms
  Jun 22 12:22:37.944: INFO: Terminating Job.batch foo pods took: 100.121191ms
  STEP: Ensuring job was deleted @ 06/22/24 12:22:43.944
  Jun 22 12:22:43.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-33" for this suite. @ 06/22/24 12:22:43.957
• [8.224 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 06/22/24 12:22:43.966
  Jun 22 12:22:43.966: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 12:22:43.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:22:44.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:22:44.123
  STEP: Setting up server cert @ 06/22/24 12:22:44.147
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 12:22:44.605
  STEP: Deploying the webhook pod @ 06/22/24 12:22:44.619
  STEP: Wait for the deployment to be ready @ 06/22/24 12:22:44.635
  Jun 22 12:22:44.643: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Jun 22 12:22:46.656: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 22, 12, 22, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 22, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 22, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 22, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 06/22/24 12:22:48.66
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 12:22:48.672
  Jun 22 12:22:49.672: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 06/22/24 12:22:49.681
  STEP: create a pod that should be updated by the webhook @ 06/22/24 12:22:49.696
  Jun 22 12:22:49.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2862" for this suite. @ 06/22/24 12:22:49.765
  STEP: Destroying namespace "webhook-markers-73" for this suite. @ 06/22/24 12:22:49.771
• [5.811 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 06/22/24 12:22:49.779
  Jun 22 12:22:49.779: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-runtime @ 06/22/24 12:22:49.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:22:49.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:22:49.801
  STEP: create the container @ 06/22/24 12:22:49.804
  W0622 12:22:49.812239      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/22/24 12:22:49.812
  STEP: get the container status @ 06/22/24 12:22:53.836
  STEP: the container should be terminated @ 06/22/24 12:22:53.841
  STEP: the termination message should be set @ 06/22/24 12:22:53.841
  Jun 22 12:22:53.841: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/22/24 12:22:53.841
  Jun 22 12:22:53.858: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6350" for this suite. @ 06/22/24 12:22:53.861
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 06/22/24 12:22:53.868
  Jun 22 12:22:53.868: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename secrets @ 06/22/24 12:22:53.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:22:53.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:22:53.886
  Jun 22 12:22:53.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8822" for this suite. @ 06/22/24 12:22:53.928
• [0.067 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 06/22/24 12:22:53.935
  Jun 22 12:22:53.935: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 12:22:53.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:22:53.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:22:53.954
  STEP: creating service in namespace services-6517 @ 06/22/24 12:22:53.956
  STEP: creating service affinity-clusterip-transition in namespace services-6517 @ 06/22/24 12:22:53.956
  STEP: creating replication controller affinity-clusterip-transition in namespace services-6517 @ 06/22/24 12:22:53.967
  I0622 12:22:53.974125      19 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-6517, replica count: 3
  I0622 12:22:57.025930      19 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0622 12:23:00.026928      19 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 22 12:23:00.035: INFO: Creating new exec pod
  Jun 22 12:23:03.055: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-6517 exec execpod-affinityhq7hw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Jun 22 12:23:03.159: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Jun 22 12:23:03.159: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 12:23:03.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-6517 exec execpod-affinityhq7hw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.155 80'
  Jun 22 12:23:03.257: INFO: stderr: "+ nc -v -t -w 2 10.152.183.155 80\n+ echo hostName\nConnection to 10.152.183.155 80 port [tcp/http] succeeded!\n"
  Jun 22 12:23:03.257: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 12:23:03.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-6517 exec execpod-affinityhq7hw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.155:80/ ; done'
  Jun 22 12:23:03.417: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n"
  Jun 22 12:23:03.417: INFO: stdout: "\naffinity-clusterip-transition-52gh5\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-52gh5\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-52gh5\naffinity-clusterip-transition-52gh5\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-52gh5\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-52gh5\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-qppd2\naffinity-clusterip-transition-52gh5"
  Jun 22 12:23:03.417: INFO: Received response from host: affinity-clusterip-transition-52gh5
  Jun 22 12:23:03.417: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.417: INFO: Received response from host: affinity-clusterip-transition-52gh5
  Jun 22 12:23:03.417: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.417: INFO: Received response from host: affinity-clusterip-transition-52gh5
  Jun 22 12:23:03.417: INFO: Received response from host: affinity-clusterip-transition-52gh5
  Jun 22 12:23:03.417: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.417: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.417: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.417: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.417: INFO: Received response from host: affinity-clusterip-transition-52gh5
  Jun 22 12:23:03.417: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.417: INFO: Received response from host: affinity-clusterip-transition-52gh5
  Jun 22 12:23:03.417: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.417: INFO: Received response from host: affinity-clusterip-transition-qppd2
  Jun 22 12:23:03.417: INFO: Received response from host: affinity-clusterip-transition-52gh5
  Jun 22 12:23:03.429: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-6517 exec execpod-affinityhq7hw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.155:80/ ; done'
  Jun 22 12:23:03.562: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.155:80/\n"
  Jun 22 12:23:03.562: INFO: stdout: "\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8\naffinity-clusterip-transition-8nmj8"
  Jun 22 12:23:03.562: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.562: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.562: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.562: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.562: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.562: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.562: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.562: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.562: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.562: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.562: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.562: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.562: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.562: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.562: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.562: INFO: Received response from host: affinity-clusterip-transition-8nmj8
  Jun 22 12:23:03.562: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-6517, will wait for the garbage collector to delete the pods @ 06/22/24 12:23:03.576
  Jun 22 12:23:03.638: INFO: Deleting ReplicationController affinity-clusterip-transition took: 7.051573ms
  Jun 22 12:23:03.738: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.585309ms
  Jun 22 12:23:09.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6517" for this suite. @ 06/22/24 12:23:09.161
• [15.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 06/22/24 12:23:09.169
  Jun 22 12:23:09.169: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl @ 06/22/24 12:23:09.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:23:09.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:23:09.191
  STEP: Starting the proxy @ 06/22/24 12:23:09.193
  Jun 22 12:23:09.193: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-1028 proxy --unix-socket=/tmp/kubectl-proxy-unix1552493910/test'
  STEP: retrieving proxy /api/ output @ 06/22/24 12:23:09.225
  Jun 22 12:23:09.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1028" for this suite. @ 06/22/24 12:23:09.23
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 06/22/24 12:23:09.237
  Jun 22 12:23:09.237: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pods @ 06/22/24 12:23:09.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:23:09.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:23:09.255
  STEP: creating pod @ 06/22/24 12:23:09.258
  Jun 22 12:23:11.285: INFO: Pod pod-hostip-c4a2532c-4ceb-4b43-8888-9a95edad5fb2 has hostIP: 172.31.3.104
  Jun 22 12:23:11.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8948" for this suite. @ 06/22/24 12:23:11.289
• [2.059 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 06/22/24 12:23:11.296
  Jun 22 12:23:11.296: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename cronjob @ 06/22/24 12:23:11.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:23:11.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:23:11.316
  STEP: Creating a cronjob @ 06/22/24 12:23:11.318
  STEP: creating @ 06/22/24 12:23:11.318
  STEP: getting @ 06/22/24 12:23:11.326
  STEP: listing @ 06/22/24 12:23:11.329
  STEP: watching @ 06/22/24 12:23:11.332
  Jun 22 12:23:11.332: INFO: starting watch
  STEP: cluster-wide listing @ 06/22/24 12:23:11.333
  STEP: cluster-wide watching @ 06/22/24 12:23:11.336
  Jun 22 12:23:11.336: INFO: starting watch
  STEP: patching @ 06/22/24 12:23:11.337
  STEP: updating @ 06/22/24 12:23:11.344
  Jun 22 12:23:11.354: INFO: waiting for watch events with expected annotations
  Jun 22 12:23:11.354: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/22/24 12:23:11.354
  STEP: updating /status @ 06/22/24 12:23:11.372
  STEP: get /status @ 06/22/24 12:23:11.389
  STEP: deleting @ 06/22/24 12:23:11.396
  STEP: deleting a collection @ 06/22/24 12:23:11.415
  Jun 22 12:23:11.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4244" for this suite. @ 06/22/24 12:23:11.43
• [0.142 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 06/22/24 12:23:11.439
  Jun 22 12:23:11.439: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 12:23:11.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:23:11.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:23:11.459
  STEP: Creating secret with name s-test-opt-del-37bf2cfe-34f0-4736-ba0c-2d705a478303 @ 06/22/24 12:23:11.465
  STEP: Creating secret with name s-test-opt-upd-bdd50bda-84f8-489f-9c58-8cd73e51aec7 @ 06/22/24 12:23:11.47
  STEP: Creating the pod @ 06/22/24 12:23:11.473
  STEP: Deleting secret s-test-opt-del-37bf2cfe-34f0-4736-ba0c-2d705a478303 @ 06/22/24 12:23:13.523
  STEP: Updating secret s-test-opt-upd-bdd50bda-84f8-489f-9c58-8cd73e51aec7 @ 06/22/24 12:23:13.53
  STEP: Creating secret with name s-test-opt-create-748cb9fd-d7dd-440b-b1ce-6e3bdaac2f69 @ 06/22/24 12:23:13.535
  STEP: waiting to observe update in volume @ 06/22/24 12:23:13.539
  Jun 22 12:23:17.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7026" for this suite. @ 06/22/24 12:23:17.58
• [6.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 06/22/24 12:23:17.588
  Jun 22 12:23:17.588: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename replication-controller @ 06/22/24 12:23:17.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:23:17.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:23:17.608
  STEP: Creating ReplicationController "e2e-rc-5n7lx" @ 06/22/24 12:23:17.61
  Jun 22 12:23:17.616: INFO: Get Replication Controller "e2e-rc-5n7lx" to confirm replicas
  Jun 22 12:23:18.617: INFO: Get Replication Controller "e2e-rc-5n7lx" to confirm replicas
  Jun 22 12:23:18.622: INFO: Found 1 replicas for "e2e-rc-5n7lx" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-5n7lx" @ 06/22/24 12:23:18.622
  STEP: Updating a scale subresource @ 06/22/24 12:23:18.625
  STEP: Verifying replicas where modified for replication controller "e2e-rc-5n7lx" @ 06/22/24 12:23:18.632
  Jun 22 12:23:18.632: INFO: Get Replication Controller "e2e-rc-5n7lx" to confirm replicas
  Jun 22 12:23:19.632: INFO: Get Replication Controller "e2e-rc-5n7lx" to confirm replicas
  Jun 22 12:23:19.637: INFO: Found 2 replicas for "e2e-rc-5n7lx" replication controller
  Jun 22 12:23:19.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-93" for this suite. @ 06/22/24 12:23:19.641
• [2.060 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 06/22/24 12:23:19.648
  Jun 22 12:23:19.648: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-probe @ 06/22/24 12:23:19.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:23:19.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:23:19.671
  STEP: Creating pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804 @ 06/22/24 12:23:19.673
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/22/24 12:23:21.688
  Jun 22 12:23:21.692: INFO: Initial restart count of pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 is 0
  Jun 22 12:23:21.695: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:23.700: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:25.706: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:27.710: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:29.715: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:31.720: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:33.725: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:35.731: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:37.736: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:39.741: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:41.746: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:43.752: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:45.757: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:47.761: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:49.767: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:51.772: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:53.778: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:55.783: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:57.787: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:23:59.793: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:01.798: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:03.803: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:05.808: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:07.814: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:09.819: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:11.824: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:13.830: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:15.835: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:17.839: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:19.845: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:21.850: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:23.854: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:25.859: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:27.864: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:29.869: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:31.874: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:33.880: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:35.885: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:37.891: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:39.896: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:41.901: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:43.906: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:45.911: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:47.915: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:49.920: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:51.924: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:53.930: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:55.937: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:57.942: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:24:59.948: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:01.954: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:03.958: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:05.963: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:07.967: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:09.973: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:11.978: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:13.983: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:15.988: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:17.994: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:19.999: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:22.005: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:24.009: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:26.015: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:28.019: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:30.024: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:32.028: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:34.034: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:36.039: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:38.044: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:40.049: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:42.054: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:44.059: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:46.064: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:48.069: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:50.073: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:52.079: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:54.085: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:56.091: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:25:58.096: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:00.101: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:02.107: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:04.113: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:06.118: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:08.124: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:10.129: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:12.134: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:14.140: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:16.145: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:18.151: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:20.156: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:22.162: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:24.168: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:26.172: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:28.180: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:30.186: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:32.192: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:34.201: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:36.207: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:38.212: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:40.218: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:42.224: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:44.230: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:46.235: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:48.242: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:50.247: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:52.252: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:54.257: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:56.262: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:26:58.268: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:27:00.274: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:27:02.279: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:27:04.285: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:27:06.290: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:27:08.296: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:27:10.302: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:27:12.306: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:27:14.311: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:27:16.316: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:27:18.320: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  Jun 22 12:27:20.326: INFO: Get pod test-webserver-617b3ae6-8326-4266-b850-f7d60363f9e9 in namespace container-probe-8804
  STEP: deleting the pod @ 06/22/24 12:27:22.326
  Jun 22 12:27:22.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8804" for this suite. @ 06/22/24 12:27:22.348
• [242.706 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 06/22/24 12:27:22.355
  Jun 22 12:27:22.355: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 12:27:22.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:27:22.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:27:22.373
  STEP: Creating configMap with name projected-configmap-test-volume-1964b673-52cc-4bba-9e35-21e080427288 @ 06/22/24 12:27:22.376
  STEP: Creating a pod to test consume configMaps @ 06/22/24 12:27:22.38
  STEP: Saw pod success @ 06/22/24 12:27:26.402
  Jun 22 12:27:26.406: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-projected-configmaps-e7adb36b-fc0a-41f2-9609-c0204191fddb container agnhost-container: <nil>
  STEP: delete the pod @ 06/22/24 12:27:26.421
  Jun 22 12:27:26.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1540" for this suite. @ 06/22/24 12:27:26.444
• [4.096 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 06/22/24 12:27:26.451
  Jun 22 12:27:26.451: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename watch @ 06/22/24 12:27:26.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:27:26.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:27:26.47
  STEP: creating a new configmap @ 06/22/24 12:27:26.473
  STEP: modifying the configmap once @ 06/22/24 12:27:26.478
  STEP: modifying the configmap a second time @ 06/22/24 12:27:26.485
  STEP: deleting the configmap @ 06/22/24 12:27:26.494
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 06/22/24 12:27:26.5
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 06/22/24 12:27:26.501
  Jun 22 12:27:26.501: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1032  befb143c-17ab-467d-b4dd-fc862947d618 5425 0 2024-06-22 12:27:26 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-22 12:27:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 12:27:26.501: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1032  befb143c-17ab-467d-b4dd-fc862947d618 5426 0 2024-06-22 12:27:26 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-22 12:27:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 12:27:26.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1032" for this suite. @ 06/22/24 12:27:26.505
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 06/22/24 12:27:26.513
  Jun 22 12:27:26.513: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pv @ 06/22/24 12:27:26.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:27:26.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:27:26.531
  STEP: Creating initial PV and PVC @ 06/22/24 12:27:26.533
  Jun 22 12:27:26.533: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8190" @ 06/22/24 12:27:26.546
  STEP: Listing PVCs in namespace "pv-8190" @ 06/22/24 12:27:26.549
  STEP: Reading "pvc-bv76z" Status @ 06/22/24 12:27:26.552
  STEP: Reading "pv-8190-7nq7n" Status @ 06/22/24 12:27:26.559
  STEP: Patching "pvc-bv76z" Status @ 06/22/24 12:27:26.562
  STEP: Patching "pv-8190-7nq7n" Status @ 06/22/24 12:27:26.567
  STEP: Updating "pvc-bv76z" Status @ 06/22/24 12:27:26.575
  STEP: Updating "pv-8190-7nq7n" Status @ 06/22/24 12:27:26.585
  Jun 22 12:27:26.594: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jun 22 12:27:26.594: INFO: Deleting PersistentVolumeClaim "pvc-bv76z"
  Jun 22 12:27:26.601: INFO: Deleting PersistentVolume "pv-8190-7nq7n"
  Jun 22 12:27:26.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8190" for this suite. @ 06/22/24 12:27:26.612
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 06/22/24 12:27:26.62
  Jun 22 12:27:26.620: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename server-version @ 06/22/24 12:27:26.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:27:26.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:27:26.639
  STEP: Request ServerVersion @ 06/22/24 12:27:26.641
  STEP: Confirm major version @ 06/22/24 12:27:26.642
  Jun 22 12:27:26.642: INFO: Major version: 1
  STEP: Confirm minor version @ 06/22/24 12:27:26.642
  Jun 22 12:27:26.642: INFO: cleanMinorVersion: 29
  Jun 22 12:27:26.642: INFO: Minor version: 29
  Jun 22 12:27:26.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5034" for this suite. @ 06/22/24 12:27:26.648
• [0.035 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 06/22/24 12:27:26.654
  Jun 22 12:27:26.654: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 12:27:26.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:27:26.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:27:26.673
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 12:27:26.675
  STEP: Saw pod success @ 06/22/24 12:27:30.697
  Jun 22 12:27:30.701: INFO: Trying to get logs from node ip-172-31-3-104 pod downwardapi-volume-6813ea37-5d36-4eb0-bb2c-5d57c0d6294c container client-container: <nil>
  STEP: delete the pod @ 06/22/24 12:27:30.708
  Jun 22 12:27:30.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8117" for this suite. @ 06/22/24 12:27:30.729
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 06/22/24 12:27:30.737
  Jun 22 12:27:30.737: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename deployment @ 06/22/24 12:27:30.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:27:30.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:27:30.757
  Jun 22 12:27:30.769: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Jun 22 12:27:35.773: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/22/24 12:27:35.773
  Jun 22 12:27:35.773: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Jun 22 12:27:37.777: INFO: Creating deployment "test-rollover-deployment"
  Jun 22 12:27:37.787: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Jun 22 12:27:39.795: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Jun 22 12:27:39.803: INFO: Ensure that both replica sets have 1 created replica
  Jun 22 12:27:39.810: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Jun 22 12:27:39.820: INFO: Updating deployment test-rollover-deployment
  Jun 22 12:27:39.820: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Jun 22 12:27:41.828: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Jun 22 12:27:41.836: INFO: Make sure deployment "test-rollover-deployment" is complete
  Jun 22 12:27:41.844: INFO: all replica sets need to contain the pod-template-hash label
  Jun 22 12:27:41.844: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 27, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 27, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 27, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:27:43.852: INFO: all replica sets need to contain the pod-template-hash label
  Jun 22 12:27:43.852: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 27, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 27, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 27, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:27:45.853: INFO: all replica sets need to contain the pod-template-hash label
  Jun 22 12:27:45.853: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 27, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 27, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 27, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:27:47.854: INFO: all replica sets need to contain the pod-template-hash label
  Jun 22 12:27:47.854: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 27, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 27, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 27, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:27:49.853: INFO: all replica sets need to contain the pod-template-hash label
  Jun 22 12:27:49.853: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 27, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 27, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 27, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 27, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:27:51.854: INFO: 
  Jun 22 12:27:51.854: INFO: Ensure that both old replica sets have no replicas
  Jun 22 12:27:51.865: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9819",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e51da34a-05d9-4c09-a4fa-8ae6a2697911",
      ResourceVersion: (string) (len=4) "5666",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854656057,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656071,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656057,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656057,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656071,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656057,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 22 12:27:51.870: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9819",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea8fa3c4-ebf7-4921-891b-f6bce130f281",
      ResourceVersion: (string) (len=4) "5656",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854656059,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e51da34a-05d9-4c09-a4fa-8ae6a2697911",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 35 31 64 61 33  34 61 2d 30 35 64 39 2d  |\"e51da34a-05d9-|
              00000120  34 63 30 39 2d 61 34 66  61 2d 38 61 65 36 61 32  |4c09-a4fa-8ae6a2|
              00000130  36 39 37 39 31 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |697911\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656071,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 22 12:27:51.871: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Jun 22 12:27:51.871: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9819",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6202f074-fbb4-4bf1-b699-f3b6aac14fae",
      ResourceVersion: (string) (len=4) "5665",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854656050,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e51da34a-05d9-4c09-a4fa-8ae6a2697911",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656050,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656071,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  65 35 31 64 61 33 34 61  2d 30 35 64 39 2d 34 63  |e51da34a-05d9-4c|
              000000c0  30 39 2d 61 34 66 61 2d  38 61 65 36 61 32 36 39  |09-a4fa-8ae6a269|
              000000d0  37 39 31 31 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |7911\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656071,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 22 12:27:51.872: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9819",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25d69133-fa2c-4896-a71a-e557a8de1c18",
      ResourceVersion: (string) (len=4) "5616",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854656057,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e51da34a-05d9-4c09-a4fa-8ae6a2697911",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 35 31 64 61 33  34 61 2d 30 35 64 39 2d  |\"e51da34a-05d9-|
              00000120  34 63 30 39 2d 61 34 66  61 2d 38 61 65 36 61 32  |4c09-a4fa-8ae6a2|
              00000130  36 39 37 39 31 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |697911\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 22 12:27:51.877: INFO: Pod "test-rollover-deployment-68774655d5-nlq77" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-nlq77",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-9819",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20cd6bf0-c100-4c76-8a42-0ee07d544529",
      ResourceVersion: (string) (len=4) "5633",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854656059,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "ea8fa3c4-ebf7-4921-891b-f6bce130f281",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  38 66 61 33 63 34 2d 65  |d\":\"ea8fa3c4-e|
              00000090  62 66 37 2d 34 39 32 31  2d 38 39 31 62 2d 66 36  |bf7-4921-891b-f6|
              000000a0  62 63 65 31 33 30 66 32  38 31 5c 22 7d 22 3a 7b  |bce130f281\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  2e 31 34 32 5c 22 7d 22  |2.168.20.142\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bspz4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bspz4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) (len=14) "192.168.20.142",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.20.142"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854656059,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854656060,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://e28c91421b858c3f6167c2b086aad88cb4e45299068b9dc0a764c40c450188c6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 12:27:51.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9819" for this suite. @ 06/22/24 12:27:51.884
• [21.155 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 06/22/24 12:27:51.891
  Jun 22 12:27:51.891: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename svcaccounts @ 06/22/24 12:27:51.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:27:51.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:27:51.911
  STEP: creating a ServiceAccount @ 06/22/24 12:27:51.913
  STEP: watching for the ServiceAccount to be added @ 06/22/24 12:27:51.921
  STEP: patching the ServiceAccount @ 06/22/24 12:27:51.922
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 06/22/24 12:27:51.928
  STEP: deleting the ServiceAccount @ 06/22/24 12:27:51.931
  Jun 22 12:27:51.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3737" for this suite. @ 06/22/24 12:27:51.953
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 06/22/24 12:27:51.96
  Jun 22 12:27:51.961: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/22/24 12:27:51.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:27:51.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:27:51.98
  STEP: set up a multi version CRD @ 06/22/24 12:27:51.982
  Jun 22 12:27:51.982: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: mark a version not serverd @ 06/22/24 12:27:55.295
  STEP: check the unserved version gets removed @ 06/22/24 12:27:55.312
  STEP: check the other version is not changed @ 06/22/24 12:27:56.186
  Jun 22 12:27:58.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-313" for this suite. @ 06/22/24 12:27:58.605
• [6.653 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 06/22/24 12:27:58.614
  Jun 22 12:27:58.614: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename namespaces @ 06/22/24 12:27:58.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:27:58.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:27:58.631
  STEP: Updating Namespace "namespaces-9176" @ 06/22/24 12:27:58.634
  Jun 22 12:27:58.643: INFO: Namespace "namespaces-9176" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"d1420184-d040-484b-a2cd-f52bfe2caa64", "kubernetes.io/metadata.name":"namespaces-9176", "namespaces-9176":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Jun 22 12:27:58.643: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9176" for this suite. @ 06/22/24 12:27:58.647
• [0.041 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 06/22/24 12:27:58.655
  Jun 22 12:27:58.655: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename downward-api @ 06/22/24 12:27:58.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:27:58.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:27:58.674
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 12:27:58.676
  STEP: Saw pod success @ 06/22/24 12:28:00.698
  Jun 22 12:28:00.702: INFO: Trying to get logs from node ip-172-31-3-104 pod downwardapi-volume-79fdde28-c706-4002-8f03-f79e69d333f4 container client-container: <nil>
  STEP: delete the pod @ 06/22/24 12:28:00.713
  Jun 22 12:28:00.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6703" for this suite. @ 06/22/24 12:28:00.732
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 06/22/24 12:28:00.741
  Jun 22 12:28:00.741: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-probe @ 06/22/24 12:28:00.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:28:00.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:28:00.761
  STEP: Creating pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961 @ 06/22/24 12:28:00.763
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/22/24 12:28:02.783
  Jun 22 12:28:02.787: INFO: Initial restart count of pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b is 0
  Jun 22 12:28:02.792: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:04.797: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:06.803: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:08.809: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:10.814: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:12.819: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:14.825: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:16.831: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:18.837: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:20.843: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:22.849: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:24.854: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:26.860: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:28.868: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:30.873: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:32.878: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:34.884: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:36.889: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:38.893: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:40.899: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:42.905: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:44.911: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:46.916: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:48.921: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:50.926: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:52.932: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:54.937: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:56.943: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:28:58.948: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:00.953: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:02.958: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:04.963: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:06.969: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:08.975: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:10.981: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:12.986: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:14.993: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:16.998: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:19.002: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:21.008: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:23.012: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:25.016: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:27.022: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:29.027: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:31.033: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:33.038: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:35.042: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:37.048: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:39.055: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:41.061: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:43.066: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:45.071: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:47.076: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:49.082: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:51.087: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:53.092: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:55.098: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:57.104: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:29:59.112: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:01.116: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:03.121: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:05.126: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:07.131: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:09.137: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:11.142: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:13.147: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:15.153: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:17.159: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:19.163: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:21.169: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:23.175: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:25.180: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:27.186: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:29.191: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:31.195: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:33.201: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:35.207: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:37.213: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:39.219: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:41.225: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:43.229: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:45.233: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:47.238: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:49.243: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:51.248: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:53.254: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:55.260: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:57.266: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:30:59.271: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:01.276: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:03.282: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:05.287: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:07.292: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:09.298: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:11.303: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:13.308: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:15.313: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:17.318: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:19.324: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:21.330: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:23.335: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:25.340: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:27.346: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:29.352: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:31.357: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:33.362: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:35.367: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:37.372: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:39.377: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:41.384: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:43.390: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:45.395: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:47.401: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:49.407: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:51.412: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:53.418: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:55.423: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:57.428: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:31:59.436: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  Jun 22 12:32:01.442: INFO: Get pod test-grpc-d6cfa28e-6172-4a23-b711-8263c7a6657b in namespace container-probe-7961
  STEP: deleting the pod @ 06/22/24 12:32:03.443
  Jun 22 12:32:03.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7961" for this suite. @ 06/22/24 12:32:03.462
• [242.731 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 06/22/24 12:32:03.472
  Jun 22 12:32:03.472: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename podtemplate @ 06/22/24 12:32:03.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:32:03.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:32:03.495
  STEP: Create set of pod templates @ 06/22/24 12:32:03.497
  Jun 22 12:32:03.504: INFO: created test-podtemplate-1
  Jun 22 12:32:03.509: INFO: created test-podtemplate-2
  Jun 22 12:32:03.516: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 06/22/24 12:32:03.516
  STEP: delete collection of pod templates @ 06/22/24 12:32:03.52
  Jun 22 12:32:03.520: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 06/22/24 12:32:03.539
  Jun 22 12:32:03.539: INFO: requesting list of pod templates to confirm quantity
  Jun 22 12:32:03.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8765" for this suite. @ 06/22/24 12:32:03.546
• [0.082 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 06/22/24 12:32:03.554
  Jun 22 12:32:03.554: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/22/24 12:32:03.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:32:03.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:32:03.573
  STEP: create the container to handle the HTTPGet hook request. @ 06/22/24 12:32:03.58
  STEP: create the pod with lifecycle hook @ 06/22/24 12:32:05.606
  STEP: delete the pod with lifecycle hook @ 06/22/24 12:32:07.627
  STEP: check prestop hook @ 06/22/24 12:32:09.645
  Jun 22 12:32:09.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1093" for this suite. @ 06/22/24 12:32:09.669
• [6.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 06/22/24 12:32:09.676
  Jun 22 12:32:09.676: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-runtime @ 06/22/24 12:32:09.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:32:09.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:32:09.696
  STEP: create the container @ 06/22/24 12:32:09.698
  W0622 12:32:09.709431      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/22/24 12:32:09.709
  STEP: get the container status @ 06/22/24 12:32:12.731
  STEP: the container should be terminated @ 06/22/24 12:32:12.738
  STEP: the termination message should be set @ 06/22/24 12:32:12.738
  Jun 22 12:32:12.738: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 06/22/24 12:32:12.738
  Jun 22 12:32:12.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9985" for this suite. @ 06/22/24 12:32:12.758
• [3.090 seconds]
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 06/22/24 12:32:12.766
  Jun 22 12:32:12.766: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename apf @ 06/22/24 12:32:12.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:32:12.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:32:12.786
  STEP: getting /apis @ 06/22/24 12:32:12.788
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/22/24 12:32:12.791
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/22/24 12:32:12.792
  STEP: creating @ 06/22/24 12:32:12.793
  STEP: getting @ 06/22/24 12:32:12.814
  STEP: listing @ 06/22/24 12:32:12.907
  STEP: watching @ 06/22/24 12:32:12.911
  Jun 22 12:32:12.911: INFO: starting watch
  STEP: patching @ 06/22/24 12:32:12.914
  STEP: updating @ 06/22/24 12:32:12.925
  Jun 22 12:32:12.936: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 06/22/24 12:32:12.936
  STEP: patching /status @ 06/22/24 12:32:12.942
  STEP: updating /status @ 06/22/24 12:32:12.95
  STEP: deleting @ 06/22/24 12:32:12.968
  STEP: deleting a collection @ 06/22/24 12:32:12.984
  Jun 22 12:32:13.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7735" for this suite. @ 06/22/24 12:32:13.012
• [0.253 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 06/22/24 12:32:13.019
  Jun 22 12:32:13.019: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename security-context @ 06/22/24 12:32:13.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:32:13.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:32:13.039
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/22/24 12:32:13.042
  STEP: Saw pod success @ 06/22/24 12:32:15.062
  Jun 22 12:32:15.066: INFO: Trying to get logs from node ip-172-31-3-104 pod security-context-a9478b8b-2373-476c-bdb0-a68ff6d9c338 container test-container: <nil>
  STEP: delete the pod @ 06/22/24 12:32:15.077
  Jun 22 12:32:15.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3415" for this suite. @ 06/22/24 12:32:15.1
• [2.088 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 06/22/24 12:32:15.107
  Jun 22 12:32:15.107: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 12:32:15.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:32:15.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:32:15.126
  STEP: Creating configMap with name projected-configmap-test-volume-5d880aaa-e909-4c50-9f54-a9bce4d7e634 @ 06/22/24 12:32:15.128
  STEP: Creating a pod to test consume configMaps @ 06/22/24 12:32:15.135
  STEP: Saw pod success @ 06/22/24 12:32:19.162
  Jun 22 12:32:19.166: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-projected-configmaps-9d97f90b-abd2-46c5-a0f2-393c6985073f container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 06/22/24 12:32:19.173
  Jun 22 12:32:19.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3666" for this suite. @ 06/22/24 12:32:19.197
• [4.096 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 06/22/24 12:32:19.204
  Jun 22 12:32:19.204: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl @ 06/22/24 12:32:19.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:32:19.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:32:19.224
  STEP: creating a replication controller @ 06/22/24 12:32:19.227
  Jun 22 12:32:19.227: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 create -f -'
  Jun 22 12:32:19.321: INFO: stderr: ""
  Jun 22 12:32:19.321: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/22/24 12:32:19.321
  Jun 22 12:32:19.321: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 22 12:32:19.367: INFO: stderr: ""
  Jun 22 12:32:19.367: INFO: stdout: "update-demo-nautilus-5sc2x update-demo-nautilus-n76db "
  Jun 22 12:32:19.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods update-demo-nautilus-5sc2x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 22 12:32:19.411: INFO: stderr: ""
  Jun 22 12:32:19.411: INFO: stdout: ""
  Jun 22 12:32:19.411: INFO: update-demo-nautilus-5sc2x is created but not running
  Jun 22 12:32:24.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 22 12:32:24.463: INFO: stderr: ""
  Jun 22 12:32:24.463: INFO: stdout: "update-demo-nautilus-5sc2x update-demo-nautilus-n76db "
  Jun 22 12:32:24.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods update-demo-nautilus-5sc2x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 22 12:32:24.510: INFO: stderr: ""
  Jun 22 12:32:24.510: INFO: stdout: "true"
  Jun 22 12:32:24.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods update-demo-nautilus-5sc2x -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 22 12:32:24.554: INFO: stderr: ""
  Jun 22 12:32:24.554: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 22 12:32:24.554: INFO: validating pod update-demo-nautilus-5sc2x
  Jun 22 12:32:24.559: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 22 12:32:24.559: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 22 12:32:24.559: INFO: update-demo-nautilus-5sc2x is verified up and running
  Jun 22 12:32:24.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods update-demo-nautilus-n76db -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 22 12:32:24.603: INFO: stderr: ""
  Jun 22 12:32:24.603: INFO: stdout: "true"
  Jun 22 12:32:24.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods update-demo-nautilus-n76db -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 22 12:32:24.647: INFO: stderr: ""
  Jun 22 12:32:24.647: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 22 12:32:24.647: INFO: validating pod update-demo-nautilus-n76db
  Jun 22 12:32:24.653: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 22 12:32:24.653: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 22 12:32:24.653: INFO: update-demo-nautilus-n76db is verified up and running
  STEP: scaling down the replication controller @ 06/22/24 12:32:24.653
  Jun 22 12:32:24.654: INFO: scanned /root for discovery docs: <nil>
  Jun 22 12:32:24.654: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Jun 22 12:32:25.715: INFO: stderr: ""
  Jun 22 12:32:25.715: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/22/24 12:32:25.715
  Jun 22 12:32:25.715: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 22 12:32:25.762: INFO: stderr: ""
  Jun 22 12:32:25.762: INFO: stdout: "update-demo-nautilus-5sc2x update-demo-nautilus-n76db "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 06/22/24 12:32:25.762
  Jun 22 12:32:30.763: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 22 12:32:30.808: INFO: stderr: ""
  Jun 22 12:32:30.808: INFO: stdout: "update-demo-nautilus-n76db "
  Jun 22 12:32:30.808: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods update-demo-nautilus-n76db -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 22 12:32:30.851: INFO: stderr: ""
  Jun 22 12:32:30.851: INFO: stdout: "true"
  Jun 22 12:32:30.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods update-demo-nautilus-n76db -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 22 12:32:30.906: INFO: stderr: ""
  Jun 22 12:32:30.906: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 22 12:32:30.906: INFO: validating pod update-demo-nautilus-n76db
  Jun 22 12:32:30.911: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 22 12:32:30.911: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 22 12:32:30.911: INFO: update-demo-nautilus-n76db is verified up and running
  STEP: scaling up the replication controller @ 06/22/24 12:32:30.911
  Jun 22 12:32:30.912: INFO: scanned /root for discovery docs: <nil>
  Jun 22 12:32:30.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Jun 22 12:32:31.982: INFO: stderr: ""
  Jun 22 12:32:31.982: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/22/24 12:32:31.982
  Jun 22 12:32:31.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 22 12:32:32.028: INFO: stderr: ""
  Jun 22 12:32:32.028: INFO: stdout: "update-demo-nautilus-96d8x update-demo-nautilus-n76db "
  Jun 22 12:32:32.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods update-demo-nautilus-96d8x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 22 12:32:32.071: INFO: stderr: ""
  Jun 22 12:32:32.071: INFO: stdout: "true"
  Jun 22 12:32:32.071: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods update-demo-nautilus-96d8x -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 22 12:32:32.114: INFO: stderr: ""
  Jun 22 12:32:32.114: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 22 12:32:32.114: INFO: validating pod update-demo-nautilus-96d8x
  Jun 22 12:32:32.120: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 22 12:32:32.120: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 22 12:32:32.120: INFO: update-demo-nautilus-96d8x is verified up and running
  Jun 22 12:32:32.120: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods update-demo-nautilus-n76db -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 22 12:32:32.164: INFO: stderr: ""
  Jun 22 12:32:32.164: INFO: stdout: "true"
  Jun 22 12:32:32.164: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods update-demo-nautilus-n76db -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 22 12:32:32.206: INFO: stderr: ""
  Jun 22 12:32:32.206: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 22 12:32:32.206: INFO: validating pod update-demo-nautilus-n76db
  Jun 22 12:32:32.212: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 22 12:32:32.212: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 22 12:32:32.212: INFO: update-demo-nautilus-n76db is verified up and running
  STEP: using delete to clean up resources @ 06/22/24 12:32:32.212
  Jun 22 12:32:32.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 delete --grace-period=0 --force -f -'
  Jun 22 12:32:32.262: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 22 12:32:32.262: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun 22 12:32:32.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get rc,svc -l name=update-demo --no-headers'
  Jun 22 12:32:32.325: INFO: stderr: "No resources found in kubectl-692 namespace.\n"
  Jun 22 12:32:32.325: INFO: stdout: ""
  Jun 22 12:32:32.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-692 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 22 12:32:32.375: INFO: stderr: ""
  Jun 22 12:32:32.375: INFO: stdout: ""
  Jun 22 12:32:32.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-692" for this suite. @ 06/22/24 12:32:32.38
• [13.186 seconds]
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 06/22/24 12:32:32.39
  Jun 22 12:32:32.390: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename downward-api @ 06/22/24 12:32:32.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:32:32.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:32:32.41
  STEP: Creating a pod to test downward api env vars @ 06/22/24 12:32:32.413
  STEP: Saw pod success @ 06/22/24 12:32:36.442
  Jun 22 12:32:36.446: INFO: Trying to get logs from node ip-172-31-3-104 pod downward-api-e98c9259-f5be-4713-8441-4b2f7a2058f1 container dapi-container: <nil>
  STEP: delete the pod @ 06/22/24 12:32:36.458
  Jun 22 12:32:36.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4707" for this suite. @ 06/22/24 12:32:36.482
• [4.100 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 06/22/24 12:32:36.49
  Jun 22 12:32:36.490: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename deployment @ 06/22/24 12:32:36.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:32:36.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:32:36.509
  Jun 22 12:32:36.512: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Jun 22 12:32:36.523: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jun 22 12:32:41.528: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/22/24 12:32:41.528
  Jun 22 12:32:41.528: INFO: Creating deployment "test-rolling-update-deployment"
  Jun 22 12:32:41.533: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Jun 22 12:32:41.545: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Jun 22 12:32:43.557: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Jun 22 12:32:43.561: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Jun 22 12:32:43.573: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8804",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe3bd013-ea43-462a-8e7c-e1ac95a95ef2",
      ResourceVersion: (string) (len=4) "6801",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854656361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656363,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656363,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 22 12:32:43.579: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8804",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8682ee7c-d4da-4a57-9f5c-a916ebda21b4",
      ResourceVersion: (string) (len=4) "6791",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854656361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "fe3bd013-ea43-462a-8e7c-e1ac95a95ef2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 65 33 62 64 30  31 33 2d 65 61 34 33 2d  |\"fe3bd013-ea43-|
              00000120  34 36 32 61 2d 38 65 37  63 2d 65 31 61 63 39 35  |462a-8e7c-e1ac95|
              00000130  61 39 35 65 66 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a95ef2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 22 12:32:43.581: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Jun 22 12:32:43.582: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8804",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d705ccce-4f67-431e-bf55-af2521e69c9f",
      ResourceVersion: (string) (len=4) "6800",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854656356,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "fe3bd013-ea43-462a-8e7c-e1ac95a95ef2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 66 65 33 62 64 30 31  |"uid\":\"fe3bd01|
              000000b0  33 2d 65 61 34 33 2d 34  36 32 61 2d 38 65 37 63  |3-ea43-462a-8e7c|
              000000c0  2d 65 31 61 63 39 35 61  39 35 65 66 32 5c 22 7d  |-e1ac95a95ef2\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656363,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 22 12:32:43.588: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-p9zsb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-p9zsb",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-8804",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48e94839-edd4-43e3-84ec-f08f887f3af3",
      ResourceVersion: (string) (len=4) "6790",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854656361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "8682ee7c-d4da-4a57-9f5c-a916ebda21b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  38 32 65 65 37 63 2d 64  |d\":\"8682ee7c-d|
              00000090  34 64 61 2d 34 61 35 37  2d 39 66 35 63 2d 61 39  |4da-4a57-9f5c-a9|
              000000a0  31 36 65 62 64 61 32 31  62 34 5c 22 7d 22 3a 7b  |16ebda21b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  31 2e 31 33 35 5c 22 7d  |2.168.251.135\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rg6xt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rg6xt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854656361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.85.228"
        }
      },
      PodIP: (string) (len=15) "192.168.251.135",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.251.135"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854656361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854656362,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://a9bdf06df18ffa61277075a17debe8f7e71d368413ece8dbe49cfcb38677f9ba",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 12:32:43.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8804" for this suite. @ 06/22/24 12:32:43.594
• [7.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 06/22/24 12:32:43.602
  Jun 22 12:32:43.602: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pods @ 06/22/24 12:32:43.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:32:43.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:32:43.623
  STEP: creating the pod @ 06/22/24 12:32:43.626
  STEP: setting up watch @ 06/22/24 12:32:43.626
  STEP: submitting the pod to kubernetes @ 06/22/24 12:32:43.73
  STEP: verifying the pod is in kubernetes @ 06/22/24 12:32:43.744
  STEP: verifying pod creation was observed @ 06/22/24 12:32:43.754
  STEP: deleting the pod gracefully @ 06/22/24 12:32:45.77
  STEP: verifying pod deletion was observed @ 06/22/24 12:32:45.779
  Jun 22 12:32:46.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7277" for this suite. @ 06/22/24 12:32:46.835
• [3.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 06/22/24 12:32:46.845
  Jun 22 12:32:46.845: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename downward-api @ 06/22/24 12:32:46.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:32:46.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:32:46.864
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 12:32:46.867
  STEP: Saw pod success @ 06/22/24 12:32:50.891
  Jun 22 12:32:50.896: INFO: Trying to get logs from node ip-172-31-3-104 pod downwardapi-volume-7cfb6dc2-1815-4277-ab51-0e0087c6cacd container client-container: <nil>
  STEP: delete the pod @ 06/22/24 12:32:50.903
  Jun 22 12:32:50.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-570" for this suite. @ 06/22/24 12:32:50.923
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 06/22/24 12:32:50.932
  Jun 22 12:32:50.932: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl @ 06/22/24 12:32:50.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:32:50.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:32:50.949
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/22/24 12:32:50.951
  Jun 22 12:32:50.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-2131 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jun 22 12:32:51.006: INFO: stderr: ""
  Jun 22 12:32:51.006: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 06/22/24 12:32:51.006
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/22/24 12:32:56.057
  Jun 22 12:32:56.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-2131 get pod e2e-test-httpd-pod -o json'
  Jun 22 12:32:56.101: INFO: stderr: ""
  Jun 22 12:32:56.101: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-06-22T12:32:50Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2131\",\n        \"resourceVersion\": \"6920\",\n        \"uid\": \"e36ca2d4-2142-4c60-8269-02ca74c44468\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-fng4t\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-3-104\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-fng4t\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-22T12:32:51Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-22T12:32:51Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-22T12:32:51Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-22T12:32:51Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-22T12:32:51Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://692b1b84a4ff7efc379a9fb2f3c4380938a63a196ab6ef90d21e1375c6f84bac\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-06-22T12:32:51Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.3.104\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.3.104\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.20.154\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.20.154\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-06-22T12:32:51Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 06/22/24 12:32:56.101
  Jun 22 12:32:56.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-2131 replace -f -'
  Jun 22 12:32:56.190: INFO: stderr: ""
  Jun 22 12:32:56.190: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 06/22/24 12:32:56.19
  Jun 22 12:32:56.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-2131 delete pods e2e-test-httpd-pod'
  Jun 22 12:32:57.860: INFO: stderr: ""
  Jun 22 12:32:57.860: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 22 12:32:57.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2131" for this suite. @ 06/22/24 12:32:57.864
• [6.940 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 06/22/24 12:32:57.872
  Jun 22 12:32:57.872: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename replication-controller @ 06/22/24 12:32:57.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:32:57.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:32:57.893
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 06/22/24 12:32:57.895
  STEP: When a replication controller with a matching selector is created @ 06/22/24 12:32:59.92
  STEP: Then the orphan pod is adopted @ 06/22/24 12:32:59.927
  Jun 22 12:33:00.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8332" for this suite. @ 06/22/24 12:33:00.941
• [3.078 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 06/22/24 12:33:00.949
  Jun 22 12:33:00.949: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pod-network-test @ 06/22/24 12:33:00.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:33:00.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:33:00.969
  STEP: Performing setup for networking test in namespace pod-network-test-7368 @ 06/22/24 12:33:00.972
  STEP: creating a selector @ 06/22/24 12:33:00.972
  STEP: Creating the service pods in kubernetes @ 06/22/24 12:33:00.972
  Jun 22 12:33:00.972: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/22/24 12:33:13.064
  Jun 22 12:33:15.106: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 22 12:33:15.106: INFO: Going to poll 192.168.90.73 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 22 12:33:15.110: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.90.73:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7368 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 12:33:15.110: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 12:33:15.111: INFO: ExecWithOptions: Clientset creation
  Jun 22 12:33:15.111: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7368/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.90.73%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 22 12:33:15.167: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun 22 12:33:15.167: INFO: Going to poll 192.168.20.156 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 22 12:33:15.171: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.20.156:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7368 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 12:33:15.171: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 12:33:15.172: INFO: ExecWithOptions: Clientset creation
  Jun 22 12:33:15.172: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7368/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.20.156%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 22 12:33:15.225: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun 22 12:33:15.225: INFO: Going to poll 192.168.251.136 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 22 12:33:15.230: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.251.136:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7368 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 12:33:15.230: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 12:33:15.230: INFO: ExecWithOptions: Clientset creation
  Jun 22 12:33:15.230: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7368/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.251.136%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 22 12:33:15.286: INFO: Found all 1 expected endpoints: [netserver-2]
  Jun 22 12:33:15.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7368" for this suite. @ 06/22/24 12:33:15.291
• [14.350 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 06/22/24 12:33:15.3
  Jun 22 12:33:15.300: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 12:33:15.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:33:15.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:33:15.321
  STEP: creating a collection of services @ 06/22/24 12:33:15.323
  Jun 22 12:33:15.323: INFO: Creating e2e-svc-a-r7hjh
  Jun 22 12:33:15.333: INFO: Creating e2e-svc-b-29p8x
  Jun 22 12:33:15.347: INFO: Creating e2e-svc-c-5fc68
  STEP: deleting service collection @ 06/22/24 12:33:15.359
  Jun 22 12:33:15.395: INFO: Collection of services has been deleted
  Jun 22 12:33:15.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7431" for this suite. @ 06/22/24 12:33:15.399
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 06/22/24 12:33:15.41
  Jun 22 12:33:15.410: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename svcaccounts @ 06/22/24 12:33:15.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:33:15.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:33:15.43
  STEP: reading a file in the container @ 06/22/24 12:33:17.457
  Jun 22 12:33:17.457: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2161 pod-service-account-3c959dec-e2de-436c-9285-9361c44bf544 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 06/22/24 12:33:17.575
  Jun 22 12:33:17.575: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2161 pod-service-account-3c959dec-e2de-436c-9285-9361c44bf544 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 06/22/24 12:33:17.67
  Jun 22 12:33:17.671: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2161 pod-service-account-3c959dec-e2de-436c-9285-9361c44bf544 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Jun 22 12:33:17.763: INFO: Got root ca configmap in namespace "svcaccounts-2161"
  Jun 22 12:33:17.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2161" for this suite. @ 06/22/24 12:33:17.769
• [2.368 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 06/22/24 12:33:17.777
  Jun 22 12:33:17.777: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename cronjob @ 06/22/24 12:33:17.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:33:17.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:33:17.797
  STEP: Creating a ForbidConcurrent cronjob @ 06/22/24 12:33:17.799
  STEP: Ensuring a job is scheduled @ 06/22/24 12:33:17.807
  STEP: Ensuring exactly one is scheduled @ 06/22/24 12:34:01.813
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/22/24 12:34:01.817
  STEP: Ensuring no more jobs are scheduled @ 06/22/24 12:34:01.822
  STEP: Removing cronjob @ 06/22/24 12:39:01.831
  Jun 22 12:39:01.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7768" for this suite. @ 06/22/24 12:39:01.843
• [344.075 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 06/22/24 12:39:01.853
  Jun 22 12:39:01.853: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename resourcequota @ 06/22/24 12:39:01.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:39:01.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:39:01.877
  STEP: Counting existing ResourceQuota @ 06/22/24 12:39:01.879
  STEP: Creating a ResourceQuota @ 06/22/24 12:39:06.885
  STEP: Ensuring resource quota status is calculated @ 06/22/24 12:39:06.892
  STEP: Creating a Pod that fits quota @ 06/22/24 12:39:08.898
  STEP: Ensuring ResourceQuota status captures the pod usage @ 06/22/24 12:39:08.915
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 06/22/24 12:39:10.921
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 06/22/24 12:39:10.923
  STEP: Ensuring a pod cannot update its resource requirements @ 06/22/24 12:39:10.925
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 06/22/24 12:39:10.93
  STEP: Deleting the pod @ 06/22/24 12:39:12.935
  STEP: Ensuring resource quota status released the pod usage @ 06/22/24 12:39:12.946
  Jun 22 12:39:14.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1043" for this suite. @ 06/22/24 12:39:14.956
• [13.112 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 06/22/24 12:39:14.964
  Jun 22 12:39:14.964: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-probe @ 06/22/24 12:39:14.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:39:14.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:39:14.987
  STEP: Creating pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905 @ 06/22/24 12:39:14.989
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/22/24 12:39:17.01
  Jun 22 12:39:17.014: INFO: Initial restart count of pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 is 0
  Jun 22 12:39:17.018: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:19.022: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:21.028: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:23.034: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:25.040: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:27.046: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:29.052: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:31.057: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:33.062: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:35.068: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:37.077: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:39.083: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:41.087: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:43.092: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:45.097: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:47.102: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:49.108: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:51.114: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:53.119: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:55.124: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:57.130: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:39:59.135: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:40:01.141: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:40:03.147: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:40:05.152: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:40:07.158: INFO: Get pod busybox-2cb79dbf-5883-4bf8-af92-28131da78921 in namespace container-probe-8905
  Jun 22 12:40:07.158: INFO: Restart count of pod container-probe-8905/busybox-2cb79dbf-5883-4bf8-af92-28131da78921 is now 1 (50.144099093s elapsed)
  STEP: deleting the pod @ 06/22/24 12:40:07.158
  Jun 22 12:40:07.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8905" for this suite. @ 06/22/24 12:40:07.176
• [52.219 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 06/22/24 12:40:07.183
  Jun 22 12:40:07.183: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir @ 06/22/24 12:40:07.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:40:07.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:40:07.201
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/22/24 12:40:07.204
  STEP: Saw pod success @ 06/22/24 12:40:11.231
  Jun 22 12:40:11.235: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-7ea224fa-0394-4664-9a8e-5b71c264b576 container test-container: <nil>
  STEP: delete the pod @ 06/22/24 12:40:11.253
  Jun 22 12:40:11.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9335" for this suite. @ 06/22/24 12:40:11.273
• [4.098 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 06/22/24 12:40:11.281
  Jun 22 12:40:11.281: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename namespaces @ 06/22/24 12:40:11.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:40:11.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:40:11.3
  STEP: Creating a test namespace @ 06/22/24 12:40:11.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:40:11.32
  STEP: Creating a pod in the namespace @ 06/22/24 12:40:11.323
  STEP: Waiting for the pod to have running status @ 06/22/24 12:40:11.333
  STEP: Deleting the namespace @ 06/22/24 12:40:13.343
  STEP: Waiting for the namespace to be removed. @ 06/22/24 12:40:13.35
  STEP: Recreating the namespace @ 06/22/24 12:40:24.354
  STEP: Verifying there are no pods in the namespace @ 06/22/24 12:40:24.37
  Jun 22 12:40:24.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6140" for this suite. @ 06/22/24 12:40:24.377
  STEP: Destroying namespace "nsdeletetest-9052" for this suite. @ 06/22/24 12:40:24.385
  Jun 22 12:40:24.388: INFO: Namespace nsdeletetest-9052 was already deleted
  STEP: Destroying namespace "nsdeletetest-2627" for this suite. @ 06/22/24 12:40:24.388
• [13.115 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 06/22/24 12:40:24.396
  Jun 22 12:40:24.396: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/22/24 12:40:24.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:40:24.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:40:24.416
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 06/22/24 12:40:24.418
  Jun 22 12:40:24.419: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 12:40:25.751: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 12:40:30.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-702" for this suite. @ 06/22/24 12:40:30.721
• [6.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 06/22/24 12:40:30.731
  Jun 22 12:40:30.732: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename dns @ 06/22/24 12:40:30.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:40:30.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:40:30.751
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/22/24 12:40:30.753
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/22/24 12:40:30.753
  STEP: creating a pod to probe DNS @ 06/22/24 12:40:30.753
  STEP: submitting the pod to kubernetes @ 06/22/24 12:40:30.753
  STEP: retrieving the pod @ 06/22/24 12:40:36.782
  STEP: looking for the results for each expected name from probers @ 06/22/24 12:40:36.785
  Jun 22 12:40:36.801: INFO: DNS probes using dns-1685/dns-test-9892bbd0-fcb2-407d-b540-0449ede130f2 succeeded

  STEP: deleting the pod @ 06/22/24 12:40:36.801
  Jun 22 12:40:36.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1685" for this suite. @ 06/22/24 12:40:36.821
• [6.097 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 06/22/24 12:40:36.829
  Jun 22 12:40:36.829: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl @ 06/22/24 12:40:36.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:40:36.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:40:36.848
  STEP: creating the pod @ 06/22/24 12:40:36.851
  Jun 22 12:40:36.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3864 create -f -'
  Jun 22 12:40:36.940: INFO: stderr: ""
  Jun 22 12:40:36.940: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 06/22/24 12:40:38.95
  Jun 22 12:40:38.950: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3864 label pods pause testing-label=testing-label-value'
  Jun 22 12:40:39.002: INFO: stderr: ""
  Jun 22 12:40:39.002: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 06/22/24 12:40:39.003
  Jun 22 12:40:39.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3864 get pod pause -L testing-label'
  Jun 22 12:40:39.046: INFO: stderr: ""
  Jun 22 12:40:39.046: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 06/22/24 12:40:39.046
  Jun 22 12:40:39.047: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3864 label pods pause testing-label-'
  Jun 22 12:40:39.099: INFO: stderr: ""
  Jun 22 12:40:39.099: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 06/22/24 12:40:39.099
  Jun 22 12:40:39.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3864 get pod pause -L testing-label'
  Jun 22 12:40:39.142: INFO: stderr: ""
  Jun 22 12:40:39.142: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 06/22/24 12:40:39.142
  Jun 22 12:40:39.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3864 delete --grace-period=0 --force -f -'
  Jun 22 12:40:39.199: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 22 12:40:39.199: INFO: stdout: "pod \"pause\" force deleted\n"
  Jun 22 12:40:39.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3864 get rc,svc -l name=pause --no-headers'
  Jun 22 12:40:39.254: INFO: stderr: "No resources found in kubectl-3864 namespace.\n"
  Jun 22 12:40:39.254: INFO: stdout: ""
  Jun 22 12:40:39.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3864 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 22 12:40:39.296: INFO: stderr: ""
  Jun 22 12:40:39.296: INFO: stdout: ""
  Jun 22 12:40:39.296: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3864" for this suite. @ 06/22/24 12:40:39.3
• [2.478 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 06/22/24 12:40:39.308
  Jun 22 12:40:39.308: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 12:40:39.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:40:39.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:40:39.329
  STEP: Setting up server cert @ 06/22/24 12:40:39.355
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 12:40:39.563
  STEP: Deploying the webhook pod @ 06/22/24 12:40:39.573
  STEP: Wait for the deployment to be ready @ 06/22/24 12:40:39.588
  Jun 22 12:40:39.598: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/22/24 12:40:41.608
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 12:40:41.619
  Jun 22 12:40:42.620: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 06/22/24 12:40:42.628
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 06/22/24 12:40:42.629
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 06/22/24 12:40:42.629
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 06/22/24 12:40:42.629
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 06/22/24 12:40:42.631
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/22/24 12:40:42.631
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/22/24 12:40:42.632
  Jun 22 12:40:42.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-402" for this suite. @ 06/22/24 12:40:42.68
  STEP: Destroying namespace "webhook-markers-7532" for this suite. @ 06/22/24 12:40:42.704
• [3.411 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 06/22/24 12:40:42.719
  Jun 22 12:40:42.719: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename resourcequota @ 06/22/24 12:40:42.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:40:42.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:40:42.744
  STEP: Counting existing ResourceQuota @ 06/22/24 12:40:42.748
  STEP: Creating a ResourceQuota @ 06/22/24 12:40:47.752
  STEP: Ensuring resource quota status is calculated @ 06/22/24 12:40:47.757
  STEP: Creating a ReplicaSet @ 06/22/24 12:40:49.762
  STEP: Ensuring resource quota status captures replicaset creation @ 06/22/24 12:40:49.775
  STEP: Deleting a ReplicaSet @ 06/22/24 12:40:51.781
  STEP: Ensuring resource quota status released usage @ 06/22/24 12:40:51.789
  Jun 22 12:40:53.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8070" for this suite. @ 06/22/24 12:40:53.799
• [11.088 seconds]
------------------------------
S
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 06/22/24 12:40:53.807
  Jun 22 12:40:53.807: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 12:40:53.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:40:53.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:40:53.827
  Jun 22 12:40:53.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7334" for this suite. @ 06/22/24 12:40:53.839
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 06/22/24 12:40:53.847
  Jun 22 12:40:53.847: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename downward-api @ 06/22/24 12:40:53.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:40:53.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:40:53.865
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 12:40:53.868
  STEP: Saw pod success @ 06/22/24 12:40:55.892
  Jun 22 12:40:55.896: INFO: Trying to get logs from node ip-172-31-3-104 pod downwardapi-volume-0fa8af01-e3f2-4cee-a2db-db497d9e8af7 container client-container: <nil>
  STEP: delete the pod @ 06/22/24 12:40:55.904
  Jun 22 12:40:55.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4026" for this suite. @ 06/22/24 12:40:55.924
• [2.085 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 06/22/24 12:40:55.932
  Jun 22 12:40:55.932: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename proxy @ 06/22/24 12:40:55.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:40:55.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:40:55.95
  Jun 22 12:40:55.952: INFO: Creating pod...
  Jun 22 12:40:57.973: INFO: Creating service...
  Jun 22 12:40:57.986: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1365/pods/agnhost/proxy/some/path/with/DELETE
  Jun 22 12:40:57.992: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 22 12:40:57.992: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1365/pods/agnhost/proxy/some/path/with/GET
  Jun 22 12:40:57.997: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun 22 12:40:57.997: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1365/pods/agnhost/proxy/some/path/with/HEAD
  Jun 22 12:40:58.001: INFO: http.Client request:HEAD | StatusCode:200
  Jun 22 12:40:58.001: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1365/pods/agnhost/proxy/some/path/with/OPTIONS
  Jun 22 12:40:58.004: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 22 12:40:58.004: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1365/pods/agnhost/proxy/some/path/with/PATCH
  Jun 22 12:40:58.009: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 22 12:40:58.009: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1365/pods/agnhost/proxy/some/path/with/POST
  Jun 22 12:40:58.013: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 22 12:40:58.013: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1365/pods/agnhost/proxy/some/path/with/PUT
  Jun 22 12:40:58.016: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 22 12:40:58.016: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1365/services/test-service/proxy/some/path/with/DELETE
  Jun 22 12:40:58.022: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 22 12:40:58.022: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1365/services/test-service/proxy/some/path/with/GET
  Jun 22 12:40:58.030: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun 22 12:40:58.030: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1365/services/test-service/proxy/some/path/with/HEAD
  Jun 22 12:40:58.035: INFO: http.Client request:HEAD | StatusCode:200
  Jun 22 12:40:58.035: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1365/services/test-service/proxy/some/path/with/OPTIONS
  Jun 22 12:40:58.041: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 22 12:40:58.041: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1365/services/test-service/proxy/some/path/with/PATCH
  Jun 22 12:40:58.047: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 22 12:40:58.047: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1365/services/test-service/proxy/some/path/with/POST
  Jun 22 12:40:58.052: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 22 12:40:58.052: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1365/services/test-service/proxy/some/path/with/PUT
  Jun 22 12:40:58.060: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 22 12:40:58.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1365" for this suite. @ 06/22/24 12:40:58.063
• [2.139 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 06/22/24 12:40:58.071
  Jun 22 12:40:58.071: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename svcaccounts @ 06/22/24 12:40:58.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:40:58.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:40:58.09
  STEP: Creating a pod to test service account token:  @ 06/22/24 12:40:58.093
  STEP: Saw pod success @ 06/22/24 12:41:02.115
  Jun 22 12:41:02.119: INFO: Trying to get logs from node ip-172-31-3-104 pod test-pod-229112c8-32fe-45a5-b7b2-063cc9f82830 container agnhost-container: <nil>
  STEP: delete the pod @ 06/22/24 12:41:02.126
  Jun 22 12:41:02.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-925" for this suite. @ 06/22/24 12:41:02.145
• [4.082 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 06/22/24 12:41:02.153
  Jun 22 12:41:02.153: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename field-validation @ 06/22/24 12:41:02.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:41:02.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:41:02.172
  STEP: apply creating a deployment @ 06/22/24 12:41:02.174
  Jun 22 12:41:02.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-562" for this suite. @ 06/22/24 12:41:02.194
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 06/22/24 12:41:02.202
  Jun 22 12:41:02.202: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubelet-test @ 06/22/24 12:41:02.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:41:02.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:41:02.22
  Jun 22 12:41:02.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4921" for this suite. @ 06/22/24 12:41:02.246
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 06/22/24 12:41:02.255
  Jun 22 12:41:02.255: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl @ 06/22/24 12:41:02.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:41:02.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:41:02.275
  STEP: create deployment with httpd image @ 06/22/24 12:41:02.28
  Jun 22 12:41:02.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-2962 create -f -'
  Jun 22 12:41:02.352: INFO: stderr: ""
  Jun 22 12:41:02.352: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 06/22/24 12:41:02.352
  Jun 22 12:41:02.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-2962 diff -f -'
  Jun 22 12:41:06.644: INFO: rc: 1
  Jun 22 12:41:06.645: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-2962 delete -f -'
  Jun 22 12:41:06.692: INFO: stderr: ""
  Jun 22 12:41:06.692: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Jun 22 12:41:06.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2962" for this suite. @ 06/22/24 12:41:06.698
• [4.455 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 06/22/24 12:41:06.711
  Jun 22 12:41:06.711: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename resourcequota @ 06/22/24 12:41:06.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:41:06.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:41:06.739
  STEP: Counting existing ResourceQuota @ 06/22/24 12:41:06.742
  STEP: Creating a ResourceQuota @ 06/22/24 12:41:11.747
  STEP: Ensuring resource quota status is calculated @ 06/22/24 12:41:11.752
  Jun 22 12:41:13.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2303" for this suite. @ 06/22/24 12:41:13.763
• [7.061 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 06/22/24 12:41:13.772
  Jun 22 12:41:13.772: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/22/24 12:41:13.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:41:13.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:41:13.793
  Jun 22 12:41:13.796: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/22/24 12:41:15.018
  Jun 22 12:41:15.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-419 --namespace=crd-publish-openapi-419 create -f -'
  Jun 22 12:41:15.089: INFO: stderr: ""
  Jun 22 12:41:15.089: INFO: stdout: "e2e-test-crd-publish-openapi-3057-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun 22 12:41:15.089: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-419 --namespace=crd-publish-openapi-419 delete e2e-test-crd-publish-openapi-3057-crds test-cr'
  Jun 22 12:41:15.138: INFO: stderr: ""
  Jun 22 12:41:15.138: INFO: stdout: "e2e-test-crd-publish-openapi-3057-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Jun 22 12:41:15.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-419 --namespace=crd-publish-openapi-419 apply -f -'
  Jun 22 12:41:15.205: INFO: stderr: ""
  Jun 22 12:41:15.205: INFO: stdout: "e2e-test-crd-publish-openapi-3057-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun 22 12:41:15.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-419 --namespace=crd-publish-openapi-419 delete e2e-test-crd-publish-openapi-3057-crds test-cr'
  Jun 22 12:41:15.259: INFO: stderr: ""
  Jun 22 12:41:15.259: INFO: stdout: "e2e-test-crd-publish-openapi-3057-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 06/22/24 12:41:15.259
  Jun 22 12:41:15.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-419 explain e2e-test-crd-publish-openapi-3057-crds'
  Jun 22 12:41:15.304: INFO: stderr: ""
  Jun 22 12:41:15.304: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-3057-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Jun 22 12:41:16.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-419" for this suite. @ 06/22/24 12:41:16.526
• [2.762 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 06/22/24 12:41:16.535
  Jun 22 12:41:16.535: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename configmap @ 06/22/24 12:41:16.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:41:16.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:41:16.564
  STEP: Creating configMap with name configmap-test-volume-map-156de454-63b4-4f61-bcee-25192372dd30 @ 06/22/24 12:41:16.566
  STEP: Creating a pod to test consume configMaps @ 06/22/24 12:41:16.571
  STEP: Saw pod success @ 06/22/24 12:41:20.595
  Jun 22 12:41:20.598: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-configmaps-03bf60f7-dba5-4bfe-894d-e5e5d02ec1d1 container agnhost-container: <nil>
  STEP: delete the pod @ 06/22/24 12:41:20.61
  Jun 22 12:41:20.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6700" for this suite. @ 06/22/24 12:41:20.632
• [4.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 06/22/24 12:41:20.638
  Jun 22 12:41:20.638: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename secrets @ 06/22/24 12:41:20.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:41:20.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:41:20.658
  STEP: Creating projection with secret that has name secret-emptykey-test-57a6b20e-f24b-4503-8951-eac6eb00d287 @ 06/22/24 12:41:20.66
  Jun 22 12:41:20.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2967" for this suite. @ 06/22/24 12:41:20.665
• [0.034 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 06/22/24 12:41:20.672
  Jun 22 12:41:20.672: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 12:41:20.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:41:20.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:41:20.691
  STEP: creating service in namespace services-4010 @ 06/22/24 12:41:20.693
  STEP: creating service affinity-nodeport-transition in namespace services-4010 @ 06/22/24 12:41:20.693
  STEP: creating replication controller affinity-nodeport-transition in namespace services-4010 @ 06/22/24 12:41:20.708
  I0622 12:41:20.715220      19 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-4010, replica count: 3
  I0622 12:41:23.767286      19 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 22 12:41:23.779: INFO: Creating new exec pod
  Jun 22 12:41:26.808: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4010 exec execpod-affinityjsv9t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Jun 22 12:41:26.906: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Jun 22 12:41:26.906: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 12:41:26.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4010 exec execpod-affinityjsv9t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.137 80'
  Jun 22 12:41:27.001: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.137 80\nConnection to 10.152.183.137 80 port [tcp/http] succeeded!\n"
  Jun 22 12:41:27.001: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 12:41:27.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4010 exec execpod-affinityjsv9t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.104 30525'
  Jun 22 12:41:27.089: INFO: stderr: "+ nc -v -t -w 2 172.31.3.104 30525\n+ echo hostName\nConnection to 172.31.3.104 30525 port [tcp/*] succeeded!\n"
  Jun 22 12:41:27.089: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 12:41:27.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4010 exec execpod-affinityjsv9t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.25.91 30525'
  Jun 22 12:41:27.177: INFO: stderr: "+ nc -v -t -w 2 172.31.25.91 30525\n+ echo hostName\nConnection to 172.31.25.91 30525 port [tcp/*] succeeded!\n"
  Jun 22 12:41:27.177: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 12:41:27.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4010 exec execpod-affinityjsv9t -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.25.91:30525/ ; done'
  Jun 22 12:41:27.345: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n"
  Jun 22 12:41:27.345: INFO: stdout: "\naffinity-nodeport-transition-q6plc\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-q6plc\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-wqkv6\naffinity-nodeport-transition-q6plc\naffinity-nodeport-transition-q6plc\naffinity-nodeport-transition-wqkv6\naffinity-nodeport-transition-q6plc\naffinity-nodeport-transition-q6plc\naffinity-nodeport-transition-wqkv6\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-wqkv6\naffinity-nodeport-transition-q6plc"
  Jun 22 12:41:27.345: INFO: Received response from host: affinity-nodeport-transition-q6plc
  Jun 22 12:41:27.345: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.345: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.345: INFO: Received response from host: affinity-nodeport-transition-q6plc
  Jun 22 12:41:27.345: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.345: INFO: Received response from host: affinity-nodeport-transition-wqkv6
  Jun 22 12:41:27.345: INFO: Received response from host: affinity-nodeport-transition-q6plc
  Jun 22 12:41:27.345: INFO: Received response from host: affinity-nodeport-transition-q6plc
  Jun 22 12:41:27.345: INFO: Received response from host: affinity-nodeport-transition-wqkv6
  Jun 22 12:41:27.345: INFO: Received response from host: affinity-nodeport-transition-q6plc
  Jun 22 12:41:27.345: INFO: Received response from host: affinity-nodeport-transition-q6plc
  Jun 22 12:41:27.345: INFO: Received response from host: affinity-nodeport-transition-wqkv6
  Jun 22 12:41:27.345: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.345: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.345: INFO: Received response from host: affinity-nodeport-transition-wqkv6
  Jun 22 12:41:27.345: INFO: Received response from host: affinity-nodeport-transition-q6plc
  Jun 22 12:41:27.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4010 exec execpod-affinityjsv9t -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.25.91:30525/ ; done'
  Jun 22 12:41:27.525: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:30525/\n"
  Jun 22 12:41:27.525: INFO: stdout: "\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7\naffinity-nodeport-transition-s4nj7"
  Jun 22 12:41:27.525: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.525: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.525: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.525: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.525: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.525: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.525: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.525: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.525: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.525: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.525: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.525: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.525: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.525: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.525: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.525: INFO: Received response from host: affinity-nodeport-transition-s4nj7
  Jun 22 12:41:27.526: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-4010, will wait for the garbage collector to delete the pods @ 06/22/24 12:41:27.541
  Jun 22 12:41:27.603: INFO: Deleting ReplicationController affinity-nodeport-transition took: 7.737117ms
  Jun 22 12:41:27.704: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.847527ms
  Jun 22 12:41:30.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4010" for this suite. @ 06/22/24 12:41:30.932
• [10.266 seconds]
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 06/22/24 12:41:30.938
  Jun 22 12:41:30.938: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename events @ 06/22/24 12:41:30.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:41:30.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:41:30.96
  STEP: Create set of events @ 06/22/24 12:41:30.963
  STEP: get a list of Events with a label in the current namespace @ 06/22/24 12:41:30.978
  STEP: delete a list of events @ 06/22/24 12:41:30.982
  Jun 22 12:41:30.982: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/22/24 12:41:31.007
  Jun 22 12:41:31.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7924" for this suite. @ 06/22/24 12:41:31.014
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 06/22/24 12:41:31.021
  Jun 22 12:41:31.021: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename namespaces @ 06/22/24 12:41:31.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:41:31.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:41:31.04
  STEP: Read namespace status @ 06/22/24 12:41:31.042
  Jun 22 12:41:31.045: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 06/22/24 12:41:31.045
  Jun 22 12:41:31.050: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 06/22/24 12:41:31.05
  Jun 22 12:41:31.058: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Jun 22 12:41:31.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2788" for this suite. @ 06/22/24 12:41:31.061
• [0.048 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 06/22/24 12:41:31.069
  Jun 22 12:41:31.069: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename limitrange @ 06/22/24 12:41:31.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:41:31.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:41:31.09
  STEP: Creating LimitRange "e2e-limitrange-n2pkj" in namespace "limitrange-2344" @ 06/22/24 12:41:31.093
  STEP: Creating another limitRange in another namespace @ 06/22/24 12:41:31.098
  Jun 22 12:41:31.115: INFO: Namespace "e2e-limitrange-n2pkj-4082" created
  Jun 22 12:41:31.116: INFO: Creating LimitRange "e2e-limitrange-n2pkj" in namespace "e2e-limitrange-n2pkj-4082"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-n2pkj" @ 06/22/24 12:41:31.12
  Jun 22 12:41:31.124: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-n2pkj" in "limitrange-2344" namespace @ 06/22/24 12:41:31.124
  Jun 22 12:41:31.130: INFO: LimitRange "e2e-limitrange-n2pkj" has been patched
  STEP: Delete LimitRange "e2e-limitrange-n2pkj" by Collection with labelSelector: "e2e-limitrange-n2pkj=patched" @ 06/22/24 12:41:31.13
  STEP: Confirm that the limitRange "e2e-limitrange-n2pkj" has been deleted @ 06/22/24 12:41:31.138
  Jun 22 12:41:31.138: INFO: Requesting list of LimitRange to confirm quantity
  Jun 22 12:41:31.141: INFO: Found 0 LimitRange with label "e2e-limitrange-n2pkj=patched"
  Jun 22 12:41:31.141: INFO: LimitRange "e2e-limitrange-n2pkj" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-n2pkj" @ 06/22/24 12:41:31.141
  Jun 22 12:41:31.145: INFO: Found 1 limitRange
  Jun 22 12:41:31.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2344" for this suite. @ 06/22/24 12:41:31.148
  STEP: Destroying namespace "e2e-limitrange-n2pkj-4082" for this suite. @ 06/22/24 12:41:31.155
• [0.094 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 06/22/24 12:41:31.163
  Jun 22 12:41:31.163: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/22/24 12:41:31.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:41:31.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:41:31.182
  Jun 22 12:41:31.185: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 06/22/24 12:41:32.405
  Jun 22 12:41:32.405: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-2000 --namespace=crd-publish-openapi-2000 create -f -'
  Jun 22 12:41:34.481: INFO: stderr: ""
  Jun 22 12:41:34.481: INFO: stdout: "e2e-test-crd-publish-openapi-5027-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun 22 12:41:34.481: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-2000 --namespace=crd-publish-openapi-2000 delete e2e-test-crd-publish-openapi-5027-crds test-foo'
  Jun 22 12:41:34.544: INFO: stderr: ""
  Jun 22 12:41:34.544: INFO: stdout: "e2e-test-crd-publish-openapi-5027-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Jun 22 12:41:34.544: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-2000 --namespace=crd-publish-openapi-2000 apply -f -'
  Jun 22 12:41:34.601: INFO: stderr: ""
  Jun 22 12:41:34.601: INFO: stdout: "e2e-test-crd-publish-openapi-5027-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun 22 12:41:34.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-2000 --namespace=crd-publish-openapi-2000 delete e2e-test-crd-publish-openapi-5027-crds test-foo'
  Jun 22 12:41:34.652: INFO: stderr: ""
  Jun 22 12:41:34.652: INFO: stdout: "e2e-test-crd-publish-openapi-5027-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 06/22/24 12:41:34.652
  Jun 22 12:41:34.652: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-2000 --namespace=crd-publish-openapi-2000 create -f -'
  Jun 22 12:41:34.695: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 06/22/24 12:41:34.695
  Jun 22 12:41:34.695: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-2000 --namespace=crd-publish-openapi-2000 create -f -'
  Jun 22 12:41:34.786: INFO: rc: 1
  Jun 22 12:41:34.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-2000 --namespace=crd-publish-openapi-2000 apply -f -'
  Jun 22 12:41:34.838: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 06/22/24 12:41:34.838
  Jun 22 12:41:34.838: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-2000 --namespace=crd-publish-openapi-2000 create -f -'
  Jun 22 12:41:34.882: INFO: rc: 1
  Jun 22 12:41:34.882: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-2000 --namespace=crd-publish-openapi-2000 apply -f -'
  Jun 22 12:41:34.931: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 06/22/24 12:41:34.931
  Jun 22 12:41:34.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-2000 explain e2e-test-crd-publish-openapi-5027-crds'
  Jun 22 12:41:34.971: INFO: stderr: ""
  Jun 22 12:41:34.971: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5027-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 06/22/24 12:41:34.972
  Jun 22 12:41:34.972: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-2000 explain e2e-test-crd-publish-openapi-5027-crds.metadata'
  Jun 22 12:41:35.013: INFO: stderr: ""
  Jun 22 12:41:35.013: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5027-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Jun 22 12:41:35.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-2000 explain e2e-test-crd-publish-openapi-5027-crds.spec'
  Jun 22 12:41:35.055: INFO: stderr: ""
  Jun 22 12:41:35.055: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5027-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Jun 22 12:41:35.055: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-2000 explain e2e-test-crd-publish-openapi-5027-crds.spec.bars'
  Jun 22 12:41:35.105: INFO: stderr: ""
  Jun 22 12:41:35.105: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5027-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 06/22/24 12:41:35.105
  Jun 22 12:41:35.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-2000 explain e2e-test-crd-publish-openapi-5027-crds.spec.bars2'
  Jun 22 12:41:35.145: INFO: rc: 1
  Jun 22 12:41:36.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2000" for this suite. @ 06/22/24 12:41:36.463
• [5.307 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 06/22/24 12:41:36.47
  Jun 22 12:41:36.470: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename aggregator @ 06/22/24 12:41:36.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:41:36.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:41:36.493
  Jun 22 12:41:36.496: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Registering the sample API server. @ 06/22/24 12:41:36.496
  Jun 22 12:41:36.772: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Jun 22 12:41:36.801: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  Jun 22 12:41:38.848: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:41:40.853: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:41:42.854: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:41:44.852: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:41:46.853: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:41:48.854: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:41:50.853: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:41:52.854: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:41:54.852: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:41:56.854: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:41:58.854: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:42:00.853: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 12, 41, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 22 12:42:02.974: INFO: Waited 112.884648ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 06/22/24 12:42:03.006
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 06/22/24 12:42:03.01
  STEP: List APIServices @ 06/22/24 12:42:03.017
  Jun 22 12:42:03.021: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 06/22/24 12:42:03.021
  Jun 22 12:42:03.034: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 06/22/24 12:42:03.034
  Jun 22 12:42:03.045: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.June, 22, 12, 42, 2, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 06/22/24 12:42:03.045
  Jun 22 12:42:03.049: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-06-22 12:42:02 +0000 UTC Passed all checks passed}
  Jun 22 12:42:03.049: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 22 12:42:03.049: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 06/22/24 12:42:03.049
  Jun 22 12:42:03.060: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1110252284" @ 06/22/24 12:42:03.06
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 06/22/24 12:42:03.068
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 06/22/24 12:42:03.075
  STEP: Patch APIService Status @ 06/22/24 12:42:03.079
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 06/22/24 12:42:03.086
  Jun 22 12:42:03.090: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-06-22 12:42:02 +0000 UTC Passed all checks passed}
  Jun 22 12:42:03.090: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 22 12:42:03.090: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Jun 22 12:42:03.090: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 06/22/24 12:42:03.09
  STEP: Confirm that the generated APIService has been deleted @ 06/22/24 12:42:03.1
  Jun 22 12:42:03.100: INFO: Requesting list of APIServices to confirm quantity
  Jun 22 12:42:03.105: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Jun 22 12:42:03.105: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Jun 22 12:42:03.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2135" for this suite. @ 06/22/24 12:42:03.21
• [26.747 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 06/22/24 12:42:03.217
  Jun 22 12:42:03.217: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir @ 06/22/24 12:42:03.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:42:03.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:42:03.237
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/22/24 12:42:03.239
  STEP: Saw pod success @ 06/22/24 12:42:07.266
  Jun 22 12:42:07.270: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-bf297eb1-564e-48b0-bc12-c24a3c53453c container test-container: <nil>
  STEP: delete the pod @ 06/22/24 12:42:07.279
  Jun 22 12:42:07.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5621" for this suite. @ 06/22/24 12:42:07.301
• [4.091 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 06/22/24 12:42:07.309
  Jun 22 12:42:07.309: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/22/24 12:42:07.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:42:07.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:42:07.33
  STEP: creating a target pod @ 06/22/24 12:42:07.332
  STEP: adding an ephemeral container @ 06/22/24 12:42:09.351
  STEP: checking pod container endpoints @ 06/22/24 12:42:11.371
  Jun 22 12:42:11.371: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2357 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 12:42:11.371: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 12:42:11.372: INFO: ExecWithOptions: Clientset creation
  Jun 22 12:42:11.372: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-2357/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jun 22 12:42:11.418: INFO: Exec stderr: ""
  Jun 22 12:42:11.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2357" for this suite. @ 06/22/24 12:42:11.431
• [4.131 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 06/22/24 12:42:11.44
  Jun 22 12:42:11.440: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir @ 06/22/24 12:42:11.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:42:11.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:42:11.461
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 06/22/24 12:42:11.463
  STEP: Saw pod success @ 06/22/24 12:42:15.489
  Jun 22 12:42:15.493: INFO: Trying to get logs from node ip-172-31-85-228 pod pod-87d65791-964a-4da4-b6c0-94f3fcf62154 container test-container: <nil>
  STEP: delete the pod @ 06/22/24 12:42:15.513
  Jun 22 12:42:15.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8994" for this suite. @ 06/22/24 12:42:15.532
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 06/22/24 12:42:15.539
  Jun 22 12:42:15.539: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/22/24 12:42:15.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:42:15.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:42:15.561
  STEP: create the container to handle the HTTPGet hook request. @ 06/22/24 12:42:15.567
  STEP: create the pod with lifecycle hook @ 06/22/24 12:42:17.591
  STEP: delete the pod with lifecycle hook @ 06/22/24 12:42:19.612
  STEP: check prestop hook @ 06/22/24 12:42:21.63
  Jun 22 12:42:21.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2413" for this suite. @ 06/22/24 12:42:21.641
• [6.109 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 06/22/24 12:42:21.648
  Jun 22 12:42:21.648: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubelet-test @ 06/22/24 12:42:21.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:42:21.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:42:21.668
  STEP: Waiting for pod completion @ 06/22/24 12:42:21.68
  Jun 22 12:42:25.703: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2666" for this suite. @ 06/22/24 12:42:25.708
• [4.066 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 06/22/24 12:42:25.714
  Jun 22 12:42:25.714: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/22/24 12:42:25.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:42:25.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:42:25.736
  STEP: fetching the /apis discovery document @ 06/22/24 12:42:25.738
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 06/22/24 12:42:25.739
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 06/22/24 12:42:25.739
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 06/22/24 12:42:25.739
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 06/22/24 12:42:25.74
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 06/22/24 12:42:25.74
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 06/22/24 12:42:25.741
  Jun 22 12:42:25.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6400" for this suite. @ 06/22/24 12:42:25.745
• [0.037 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 06/22/24 12:42:25.752
  Jun 22 12:42:25.752: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl @ 06/22/24 12:42:25.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:42:25.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:42:25.77
  STEP: creating all guestbook components @ 06/22/24 12:42:25.773
  Jun 22 12:42:25.773: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Jun 22 12:42:25.773: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-4954 create -f -'
  Jun 22 12:42:25.863: INFO: stderr: ""
  Jun 22 12:42:25.863: INFO: stdout: "service/agnhost-replica created\n"
  Jun 22 12:42:25.863: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Jun 22 12:42:25.863: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-4954 create -f -'
  Jun 22 12:42:25.953: INFO: stderr: ""
  Jun 22 12:42:25.953: INFO: stdout: "service/agnhost-primary created\n"
  Jun 22 12:42:25.953: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Jun 22 12:42:25.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-4954 create -f -'
  Jun 22 12:42:26.038: INFO: stderr: ""
  Jun 22 12:42:26.038: INFO: stdout: "service/frontend created\n"
  Jun 22 12:42:26.038: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Jun 22 12:42:26.039: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-4954 create -f -'
  Jun 22 12:42:26.103: INFO: stderr: ""
  Jun 22 12:42:26.103: INFO: stdout: "deployment.apps/frontend created\n"
  Jun 22 12:42:26.103: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun 22 12:42:26.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-4954 create -f -'
  Jun 22 12:42:26.171: INFO: stderr: ""
  Jun 22 12:42:26.171: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Jun 22 12:42:26.171: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun 22 12:42:26.171: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-4954 create -f -'
  Jun 22 12:42:26.237: INFO: stderr: ""
  Jun 22 12:42:26.237: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 06/22/24 12:42:26.237
  Jun 22 12:42:26.237: INFO: Waiting for all frontend pods to be Running.
  Jun 22 12:42:31.288: INFO: Waiting for frontend to serve content.
  Jun 22 12:42:31.300: INFO: Trying to add a new entry to the guestbook.
  Jun 22 12:42:31.310: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 06/22/24 12:42:31.321
  Jun 22 12:42:31.321: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-4954 delete --grace-period=0 --force -f -'
  Jun 22 12:42:31.387: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 22 12:42:31.387: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 06/22/24 12:42:31.387
  Jun 22 12:42:31.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-4954 delete --grace-period=0 --force -f -'
  Jun 22 12:42:31.448: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 22 12:42:31.448: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/22/24 12:42:31.448
  Jun 22 12:42:31.448: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-4954 delete --grace-period=0 --force -f -'
  Jun 22 12:42:31.510: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 22 12:42:31.510: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/22/24 12:42:31.511
  Jun 22 12:42:31.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-4954 delete --grace-period=0 --force -f -'
  Jun 22 12:42:31.559: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 22 12:42:31.559: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/22/24 12:42:31.56
  Jun 22 12:42:31.560: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-4954 delete --grace-period=0 --force -f -'
  Jun 22 12:42:31.619: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 22 12:42:31.619: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/22/24 12:42:31.619
  Jun 22 12:42:31.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-4954 delete --grace-period=0 --force -f -'
  Jun 22 12:42:31.687: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 22 12:42:31.687: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Jun 22 12:42:31.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4954" for this suite. @ 06/22/24 12:42:31.691
• [5.946 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 06/22/24 12:42:31.698
  Jun 22 12:42:31.698: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename gc @ 06/22/24 12:42:31.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:42:31.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:42:31.725
  STEP: create the deployment @ 06/22/24 12:42:31.728
  W0622 12:42:31.734980      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/22/24 12:42:31.735
  STEP: delete the deployment @ 06/22/24 12:42:32.239
  STEP: wait for all rs to be garbage collected @ 06/22/24 12:42:32.247
  STEP: expected 0 rs, got 1 rs @ 06/22/24 12:42:32.251
  STEP: expected 0 pods, got 2 pods @ 06/22/24 12:42:32.257
  STEP: Gathering metrics @ 06/22/24 12:42:32.759
  W0622 12:42:32.764279      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 22 12:42:32.764: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 22 12:42:32.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3553" for this suite. @ 06/22/24 12:42:32.768
• [1.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 06/22/24 12:42:32.774
  Jun 22 12:42:32.774: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename crd-webhook @ 06/22/24 12:42:32.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:42:32.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:42:32.794
  STEP: Setting up server cert @ 06/22/24 12:42:32.796
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/22/24 12:42:33.434
  STEP: Deploying the custom resource conversion webhook pod @ 06/22/24 12:42:33.441
  STEP: Wait for the deployment to be ready @ 06/22/24 12:42:33.455
  Jun 22 12:42:33.461: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/22/24 12:42:35.474
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 12:42:35.485
  Jun 22 12:42:36.486: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun 22 12:42:36.495: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Creating a v1 custom resource @ 06/22/24 12:42:39.05
  STEP: v2 custom resource should be converted @ 06/22/24 12:42:39.055
  Jun 22 12:42:39.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5985" for this suite. @ 06/22/24 12:42:39.615
• [6.850 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 06/22/24 12:42:39.624
  Jun 22 12:42:39.625: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 12:42:39.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:42:39.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:42:39.647
  STEP: creating service endpoint-test2 in namespace services-5545 @ 06/22/24 12:42:39.65
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5545 to expose endpoints map[] @ 06/22/24 12:42:39.661
  Jun 22 12:42:39.667: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Jun 22 12:42:40.676: INFO: successfully validated that service endpoint-test2 in namespace services-5545 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5545 @ 06/22/24 12:42:40.676
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5545 to expose endpoints map[pod1:[80]] @ 06/22/24 12:42:42.7
  Jun 22 12:42:42.711: INFO: successfully validated that service endpoint-test2 in namespace services-5545 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 06/22/24 12:42:42.711
  Jun 22 12:42:42.711: INFO: Creating new exec pod
  Jun 22 12:42:45.727: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-5545 exec execpodk7tm5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 22 12:42:45.825: INFO: stderr: "+ + ncecho hostName -v\n -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 22 12:42:45.825: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 12:42:45.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-5545 exec execpodk7tm5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.98 80'
  Jun 22 12:42:45.920: INFO: stderr: "+ nc -v -t -w 2 10.152.183.98 80\n+ echo hostName\nConnection to 10.152.183.98 80 port [tcp/http] succeeded!\n"
  Jun 22 12:42:45.920: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5545 @ 06/22/24 12:42:45.92
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5545 to expose endpoints map[pod1:[80] pod2:[80]] @ 06/22/24 12:42:47.94
  Jun 22 12:42:47.955: INFO: successfully validated that service endpoint-test2 in namespace services-5545 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 06/22/24 12:42:47.955
  Jun 22 12:42:48.955: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-5545 exec execpodk7tm5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 22 12:42:49.045: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 22 12:42:49.045: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 12:42:49.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-5545 exec execpodk7tm5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.98 80'
  Jun 22 12:42:49.139: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.98 80\nConnection to 10.152.183.98 80 port [tcp/http] succeeded!\n"
  Jun 22 12:42:49.139: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5545 @ 06/22/24 12:42:49.14
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5545 to expose endpoints map[pod2:[80]] @ 06/22/24 12:42:49.16
  Jun 22 12:42:49.175: INFO: successfully validated that service endpoint-test2 in namespace services-5545 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 06/22/24 12:42:49.175
  Jun 22 12:42:50.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-5545 exec execpodk7tm5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 22 12:42:50.268: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 22 12:42:50.269: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 12:42:50.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-5545 exec execpodk7tm5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.98 80'
  Jun 22 12:42:50.359: INFO: stderr: "+ nc -v -t -w 2 10.152.183.98 80\nConnection to 10.152.183.98 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun 22 12:42:50.359: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5545 @ 06/22/24 12:42:50.359
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5545 to expose endpoints map[] @ 06/22/24 12:42:50.377
  Jun 22 12:42:51.394: INFO: successfully validated that service endpoint-test2 in namespace services-5545 exposes endpoints map[]
  Jun 22 12:42:51.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5545" for this suite. @ 06/22/24 12:42:51.418
• [11.801 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 06/22/24 12:42:51.426
  Jun 22 12:42:51.426: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 12:42:51.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:42:51.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:42:51.45
  STEP: Creating the pod @ 06/22/24 12:42:51.452
  Jun 22 12:42:53.995: INFO: Successfully updated pod "annotationupdatee023cd94-36a4-456e-9e8d-2da1318c96d9"
  Jun 22 12:42:58.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7934" for this suite. @ 06/22/24 12:42:58.026
• [6.612 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 06/22/24 12:42:58.038
  Jun 22 12:42:58.038: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename events @ 06/22/24 12:42:58.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:42:58.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:42:58.058
  STEP: creating a test event @ 06/22/24 12:42:58.06
  STEP: listing events in all namespaces @ 06/22/24 12:42:58.067
  STEP: listing events in test namespace @ 06/22/24 12:42:58.079
  STEP: listing events with field selection filtering on source @ 06/22/24 12:42:58.083
  STEP: listing events with field selection filtering on reportingController @ 06/22/24 12:42:58.086
  STEP: getting the test event @ 06/22/24 12:42:58.089
  STEP: patching the test event @ 06/22/24 12:42:58.093
  STEP: getting the test event @ 06/22/24 12:42:58.102
  STEP: updating the test event @ 06/22/24 12:42:58.105
  STEP: getting the test event @ 06/22/24 12:42:58.112
  STEP: deleting the test event @ 06/22/24 12:42:58.115
  STEP: listing events in all namespaces @ 06/22/24 12:42:58.123
  STEP: listing events in test namespace @ 06/22/24 12:42:58.135
  Jun 22 12:42:58.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5309" for this suite. @ 06/22/24 12:42:58.142
• [0.110 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 06/22/24 12:42:58.149
  Jun 22 12:42:58.149: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename replicaset @ 06/22/24 12:42:58.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:42:58.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:42:58.17
  Jun 22 12:42:58.172: INFO: Creating ReplicaSet my-hostname-basic-a18bda20-2b83-4777-abac-e4ef56e032f3
  Jun 22 12:42:58.183: INFO: Pod name my-hostname-basic-a18bda20-2b83-4777-abac-e4ef56e032f3: Found 0 pods out of 1
  Jun 22 12:43:03.189: INFO: Pod name my-hostname-basic-a18bda20-2b83-4777-abac-e4ef56e032f3: Found 1 pods out of 1
  Jun 22 12:43:03.189: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-a18bda20-2b83-4777-abac-e4ef56e032f3" is running
  Jun 22 12:43:03.194: INFO: Pod "my-hostname-basic-a18bda20-2b83-4777-abac-e4ef56e032f3-tw5db" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-22 12:42:58 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-22 12:42:58 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-22 12:42:58 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-22 12:42:58 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-22 12:42:58 +0000 UTC Reason: Message:}])
  Jun 22 12:43:03.194: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/22/24 12:43:03.194
  Jun 22 12:43:03.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3247" for this suite. @ 06/22/24 12:43:03.209
• [5.066 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 06/22/24 12:43:03.215
  Jun 22 12:43:03.215: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename runtimeclass @ 06/22/24 12:43:03.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:43:03.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:43:03.242
  Jun 22 12:43:05.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7494" for this suite. @ 06/22/24 12:43:05.28
• [2.072 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 06/22/24 12:43:05.287
  Jun 22 12:43:05.287: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename downward-api @ 06/22/24 12:43:05.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:43:05.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:43:05.308
  STEP: Creating a pod to test downward api env vars @ 06/22/24 12:43:05.31
  STEP: Saw pod success @ 06/22/24 12:43:09.333
  Jun 22 12:43:09.337: INFO: Trying to get logs from node ip-172-31-3-104 pod downward-api-8f6b1818-f0c8-4fcd-8368-ff4ff2ce7ea8 container dapi-container: <nil>
  STEP: delete the pod @ 06/22/24 12:43:09.344
  Jun 22 12:43:09.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3757" for this suite. @ 06/22/24 12:43:09.362
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 06/22/24 12:43:09.369
  Jun 22 12:43:09.369: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename svcaccounts @ 06/22/24 12:43:09.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:43:09.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:43:09.39
  STEP: Creating ServiceAccount "e2e-sa-m4wth"  @ 06/22/24 12:43:09.392
  Jun 22 12:43:09.397: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-m4wth"  @ 06/22/24 12:43:09.397
  Jun 22 12:43:09.404: INFO: AutomountServiceAccountToken: true
  Jun 22 12:43:09.404: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9851" for this suite. @ 06/22/24 12:43:09.408
• [0.045 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 06/22/24 12:43:09.414
  Jun 22 12:43:09.414: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl @ 06/22/24 12:43:09.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:43:09.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:43:09.434
  Jun 22 12:43:09.436: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-4850 version'
  Jun 22 12:43:09.474: INFO: stderr: ""
  Jun 22 12:43:09.474: INFO: stdout: "Client Version: v1.29.6\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.6\n"
  Jun 22 12:43:09.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4850" for this suite. @ 06/22/24 12:43:09.478
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:708
  STEP: Creating a kubernetes client @ 06/22/24 12:43:09.485
  Jun 22 12:43:09.485: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename sched-pred @ 06/22/24 12:43:09.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:43:09.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:43:09.506
  Jun 22 12:43:09.508: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 22 12:43:09.515: INFO: Waiting for terminating namespaces to be deleted...
  Jun 22 12:43:09.520: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-25-91 before test
  Jun 22 12:43:09.528: INFO: nginx-ingress-controller-kubernetes-worker-fvrjf from ingress-nginx-kubernetes-worker started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 12:43:09.528: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 22 12:43:09.528: INFO: calico-node-ccx9h from kube-system started at 2024-06-22 12:19:33 +0000 UTC (1 container statuses recorded)
  Jun 22 12:43:09.528: INFO: 	Container calico-node ready: true, restart count 0
  Jun 22 12:43:09.528: INFO: coredns-bddfd76d7-nd2xx from kube-system started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 12:43:09.528: INFO: 	Container coredns ready: true, restart count 0
  Jun 22 12:43:09.528: INFO: kube-state-metrics-6f48cdd76-dd6kh from kube-system started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 12:43:09.528: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jun 22 12:43:09.528: INFO: metrics-server-v0.6.3-69d7fbfdf8-8zxgg from kube-system started at 2024-06-22 12:14:39 +0000 UTC (2 container statuses recorded)
  Jun 22 12:43:09.528: INFO: 	Container metrics-server ready: true, restart count 0
  Jun 22 12:43:09.528: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jun 22 12:43:09.528: INFO: dashboard-metrics-scraper-5dd7cb5fc-cjq29 from kubernetes-dashboard started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 12:43:09.528: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jun 22 12:43:09.528: INFO: kubernetes-dashboard-7b899cb9d9-zw59t from kubernetes-dashboard started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 12:43:09.528: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jun 22 12:43:09.528: INFO: sonobuoy-systemd-logs-daemon-set-94c32348a04f46b5-zhwcb from sonobuoy started at 2024-06-22 12:22:23 +0000 UTC (2 container statuses recorded)
  Jun 22 12:43:09.528: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 22 12:43:09.528: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 22 12:43:09.528: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-3-104 before test
  Jun 22 12:43:09.536: INFO: nginx-ingress-controller-kubernetes-worker-czctk from ingress-nginx-kubernetes-worker started at 2024-06-22 12:15:55 +0000 UTC (1 container statuses recorded)
  Jun 22 12:43:09.536: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 22 12:43:09.536: INFO: calico-node-82rw8 from kube-system started at 2024-06-22 12:20:14 +0000 UTC (1 container statuses recorded)
  Jun 22 12:43:09.536: INFO: 	Container calico-node ready: true, restart count 0
  Jun 22 12:43:09.536: INFO: test-runtimeclass-runtimeclass-7494-preconfigured-handler-bhpf4 from runtimeclass-7494 started at 2024-06-22 12:43:03 +0000 UTC (1 container statuses recorded)
  Jun 22 12:43:09.536: INFO: 	Container test ready: false, restart count 0
  Jun 22 12:43:09.536: INFO: sonobuoy from sonobuoy started at 2024-06-22 12:22:22 +0000 UTC (1 container statuses recorded)
  Jun 22 12:43:09.536: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 22 12:43:09.536: INFO: sonobuoy-systemd-logs-daemon-set-94c32348a04f46b5-fbr7r from sonobuoy started at 2024-06-22 12:22:23 +0000 UTC (2 container statuses recorded)
  Jun 22 12:43:09.536: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 22 12:43:09.536: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 22 12:43:09.536: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-85-228 before test
  Jun 22 12:43:09.542: INFO: nginx-ingress-controller-kubernetes-worker-nvkt2 from ingress-nginx-kubernetes-worker started at 2024-06-22 12:17:34 +0000 UTC (1 container statuses recorded)
  Jun 22 12:43:09.542: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 22 12:43:09.542: INFO: calico-node-q9fk8 from kube-system started at 2024-06-22 12:19:53 +0000 UTC (1 container statuses recorded)
  Jun 22 12:43:09.542: INFO: 	Container calico-node ready: true, restart count 0
  Jun 22 12:43:09.542: INFO: sonobuoy-e2e-job-2ca1d8ae60f44d6a from sonobuoy started at 2024-06-22 12:22:23 +0000 UTC (2 container statuses recorded)
  Jun 22 12:43:09.542: INFO: 	Container e2e ready: true, restart count 0
  Jun 22 12:43:09.542: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 22 12:43:09.542: INFO: sonobuoy-systemd-logs-daemon-set-94c32348a04f46b5-ntsj7 from sonobuoy started at 2024-06-22 12:22:23 +0000 UTC (2 container statuses recorded)
  Jun 22 12:43:09.542: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 22 12:43:09.542: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/22/24 12:43:09.543
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/22/24 12:43:11.572
  STEP: Trying to apply a random label on the found node. @ 06/22/24 12:43:11.592
  STEP: verifying the node has the label kubernetes.io/e2e-2ba4d8c7-8ae3-42df-b968-ffb1cb657bca 95 @ 06/22/24 12:43:11.601
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 06/22/24 12:43:11.605
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.3.104 on the node which pod4 resides and expect not scheduled @ 06/22/24 12:43:13.625
  STEP: removing the label kubernetes.io/e2e-2ba4d8c7-8ae3-42df-b968-ffb1cb657bca off the node ip-172-31-3-104 @ 06/22/24 12:48:13.632
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-2ba4d8c7-8ae3-42df-b968-ffb1cb657bca @ 06/22/24 12:48:13.646
  Jun 22 12:48:13.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6892" for this suite. @ 06/22/24 12:48:13.657
• [304.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 06/22/24 12:48:13.665
  Jun 22 12:48:13.665: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename job @ 06/22/24 12:48:13.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:48:13.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:48:13.688
  STEP: Creating a job @ 06/22/24 12:48:13.691
  STEP: Ensure pods equal to parallelism count is attached to the job @ 06/22/24 12:48:13.697
  STEP: patching /status @ 06/22/24 12:48:15.702
  STEP: updating /status @ 06/22/24 12:48:15.709
  STEP: get /status @ 06/22/24 12:48:15.717
  Jun 22 12:48:15.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3852" for this suite. @ 06/22/24 12:48:15.725
• [2.070 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 06/22/24 12:48:15.735
  Jun 22 12:48:15.735: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename downward-api @ 06/22/24 12:48:15.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:48:15.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:48:15.757
  STEP: Creating the pod @ 06/22/24 12:48:15.759
  Jun 22 12:48:18.316: INFO: Successfully updated pod "annotationupdate8f4f1237-91ad-4a94-b09c-6abe1c94533c"
  Jun 22 12:48:22.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7911" for this suite. @ 06/22/24 12:48:22.346
• [6.618 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 06/22/24 12:48:22.354
  Jun 22 12:48:22.354: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename security-context-test @ 06/22/24 12:48:22.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:48:22.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:48:22.374
  Jun 22 12:48:26.408: INFO: Got logs for pod "busybox-privileged-false-080396ad-a726-4a64-b6d3-8ec590d17470": "ip: RTNETLINK answers: Operation not permitted\n"
  Jun 22 12:48:26.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6615" for this suite. @ 06/22/24 12:48:26.412
• [4.065 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 06/22/24 12:48:26.42
  Jun 22 12:48:26.420: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename secrets @ 06/22/24 12:48:26.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:48:26.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:48:26.442
  STEP: Creating secret with name secret-test-map-d31657b0-f173-40c3-85d4-fe3ce75b8831 @ 06/22/24 12:48:26.444
  STEP: Creating a pod to test consume secrets @ 06/22/24 12:48:26.449
  STEP: Saw pod success @ 06/22/24 12:48:30.469
  Jun 22 12:48:30.473: INFO: Trying to get logs from node ip-172-31-85-228 pod pod-secrets-233f25f8-a62b-4cb4-80f0-168cc0c37180 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/22/24 12:48:30.49
  Jun 22 12:48:30.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-367" for this suite. @ 06/22/24 12:48:30.512
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 06/22/24 12:48:30.519
  Jun 22 12:48:30.519: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename disruption @ 06/22/24 12:48:30.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:48:30.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:48:30.54
  STEP: Creating a kubernetes client @ 06/22/24 12:48:30.542
  Jun 22 12:48:30.542: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename disruption-2 @ 06/22/24 12:48:30.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:48:30.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:48:30.563
  STEP: Waiting for the pdb to be processed @ 06/22/24 12:48:30.569
  STEP: Waiting for the pdb to be processed @ 06/22/24 12:48:32.58
  STEP: Waiting for the pdb to be processed @ 06/22/24 12:48:34.594
  STEP: listing a collection of PDBs across all namespaces @ 06/22/24 12:48:36.599
  STEP: listing a collection of PDBs in namespace disruption-4494 @ 06/22/24 12:48:36.603
  STEP: deleting a collection of PDBs @ 06/22/24 12:48:36.606
  STEP: Waiting for the PDB collection to be deleted @ 06/22/24 12:48:36.621
  Jun 22 12:48:36.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-706" for this suite. @ 06/22/24 12:48:36.628
  Jun 22 12:48:36.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4494" for this suite. @ 06/22/24 12:48:36.642
• [6.130 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 06/22/24 12:48:36.649
  Jun 22 12:48:36.649: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 12:48:36.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:48:36.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:48:36.672
  STEP: Creating the pod @ 06/22/24 12:48:36.674
  Jun 22 12:48:39.221: INFO: Successfully updated pod "labelsupdate9516224a-8828-4f75-961e-5bb2ba2a73fc"
  Jun 22 12:48:43.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2565" for this suite. @ 06/22/24 12:48:43.253
• [6.612 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 06/22/24 12:48:43.263
  Jun 22 12:48:43.263: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename resourcequota @ 06/22/24 12:48:43.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:48:43.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:48:43.289
  STEP: Creating resourceQuota "e2e-rq-status-975df" @ 06/22/24 12:48:43.297
  Jun 22 12:48:43.310: INFO: Resource quota "e2e-rq-status-975df" reports spec: hard cpu limit of 500m
  Jun 22 12:48:43.310: INFO: Resource quota "e2e-rq-status-975df" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-975df" /status @ 06/22/24 12:48:43.31
  STEP: Confirm /status for "e2e-rq-status-975df" resourceQuota via watch @ 06/22/24 12:48:43.32
  Jun 22 12:48:43.322: INFO: observed resourceQuota "e2e-rq-status-975df" in namespace "resourcequota-982" with hard status: v1.ResourceList(nil)
  Jun 22 12:48:43.322: INFO: Found resourceQuota "e2e-rq-status-975df" in namespace "resourcequota-982" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun 22 12:48:43.322: INFO: ResourceQuota "e2e-rq-status-975df" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 06/22/24 12:48:43.326
  Jun 22 12:48:43.334: INFO: Resource quota "e2e-rq-status-975df" reports spec: hard cpu limit of 1
  Jun 22 12:48:43.334: INFO: Resource quota "e2e-rq-status-975df" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-975df" /status @ 06/22/24 12:48:43.334
  STEP: Confirm /status for "e2e-rq-status-975df" resourceQuota via watch @ 06/22/24 12:48:43.342
  Jun 22 12:48:43.344: INFO: observed resourceQuota "e2e-rq-status-975df" in namespace "resourcequota-982" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun 22 12:48:43.344: INFO: Found resourceQuota "e2e-rq-status-975df" in namespace "resourcequota-982" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jun 22 12:48:43.344: INFO: ResourceQuota "e2e-rq-status-975df" /status was patched
  STEP: Get "e2e-rq-status-975df" /status @ 06/22/24 12:48:43.344
  Jun 22 12:48:43.348: INFO: Resourcequota "e2e-rq-status-975df" reports status: hard cpu of 1
  Jun 22 12:48:43.348: INFO: Resourcequota "e2e-rq-status-975df" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-975df" /status before checking Spec is unchanged @ 06/22/24 12:48:43.353
  Jun 22 12:48:43.358: INFO: Resourcequota "e2e-rq-status-975df" reports status: hard cpu of 2
  Jun 22 12:48:43.358: INFO: Resourcequota "e2e-rq-status-975df" reports status: hard memory of 2Gi
  Jun 22 12:48:43.360: INFO: Found resourceQuota "e2e-rq-status-975df" in namespace "resourcequota-982" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Jun 22 12:48:43.364: INFO: ResourceQuota "e2e-rq-status-975df" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-975df", GenerateName:"", Namespace:"resourcequota-982", SelfLink:"", UID:"d1354858-f535-4af9-a925-ec2cf74da823", ResourceVersion:"11256", Generation:0, CreationTimestamp:time.Date(2024, time.June, 22, 12, 48, 43, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-975df"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 22, 12, 48, 43, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00012e9c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 22, 12, 48, 43, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00012ea20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 22, 12, 48, 43, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00012eab0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun 22 12:48:48.365: INFO: ResourceQuota "e2e-rq-status-975df" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-975df", GenerateName:"", Namespace:"resourcequota-982", SelfLink:"", UID:"d1354858-f535-4af9-a925-ec2cf74da823", ResourceVersion:"11256", Generation:0, CreationTimestamp:time.Date(2024, time.June, 22, 12, 48, 43, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-975df"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 22, 12, 48, 43, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000012a68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 22, 12, 48, 43, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000012ac8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 22, 12, 48, 43, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000012b28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun 22 12:48:53.366: INFO: ResourceQuota "e2e-rq-status-975df" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-975df", GenerateName:"", Namespace:"resourcequota-982", SelfLink:"", UID:"d1354858-f535-4af9-a925-ec2cf74da823", ResourceVersion:"11256", Generation:0, CreationTimestamp:time.Date(2024, time.June, 22, 12, 48, 43, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-975df"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 22, 12, 48, 43, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0000131b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 22, 12, 48, 43, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000013218), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 22, 12, 48, 43, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0000132a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun 22 12:48:58.365: INFO: ResourceQuota "e2e-rq-status-975df" Spec was unchanged and /status reset
  Jun 22 12:48:58.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-982" for this suite. @ 06/22/24 12:48:58.37
• [15.114 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 06/22/24 12:48:58.378
  Jun 22 12:48:58.378: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename svc-latency @ 06/22/24 12:48:58.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:48:58.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:48:58.399
  Jun 22 12:48:58.401: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-7963 @ 06/22/24 12:48:58.402
  I0622 12:48:58.409958      19 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-7963, replica count: 1
  I0622 12:48:59.461549      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0622 12:49:00.462107      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 22 12:49:00.577: INFO: Created: latency-svc-8dr2w
  Jun 22 12:49:00.584: INFO: Got endpoints: latency-svc-8dr2w [21.869749ms]
  Jun 22 12:49:00.598: INFO: Created: latency-svc-8cq4g
  Jun 22 12:49:00.605: INFO: Got endpoints: latency-svc-8cq4g [20.630273ms]
  Jun 22 12:49:00.610: INFO: Created: latency-svc-96h4b
  Jun 22 12:49:00.618: INFO: Got endpoints: latency-svc-96h4b [33.907522ms]
  Jun 22 12:49:00.622: INFO: Created: latency-svc-hjxfb
  Jun 22 12:49:00.628: INFO: Got endpoints: latency-svc-hjxfb [43.424513ms]
  Jun 22 12:49:00.633: INFO: Created: latency-svc-6tw2z
  Jun 22 12:49:00.643: INFO: Got endpoints: latency-svc-6tw2z [57.784306ms]
  Jun 22 12:49:00.643: INFO: Created: latency-svc-shc4v
  Jun 22 12:49:00.647: INFO: Got endpoints: latency-svc-shc4v [62.528779ms]
  Jun 22 12:49:00.651: INFO: Created: latency-svc-dl4dn
  Jun 22 12:49:00.661: INFO: Got endpoints: latency-svc-dl4dn [76.030636ms]
  Jun 22 12:49:00.666: INFO: Created: latency-svc-mmsxx
  Jun 22 12:49:00.672: INFO: Got endpoints: latency-svc-mmsxx [87.367158ms]
  Jun 22 12:49:00.676: INFO: Created: latency-svc-q7vzq
  Jun 22 12:49:00.681: INFO: Created: latency-svc-cpk76
  Jun 22 12:49:00.682: INFO: Got endpoints: latency-svc-q7vzq [96.378131ms]
  Jun 22 12:49:00.689: INFO: Created: latency-svc-5ddg9
  Jun 22 12:49:00.689: INFO: Got endpoints: latency-svc-cpk76 [104.145662ms]
  Jun 22 12:49:00.696: INFO: Created: latency-svc-mfrl6
  Jun 22 12:49:00.697: INFO: Got endpoints: latency-svc-5ddg9 [112.019509ms]
  Jun 22 12:49:00.706: INFO: Got endpoints: latency-svc-mfrl6 [121.145404ms]
  Jun 22 12:49:00.778: INFO: Created: latency-svc-d7gh4
  Jun 22 12:49:00.778: INFO: Created: latency-svc-2bs7g
  Jun 22 12:49:00.778: INFO: Created: latency-svc-5rc9d
  Jun 22 12:49:00.782: INFO: Created: latency-svc-p684j
  Jun 22 12:49:00.785: INFO: Created: latency-svc-mv6zw
  Jun 22 12:49:00.785: INFO: Created: latency-svc-bqstc
  Jun 22 12:49:00.788: INFO: Created: latency-svc-nsvx4
  Jun 22 12:49:00.788: INFO: Created: latency-svc-pbqfm
  Jun 22 12:49:00.789: INFO: Created: latency-svc-t8ps2
  Jun 22 12:49:00.789: INFO: Created: latency-svc-v264j
  Jun 22 12:49:00.789: INFO: Created: latency-svc-hdn2d
  Jun 22 12:49:00.789: INFO: Created: latency-svc-68wlb
  Jun 22 12:49:00.789: INFO: Created: latency-svc-k5cq8
  Jun 22 12:49:00.789: INFO: Created: latency-svc-qk7g5
  Jun 22 12:49:00.790: INFO: Created: latency-svc-kkqkf
  Jun 22 12:49:00.796: INFO: Got endpoints: latency-svc-2bs7g [89.547722ms]
  Jun 22 12:49:00.799: INFO: Got endpoints: latency-svc-d7gh4 [180.414599ms]
  Jun 22 12:49:00.802: INFO: Got endpoints: latency-svc-p684j [120.00111ms]
  Jun 22 12:49:00.802: INFO: Got endpoints: latency-svc-nsvx4 [216.430989ms]
  Jun 22 12:49:00.802: INFO: Got endpoints: latency-svc-5rc9d [159.787107ms]
  Jun 22 12:49:00.805: INFO: Got endpoints: latency-svc-bqstc [157.176391ms]
  Jun 22 12:49:00.807: INFO: Got endpoints: latency-svc-k5cq8 [222.116502ms]
  Jun 22 12:49:00.812: INFO: Created: latency-svc-4h4g2
  Jun 22 12:49:00.818: INFO: Got endpoints: latency-svc-68wlb [232.584066ms]
  Jun 22 12:49:00.818: INFO: Got endpoints: latency-svc-t8ps2 [189.620784ms]
  Jun 22 12:49:00.821: INFO: Got endpoints: latency-svc-kkqkf [215.309204ms]
  Jun 22 12:49:00.823: INFO: Got endpoints: latency-svc-v264j [151.113724ms]
  Jun 22 12:49:00.823: INFO: Got endpoints: latency-svc-pbqfm [126.24761ms]
  Jun 22 12:49:00.826: INFO: Created: latency-svc-k8nsp
  Jun 22 12:49:00.828: INFO: Got endpoints: latency-svc-qk7g5 [138.39112ms]
  Jun 22 12:49:00.828: INFO: Got endpoints: latency-svc-hdn2d [243.343082ms]
  Jun 22 12:49:00.829: INFO: Got endpoints: latency-svc-mv6zw [167.572017ms]
  Jun 22 12:49:00.833: INFO: Got endpoints: latency-svc-4h4g2 [36.434258ms]
  Jun 22 12:49:00.837: INFO: Created: latency-svc-w5tn8
  Jun 22 12:49:00.841: INFO: Got endpoints: latency-svc-k8nsp [41.327147ms]
  Jun 22 12:49:00.842: INFO: Got endpoints: latency-svc-w5tn8 [40.275544ms]
  Jun 22 12:49:00.847: INFO: Created: latency-svc-hqtwl
  Jun 22 12:49:00.855: INFO: Got endpoints: latency-svc-hqtwl [52.930427ms]
  Jun 22 12:49:00.855: INFO: Created: latency-svc-whwfr
  Jun 22 12:49:00.861: INFO: Created: latency-svc-wzpjw
  Jun 22 12:49:00.862: INFO: Got endpoints: latency-svc-whwfr [59.692112ms]
  Jun 22 12:49:00.868: INFO: Got endpoints: latency-svc-wzpjw [63.445261ms]
  Jun 22 12:49:00.870: INFO: Created: latency-svc-hff27
  Jun 22 12:49:00.875: INFO: Created: latency-svc-nw2p8
  Jun 22 12:49:00.877: INFO: Got endpoints: latency-svc-hff27 [69.891551ms]
  Jun 22 12:49:00.881: INFO: Got endpoints: latency-svc-nw2p8 [63.125227ms]
  Jun 22 12:49:00.884: INFO: Created: latency-svc-5t28l
  Jun 22 12:49:00.890: INFO: Got endpoints: latency-svc-5t28l [71.568027ms]
  Jun 22 12:49:00.891: INFO: Created: latency-svc-lgcvz
  Jun 22 12:49:00.899: INFO: Created: latency-svc-l7g4p
  Jun 22 12:49:00.904: INFO: Created: latency-svc-wbt45
  Jun 22 12:49:00.909: INFO: Created: latency-svc-2xlrg
  Jun 22 12:49:00.915: INFO: Created: latency-svc-fmhzs
  Jun 22 12:49:00.922: INFO: Created: latency-svc-k4vbd
  Jun 22 12:49:00.927: INFO: Created: latency-svc-gqv6g
  Jun 22 12:49:00.933: INFO: Got endpoints: latency-svc-lgcvz [112.311824ms]
  Jun 22 12:49:00.937: INFO: Created: latency-svc-zqcfp
  Jun 22 12:49:00.943: INFO: Created: latency-svc-cvm7r
  Jun 22 12:49:00.949: INFO: Created: latency-svc-hkv95
  Jun 22 12:49:00.956: INFO: Created: latency-svc-7sql4
  Jun 22 12:49:00.964: INFO: Created: latency-svc-nmskb
  Jun 22 12:49:00.969: INFO: Created: latency-svc-fcrh9
  Jun 22 12:49:00.975: INFO: Created: latency-svc-trk62
  Jun 22 12:49:00.982: INFO: Created: latency-svc-wnr86
  Jun 22 12:49:00.983: INFO: Got endpoints: latency-svc-l7g4p [159.981381ms]
  Jun 22 12:49:00.988: INFO: Created: latency-svc-j64rr
  Jun 22 12:49:00.995: INFO: Created: latency-svc-bpxf8
  Jun 22 12:49:01.033: INFO: Got endpoints: latency-svc-wbt45 [209.918093ms]
  Jun 22 12:49:01.043: INFO: Created: latency-svc-dw62z
  Jun 22 12:49:01.085: INFO: Got endpoints: latency-svc-2xlrg [257.211924ms]
  Jun 22 12:49:01.095: INFO: Created: latency-svc-44bpd
  Jun 22 12:49:01.135: INFO: Got endpoints: latency-svc-fmhzs [305.947544ms]
  Jun 22 12:49:01.146: INFO: Created: latency-svc-4wlcj
  Jun 22 12:49:01.184: INFO: Got endpoints: latency-svc-k4vbd [355.320444ms]
  Jun 22 12:49:01.196: INFO: Created: latency-svc-p7xzz
  Jun 22 12:49:01.234: INFO: Got endpoints: latency-svc-gqv6g [400.533225ms]
  Jun 22 12:49:01.246: INFO: Created: latency-svc-kvjkd
  Jun 22 12:49:01.282: INFO: Got endpoints: latency-svc-zqcfp [441.712456ms]
  Jun 22 12:49:01.293: INFO: Created: latency-svc-wvqgw
  Jun 22 12:49:01.335: INFO: Got endpoints: latency-svc-cvm7r [493.011301ms]
  Jun 22 12:49:01.346: INFO: Created: latency-svc-8jkcn
  Jun 22 12:49:01.384: INFO: Got endpoints: latency-svc-hkv95 [528.807432ms]
  Jun 22 12:49:01.393: INFO: Created: latency-svc-strm9
  Jun 22 12:49:01.434: INFO: Got endpoints: latency-svc-7sql4 [571.610673ms]
  Jun 22 12:49:01.446: INFO: Created: latency-svc-8tp2h
  Jun 22 12:49:01.483: INFO: Got endpoints: latency-svc-nmskb [614.973452ms]
  Jun 22 12:49:01.494: INFO: Created: latency-svc-mtmlh
  Jun 22 12:49:01.532: INFO: Got endpoints: latency-svc-fcrh9 [655.211288ms]
  Jun 22 12:49:01.544: INFO: Created: latency-svc-n8tsl
  Jun 22 12:49:01.584: INFO: Got endpoints: latency-svc-trk62 [702.548444ms]
  Jun 22 12:49:01.596: INFO: Created: latency-svc-62nh4
  Jun 22 12:49:01.633: INFO: Got endpoints: latency-svc-wnr86 [743.306777ms]
  Jun 22 12:49:01.644: INFO: Created: latency-svc-wqbxj
  Jun 22 12:49:01.685: INFO: Got endpoints: latency-svc-j64rr [751.640444ms]
  Jun 22 12:49:01.696: INFO: Created: latency-svc-jt4nj
  Jun 22 12:49:01.732: INFO: Got endpoints: latency-svc-bpxf8 [749.00278ms]
  Jun 22 12:49:01.745: INFO: Created: latency-svc-kf258
  Jun 22 12:49:01.783: INFO: Got endpoints: latency-svc-dw62z [749.354571ms]
  Jun 22 12:49:01.794: INFO: Created: latency-svc-6dx4z
  Jun 22 12:49:01.834: INFO: Got endpoints: latency-svc-44bpd [749.439158ms]
  Jun 22 12:49:01.845: INFO: Created: latency-svc-7lj25
  Jun 22 12:49:01.885: INFO: Got endpoints: latency-svc-4wlcj [749.918949ms]
  Jun 22 12:49:01.895: INFO: Created: latency-svc-66jjl
  Jun 22 12:49:01.935: INFO: Got endpoints: latency-svc-p7xzz [751.011647ms]
  Jun 22 12:49:01.947: INFO: Created: latency-svc-9x6pj
  Jun 22 12:49:01.983: INFO: Got endpoints: latency-svc-kvjkd [748.724619ms]
  Jun 22 12:49:01.995: INFO: Created: latency-svc-dgv9k
  Jun 22 12:49:02.033: INFO: Got endpoints: latency-svc-wvqgw [750.55062ms]
  Jun 22 12:49:02.043: INFO: Created: latency-svc-5dchf
  Jun 22 12:49:02.085: INFO: Got endpoints: latency-svc-8jkcn [749.869712ms]
  Jun 22 12:49:02.095: INFO: Created: latency-svc-gxx69
  Jun 22 12:49:02.135: INFO: Got endpoints: latency-svc-strm9 [751.328544ms]
  Jun 22 12:49:02.145: INFO: Created: latency-svc-d5g7h
  Jun 22 12:49:02.183: INFO: Got endpoints: latency-svc-8tp2h [748.982835ms]
  Jun 22 12:49:02.195: INFO: Created: latency-svc-2qtj7
  Jun 22 12:49:02.233: INFO: Got endpoints: latency-svc-mtmlh [750.140767ms]
  Jun 22 12:49:02.245: INFO: Created: latency-svc-jz7s8
  Jun 22 12:49:02.284: INFO: Got endpoints: latency-svc-n8tsl [751.093758ms]
  Jun 22 12:49:02.294: INFO: Created: latency-svc-jtdjn
  Jun 22 12:49:02.335: INFO: Got endpoints: latency-svc-62nh4 [751.001678ms]
  Jun 22 12:49:02.345: INFO: Created: latency-svc-zlc2c
  Jun 22 12:49:02.385: INFO: Got endpoints: latency-svc-wqbxj [751.858824ms]
  Jun 22 12:49:02.395: INFO: Created: latency-svc-vdw6k
  Jun 22 12:49:02.432: INFO: Got endpoints: latency-svc-jt4nj [747.313479ms]
  Jun 22 12:49:02.444: INFO: Created: latency-svc-mn5sr
  Jun 22 12:49:02.483: INFO: Got endpoints: latency-svc-kf258 [750.579357ms]
  Jun 22 12:49:02.494: INFO: Created: latency-svc-tvqx6
  Jun 22 12:49:02.535: INFO: Got endpoints: latency-svc-6dx4z [752.240742ms]
  Jun 22 12:49:02.545: INFO: Created: latency-svc-t96wd
  Jun 22 12:49:02.585: INFO: Got endpoints: latency-svc-7lj25 [750.782421ms]
  Jun 22 12:49:02.596: INFO: Created: latency-svc-54fm8
  Jun 22 12:49:02.635: INFO: Got endpoints: latency-svc-66jjl [750.307517ms]
  Jun 22 12:49:02.652: INFO: Created: latency-svc-fzj7t
  Jun 22 12:49:02.683: INFO: Got endpoints: latency-svc-9x6pj [748.225846ms]
  Jun 22 12:49:02.695: INFO: Created: latency-svc-mt56k
  Jun 22 12:49:02.733: INFO: Got endpoints: latency-svc-dgv9k [749.913852ms]
  Jun 22 12:49:02.744: INFO: Created: latency-svc-cxl6m
  Jun 22 12:49:02.783: INFO: Got endpoints: latency-svc-5dchf [749.772297ms]
  Jun 22 12:49:02.793: INFO: Created: latency-svc-q9qcz
  Jun 22 12:49:02.834: INFO: Got endpoints: latency-svc-gxx69 [748.584349ms]
  Jun 22 12:49:02.844: INFO: Created: latency-svc-zrvhc
  Jun 22 12:49:02.885: INFO: Got endpoints: latency-svc-d5g7h [749.978048ms]
  Jun 22 12:49:02.895: INFO: Created: latency-svc-jcc59
  Jun 22 12:49:02.934: INFO: Got endpoints: latency-svc-2qtj7 [751.128967ms]
  Jun 22 12:49:02.944: INFO: Created: latency-svc-l98gh
  Jun 22 12:49:02.983: INFO: Got endpoints: latency-svc-jz7s8 [749.210006ms]
  Jun 22 12:49:02.994: INFO: Created: latency-svc-cr28z
  Jun 22 12:49:03.033: INFO: Got endpoints: latency-svc-jtdjn [749.328912ms]
  Jun 22 12:49:03.043: INFO: Created: latency-svc-cnvmn
  Jun 22 12:49:03.085: INFO: Got endpoints: latency-svc-zlc2c [749.710856ms]
  Jun 22 12:49:03.095: INFO: Created: latency-svc-kcbps
  Jun 22 12:49:03.135: INFO: Got endpoints: latency-svc-vdw6k [749.819688ms]
  Jun 22 12:49:03.146: INFO: Created: latency-svc-k44gp
  Jun 22 12:49:03.183: INFO: Got endpoints: latency-svc-mn5sr [750.782852ms]
  Jun 22 12:49:03.195: INFO: Created: latency-svc-hdkgm
  Jun 22 12:49:03.234: INFO: Got endpoints: latency-svc-tvqx6 [750.288129ms]
  Jun 22 12:49:03.245: INFO: Created: latency-svc-bbrh7
  Jun 22 12:49:03.282: INFO: Got endpoints: latency-svc-t96wd [747.56644ms]
  Jun 22 12:49:03.293: INFO: Created: latency-svc-tdpxv
  Jun 22 12:49:03.334: INFO: Got endpoints: latency-svc-54fm8 [748.944666ms]
  Jun 22 12:49:03.344: INFO: Created: latency-svc-srcmr
  Jun 22 12:49:03.384: INFO: Got endpoints: latency-svc-fzj7t [749.113956ms]
  Jun 22 12:49:03.395: INFO: Created: latency-svc-8z7vv
  Jun 22 12:49:03.433: INFO: Got endpoints: latency-svc-mt56k [749.600124ms]
  Jun 22 12:49:03.445: INFO: Created: latency-svc-5xdnn
  Jun 22 12:49:03.482: INFO: Got endpoints: latency-svc-cxl6m [749.519562ms]
  Jun 22 12:49:03.494: INFO: Created: latency-svc-c2h78
  Jun 22 12:49:03.532: INFO: Got endpoints: latency-svc-q9qcz [749.313809ms]
  Jun 22 12:49:03.544: INFO: Created: latency-svc-sncjl
  Jun 22 12:49:03.584: INFO: Got endpoints: latency-svc-zrvhc [750.455551ms]
  Jun 22 12:49:03.597: INFO: Created: latency-svc-mndrv
  Jun 22 12:49:03.635: INFO: Got endpoints: latency-svc-jcc59 [749.55592ms]
  Jun 22 12:49:03.644: INFO: Created: latency-svc-47rl2
  Jun 22 12:49:03.686: INFO: Got endpoints: latency-svc-l98gh [751.897843ms]
  Jun 22 12:49:03.696: INFO: Created: latency-svc-kkpnw
  Jun 22 12:49:03.733: INFO: Got endpoints: latency-svc-cr28z [750.197007ms]
  Jun 22 12:49:03.745: INFO: Created: latency-svc-gt5pm
  Jun 22 12:49:03.783: INFO: Got endpoints: latency-svc-cnvmn [749.892237ms]
  Jun 22 12:49:03.796: INFO: Created: latency-svc-tp7cw
  Jun 22 12:49:03.834: INFO: Got endpoints: latency-svc-kcbps [749.897328ms]
  Jun 22 12:49:03.845: INFO: Created: latency-svc-sl9x5
  Jun 22 12:49:03.885: INFO: Got endpoints: latency-svc-k44gp [749.39795ms]
  Jun 22 12:49:03.896: INFO: Created: latency-svc-pws7c
  Jun 22 12:49:03.933: INFO: Got endpoints: latency-svc-hdkgm [749.765888ms]
  Jun 22 12:49:03.943: INFO: Created: latency-svc-9hqg9
  Jun 22 12:49:03.983: INFO: Got endpoints: latency-svc-bbrh7 [748.613654ms]
  Jun 22 12:49:03.994: INFO: Created: latency-svc-9km2c
  Jun 22 12:49:04.033: INFO: Got endpoints: latency-svc-tdpxv [750.849732ms]
  Jun 22 12:49:04.044: INFO: Created: latency-svc-lb6rk
  Jun 22 12:49:04.085: INFO: Got endpoints: latency-svc-srcmr [750.339549ms]
  Jun 22 12:49:04.095: INFO: Created: latency-svc-cbrx6
  Jun 22 12:49:04.134: INFO: Got endpoints: latency-svc-8z7vv [749.359511ms]
  Jun 22 12:49:04.144: INFO: Created: latency-svc-826cd
  Jun 22 12:49:04.192: INFO: Got endpoints: latency-svc-5xdnn [758.70236ms]
  Jun 22 12:49:04.207: INFO: Created: latency-svc-x9dw5
  Jun 22 12:49:04.232: INFO: Got endpoints: latency-svc-c2h78 [750.218293ms]
  Jun 22 12:49:04.242: INFO: Created: latency-svc-fln68
  Jun 22 12:49:04.285: INFO: Got endpoints: latency-svc-sncjl [752.396169ms]
  Jun 22 12:49:04.295: INFO: Created: latency-svc-94qvg
  Jun 22 12:49:04.335: INFO: Got endpoints: latency-svc-mndrv [750.551943ms]
  Jun 22 12:49:04.346: INFO: Created: latency-svc-q5sbv
  Jun 22 12:49:04.385: INFO: Got endpoints: latency-svc-47rl2 [750.230065ms]
  Jun 22 12:49:04.396: INFO: Created: latency-svc-q485h
  Jun 22 12:49:04.432: INFO: Got endpoints: latency-svc-kkpnw [746.545497ms]
  Jun 22 12:49:04.444: INFO: Created: latency-svc-rj976
  Jun 22 12:49:04.484: INFO: Got endpoints: latency-svc-gt5pm [750.588995ms]
  Jun 22 12:49:04.495: INFO: Created: latency-svc-c9d49
  Jun 22 12:49:04.534: INFO: Got endpoints: latency-svc-tp7cw [751.301154ms]
  Jun 22 12:49:04.546: INFO: Created: latency-svc-tblvz
  Jun 22 12:49:04.584: INFO: Got endpoints: latency-svc-sl9x5 [749.536476ms]
  Jun 22 12:49:04.597: INFO: Created: latency-svc-8lv74
  Jun 22 12:49:04.634: INFO: Got endpoints: latency-svc-pws7c [749.501138ms]
  Jun 22 12:49:04.648: INFO: Created: latency-svc-qkgvs
  Jun 22 12:49:04.683: INFO: Got endpoints: latency-svc-9hqg9 [750.253795ms]
  Jun 22 12:49:04.693: INFO: Created: latency-svc-shfw7
  Jun 22 12:49:04.735: INFO: Got endpoints: latency-svc-9km2c [751.96329ms]
  Jun 22 12:49:04.745: INFO: Created: latency-svc-crbfg
  Jun 22 12:49:04.785: INFO: Got endpoints: latency-svc-lb6rk [751.305239ms]
  Jun 22 12:49:04.795: INFO: Created: latency-svc-fh8kn
  Jun 22 12:49:04.839: INFO: Got endpoints: latency-svc-cbrx6 [754.653455ms]
  Jun 22 12:49:04.850: INFO: Created: latency-svc-dd98r
  Jun 22 12:49:04.881: INFO: Got endpoints: latency-svc-826cd [747.120979ms]
  Jun 22 12:49:04.893: INFO: Created: latency-svc-jdghk
  Jun 22 12:49:04.933: INFO: Got endpoints: latency-svc-x9dw5 [741.704645ms]
  Jun 22 12:49:04.944: INFO: Created: latency-svc-bz6bd
  Jun 22 12:49:04.985: INFO: Got endpoints: latency-svc-fln68 [752.430263ms]
  Jun 22 12:49:04.994: INFO: Created: latency-svc-8n25p
  Jun 22 12:49:05.034: INFO: Got endpoints: latency-svc-94qvg [749.606099ms]
  Jun 22 12:49:05.045: INFO: Created: latency-svc-sz4lw
  Jun 22 12:49:05.084: INFO: Got endpoints: latency-svc-q5sbv [748.790548ms]
  Jun 22 12:49:05.098: INFO: Created: latency-svc-9fvvx
  Jun 22 12:49:05.133: INFO: Got endpoints: latency-svc-q485h [747.18659ms]
  Jun 22 12:49:05.144: INFO: Created: latency-svc-dkjcd
  Jun 22 12:49:05.182: INFO: Got endpoints: latency-svc-rj976 [749.613085ms]
  Jun 22 12:49:05.193: INFO: Created: latency-svc-zgk4b
  Jun 22 12:49:05.240: INFO: Got endpoints: latency-svc-c9d49 [755.919706ms]
  Jun 22 12:49:05.251: INFO: Created: latency-svc-j57jh
  Jun 22 12:49:05.285: INFO: Got endpoints: latency-svc-tblvz [750.582738ms]
  Jun 22 12:49:05.296: INFO: Created: latency-svc-fx8qf
  Jun 22 12:49:05.332: INFO: Got endpoints: latency-svc-8lv74 [747.992568ms]
  Jun 22 12:49:05.343: INFO: Created: latency-svc-fv6d4
  Jun 22 12:49:05.383: INFO: Got endpoints: latency-svc-qkgvs [748.609207ms]
  Jun 22 12:49:05.394: INFO: Created: latency-svc-rw4kn
  Jun 22 12:49:05.433: INFO: Got endpoints: latency-svc-shfw7 [750.187845ms]
  Jun 22 12:49:05.443: INFO: Created: latency-svc-c9cqr
  Jun 22 12:49:05.483: INFO: Got endpoints: latency-svc-crbfg [748.462295ms]
  Jun 22 12:49:05.494: INFO: Created: latency-svc-cvpsj
  Jun 22 12:49:05.535: INFO: Got endpoints: latency-svc-fh8kn [750.543814ms]
  Jun 22 12:49:05.546: INFO: Created: latency-svc-f75ww
  Jun 22 12:49:05.584: INFO: Got endpoints: latency-svc-dd98r [744.290754ms]
  Jun 22 12:49:05.595: INFO: Created: latency-svc-c59bp
  Jun 22 12:49:05.632: INFO: Got endpoints: latency-svc-jdghk [750.969975ms]
  Jun 22 12:49:05.645: INFO: Created: latency-svc-5mp2w
  Jun 22 12:49:05.683: INFO: Got endpoints: latency-svc-bz6bd [749.910386ms]
  Jun 22 12:49:05.696: INFO: Created: latency-svc-jpfpn
  Jun 22 12:49:05.734: INFO: Got endpoints: latency-svc-8n25p [749.073214ms]
  Jun 22 12:49:05.745: INFO: Created: latency-svc-54rqz
  Jun 22 12:49:05.784: INFO: Got endpoints: latency-svc-sz4lw [749.627628ms]
  Jun 22 12:49:05.795: INFO: Created: latency-svc-hr6zp
  Jun 22 12:49:05.834: INFO: Got endpoints: latency-svc-9fvvx [749.749883ms]
  Jun 22 12:49:05.846: INFO: Created: latency-svc-hf9dv
  Jun 22 12:49:05.882: INFO: Got endpoints: latency-svc-dkjcd [749.007468ms]
  Jun 22 12:49:05.894: INFO: Created: latency-svc-4gj29
  Jun 22 12:49:05.932: INFO: Got endpoints: latency-svc-zgk4b [749.710741ms]
  Jun 22 12:49:05.943: INFO: Created: latency-svc-6c5qz
  Jun 22 12:49:05.983: INFO: Got endpoints: latency-svc-j57jh [743.500108ms]
  Jun 22 12:49:05.994: INFO: Created: latency-svc-rqcpz
  Jun 22 12:49:06.034: INFO: Got endpoints: latency-svc-fx8qf [748.874693ms]
  Jun 22 12:49:06.043: INFO: Created: latency-svc-fp4vb
  Jun 22 12:49:06.084: INFO: Got endpoints: latency-svc-fv6d4 [751.477083ms]
  Jun 22 12:49:06.094: INFO: Created: latency-svc-bdcvr
  Jun 22 12:49:06.133: INFO: Got endpoints: latency-svc-rw4kn [749.975906ms]
  Jun 22 12:49:06.145: INFO: Created: latency-svc-fsxpc
  Jun 22 12:49:06.184: INFO: Got endpoints: latency-svc-c9cqr [750.133918ms]
  Jun 22 12:49:06.194: INFO: Created: latency-svc-2cm7h
  Jun 22 12:49:06.233: INFO: Got endpoints: latency-svc-cvpsj [749.808476ms]
  Jun 22 12:49:06.244: INFO: Created: latency-svc-zngsn
  Jun 22 12:49:06.284: INFO: Got endpoints: latency-svc-f75ww [748.745113ms]
  Jun 22 12:49:06.295: INFO: Created: latency-svc-xdcdt
  Jun 22 12:49:06.334: INFO: Got endpoints: latency-svc-c59bp [750.397139ms]
  Jun 22 12:49:06.345: INFO: Created: latency-svc-8vnvp
  Jun 22 12:49:06.383: INFO: Got endpoints: latency-svc-5mp2w [750.961682ms]
  Jun 22 12:49:06.394: INFO: Created: latency-svc-55v7v
  Jun 22 12:49:06.439: INFO: Got endpoints: latency-svc-jpfpn [755.92096ms]
  Jun 22 12:49:06.450: INFO: Created: latency-svc-cs5jh
  Jun 22 12:49:06.485: INFO: Got endpoints: latency-svc-54rqz [750.435377ms]
  Jun 22 12:49:06.495: INFO: Created: latency-svc-gfzdt
  Jun 22 12:49:06.534: INFO: Got endpoints: latency-svc-hr6zp [750.050569ms]
  Jun 22 12:49:06.544: INFO: Created: latency-svc-s86xv
  Jun 22 12:49:06.584: INFO: Got endpoints: latency-svc-hf9dv [749.60828ms]
  Jun 22 12:49:06.597: INFO: Created: latency-svc-p7hmq
  Jun 22 12:49:06.633: INFO: Got endpoints: latency-svc-4gj29 [750.690297ms]
  Jun 22 12:49:06.644: INFO: Created: latency-svc-gmn2j
  Jun 22 12:49:06.683: INFO: Got endpoints: latency-svc-6c5qz [750.714584ms]
  Jun 22 12:49:06.692: INFO: Created: latency-svc-rlqjk
  Jun 22 12:49:06.735: INFO: Got endpoints: latency-svc-rqcpz [751.655804ms]
  Jun 22 12:49:06.745: INFO: Created: latency-svc-7hb8w
  Jun 22 12:49:06.784: INFO: Got endpoints: latency-svc-fp4vb [749.870697ms]
  Jun 22 12:49:06.793: INFO: Created: latency-svc-n42kp
  Jun 22 12:49:06.833: INFO: Got endpoints: latency-svc-bdcvr [748.566387ms]
  Jun 22 12:49:06.844: INFO: Created: latency-svc-2rzp4
  Jun 22 12:49:06.883: INFO: Got endpoints: latency-svc-fsxpc [750.055725ms]
  Jun 22 12:49:06.894: INFO: Created: latency-svc-6ldfg
  Jun 22 12:49:06.934: INFO: Got endpoints: latency-svc-2cm7h [750.07089ms]
  Jun 22 12:49:06.942: INFO: Created: latency-svc-mnzkx
  Jun 22 12:49:06.985: INFO: Got endpoints: latency-svc-zngsn [751.481833ms]
  Jun 22 12:49:06.995: INFO: Created: latency-svc-zl26s
  Jun 22 12:49:07.034: INFO: Got endpoints: latency-svc-xdcdt [749.046132ms]
  Jun 22 12:49:07.046: INFO: Created: latency-svc-gz5ps
  Jun 22 12:49:07.082: INFO: Got endpoints: latency-svc-8vnvp [747.201742ms]
  Jun 22 12:49:07.093: INFO: Created: latency-svc-z5ktl
  Jun 22 12:49:07.133: INFO: Got endpoints: latency-svc-55v7v [750.09112ms]
  Jun 22 12:49:07.144: INFO: Created: latency-svc-pwb9x
  Jun 22 12:49:07.185: INFO: Got endpoints: latency-svc-cs5jh [745.415772ms]
  Jun 22 12:49:07.195: INFO: Created: latency-svc-sbrhf
  Jun 22 12:49:07.234: INFO: Got endpoints: latency-svc-gfzdt [749.438052ms]
  Jun 22 12:49:07.245: INFO: Created: latency-svc-4v4d5
  Jun 22 12:49:07.285: INFO: Got endpoints: latency-svc-s86xv [750.574936ms]
  Jun 22 12:49:07.297: INFO: Created: latency-svc-6mth4
  Jun 22 12:49:07.332: INFO: Got endpoints: latency-svc-p7hmq [748.07256ms]
  Jun 22 12:49:07.342: INFO: Created: latency-svc-bdh6b
  Jun 22 12:49:07.384: INFO: Got endpoints: latency-svc-gmn2j [751.474923ms]
  Jun 22 12:49:07.395: INFO: Created: latency-svc-2pzdg
  Jun 22 12:49:07.436: INFO: Got endpoints: latency-svc-rlqjk [753.001609ms]
  Jun 22 12:49:07.446: INFO: Created: latency-svc-rwfxb
  Jun 22 12:49:07.484: INFO: Got endpoints: latency-svc-7hb8w [749.41346ms]
  Jun 22 12:49:07.496: INFO: Created: latency-svc-frn7v
  Jun 22 12:49:07.533: INFO: Got endpoints: latency-svc-n42kp [749.068848ms]
  Jun 22 12:49:07.544: INFO: Created: latency-svc-frzr6
  Jun 22 12:49:07.582: INFO: Got endpoints: latency-svc-2rzp4 [749.689077ms]
  Jun 22 12:49:07.595: INFO: Created: latency-svc-cfxp9
  Jun 22 12:49:07.634: INFO: Got endpoints: latency-svc-6ldfg [750.416491ms]
  Jun 22 12:49:07.644: INFO: Created: latency-svc-4l6j5
  Jun 22 12:49:07.685: INFO: Got endpoints: latency-svc-mnzkx [751.42125ms]
  Jun 22 12:49:07.695: INFO: Created: latency-svc-fh2kp
  Jun 22 12:49:07.734: INFO: Got endpoints: latency-svc-zl26s [749.116589ms]
  Jun 22 12:49:07.744: INFO: Created: latency-svc-47gfx
  Jun 22 12:49:07.786: INFO: Got endpoints: latency-svc-gz5ps [752.789087ms]
  Jun 22 12:49:07.799: INFO: Created: latency-svc-rkw54
  Jun 22 12:49:07.832: INFO: Got endpoints: latency-svc-z5ktl [749.979811ms]
  Jun 22 12:49:07.843: INFO: Created: latency-svc-6tw7p
  Jun 22 12:49:07.881: INFO: Got endpoints: latency-svc-pwb9x [747.738202ms]
  Jun 22 12:49:07.893: INFO: Created: latency-svc-q8ww9
  Jun 22 12:49:07.932: INFO: Got endpoints: latency-svc-sbrhf [747.124318ms]
  Jun 22 12:49:07.942: INFO: Created: latency-svc-sd4bc
  Jun 22 12:49:07.986: INFO: Got endpoints: latency-svc-4v4d5 [751.662808ms]
  Jun 22 12:49:07.996: INFO: Created: latency-svc-jmxcr
  Jun 22 12:49:08.035: INFO: Got endpoints: latency-svc-6mth4 [750.052388ms]
  Jun 22 12:49:08.045: INFO: Created: latency-svc-dmqsq
  Jun 22 12:49:08.082: INFO: Got endpoints: latency-svc-bdh6b [749.922182ms]
  Jun 22 12:49:08.094: INFO: Created: latency-svc-5rw4j
  Jun 22 12:49:08.132: INFO: Got endpoints: latency-svc-2pzdg [748.004511ms]
  Jun 22 12:49:08.146: INFO: Created: latency-svc-zrljn
  Jun 22 12:49:08.183: INFO: Got endpoints: latency-svc-rwfxb [747.507174ms]
  Jun 22 12:49:08.193: INFO: Created: latency-svc-fs6bk
  Jun 22 12:49:08.234: INFO: Got endpoints: latency-svc-frn7v [749.229942ms]
  Jun 22 12:49:08.244: INFO: Created: latency-svc-52c6h
  Jun 22 12:49:08.284: INFO: Got endpoints: latency-svc-frzr6 [751.443843ms]
  Jun 22 12:49:08.295: INFO: Created: latency-svc-mwjrx
  Jun 22 12:49:08.333: INFO: Got endpoints: latency-svc-cfxp9 [750.400757ms]
  Jun 22 12:49:08.345: INFO: Created: latency-svc-l2wm5
  Jun 22 12:49:08.383: INFO: Got endpoints: latency-svc-4l6j5 [749.447699ms]
  Jun 22 12:49:08.393: INFO: Created: latency-svc-4kp9t
  Jun 22 12:49:08.431: INFO: Got endpoints: latency-svc-fh2kp [746.362953ms]
  Jun 22 12:49:08.485: INFO: Got endpoints: latency-svc-47gfx [750.289863ms]
  Jun 22 12:49:08.535: INFO: Got endpoints: latency-svc-rkw54 [748.046617ms]
  Jun 22 12:49:08.586: INFO: Got endpoints: latency-svc-6tw7p [753.457528ms]
  Jun 22 12:49:08.634: INFO: Got endpoints: latency-svc-q8ww9 [752.420108ms]
  Jun 22 12:49:08.685: INFO: Got endpoints: latency-svc-sd4bc [752.909999ms]
  Jun 22 12:49:08.732: INFO: Got endpoints: latency-svc-jmxcr [745.825407ms]
  Jun 22 12:49:08.788: INFO: Got endpoints: latency-svc-dmqsq [752.286147ms]
  Jun 22 12:49:08.833: INFO: Got endpoints: latency-svc-5rw4j [750.395739ms]
  Jun 22 12:49:08.885: INFO: Got endpoints: latency-svc-zrljn [752.437869ms]
  Jun 22 12:49:08.933: INFO: Got endpoints: latency-svc-fs6bk [749.326375ms]
  Jun 22 12:49:08.985: INFO: Got endpoints: latency-svc-52c6h [751.531644ms]
  Jun 22 12:49:09.033: INFO: Got endpoints: latency-svc-mwjrx [748.479218ms]
  Jun 22 12:49:09.085: INFO: Got endpoints: latency-svc-l2wm5 [751.928915ms]
  Jun 22 12:49:09.133: INFO: Got endpoints: latency-svc-4kp9t [749.637002ms]
  Jun 22 12:49:09.133: INFO: Latencies: [20.630273ms 33.907522ms 36.434258ms 40.275544ms 41.327147ms 43.424513ms 52.930427ms 57.784306ms 59.692112ms 62.528779ms 63.125227ms 63.445261ms 69.891551ms 71.568027ms 76.030636ms 87.367158ms 89.547722ms 96.378131ms 104.145662ms 112.019509ms 112.311824ms 120.00111ms 121.145404ms 126.24761ms 138.39112ms 151.113724ms 157.176391ms 159.787107ms 159.981381ms 167.572017ms 180.414599ms 189.620784ms 209.918093ms 215.309204ms 216.430989ms 222.116502ms 232.584066ms 243.343082ms 257.211924ms 305.947544ms 355.320444ms 400.533225ms 441.712456ms 493.011301ms 528.807432ms 571.610673ms 614.973452ms 655.211288ms 702.548444ms 741.704645ms 743.306777ms 743.500108ms 744.290754ms 745.415772ms 745.825407ms 746.362953ms 746.545497ms 747.120979ms 747.124318ms 747.18659ms 747.201742ms 747.313479ms 747.507174ms 747.56644ms 747.738202ms 747.992568ms 748.004511ms 748.046617ms 748.07256ms 748.225846ms 748.462295ms 748.479218ms 748.566387ms 748.584349ms 748.609207ms 748.613654ms 748.724619ms 748.745113ms 748.790548ms 748.874693ms 748.944666ms 748.982835ms 749.00278ms 749.007468ms 749.046132ms 749.068848ms 749.073214ms 749.113956ms 749.116589ms 749.210006ms 749.229942ms 749.313809ms 749.326375ms 749.328912ms 749.354571ms 749.359511ms 749.39795ms 749.41346ms 749.438052ms 749.439158ms 749.447699ms 749.501138ms 749.519562ms 749.536476ms 749.55592ms 749.600124ms 749.606099ms 749.60828ms 749.613085ms 749.627628ms 749.637002ms 749.689077ms 749.710741ms 749.710856ms 749.749883ms 749.765888ms 749.772297ms 749.808476ms 749.819688ms 749.869712ms 749.870697ms 749.892237ms 749.897328ms 749.910386ms 749.913852ms 749.918949ms 749.922182ms 749.975906ms 749.978048ms 749.979811ms 750.050569ms 750.052388ms 750.055725ms 750.07089ms 750.09112ms 750.133918ms 750.140767ms 750.187845ms 750.197007ms 750.218293ms 750.230065ms 750.253795ms 750.288129ms 750.289863ms 750.307517ms 750.339549ms 750.395739ms 750.397139ms 750.400757ms 750.416491ms 750.435377ms 750.455551ms 750.543814ms 750.55062ms 750.551943ms 750.574936ms 750.579357ms 750.582738ms 750.588995ms 750.690297ms 750.714584ms 750.782421ms 750.782852ms 750.849732ms 750.961682ms 750.969975ms 751.001678ms 751.011647ms 751.093758ms 751.128967ms 751.301154ms 751.305239ms 751.328544ms 751.42125ms 751.443843ms 751.474923ms 751.477083ms 751.481833ms 751.531644ms 751.640444ms 751.655804ms 751.662808ms 751.858824ms 751.897843ms 751.928915ms 751.96329ms 752.240742ms 752.286147ms 752.396169ms 752.420108ms 752.430263ms 752.437869ms 752.789087ms 752.909999ms 753.001609ms 753.457528ms 754.653455ms 755.919706ms 755.92096ms 758.70236ms]
  Jun 22 12:49:09.133: INFO: 50 %ile: 749.447699ms
  Jun 22 12:49:09.133: INFO: 90 %ile: 751.655804ms
  Jun 22 12:49:09.133: INFO: 99 %ile: 755.92096ms
  Jun 22 12:49:09.133: INFO: Total sample count: 200
  Jun 22 12:49:09.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-7963" for this suite. @ 06/22/24 12:49:09.138
• [10.769 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 06/22/24 12:49:09.148
  Jun 22 12:49:09.148: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename secrets @ 06/22/24 12:49:09.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:49:09.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:49:09.17
  STEP: Creating secret with name secret-test-badb5960-fd5e-4ca7-a1b4-c2163bcdfa08 @ 06/22/24 12:49:09.173
  STEP: Creating a pod to test consume secrets @ 06/22/24 12:49:09.177
  STEP: Saw pod success @ 06/22/24 12:49:13.199
  Jun 22 12:49:13.203: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-secrets-491e7575-f050-4f04-998b-e69909a83d79 container secret-env-test: <nil>
  STEP: delete the pod @ 06/22/24 12:49:13.211
  Jun 22 12:49:13.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2677" for this suite. @ 06/22/24 12:49:13.23
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 06/22/24 12:49:13.239
  Jun 22 12:49:13.239: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename replication-controller @ 06/22/24 12:49:13.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:49:13.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:49:13.262
  STEP: Creating replication controller my-hostname-basic-ad2b878c-39c3-4802-a5af-a3667d5dd130 @ 06/22/24 12:49:13.264
  Jun 22 12:49:13.273: INFO: Pod name my-hostname-basic-ad2b878c-39c3-4802-a5af-a3667d5dd130: Found 0 pods out of 1
  Jun 22 12:49:18.278: INFO: Pod name my-hostname-basic-ad2b878c-39c3-4802-a5af-a3667d5dd130: Found 1 pods out of 1
  Jun 22 12:49:18.278: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-ad2b878c-39c3-4802-a5af-a3667d5dd130" are running
  Jun 22 12:49:18.282: INFO: Pod "my-hostname-basic-ad2b878c-39c3-4802-a5af-a3667d5dd130-xpwmn" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-22 12:49:14 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-22 12:49:13 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-22 12:49:14 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-22 12:49:14 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-22 12:49:13 +0000 UTC Reason: Message:}])
  Jun 22 12:49:18.282: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/22/24 12:49:18.282
  Jun 22 12:49:18.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8242" for this suite. @ 06/22/24 12:49:18.298
• [5.066 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 06/22/24 12:49:18.305
  Jun 22 12:49:18.306: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 12:49:18.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:49:18.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:49:18.34
  STEP: Setting up server cert @ 06/22/24 12:49:18.369
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 12:49:18.616
  STEP: Deploying the webhook pod @ 06/22/24 12:49:18.625
  STEP: Wait for the deployment to be ready @ 06/22/24 12:49:18.638
  Jun 22 12:49:18.647: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/22/24 12:49:20.66
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 12:49:20.673
  Jun 22 12:49:21.673: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 22 12:49:21.678: INFO: Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  Jun 22 12:49:22.673: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 22 12:49:22.678: INFO: Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  Jun 22 12:49:23.673: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 22 12:49:23.678: INFO: Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  Jun 22 12:49:24.673: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 22 12:49:24.677: INFO: Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  Jun 22 12:49:25.673: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 22 12:49:25.677: INFO: Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  Jun 22 12:49:26.673: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 22 12:49:26.677: INFO: Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  Jun 22 12:49:27.673: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 22 12:49:27.678: INFO: Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  Jun 22 12:49:28.673: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/22/24 12:49:28.682
  STEP: create a pod that should be denied by the webhook @ 06/22/24 12:49:28.695
  STEP: create a pod that causes the webhook to hang @ 06/22/24 12:49:28.706
  STEP: create a configmap that should be denied by the webhook @ 06/22/24 12:49:38.714
  STEP: create a configmap that should be admitted by the webhook @ 06/22/24 12:49:38.747
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/22/24 12:49:38.755
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/22/24 12:49:38.764
  STEP: create a namespace that bypass the webhook @ 06/22/24 12:49:38.77
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 06/22/24 12:49:38.799
  Jun 22 12:49:38.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8770" for this suite. @ 06/22/24 12:49:38.855
  STEP: Destroying namespace "webhook-markers-6109" for this suite. @ 06/22/24 12:49:38.866
  STEP: Destroying namespace "exempted-namespace-7420" for this suite. @ 06/22/24 12:49:38.873
• [20.574 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 06/22/24 12:49:38.879
  Jun 22 12:49:38.879: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename replication-controller @ 06/22/24 12:49:38.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:49:38.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:49:38.903
  STEP: Given a ReplicationController is created @ 06/22/24 12:49:38.906
  STEP: When the matched label of one of its pods change @ 06/22/24 12:49:38.911
  Jun 22 12:49:38.914: INFO: Pod name pod-release: Found 0 pods out of 1
  Jun 22 12:49:43.920: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/22/24 12:49:43.931
  Jun 22 12:49:44.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7008" for this suite. @ 06/22/24 12:49:44.945
• [6.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 06/22/24 12:49:44.954
  Jun 22 12:49:44.954: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename events @ 06/22/24 12:49:44.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:49:44.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:49:44.974
  STEP: Create set of events @ 06/22/24 12:49:44.977
  Jun 22 12:49:44.982: INFO: created test-event-1
  Jun 22 12:49:44.986: INFO: created test-event-2
  Jun 22 12:49:44.990: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 06/22/24 12:49:44.99
  STEP: delete collection of events @ 06/22/24 12:49:44.993
  Jun 22 12:49:44.993: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/22/24 12:49:45.016
  Jun 22 12:49:45.016: INFO: requesting list of events to confirm quantity
  Jun 22 12:49:45.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7693" for this suite. @ 06/22/24 12:49:45.023
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 06/22/24 12:49:45.031
  Jun 22 12:49:45.031: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 12:49:45.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:49:45.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:49:45.051
  STEP: Creating projection with secret that has name projected-secret-test-e39e8f80-6e48-4b84-b38e-af7bd41963d6 @ 06/22/24 12:49:45.053
  STEP: Creating a pod to test consume secrets @ 06/22/24 12:49:45.058
  STEP: Saw pod success @ 06/22/24 12:49:49.083
  Jun 22 12:49:49.087: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-projected-secrets-071883c4-e627-48f0-a402-8b8806593d3f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/22/24 12:49:49.094
  Jun 22 12:49:49.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7294" for this suite. @ 06/22/24 12:49:49.117
• [4.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 06/22/24 12:49:49.123
  Jun 22 12:49:49.123: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename deployment @ 06/22/24 12:49:49.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:49:49.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:49:49.148
  STEP: creating a Deployment @ 06/22/24 12:49:49.154
  STEP: waiting for Deployment to be created @ 06/22/24 12:49:49.16
  STEP: waiting for all Replicas to be Ready @ 06/22/24 12:49:49.161
  Jun 22 12:49:49.164: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 22 12:49:49.164: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 22 12:49:49.174: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 22 12:49:49.174: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 22 12:49:49.192: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 22 12:49:49.192: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 22 12:49:49.213: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 22 12:49:49.213: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 22 12:49:50.635: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun 22 12:49:50.635: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun 22 12:49:50.654: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 06/22/24 12:49:50.654
  Jun 22 12:49:50.665: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 06/22/24 12:49:50.665
  Jun 22 12:49:50.667: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 0
  Jun 22 12:49:50.667: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 0
  Jun 22 12:49:50.667: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 0
  Jun 22 12:49:50.667: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 0
  Jun 22 12:49:50.667: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 0
  Jun 22 12:49:50.667: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 0
  Jun 22 12:49:50.667: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 0
  Jun 22 12:49:50.667: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 0
  Jun 22 12:49:50.667: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1
  Jun 22 12:49:50.667: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1
  Jun 22 12:49:50.667: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2
  Jun 22 12:49:50.667: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2
  Jun 22 12:49:50.667: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2
  Jun 22 12:49:50.667: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2
  Jun 22 12:49:50.678: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2
  Jun 22 12:49:50.678: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2
  Jun 22 12:49:50.695: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2
  Jun 22 12:49:50.695: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2
  Jun 22 12:49:50.708: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1
  Jun 22 12:49:50.708: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1
  Jun 22 12:49:50.720: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1
  Jun 22 12:49:50.720: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1
  Jun 22 12:49:51.655: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2
  Jun 22 12:49:51.655: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2
  Jun 22 12:49:51.681: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1
  STEP: listing Deployments @ 06/22/24 12:49:51.681
  Jun 22 12:49:51.685: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 06/22/24 12:49:51.685
  Jun 22 12:49:51.696: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 06/22/24 12:49:51.696
  Jun 22 12:49:51.704: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 22 12:49:51.709: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 22 12:49:51.729: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 22 12:49:51.746: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 22 12:49:51.759: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 22 12:49:52.687: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 22 12:49:52.711: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 22 12:49:52.754: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 22 12:49:52.772: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 22 12:49:53.667: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 06/22/24 12:49:53.699
  STEP: fetching the DeploymentStatus @ 06/22/24 12:49:53.707
  Jun 22 12:49:53.712: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1
  Jun 22 12:49:53.712: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1
  Jun 22 12:49:53.712: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1
  Jun 22 12:49:53.712: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1
  Jun 22 12:49:53.712: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 1
  Jun 22 12:49:53.712: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2
  Jun 22 12:49:53.712: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 3
  Jun 22 12:49:53.712: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2
  Jun 22 12:49:53.712: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 2
  Jun 22 12:49:53.713: INFO: observed Deployment test-deployment in namespace deployment-1052 with ReadyReplicas 3
  STEP: deleting the Deployment @ 06/22/24 12:49:53.713
  Jun 22 12:49:53.723: INFO: observed event type MODIFIED
  Jun 22 12:49:53.723: INFO: observed event type MODIFIED
  Jun 22 12:49:53.723: INFO: observed event type MODIFIED
  Jun 22 12:49:53.723: INFO: observed event type MODIFIED
  Jun 22 12:49:53.724: INFO: observed event type MODIFIED
  Jun 22 12:49:53.724: INFO: observed event type MODIFIED
  Jun 22 12:49:53.724: INFO: observed event type MODIFIED
  Jun 22 12:49:53.724: INFO: observed event type MODIFIED
  Jun 22 12:49:53.724: INFO: observed event type MODIFIED
  Jun 22 12:49:53.724: INFO: observed event type MODIFIED
  Jun 22 12:49:53.724: INFO: observed event type MODIFIED
  Jun 22 12:49:53.724: INFO: observed event type MODIFIED
  Jun 22 12:49:53.724: INFO: observed event type MODIFIED
  Jun 22 12:49:53.728: INFO: Log out all the ReplicaSets if there is no deployment created
  Jun 22 12:49:53.732: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1052",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8942543b-95e9-40e5-8c59-d6654c4b08ef",
      ResourceVersion: (string) (len=5) "13630",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854657390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "3c64303c-6670-4529-9efb-f8c595caec41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 63 36 34  33 30 33 63 2d 36 36 37  |":\"3c64303c-667|
              00000130  30 2d 34 35 32 39 2d 39  65 66 62 2d 66 38 63 35  |0-4529-9efb-f8c5|
              00000140  39 35 63 61 65 63 34 31  5c 22 7d 22 3a 7b 7d 7d  |95caec41\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun 22 12:49:53.738: INFO: pod: "test-deployment-64fd565c98-f8dhg":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-f8dhg",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-1052",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79de53f1-ed05-453c-834e-0bea604fbf01",
      ResourceVersion: (string) (len=5) "13626",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854657391,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854657395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "8942543b-95e9-40e5-8c59-d6654c4b08ef",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657391,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 39 34 32 35 34 33 62  |uid\":\"8942543b|
              000000a0  2d 39 35 65 39 2d 34 30  65 35 2d 38 63 35 39 2d  |-95e9-40e5-8c59-|
              000000b0  64 36 36 35 34 63 34 62  30 38 65 66 5c 22 7d 22  |d6654c4b08ef\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  31 2e 31 35 32 5c 22 7d  |2.168.251.152\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zvbfn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zvbfn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657391,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657391,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.85.228"
        }
      },
      PodIP: (string) (len=15) "192.168.251.152",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.251.152"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854657391,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854657392,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://d6ec48ecd1cf66a8d6ef3bc386d52d7a0c43627cb8241d5d164ce055ebf66733",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun 22 12:49:53.741: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1052",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c02183af-b06a-4bb0-b9b9-f63c22fdc684",
      ResourceVersion: (string) (len=5) "13622",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854657391,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "3c64303c-6670-4529-9efb-f8c595caec41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 63 36 34  33 30 33 63 2d 36 36 37  |":\"3c64303c-667|
              00000130  30 2d 34 35 32 39 2d 39  65 66 62 2d 66 38 63 35  |0-4529-9efb-f8c5|
              00000140  39 35 63 61 65 63 34 31  5c 22 7d 22 3a 7b 7d 7d  |95caec41\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun 22 12:49:53.746: INFO: pod: "test-deployment-79ff746c4-dbc98":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-dbc98",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-1052",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "60e3ab54-7ee8-427d-bb8b-98aa95db357c",
      ResourceVersion: (string) (len=5) "13621",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854657392,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "c02183af-b06a-4bb0-b9b9-f63c22fdc684",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 30 32 31 38 33 61 66  |uid\":\"c02183af|
              000000a0  2d 62 30 36 61 2d 34 62  62 30 2d 62 39 62 39 2d  |-b06a-4bb0-b9b9-|
              000000b0  66 36 33 63 32 32 66 64  63 36 38 34 5c 22 7d 22  |f63c22fdc684\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  31 2e 31 35 33 5c 22 7d  |2.168.251.153\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wgr2z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wgr2z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657393,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.85.228"
        }
      },
      PodIP: (string) (len=15) "192.168.251.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.251.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854657392,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854657393,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://80428641452f1623300290cd954fe9c25bf87033c48b7a0b8ba6d0ee3d1d696f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun 22 12:49:53.750: INFO: pod: "test-deployment-79ff746c4-wcnvr":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-wcnvr",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-1052",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2830b54-0332-4f17-9031-ff1e06e6bc9b",
      ResourceVersion: (string) (len=5) "13580",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854657391,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "c02183af-b06a-4bb0-b9b9-f63c22fdc684",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657391,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 30 32 31 38 33 61 66  |uid\":\"c02183af|
              000000a0  2d 62 30 36 61 2d 34 62  62 30 2d 62 39 62 39 2d  |-b06a-4bb0-b9b9-|
              000000b0  66 36 33 63 32 32 66 64  63 36 38 34 5c 22 7d 22  |f63c22fdc684\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  2e 31 33 36 5c 22 7d 22  |2.168.20.136\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fxxzz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fxxzz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657391,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657391,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) (len=14) "192.168.20.136",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.20.136"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854657391,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854657392,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6bc7894ec0c9ec28b4917c9f6be177c2e0bc02cd348fa730d9c88fb379e97861",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun 22 12:49:53.751: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1052",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2648f80-19c3-41dc-aab0-f8473ad780e2",
      ResourceVersion: (string) (len=5) "13530",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854657389,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "3c64303c-6670-4529-9efb-f8c595caec41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657391,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 63 36 34  33 30 33 63 2d 36 36 37  |":\"3c64303c-667|
              00000130  30 2d 34 35 32 39 2d 39  65 66 62 2d 66 38 63 35  |0-4529-9efb-f8c5|
              00000140  39 35 63 61 65 63 34 31  5c 22 7d 22 3a 7b 7d 7d  |95caec41\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657391,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun 22 12:49:53.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1052" for this suite. @ 06/22/24 12:49:53.762
• [4.648 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 06/22/24 12:49:53.771
  Jun 22 12:49:53.771: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename secrets @ 06/22/24 12:49:53.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:49:53.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:49:53.795
  STEP: Creating secret with name secret-test-e5bb77f6-f0b7-49ed-b96f-b4c6704cbc43 @ 06/22/24 12:49:53.797
  STEP: Creating a pod to test consume secrets @ 06/22/24 12:49:53.802
  STEP: Saw pod success @ 06/22/24 12:49:55.82
  Jun 22 12:49:55.824: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-secrets-887e62fb-2032-422d-96b6-2cd140758475 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/22/24 12:49:55.833
  Jun 22 12:49:55.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5987" for this suite. @ 06/22/24 12:49:55.851
• [2.087 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 06/22/24 12:49:55.858
  Jun 22 12:49:55.858: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/22/24 12:49:55.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:49:55.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:49:55.882
  Jun 22 12:49:55.884: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 12:50:02.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1714" for this suite. @ 06/22/24 12:50:02.101
• [6.251 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 06/22/24 12:50:02.109
  Jun 22 12:50:02.109: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 12:50:02.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:50:02.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:50:02.132
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 12:50:02.135
  STEP: Saw pod success @ 06/22/24 12:50:06.159
  Jun 22 12:50:06.163: INFO: Trying to get logs from node ip-172-31-3-104 pod downwardapi-volume-b7f7dc10-dda8-4af9-abba-b4f0360f26ca container client-container: <nil>
  STEP: delete the pod @ 06/22/24 12:50:06.17
  Jun 22 12:50:06.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4210" for this suite. @ 06/22/24 12:50:06.193
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 06/22/24 12:50:06.2
  Jun 22 12:50:06.200: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 12:50:06.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:50:06.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:50:06.222
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-4072 @ 06/22/24 12:50:06.224
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/22/24 12:50:06.239
  STEP: creating service externalsvc in namespace services-4072 @ 06/22/24 12:50:06.239
  STEP: creating replication controller externalsvc in namespace services-4072 @ 06/22/24 12:50:06.252
  I0622 12:50:06.258554      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-4072, replica count: 2
  I0622 12:50:09.309563      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 06/22/24 12:50:09.314
  Jun 22 12:50:09.333: INFO: Creating new exec pod
  Jun 22 12:50:11.349: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4072 exec execpodb7jhk -- /bin/sh -x -c nslookup nodeport-service.services-4072.svc.cluster.local'
  Jun 22 12:50:11.470: INFO: stderr: "+ nslookup nodeport-service.services-4072.svc.cluster.local\n"
  Jun 22 12:50:11.470: INFO: stdout: "Server:\t\t10.152.183.224\nAddress:\t10.152.183.224#53\n\nnodeport-service.services-4072.svc.cluster.local\tcanonical name = externalsvc.services-4072.svc.cluster.local.\nName:\texternalsvc.services-4072.svc.cluster.local\nAddress: 10.152.183.237\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4072, will wait for the garbage collector to delete the pods @ 06/22/24 12:50:11.47
  Jun 22 12:50:11.532: INFO: Deleting ReplicationController externalsvc took: 7.045672ms
  Jun 22 12:50:11.632: INFO: Terminating ReplicationController externalsvc pods took: 100.424318ms
  Jun 22 12:50:14.752: INFO: Cleaning up the NodePort to ExternalName test service
  Jun 22 12:50:14.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4072" for this suite. @ 06/22/24 12:50:14.771
• [8.579 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 06/22/24 12:50:14.78
  Jun 22 12:50:14.780: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/22/24 12:50:14.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:50:14.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:50:14.799
  STEP: set up a multi version CRD @ 06/22/24 12:50:14.801
  Jun 22 12:50:14.802: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: rename a version @ 06/22/24 12:50:17.918
  STEP: check the new version name is served @ 06/22/24 12:50:17.937
  STEP: check the old version name is removed @ 06/22/24 12:50:18.741
  STEP: check the other version is not changed @ 06/22/24 12:50:19.339
  Jun 22 12:50:21.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3921" for this suite. @ 06/22/24 12:50:21.863
• [7.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 06/22/24 12:50:21.871
  Jun 22 12:50:21.871: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename deployment @ 06/22/24 12:50:21.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:50:21.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:50:21.89
  Jun 22 12:50:21.892: INFO: Creating simple deployment test-new-deployment
  Jun 22 12:50:21.906: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 06/22/24 12:50:23.922
  STEP: updating a scale subresource @ 06/22/24 12:50:23.926
  STEP: verifying the deployment Spec.Replicas was modified @ 06/22/24 12:50:23.967
  STEP: Patch a scale subresource @ 06/22/24 12:50:23.975
  Jun 22 12:50:24.001: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6478",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe200873-8261-4655-8a87-73e752976565",
      ResourceVersion: (string) (len=5) "14089",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854657421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 22 12:50:24.008: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6478",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "081c850d-167b-4265-9c52-7241b7895c41",
      ResourceVersion: (string) (len=5) "14093",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854657421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "fe200873-8261-4655-8a87-73e752976565",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 65 32 30 30 38  37 33 2d 38 32 36 31 2d  |\"fe200873-8261-|
              00000120  34 36 35 35 2d 38 61 38  37 2d 37 33 65 37 35 32  |4655-8a87-73e752|
              00000130  39 37 36 35 36 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |976565\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 22 12:50:24.016: INFO: Pod "test-new-deployment-557759b7c7-4zwk5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-4zwk5",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6478",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3fec82ae-9ffc-4063-bc43-3f0de0a04cf3",
      ResourceVersion: (string) (len=5) "14077",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854657421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "081c850d-167b-4265-9c52-7241b7895c41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 38  31 63 38 35 30 64 2d 31  |d\":\"081c850d-1|
              00000090  36 37 62 2d 34 32 36 35  2d 39 63 35 32 2d 37 32  |67b-4265-9c52-72|
              000000a0  34 31 62 37 38 39 35 63  34 31 5c 22 7d 22 3a 7b  |41b7895c41\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  2e 31 34 31 5c 22 7d 22  |2.168.20.141\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kxnzx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kxnzx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) (len=14) "192.168.20.141",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.20.141"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854657421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854657422,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1395ff7903935fcf0ae9f387808657611e2bfd4a6d3ca93665bfe2dde0d7a7c6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 12:50:24.017: INFO: Pod "test-new-deployment-557759b7c7-mlpbh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-mlpbh",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6478",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8fa62ed1-0055-4c53-90d3-72e9b7e7bba0",
      ResourceVersion: (string) (len=5) "14096",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854657423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "081c850d-167b-4265-9c52-7241b7895c41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 38  31 63 38 35 30 64 2d 31  |d\":\"081c850d-1|
              00000090  36 37 62 2d 34 32 36 35  2d 39 63 35 32 2d 37 32  |67b-4265-9c52-72|
              000000a0  34 31 62 37 38 39 35 63  34 31 5c 22 7d 22 3a 7b  |41b7895c41\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m4b6h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m4b6h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854657423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.85.228"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854657423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 12:50:24.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6478" for this suite. @ 06/22/24 12:50:24.028
• [2.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 06/22/24 12:50:24.043
  Jun 22 12:50:24.043: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 12:50:24.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:50:24.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:50:24.099
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 12:50:24.102
  STEP: Saw pod success @ 06/22/24 12:50:28.128
  Jun 22 12:50:28.132: INFO: Trying to get logs from node ip-172-31-3-104 pod downwardapi-volume-f0edb703-70f7-40ce-8ead-95efda2b4089 container client-container: <nil>
  STEP: delete the pod @ 06/22/24 12:50:28.142
  Jun 22 12:50:28.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7217" for this suite. @ 06/22/24 12:50:28.163
• [4.128 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 06/22/24 12:50:28.171
  Jun 22 12:50:28.171: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename var-expansion @ 06/22/24 12:50:28.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:50:28.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:50:28.189
  STEP: Creating a pod to test substitution in container's command @ 06/22/24 12:50:28.192
  STEP: Saw pod success @ 06/22/24 12:50:32.219
  Jun 22 12:50:32.223: INFO: Trying to get logs from node ip-172-31-3-104 pod var-expansion-1a40e6b1-5359-44ae-b890-8d694c2e5f35 container dapi-container: <nil>
  STEP: delete the pod @ 06/22/24 12:50:32.229
  Jun 22 12:50:32.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-666" for this suite. @ 06/22/24 12:50:32.249
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 06/22/24 12:50:32.256
  Jun 22 12:50:32.256: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename disruption @ 06/22/24 12:50:32.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:50:32.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:50:32.275
  STEP: Waiting for the pdb to be processed @ 06/22/24 12:50:32.283
  STEP: Updating PodDisruptionBudget status @ 06/22/24 12:50:34.288
  STEP: Waiting for all pods to be running @ 06/22/24 12:50:34.298
  Jun 22 12:50:34.308: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 06/22/24 12:50:36.303
  STEP: Waiting for the pdb to be processed @ 06/22/24 12:50:36.32
  STEP: Patching PodDisruptionBudget status @ 06/22/24 12:50:36.328
  STEP: Waiting for the pdb to be processed @ 06/22/24 12:50:36.337
  Jun 22 12:50:36.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1405" for this suite. @ 06/22/24 12:50:36.344
• [4.097 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 06/22/24 12:50:36.353
  Jun 22 12:50:36.353: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename configmap @ 06/22/24 12:50:36.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:50:36.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:50:36.372
  STEP: Creating configMap that has name configmap-test-emptyKey-f3fca887-66cf-46e6-abb9-16f093c7d3cd @ 06/22/24 12:50:36.374
  Jun 22 12:50:36.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-115" for this suite. @ 06/22/24 12:50:36.381
• [0.035 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 06/22/24 12:50:36.388
  Jun 22 12:50:36.388: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubelet-test @ 06/22/24 12:50:36.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:50:36.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:50:36.409
  Jun 22 12:50:40.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6753" for this suite. @ 06/22/24 12:50:40.433
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 06/22/24 12:50:40.443
  Jun 22 12:50:40.443: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 12:50:40.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:50:40.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:50:40.461
  STEP: Setting up server cert @ 06/22/24 12:50:40.485
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 12:50:40.604
  STEP: Deploying the webhook pod @ 06/22/24 12:50:40.614
  STEP: Wait for the deployment to be ready @ 06/22/24 12:50:40.629
  Jun 22 12:50:40.640: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/22/24 12:50:42.653
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 12:50:42.672
  Jun 22 12:50:43.673: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 06/22/24 12:50:43.682
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/22/24 12:50:43.682
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 06/22/24 12:50:43.7
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 06/22/24 12:50:44.716
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/22/24 12:50:44.716
  STEP: Having no error when timeout is longer than webhook latency @ 06/22/24 12:50:45.749
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/22/24 12:50:45.749
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 06/22/24 12:50:50.785
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/22/24 12:50:50.785
  Jun 22 12:50:55.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1216" for this suite. @ 06/22/24 12:50:55.89
  STEP: Destroying namespace "webhook-markers-1266" for this suite. @ 06/22/24 12:50:55.898
• [15.463 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 06/22/24 12:50:55.905
  Jun 22 12:50:55.905: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/22/24 12:50:55.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:50:55.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:50:55.925
  STEP: creating @ 06/22/24 12:50:55.928
  STEP: getting @ 06/22/24 12:50:55.952
  STEP: listing in namespace @ 06/22/24 12:50:55.956
  STEP: patching @ 06/22/24 12:50:55.96
  STEP: deleting @ 06/22/24 12:50:55.968
  Jun 22 12:50:55.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6657" for this suite. @ 06/22/24 12:50:55.99
• [0.092 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 06/22/24 12:50:55.998
  Jun 22 12:50:55.998: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename conformance-tests @ 06/22/24 12:50:55.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:50:56.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:50:56.018
  STEP: Getting node addresses @ 06/22/24 12:50:56.021
  Jun 22 12:50:56.021: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Jun 22 12:50:56.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-4934" for this suite. @ 06/22/24 12:50:56.03
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 06/22/24 12:50:56.041
  Jun 22 12:50:56.041: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pod-network-test @ 06/22/24 12:50:56.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:50:56.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:50:56.062
  STEP: Performing setup for networking test in namespace pod-network-test-9149 @ 06/22/24 12:50:56.065
  STEP: creating a selector @ 06/22/24 12:50:56.065
  STEP: Creating the service pods in kubernetes @ 06/22/24 12:50:56.065
  Jun 22 12:50:56.065: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/22/24 12:51:08.164
  Jun 22 12:51:10.203: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 22 12:51:10.203: INFO: Going to poll 192.168.90.76 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 22 12:51:10.207: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.90.76 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9149 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 12:51:10.207: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 12:51:10.208: INFO: ExecWithOptions: Clientset creation
  Jun 22 12:51:10.208: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9149/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.90.76+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 22 12:51:11.260: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun 22 12:51:11.260: INFO: Going to poll 192.168.20.146 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 22 12:51:11.265: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.20.146 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9149 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 12:51:11.265: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 12:51:11.265: INFO: ExecWithOptions: Clientset creation
  Jun 22 12:51:11.265: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9149/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.20.146+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 22 12:51:12.320: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun 22 12:51:12.320: INFO: Going to poll 192.168.251.156 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 22 12:51:12.324: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.251.156 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9149 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 12:51:12.324: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 12:51:12.325: INFO: ExecWithOptions: Clientset creation
  Jun 22 12:51:12.325: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9149/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.251.156+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 22 12:51:13.371: INFO: Found all 1 expected endpoints: [netserver-2]
  Jun 22 12:51:13.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9149" for this suite. @ 06/22/24 12:51:13.376
• [17.344 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 06/22/24 12:51:13.385
  Jun 22 12:51:13.385: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename statefulset @ 06/22/24 12:51:13.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:51:13.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:51:13.405
  STEP: Creating service test in namespace statefulset-270 @ 06/22/24 12:51:13.408
  Jun 22 12:51:13.438: INFO: Found 0 stateful pods, waiting for 1
  Jun 22 12:51:23.438: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 06/22/24 12:51:23.445
  W0622 12:51:23.455189      19 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Jun 22 12:51:23.466: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 22 12:51:23.466: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  Jun 22 12:51:33.466: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 22 12:51:33.466: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 06/22/24 12:51:33.473
  STEP: Delete all of the StatefulSets @ 06/22/24 12:51:33.477
  STEP: Verify that StatefulSets have been deleted @ 06/22/24 12:51:33.485
  Jun 22 12:51:33.497: INFO: Deleting all statefulset in ns statefulset-270
  Jun 22 12:51:33.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-270" for this suite. @ 06/22/24 12:51:33.522
• [20.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 06/22/24 12:51:33.531
  Jun 22 12:51:33.531: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename daemonsets @ 06/22/24 12:51:33.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:51:33.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:51:33.551
  Jun 22 12:51:33.576: INFO: Create a RollingUpdate DaemonSet
  Jun 22 12:51:33.581: INFO: Check that daemon pods launch on every node of the cluster
  Jun 22 12:51:33.589: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:33.589: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:33.592: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 12:51:33.592: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  Jun 22 12:51:34.586: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:34.587: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:34.591: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 12:51:34.591: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  Jun 22 12:51:35.586: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:35.586: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:35.590: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 22 12:51:35.590: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  Jun 22 12:51:36.588: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:36.588: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:36.591: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 22 12:51:36.591: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  Jun 22 12:51:37.587: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:37.587: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:37.591: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 22 12:51:37.591: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  Jun 22 12:51:38.587: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:38.587: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:38.592: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 22 12:51:38.592: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Jun 22 12:51:38.592: INFO: Update the DaemonSet to trigger a rollout
  Jun 22 12:51:38.602: INFO: Updating DaemonSet daemon-set
  Jun 22 12:51:42.616: INFO: Roll back the DaemonSet before rollout is complete
  Jun 22 12:51:42.626: INFO: Updating DaemonSet daemon-set
  Jun 22 12:51:42.626: INFO: Make sure DaemonSet rollback is complete
  Jun 22 12:51:42.629: INFO: Wrong image for pod: daemon-set-wqhcf. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Jun 22 12:51:42.629: INFO: Pod daemon-set-wqhcf is not available
  Jun 22 12:51:42.633: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:42.633: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:43.635: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:43.636: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:44.632: INFO: Pod daemon-set-s9wjg is not available
  Jun 22 12:51:44.636: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 12:51:44.636: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 06/22/24 12:51:44.644
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4165, will wait for the garbage collector to delete the pods @ 06/22/24 12:51:44.644
  Jun 22 12:51:44.707: INFO: Deleting DaemonSet.extensions daemon-set took: 7.968581ms
  Jun 22 12:51:44.807: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.281772ms
  Jun 22 12:51:46.012: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 12:51:46.012: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 22 12:51:46.016: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14988"},"items":null}

  Jun 22 12:51:46.020: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14988"},"items":null}

  Jun 22 12:51:46.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4165" for this suite. @ 06/22/24 12:51:46.039
• [12.515 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 06/22/24 12:51:46.046
  Jun 22 12:51:46.046: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename secrets @ 06/22/24 12:51:46.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:51:46.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:51:46.066
  STEP: Creating secret with name secret-test-e6280f62-a5dd-404f-9e8c-d4760b2ac0f7 @ 06/22/24 12:51:46.09
  STEP: Creating a pod to test consume secrets @ 06/22/24 12:51:46.095
  STEP: Saw pod success @ 06/22/24 12:51:48.115
  Jun 22 12:51:48.119: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-secrets-80e780f9-bb32-40db-bc8b-d94d27d1a60a container secret-volume-test: <nil>
  STEP: delete the pod @ 06/22/24 12:51:48.126
  Jun 22 12:51:48.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-888" for this suite. @ 06/22/24 12:51:48.146
  STEP: Destroying namespace "secret-namespace-212" for this suite. @ 06/22/24 12:51:48.154
• [2.114 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 06/22/24 12:51:48.161
  Jun 22 12:51:48.161: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir @ 06/22/24 12:51:48.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:51:48.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:51:48.182
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/22/24 12:51:48.185
  STEP: Saw pod success @ 06/22/24 12:51:50.206
  Jun 22 12:51:50.210: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-719fc3d6-857c-4b99-aa0b-2a93911e04f9 container test-container: <nil>
  STEP: delete the pod @ 06/22/24 12:51:50.221
  Jun 22 12:51:50.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-817" for this suite. @ 06/22/24 12:51:50.243
• [2.090 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 06/22/24 12:51:50.252
  Jun 22 12:51:50.252: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename events @ 06/22/24 12:51:50.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:51:50.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:51:50.27
  STEP: creating a test event @ 06/22/24 12:51:50.272
  STEP: listing all events in all namespaces @ 06/22/24 12:51:50.277
  STEP: patching the test event @ 06/22/24 12:51:50.291
  STEP: fetching the test event @ 06/22/24 12:51:50.299
  STEP: updating the test event @ 06/22/24 12:51:50.302
  STEP: getting the test event @ 06/22/24 12:51:50.313
  STEP: deleting the test event @ 06/22/24 12:51:50.318
  STEP: listing all events in all namespaces @ 06/22/24 12:51:50.326
  Jun 22 12:51:50.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7811" for this suite. @ 06/22/24 12:51:50.343
• [0.099 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 06/22/24 12:51:50.352
  Jun 22 12:51:50.352: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 12:51:50.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:51:50.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:51:50.369
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-9046 @ 06/22/24 12:51:50.371
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/22/24 12:51:50.387
  STEP: creating service externalsvc in namespace services-9046 @ 06/22/24 12:51:50.388
  STEP: creating replication controller externalsvc in namespace services-9046 @ 06/22/24 12:51:50.403
  I0622 12:51:50.410993      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-9046, replica count: 2
  I0622 12:51:53.463078      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 06/22/24 12:51:53.467
  Jun 22 12:51:53.483: INFO: Creating new exec pod
  Jun 22 12:51:55.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-9046 exec execpod55c29 -- /bin/sh -x -c nslookup clusterip-service.services-9046.svc.cluster.local'
  Jun 22 12:51:55.602: INFO: stderr: "+ nslookup clusterip-service.services-9046.svc.cluster.local\n"
  Jun 22 12:51:55.602: INFO: stdout: "Server:\t\t10.152.183.224\nAddress:\t10.152.183.224#53\n\nclusterip-service.services-9046.svc.cluster.local\tcanonical name = externalsvc.services-9046.svc.cluster.local.\nName:\texternalsvc.services-9046.svc.cluster.local\nAddress: 10.152.183.101\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9046, will wait for the garbage collector to delete the pods @ 06/22/24 12:51:55.603
  Jun 22 12:51:55.667: INFO: Deleting ReplicationController externalsvc took: 9.17031ms
  Jun 22 12:51:55.768: INFO: Terminating ReplicationController externalsvc pods took: 100.91317ms
  Jun 22 12:51:58.992: INFO: Cleaning up the ClusterIP to ExternalName test service
  Jun 22 12:51:59.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9046" for this suite. @ 06/22/24 12:51:59.01
• [8.667 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 06/22/24 12:51:59.018
  Jun 22 12:51:59.018: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 12:51:59.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:51:59.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:51:59.038
  STEP: fetching services @ 06/22/24 12:51:59.041
  Jun 22 12:51:59.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5678" for this suite. @ 06/22/24 12:51:59.049
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 06/22/24 12:51:59.056
  Jun 22 12:51:59.056: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename cronjob @ 06/22/24 12:51:59.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:51:59.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:51:59.074
  STEP: Creating a ReplaceConcurrent cronjob @ 06/22/24 12:51:59.077
  STEP: Ensuring a job is scheduled @ 06/22/24 12:51:59.083
  STEP: Ensuring exactly one is scheduled @ 06/22/24 12:52:01.088
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/22/24 12:52:01.091
  STEP: Ensuring the job is replaced with a new one @ 06/22/24 12:52:01.094
  STEP: Removing cronjob @ 06/22/24 12:53:01.1
  Jun 22 12:53:01.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1271" for this suite. @ 06/22/24 12:53:01.111
• [62.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 06/22/24 12:53:01.122
  Jun 22 12:53:01.122: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename field-validation @ 06/22/24 12:53:01.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:53:01.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:53:01.146
  Jun 22 12:53:01.149: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  W0622 12:53:03.688248      19 warnings.go:70] unknown field "alpha"
  W0622 12:53:03.688267      19 warnings.go:70] unknown field "beta"
  W0622 12:53:03.688270      19 warnings.go:70] unknown field "delta"
  W0622 12:53:03.688273      19 warnings.go:70] unknown field "epsilon"
  W0622 12:53:03.688276      19 warnings.go:70] unknown field "gamma"
  Jun 22 12:53:04.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3144" for this suite. @ 06/22/24 12:53:04.256
• [3.143 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 06/22/24 12:53:04.265
  Jun 22 12:53:04.265: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir @ 06/22/24 12:53:04.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:53:04.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:53:04.284
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/22/24 12:53:04.286
  STEP: Saw pod success @ 06/22/24 12:53:06.311
  Jun 22 12:53:06.315: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-7772fae9-8633-4fd1-871e-333f184d3396 container test-container: <nil>
  STEP: delete the pod @ 06/22/24 12:53:06.323
  Jun 22 12:53:06.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4581" for this suite. @ 06/22/24 12:53:06.346
• [2.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 06/22/24 12:53:06.354
  Jun 22 12:53:06.354: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pod-network-test @ 06/22/24 12:53:06.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:53:06.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:53:06.375
  STEP: Performing setup for networking test in namespace pod-network-test-8571 @ 06/22/24 12:53:06.377
  STEP: creating a selector @ 06/22/24 12:53:06.377
  STEP: Creating the service pods in kubernetes @ 06/22/24 12:53:06.377
  Jun 22 12:53:06.377: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/22/24 12:53:18.47
  Jun 22 12:53:20.491: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 22 12:53:20.491: INFO: Breadth first check of 192.168.90.80 on host 172.31.25.91...
  Jun 22 12:53:20.495: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.20.158:9080/dial?request=hostname&protocol=http&host=192.168.90.80&port=8083&tries=1'] Namespace:pod-network-test-8571 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 12:53:20.495: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 12:53:20.495: INFO: ExecWithOptions: Clientset creation
  Jun 22 12:53:20.495: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8571/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.20.158%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.90.80%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 22 12:53:20.546: INFO: Waiting for responses: map[]
  Jun 22 12:53:20.546: INFO: reached 192.168.90.80 after 0/1 tries
  Jun 22 12:53:20.546: INFO: Breadth first check of 192.168.20.156 on host 172.31.3.104...
  Jun 22 12:53:20.550: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.20.158:9080/dial?request=hostname&protocol=http&host=192.168.20.156&port=8083&tries=1'] Namespace:pod-network-test-8571 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 12:53:20.550: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 12:53:20.551: INFO: ExecWithOptions: Clientset creation
  Jun 22 12:53:20.551: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8571/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.20.158%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.20.156%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 22 12:53:20.601: INFO: Waiting for responses: map[]
  Jun 22 12:53:20.601: INFO: reached 192.168.20.156 after 0/1 tries
  Jun 22 12:53:20.601: INFO: Breadth first check of 192.168.251.161 on host 172.31.85.228...
  Jun 22 12:53:20.606: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.20.158:9080/dial?request=hostname&protocol=http&host=192.168.251.161&port=8083&tries=1'] Namespace:pod-network-test-8571 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 12:53:20.606: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 12:53:20.606: INFO: ExecWithOptions: Clientset creation
  Jun 22 12:53:20.606: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8571/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.20.158%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.251.161%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 22 12:53:20.654: INFO: Waiting for responses: map[]
  Jun 22 12:53:20.654: INFO: reached 192.168.251.161 after 0/1 tries
  Jun 22 12:53:20.654: INFO: Going to retry 0 out of 3 pods....
  Jun 22 12:53:20.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8571" for this suite. @ 06/22/24 12:53:20.658
• [14.313 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 06/22/24 12:53:20.667
  Jun 22 12:53:20.667: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-probe @ 06/22/24 12:53:20.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:53:20.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:53:20.684
  STEP: Creating pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378 @ 06/22/24 12:53:20.687
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/22/24 12:53:22.709
  Jun 22 12:53:22.713: INFO: Initial restart count of pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 is 0
  Jun 22 12:53:22.717: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:24.722: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:26.728: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:28.733: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:30.739: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:32.743: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:34.748: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:36.754: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:38.760: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:40.765: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:42.771: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:44.777: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:46.783: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:48.788: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:50.792: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:52.797: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:54.803: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:56.808: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:53:58.814: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:00.818: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:02.823: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:04.829: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:06.833: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:08.839: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:10.844: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:12.848: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:14.854: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:16.858: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:18.864: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:20.870: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:22.875: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:24.880: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:26.885: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:28.891: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:30.896: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:32.901: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:34.906: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:36.911: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:38.916: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:40.922: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:42.927: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:44.933: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:46.937: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:48.944: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:50.949: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:52.954: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:54.960: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:56.964: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:54:58.970: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:00.975: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:02.980: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:04.985: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:06.991: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:08.996: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:11.001: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:13.006: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:15.012: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:17.017: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:19.022: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:21.027: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:23.033: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:25.038: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:27.044: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:29.049: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:31.055: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:33.060: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:35.067: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:37.073: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:39.077: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:41.083: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:43.088: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:45.093: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:47.099: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:49.105: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:51.111: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:53.115: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:55.121: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:57.127: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:55:59.132: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:01.137: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:03.143: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:05.148: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:07.153: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:09.159: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:11.165: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:13.171: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:15.176: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:17.181: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:19.187: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:21.192: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:23.198: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:25.206: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:27.211: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:29.216: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:31.222: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:33.227: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:35.233: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:37.238: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:39.244: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:41.249: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:43.255: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:45.260: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:47.266: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:49.272: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:51.277: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:53.282: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:55.286: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:57.291: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:56:59.296: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:57:01.302: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:57:03.306: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:57:05.311: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:57:07.317: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:57:09.322: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:57:11.328: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:57:13.334: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:57:15.340: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:57:17.345: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:57:19.350: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  Jun 22 12:57:21.356: INFO: Get pod liveness-01e31464-20f9-4fba-ae87-c5b8ff5c4246 in namespace container-probe-1378
  STEP: deleting the pod @ 06/22/24 12:57:23.356
  Jun 22 12:57:23.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1378" for this suite. @ 06/22/24 12:57:23.379
• [242.720 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 06/22/24 12:57:23.387
  Jun 22 12:57:23.387: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename dns @ 06/22/24 12:57:23.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:57:23.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:57:23.41
  STEP: Creating a test headless service @ 06/22/24 12:57:23.413
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4426 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4426;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4426 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4426;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4426.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4426.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4426.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4426.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4426.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4426.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4426.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4426.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4426.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4426.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4426.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4426.svc;check="$$(dig +notcp +noall +answer +search 191.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.191_udp@PTR;check="$$(dig +tcp +noall +answer +search 191.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.191_tcp@PTR;sleep 1; done
   @ 06/22/24 12:57:23.432
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4426 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4426;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4426 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4426;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4426.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4426.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4426.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4426.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4426.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4426.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4426.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4426.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4426.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4426.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4426.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4426.svc;check="$$(dig +notcp +noall +answer +search 191.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.191_udp@PTR;check="$$(dig +tcp +noall +answer +search 191.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.191_tcp@PTR;sleep 1; done
   @ 06/22/24 12:57:23.432
  STEP: creating a pod to probe DNS @ 06/22/24 12:57:23.432
  STEP: submitting the pod to kubernetes @ 06/22/24 12:57:23.432
  STEP: retrieving the pod @ 06/22/24 12:57:25.462
  STEP: looking for the results for each expected name from probers @ 06/22/24 12:57:25.465
  Jun 22 12:57:25.470: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08: the server could not find the requested resource (get pods dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08)
  Jun 22 12:57:25.474: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08: the server could not find the requested resource (get pods dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08)
  Jun 22 12:57:25.479: INFO: Unable to read wheezy_udp@dns-test-service.dns-4426 from pod dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08: the server could not find the requested resource (get pods dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08)
  Jun 22 12:57:25.482: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4426 from pod dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08: the server could not find the requested resource (get pods dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08)
  Jun 22 12:57:25.486: INFO: Unable to read wheezy_udp@dns-test-service.dns-4426.svc from pod dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08: the server could not find the requested resource (get pods dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08)
  Jun 22 12:57:25.490: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4426.svc from pod dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08: the server could not find the requested resource (get pods dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08)
  Jun 22 12:57:25.494: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4426.svc from pod dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08: the server could not find the requested resource (get pods dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08)
  Jun 22 12:57:25.498: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4426.svc from pod dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08: the server could not find the requested resource (get pods dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08)
  Jun 22 12:57:25.516: INFO: Unable to read jessie_udp@dns-test-service from pod dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08: the server could not find the requested resource (get pods dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08)
  Jun 22 12:57:25.521: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08: the server could not find the requested resource (get pods dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08)
  Jun 22 12:57:25.524: INFO: Unable to read jessie_udp@dns-test-service.dns-4426 from pod dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08: the server could not find the requested resource (get pods dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08)
  Jun 22 12:57:25.528: INFO: Unable to read jessie_tcp@dns-test-service.dns-4426 from pod dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08: the server could not find the requested resource (get pods dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08)
  Jun 22 12:57:25.532: INFO: Unable to read jessie_udp@dns-test-service.dns-4426.svc from pod dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08: the server could not find the requested resource (get pods dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08)
  Jun 22 12:57:25.537: INFO: Unable to read jessie_tcp@dns-test-service.dns-4426.svc from pod dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08: the server could not find the requested resource (get pods dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08)
  Jun 22 12:57:25.541: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4426.svc from pod dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08: the server could not find the requested resource (get pods dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08)
  Jun 22 12:57:25.545: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4426.svc from pod dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08: the server could not find the requested resource (get pods dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08)
  Jun 22 12:57:25.560: INFO: Lookups using dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4426 wheezy_tcp@dns-test-service.dns-4426 wheezy_udp@dns-test-service.dns-4426.svc wheezy_tcp@dns-test-service.dns-4426.svc wheezy_udp@_http._tcp.dns-test-service.dns-4426.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4426.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4426 jessie_tcp@dns-test-service.dns-4426 jessie_udp@dns-test-service.dns-4426.svc jessie_tcp@dns-test-service.dns-4426.svc jessie_udp@_http._tcp.dns-test-service.dns-4426.svc jessie_tcp@_http._tcp.dns-test-service.dns-4426.svc]

  Jun 22 12:57:25.577: INFO: Pod client logs for webserver: 
  Jun 22 12:57:25.585: INFO: Pod client logs for querier: 
  Jun 22 12:57:25.592: INFO: Pod client logs for jessie-querier: 
  Jun 22 12:57:30.561: INFO: DNS probes using dns-4426/dns-test-6a136f31-c442-4a04-aa3a-1d2eab862e08 succeeded

  STEP: deleting the pod @ 06/22/24 12:57:30.561
  STEP: deleting the test service @ 06/22/24 12:57:30.576
  STEP: deleting the test headless service @ 06/22/24 12:57:30.609
  Jun 22 12:57:30.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4426" for this suite. @ 06/22/24 12:57:30.632
• [7.252 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 06/22/24 12:57:30.639
  Jun 22 12:57:30.639: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename field-validation @ 06/22/24 12:57:30.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:57:30.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:57:30.66
  Jun 22 12:57:30.663: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  W0622 12:57:33.206218      19 warnings.go:70] unknown field "alpha"
  W0622 12:57:33.206239      19 warnings.go:70] unknown field "beta"
  W0622 12:57:33.206242      19 warnings.go:70] unknown field "delta"
  W0622 12:57:33.206245      19 warnings.go:70] unknown field "epsilon"
  W0622 12:57:33.206248      19 warnings.go:70] unknown field "gamma"
  Jun 22 12:57:33.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-268" for this suite. @ 06/22/24 12:57:33.763
• [3.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 06/22/24 12:57:33.774
  Jun 22 12:57:33.774: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename subpath @ 06/22/24 12:57:33.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:57:33.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:57:33.793
  STEP: Setting up data @ 06/22/24 12:57:33.796
  STEP: Creating pod pod-subpath-test-secret-b8xk @ 06/22/24 12:57:33.806
  STEP: Creating a pod to test atomic-volume-subpath @ 06/22/24 12:57:33.806
  STEP: Saw pod success @ 06/22/24 12:57:57.888
  Jun 22 12:57:57.893: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-subpath-test-secret-b8xk container test-container-subpath-secret-b8xk: <nil>
  STEP: delete the pod @ 06/22/24 12:57:57.899
  STEP: Deleting pod pod-subpath-test-secret-b8xk @ 06/22/24 12:57:57.915
  Jun 22 12:57:57.915: INFO: Deleting pod "pod-subpath-test-secret-b8xk" in namespace "subpath-3230"
  Jun 22 12:57:57.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3230" for this suite. @ 06/22/24 12:57:57.923
• [24.157 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 06/22/24 12:57:57.931
  Jun 22 12:57:57.931: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename configmap @ 06/22/24 12:57:57.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:57:57.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:57:57.951
  STEP: Creating configMap with name configmap-test-volume-227f1a72-a057-43f4-803a-e9ed68175cf8 @ 06/22/24 12:57:57.954
  STEP: Creating a pod to test consume configMaps @ 06/22/24 12:57:57.959
  STEP: Saw pod success @ 06/22/24 12:58:01.99
  Jun 22 12:58:01.995: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-configmaps-045760bc-6007-4306-81ce-9504234f4569 container agnhost-container: <nil>
  STEP: delete the pod @ 06/22/24 12:58:02.001
  Jun 22 12:58:02.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8707" for this suite. @ 06/22/24 12:58:02.022
• [4.097 seconds]
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 06/22/24 12:58:02.029
  Jun 22 12:58:02.029: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename var-expansion @ 06/22/24 12:58:02.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:58:02.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:58:02.051
  STEP: Creating a pod to test env composition @ 06/22/24 12:58:02.053
  STEP: Saw pod success @ 06/22/24 12:58:06.083
  Jun 22 12:58:06.087: INFO: Trying to get logs from node ip-172-31-3-104 pod var-expansion-adf3a9e9-a401-46ac-a247-948450ef4110 container dapi-container: <nil>
  STEP: delete the pod @ 06/22/24 12:58:06.094
  Jun 22 12:58:06.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3747" for this suite. @ 06/22/24 12:58:06.118
• [4.098 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 06/22/24 12:58:06.126
  Jun 22 12:58:06.126: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename namespaces @ 06/22/24 12:58:06.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:58:06.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:58:06.145
  STEP: creating a Namespace @ 06/22/24 12:58:06.149
  STEP: patching the Namespace @ 06/22/24 12:58:06.164
  STEP: get the Namespace and ensuring it has the label @ 06/22/24 12:58:06.17
  Jun 22 12:58:06.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1424" for this suite. @ 06/22/24 12:58:06.18
  STEP: Destroying namespace "nspatchtest-1f55daa6-25d0-4099-8bf2-41ce7c51c4e4-6146" for this suite. @ 06/22/24 12:58:06.188
• [0.071 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 06/22/24 12:58:06.198
  Jun 22 12:58:06.198: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename init-container @ 06/22/24 12:58:06.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:58:06.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:58:06.216
  STEP: creating the pod @ 06/22/24 12:58:06.221
  Jun 22 12:58:06.221: INFO: PodSpec: initContainers in spec.initContainers
  Jun 22 12:58:09.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5063" for this suite. @ 06/22/24 12:58:09.665
• [3.475 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 06/22/24 12:58:09.673
  Jun 22 12:58:09.673: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-probe @ 06/22/24 12:58:09.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:58:09.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:58:09.693
  Jun 22 12:58:31.773: INFO: Container started at 2024-06-22 12:58:10 +0000 UTC, pod became ready at 2024-06-22 12:58:30 +0000 UTC
  Jun 22 12:58:31.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4396" for this suite. @ 06/22/24 12:58:31.778
• [22.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 06/22/24 12:58:31.786
  Jun 22 12:58:31.786: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pods @ 06/22/24 12:58:31.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:58:31.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:58:31.806
  STEP: Create set of pods @ 06/22/24 12:58:31.809
  Jun 22 12:58:31.818: INFO: created test-pod-1
  Jun 22 12:58:31.826: INFO: created test-pod-2
  Jun 22 12:58:31.838: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 06/22/24 12:58:31.838
  STEP: waiting for all pods to be deleted @ 06/22/24 12:58:33.891
  Jun 22 12:58:33.896: INFO: Pod quantity 3 is different from expected quantity 0
  Jun 22 12:58:34.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6240" for this suite. @ 06/22/24 12:58:34.902
• [3.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 06/22/24 12:58:34.912
  Jun 22 12:58:34.912: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 12:58:34.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:58:34.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:58:34.931
  STEP: Setting up server cert @ 06/22/24 12:58:34.954
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 12:58:35.168
  STEP: Deploying the webhook pod @ 06/22/24 12:58:35.179
  STEP: Wait for the deployment to be ready @ 06/22/24 12:58:35.193
  Jun 22 12:58:35.203: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/22/24 12:58:37.218
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 12:58:37.231
  Jun 22 12:58:38.232: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 06/22/24 12:58:38.242
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 06/22/24 12:58:38.26
  STEP: Creating a configMap that should not be mutated @ 06/22/24 12:58:38.268
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 06/22/24 12:58:38.281
  STEP: Creating a configMap that should be mutated @ 06/22/24 12:58:38.288
  Jun 22 12:58:38.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-817" for this suite. @ 06/22/24 12:58:38.364
  STEP: Destroying namespace "webhook-markers-888" for this suite. @ 06/22/24 12:58:38.373
• [3.469 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 06/22/24 12:58:38.382
  Jun 22 12:58:38.382: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 12:58:38.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:58:38.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:58:38.404
  STEP: creating an Endpoint @ 06/22/24 12:58:38.41
  STEP: waiting for available Endpoint @ 06/22/24 12:58:38.415
  STEP: listing all Endpoints @ 06/22/24 12:58:38.416
  STEP: updating the Endpoint @ 06/22/24 12:58:38.42
  STEP: fetching the Endpoint @ 06/22/24 12:58:38.427
  STEP: patching the Endpoint @ 06/22/24 12:58:38.43
  STEP: fetching the Endpoint @ 06/22/24 12:58:38.438
  STEP: deleting the Endpoint by Collection @ 06/22/24 12:58:38.441
  STEP: waiting for Endpoint deletion @ 06/22/24 12:58:38.451
  STEP: fetching the Endpoint @ 06/22/24 12:58:38.452
  Jun 22 12:58:38.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1332" for this suite. @ 06/22/24 12:58:38.459
• [0.087 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 06/22/24 12:58:38.469
  Jun 22 12:58:38.469: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 12:58:38.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:58:38.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:58:38.489
  STEP: creating service nodeport-test with type=NodePort in namespace services-3985 @ 06/22/24 12:58:38.491
  STEP: creating replication controller nodeport-test in namespace services-3985 @ 06/22/24 12:58:38.508
  I0622 12:58:38.514688      19 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-3985, replica count: 2
  I0622 12:58:41.566139      19 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 22 12:58:41.566: INFO: Creating new exec pod
  Jun 22 12:58:44.588: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3985 exec execpodbngn9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jun 22 12:58:44.690: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jun 22 12:58:44.691: INFO: stdout: "nodeport-test-4xgh9"
  Jun 22 12:58:44.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3985 exec execpodbngn9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.19 80'
  Jun 22 12:58:44.780: INFO: stderr: "+ nc -v -t -w 2 10.152.183.19 80\nConnection to 10.152.183.19 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun 22 12:58:44.780: INFO: stdout: ""
  Jun 22 12:58:45.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3985 exec execpodbngn9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.19 80'
  Jun 22 12:58:45.785: INFO: stderr: "+ nc -v -t -w 2 10.152.183.19 80\n+ echo hostName\nConnection to 10.152.183.19 80 port [tcp/http] succeeded!\n"
  Jun 22 12:58:45.785: INFO: stdout: "nodeport-test-4xgh9"
  Jun 22 12:58:45.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3985 exec execpodbngn9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.25.91 32442'
  Jun 22 12:58:45.878: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.25.91 32442\nConnection to 172.31.25.91 32442 port [tcp/*] succeeded!\n"
  Jun 22 12:58:45.878: INFO: stdout: "nodeport-test-4xgh9"
  Jun 22 12:58:45.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3985 exec execpodbngn9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.85.228 32442'
  Jun 22 12:58:45.974: INFO: stderr: "+ nc -v -t -w 2 172.31.85.228 32442\n+ echo hostName\nConnection to 172.31.85.228 32442 port [tcp/*] succeeded!\n"
  Jun 22 12:58:45.974: INFO: stdout: "nodeport-test-n6l42"
  Jun 22 12:58:45.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3985" for this suite. @ 06/22/24 12:58:45.98
• [7.519 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 06/22/24 12:58:45.988
  Jun 22 12:58:45.988: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename gc @ 06/22/24 12:58:45.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:58:46.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:58:46.01
  STEP: create the rc @ 06/22/24 12:58:46.017
  W0622 12:58:46.024280      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 06/22/24 12:58:50.036
  STEP: wait for the rc to be deleted @ 06/22/24 12:58:50.065
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 06/22/24 12:58:55.07
  STEP: Gathering metrics @ 06/22/24 12:59:25.08
  W0622 12:59:25.086456      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 22 12:59:25.086: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 22 12:59:25.087: INFO: Deleting pod "simpletest.rc-2lhrd" in namespace "gc-2557"
  Jun 22 12:59:25.103: INFO: Deleting pod "simpletest.rc-2ssnw" in namespace "gc-2557"
  Jun 22 12:59:25.116: INFO: Deleting pod "simpletest.rc-44xt5" in namespace "gc-2557"
  Jun 22 12:59:25.128: INFO: Deleting pod "simpletest.rc-4j69d" in namespace "gc-2557"
  Jun 22 12:59:25.141: INFO: Deleting pod "simpletest.rc-4q8lx" in namespace "gc-2557"
  Jun 22 12:59:25.165: INFO: Deleting pod "simpletest.rc-4vpzg" in namespace "gc-2557"
  Jun 22 12:59:25.177: INFO: Deleting pod "simpletest.rc-52vvr" in namespace "gc-2557"
  Jun 22 12:59:25.191: INFO: Deleting pod "simpletest.rc-567lb" in namespace "gc-2557"
  Jun 22 12:59:25.212: INFO: Deleting pod "simpletest.rc-5hphd" in namespace "gc-2557"
  Jun 22 12:59:25.227: INFO: Deleting pod "simpletest.rc-5m28k" in namespace "gc-2557"
  Jun 22 12:59:25.243: INFO: Deleting pod "simpletest.rc-5npbx" in namespace "gc-2557"
  Jun 22 12:59:25.349: INFO: Deleting pod "simpletest.rc-5pbcq" in namespace "gc-2557"
  Jun 22 12:59:25.366: INFO: Deleting pod "simpletest.rc-6spl2" in namespace "gc-2557"
  Jun 22 12:59:25.383: INFO: Deleting pod "simpletest.rc-6x6nx" in namespace "gc-2557"
  Jun 22 12:59:25.397: INFO: Deleting pod "simpletest.rc-6xjsc" in namespace "gc-2557"
  Jun 22 12:59:25.409: INFO: Deleting pod "simpletest.rc-72d5k" in namespace "gc-2557"
  Jun 22 12:59:25.423: INFO: Deleting pod "simpletest.rc-78d2r" in namespace "gc-2557"
  Jun 22 12:59:25.441: INFO: Deleting pod "simpletest.rc-78sgr" in namespace "gc-2557"
  Jun 22 12:59:25.454: INFO: Deleting pod "simpletest.rc-7bpzr" in namespace "gc-2557"
  Jun 22 12:59:25.473: INFO: Deleting pod "simpletest.rc-8gzfx" in namespace "gc-2557"
  Jun 22 12:59:25.490: INFO: Deleting pod "simpletest.rc-9vfcp" in namespace "gc-2557"
  Jun 22 12:59:25.513: INFO: Deleting pod "simpletest.rc-bbkgp" in namespace "gc-2557"
  Jun 22 12:59:25.530: INFO: Deleting pod "simpletest.rc-bcsb5" in namespace "gc-2557"
  Jun 22 12:59:25.548: INFO: Deleting pod "simpletest.rc-bfn7d" in namespace "gc-2557"
  Jun 22 12:59:25.561: INFO: Deleting pod "simpletest.rc-bgxms" in namespace "gc-2557"
  Jun 22 12:59:25.611: INFO: Deleting pod "simpletest.rc-bk759" in namespace "gc-2557"
  Jun 22 12:59:25.635: INFO: Deleting pod "simpletest.rc-bnqm2" in namespace "gc-2557"
  Jun 22 12:59:25.648: INFO: Deleting pod "simpletest.rc-bsbmq" in namespace "gc-2557"
  Jun 22 12:59:25.667: INFO: Deleting pod "simpletest.rc-bsvpq" in namespace "gc-2557"
  Jun 22 12:59:25.680: INFO: Deleting pod "simpletest.rc-c42l7" in namespace "gc-2557"
  Jun 22 12:59:25.699: INFO: Deleting pod "simpletest.rc-c4zmj" in namespace "gc-2557"
  Jun 22 12:59:25.714: INFO: Deleting pod "simpletest.rc-ccm2m" in namespace "gc-2557"
  Jun 22 12:59:25.733: INFO: Deleting pod "simpletest.rc-cjz5f" in namespace "gc-2557"
  Jun 22 12:59:25.745: INFO: Deleting pod "simpletest.rc-cn7zw" in namespace "gc-2557"
  Jun 22 12:59:25.761: INFO: Deleting pod "simpletest.rc-cr954" in namespace "gc-2557"
  Jun 22 12:59:25.777: INFO: Deleting pod "simpletest.rc-dkjm9" in namespace "gc-2557"
  Jun 22 12:59:25.795: INFO: Deleting pod "simpletest.rc-ds94t" in namespace "gc-2557"
  Jun 22 12:59:25.806: INFO: Deleting pod "simpletest.rc-fjcnw" in namespace "gc-2557"
  Jun 22 12:59:25.821: INFO: Deleting pod "simpletest.rc-fktvt" in namespace "gc-2557"
  Jun 22 12:59:25.836: INFO: Deleting pod "simpletest.rc-fn8pm" in namespace "gc-2557"
  Jun 22 12:59:25.850: INFO: Deleting pod "simpletest.rc-fq5l4" in namespace "gc-2557"
  Jun 22 12:59:25.864: INFO: Deleting pod "simpletest.rc-fqsm8" in namespace "gc-2557"
  Jun 22 12:59:25.882: INFO: Deleting pod "simpletest.rc-ft67v" in namespace "gc-2557"
  Jun 22 12:59:25.899: INFO: Deleting pod "simpletest.rc-g7gt9" in namespace "gc-2557"
  Jun 22 12:59:25.913: INFO: Deleting pod "simpletest.rc-gkxv9" in namespace "gc-2557"
  Jun 22 12:59:25.929: INFO: Deleting pod "simpletest.rc-gnqmr" in namespace "gc-2557"
  Jun 22 12:59:25.944: INFO: Deleting pod "simpletest.rc-gqq4w" in namespace "gc-2557"
  Jun 22 12:59:25.957: INFO: Deleting pod "simpletest.rc-grkx6" in namespace "gc-2557"
  Jun 22 12:59:25.975: INFO: Deleting pod "simpletest.rc-gsnsl" in namespace "gc-2557"
  Jun 22 12:59:25.994: INFO: Deleting pod "simpletest.rc-h5zhh" in namespace "gc-2557"
  Jun 22 12:59:26.028: INFO: Deleting pod "simpletest.rc-h8qq6" in namespace "gc-2557"
  Jun 22 12:59:26.041: INFO: Deleting pod "simpletest.rc-j998x" in namespace "gc-2557"
  Jun 22 12:59:26.055: INFO: Deleting pod "simpletest.rc-jgmgw" in namespace "gc-2557"
  Jun 22 12:59:26.072: INFO: Deleting pod "simpletest.rc-jk8z2" in namespace "gc-2557"
  Jun 22 12:59:26.084: INFO: Deleting pod "simpletest.rc-jpw8q" in namespace "gc-2557"
  Jun 22 12:59:26.103: INFO: Deleting pod "simpletest.rc-jqd75" in namespace "gc-2557"
  Jun 22 12:59:26.118: INFO: Deleting pod "simpletest.rc-kdzs6" in namespace "gc-2557"
  Jun 22 12:59:26.135: INFO: Deleting pod "simpletest.rc-kj7pv" in namespace "gc-2557"
  Jun 22 12:59:26.150: INFO: Deleting pod "simpletest.rc-kkx69" in namespace "gc-2557"
  Jun 22 12:59:26.165: INFO: Deleting pod "simpletest.rc-klhct" in namespace "gc-2557"
  Jun 22 12:59:26.177: INFO: Deleting pod "simpletest.rc-knnvh" in namespace "gc-2557"
  Jun 22 12:59:26.189: INFO: Deleting pod "simpletest.rc-lbqgf" in namespace "gc-2557"
  Jun 22 12:59:26.203: INFO: Deleting pod "simpletest.rc-lx5x9" in namespace "gc-2557"
  Jun 22 12:59:26.217: INFO: Deleting pod "simpletest.rc-m6gkb" in namespace "gc-2557"
  Jun 22 12:59:26.234: INFO: Deleting pod "simpletest.rc-n2fml" in namespace "gc-2557"
  Jun 22 12:59:26.249: INFO: Deleting pod "simpletest.rc-n8z8c" in namespace "gc-2557"
  Jun 22 12:59:26.266: INFO: Deleting pod "simpletest.rc-nfqkd" in namespace "gc-2557"
  Jun 22 12:59:26.283: INFO: Deleting pod "simpletest.rc-nj98q" in namespace "gc-2557"
  Jun 22 12:59:26.300: INFO: Deleting pod "simpletest.rc-nwf6w" in namespace "gc-2557"
  Jun 22 12:59:26.317: INFO: Deleting pod "simpletest.rc-p582c" in namespace "gc-2557"
  Jun 22 12:59:26.345: INFO: Deleting pod "simpletest.rc-pdnfk" in namespace "gc-2557"
  Jun 22 12:59:26.370: INFO: Deleting pod "simpletest.rc-pfn88" in namespace "gc-2557"
  Jun 22 12:59:26.383: INFO: Deleting pod "simpletest.rc-pphf9" in namespace "gc-2557"
  Jun 22 12:59:26.398: INFO: Deleting pod "simpletest.rc-pzp5g" in namespace "gc-2557"
  Jun 22 12:59:26.418: INFO: Deleting pod "simpletest.rc-qjmnb" in namespace "gc-2557"
  Jun 22 12:59:26.435: INFO: Deleting pod "simpletest.rc-qjqgx" in namespace "gc-2557"
  Jun 22 12:59:26.485: INFO: Deleting pod "simpletest.rc-qll2t" in namespace "gc-2557"
  Jun 22 12:59:26.536: INFO: Deleting pod "simpletest.rc-qlzkb" in namespace "gc-2557"
  Jun 22 12:59:26.601: INFO: Deleting pod "simpletest.rc-qvxlg" in namespace "gc-2557"
  Jun 22 12:59:26.635: INFO: Deleting pod "simpletest.rc-qxwdb" in namespace "gc-2557"
  Jun 22 12:59:26.691: INFO: Deleting pod "simpletest.rc-rhvjt" in namespace "gc-2557"
  Jun 22 12:59:26.739: INFO: Deleting pod "simpletest.rc-rm8qq" in namespace "gc-2557"
  Jun 22 12:59:26.789: INFO: Deleting pod "simpletest.rc-rx45f" in namespace "gc-2557"
  Jun 22 12:59:26.841: INFO: Deleting pod "simpletest.rc-sf8wk" in namespace "gc-2557"
  Jun 22 12:59:26.889: INFO: Deleting pod "simpletest.rc-sgm5f" in namespace "gc-2557"
  Jun 22 12:59:26.934: INFO: Deleting pod "simpletest.rc-shpjd" in namespace "gc-2557"
  Jun 22 12:59:26.989: INFO: Deleting pod "simpletest.rc-shs5k" in namespace "gc-2557"
  Jun 22 12:59:27.036: INFO: Deleting pod "simpletest.rc-splkb" in namespace "gc-2557"
  Jun 22 12:59:27.106: INFO: Deleting pod "simpletest.rc-sztcj" in namespace "gc-2557"
  Jun 22 12:59:27.139: INFO: Deleting pod "simpletest.rc-t6zlp" in namespace "gc-2557"
  Jun 22 12:59:27.186: INFO: Deleting pod "simpletest.rc-t8xck" in namespace "gc-2557"
  Jun 22 12:59:27.235: INFO: Deleting pod "simpletest.rc-tn6x7" in namespace "gc-2557"
  Jun 22 12:59:27.285: INFO: Deleting pod "simpletest.rc-tr5tn" in namespace "gc-2557"
  Jun 22 12:59:27.345: INFO: Deleting pod "simpletest.rc-twdbs" in namespace "gc-2557"
  Jun 22 12:59:27.397: INFO: Deleting pod "simpletest.rc-v8lws" in namespace "gc-2557"
  Jun 22 12:59:27.453: INFO: Deleting pod "simpletest.rc-vc4ml" in namespace "gc-2557"
  Jun 22 12:59:27.493: INFO: Deleting pod "simpletest.rc-vnrhp" in namespace "gc-2557"
  Jun 22 12:59:27.542: INFO: Deleting pod "simpletest.rc-w4x79" in namespace "gc-2557"
  Jun 22 12:59:27.586: INFO: Deleting pod "simpletest.rc-x4wmb" in namespace "gc-2557"
  Jun 22 12:59:27.659: INFO: Deleting pod "simpletest.rc-zgprx" in namespace "gc-2557"
  Jun 22 12:59:27.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2557" for this suite. @ 06/22/24 12:59:27.749
• [41.795 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 06/22/24 12:59:27.783
  Jun 22 12:59:27.783: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename gc @ 06/22/24 12:59:27.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:59:27.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:59:27.823
  Jun 22 12:59:27.880: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"ec060ddc-8c7c-4566-a05f-60441f4047c9", Controller:(*bool)(0xc0029690d6), BlockOwnerDeletion:(*bool)(0xc0029690d7)}}
  Jun 22 12:59:27.891: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"b62343b1-e300-427c-a8d5-2445887dc5be", Controller:(*bool)(0xc00296930e), BlockOwnerDeletion:(*bool)(0xc00296930f)}}
  Jun 22 12:59:27.898: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"25e66e72-214b-47da-b6f0-12515de920e5", Controller:(*bool)(0xc002969536), BlockOwnerDeletion:(*bool)(0xc002969537)}}
  Jun 22 12:59:32.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3756" for this suite. @ 06/22/24 12:59:32.915
• [5.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 06/22/24 12:59:32.922
  Jun 22 12:59:32.922: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename watch @ 06/22/24 12:59:32.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:59:32.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:59:32.94
  STEP: creating a watch on configmaps @ 06/22/24 12:59:32.943
  STEP: creating a new configmap @ 06/22/24 12:59:32.944
  STEP: modifying the configmap once @ 06/22/24 12:59:32.948
  STEP: closing the watch once it receives two notifications @ 06/22/24 12:59:32.957
  Jun 22 12:59:32.957: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-365  bfd078e3-a89b-47c1-b88a-5944e469cc71 18946 0 2024-06-22 12:59:32 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-22 12:59:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 12:59:32.957: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-365  bfd078e3-a89b-47c1-b88a-5944e469cc71 18948 0 2024-06-22 12:59:32 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-22 12:59:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 06/22/24 12:59:32.957
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 06/22/24 12:59:32.967
  STEP: deleting the configmap @ 06/22/24 12:59:32.969
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 06/22/24 12:59:32.974
  Jun 22 12:59:32.974: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-365  bfd078e3-a89b-47c1-b88a-5944e469cc71 18950 0 2024-06-22 12:59:32 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-22 12:59:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 12:59:32.974: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-365  bfd078e3-a89b-47c1-b88a-5944e469cc71 18952 0 2024-06-22 12:59:32 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-22 12:59:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 12:59:32.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-365" for this suite. @ 06/22/24 12:59:32.978
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 06/22/24 12:59:32.986
  Jun 22 12:59:32.986: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 12:59:32.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:59:33.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:59:33.007
  STEP: creating service in namespace services-3828 @ 06/22/24 12:59:33.011
  STEP: creating service affinity-nodeport in namespace services-3828 @ 06/22/24 12:59:33.011
  STEP: creating replication controller affinity-nodeport in namespace services-3828 @ 06/22/24 12:59:33.029
  I0622 12:59:33.040495      19 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-3828, replica count: 3
  I0622 12:59:36.090817      19 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 22 12:59:36.112: INFO: Creating new exec pod
  Jun 22 12:59:39.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3828 exec execpod-affinity677vd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Jun 22 12:59:39.248: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Jun 22 12:59:39.248: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 12:59:39.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3828 exec execpod-affinity677vd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.226 80'
  Jun 22 12:59:39.344: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.226 80\nConnection to 10.152.183.226 80 port [tcp/http] succeeded!\n"
  Jun 22 12:59:39.344: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 12:59:39.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3828 exec execpod-affinity677vd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.25.91 32435'
  Jun 22 12:59:39.437: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.25.91 32435\nConnection to 172.31.25.91 32435 port [tcp/*] succeeded!\n"
  Jun 22 12:59:39.437: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 12:59:39.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3828 exec execpod-affinity677vd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.104 32435'
  Jun 22 12:59:39.525: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.104 32435\nConnection to 172.31.3.104 32435 port [tcp/*] succeeded!\n"
  Jun 22 12:59:39.525: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 12:59:39.525: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3828 exec execpod-affinity677vd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.25.91:32435/ ; done'
  Jun 22 12:59:39.686: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:32435/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:32435/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:32435/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:32435/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:32435/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:32435/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:32435/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:32435/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:32435/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:32435/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:32435/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:32435/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:32435/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:32435/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:32435/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.25.91:32435/\n"
  Jun 22 12:59:39.686: INFO: stdout: "\naffinity-nodeport-9n9m9\naffinity-nodeport-9n9m9\naffinity-nodeport-9n9m9\naffinity-nodeport-9n9m9\naffinity-nodeport-9n9m9\naffinity-nodeport-9n9m9\naffinity-nodeport-9n9m9\naffinity-nodeport-9n9m9\naffinity-nodeport-9n9m9\naffinity-nodeport-9n9m9\naffinity-nodeport-9n9m9\naffinity-nodeport-9n9m9\naffinity-nodeport-9n9m9\naffinity-nodeport-9n9m9\naffinity-nodeport-9n9m9\naffinity-nodeport-9n9m9"
  Jun 22 12:59:39.686: INFO: Received response from host: affinity-nodeport-9n9m9
  Jun 22 12:59:39.686: INFO: Received response from host: affinity-nodeport-9n9m9
  Jun 22 12:59:39.686: INFO: Received response from host: affinity-nodeport-9n9m9
  Jun 22 12:59:39.686: INFO: Received response from host: affinity-nodeport-9n9m9
  Jun 22 12:59:39.686: INFO: Received response from host: affinity-nodeport-9n9m9
  Jun 22 12:59:39.686: INFO: Received response from host: affinity-nodeport-9n9m9
  Jun 22 12:59:39.686: INFO: Received response from host: affinity-nodeport-9n9m9
  Jun 22 12:59:39.686: INFO: Received response from host: affinity-nodeport-9n9m9
  Jun 22 12:59:39.686: INFO: Received response from host: affinity-nodeport-9n9m9
  Jun 22 12:59:39.686: INFO: Received response from host: affinity-nodeport-9n9m9
  Jun 22 12:59:39.686: INFO: Received response from host: affinity-nodeport-9n9m9
  Jun 22 12:59:39.686: INFO: Received response from host: affinity-nodeport-9n9m9
  Jun 22 12:59:39.686: INFO: Received response from host: affinity-nodeport-9n9m9
  Jun 22 12:59:39.686: INFO: Received response from host: affinity-nodeport-9n9m9
  Jun 22 12:59:39.686: INFO: Received response from host: affinity-nodeport-9n9m9
  Jun 22 12:59:39.686: INFO: Received response from host: affinity-nodeport-9n9m9
  Jun 22 12:59:39.686: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-3828, will wait for the garbage collector to delete the pods @ 06/22/24 12:59:39.699
  Jun 22 12:59:39.766: INFO: Deleting ReplicationController affinity-nodeport took: 8.303182ms
  Jun 22 12:59:39.866: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.749909ms
  Jun 22 12:59:42.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3828" for this suite. @ 06/22/24 12:59:42.696
• [9.718 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 06/22/24 12:59:42.705
  Jun 22 12:59:42.705: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename crd-webhook @ 06/22/24 12:59:42.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:59:42.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:59:42.739
  STEP: Setting up server cert @ 06/22/24 12:59:42.745
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/22/24 12:59:43.182
  STEP: Deploying the custom resource conversion webhook pod @ 06/22/24 12:59:43.192
  STEP: Wait for the deployment to be ready @ 06/22/24 12:59:43.206
  Jun 22 12:59:43.215: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/22/24 12:59:45.229
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 12:59:45.247
  Jun 22 12:59:46.247: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun 22 12:59:46.257: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Creating a v1 custom resource @ 06/22/24 12:59:48.809
  STEP: Create a v2 custom resource @ 06/22/24 12:59:48.828
  STEP: List CRs in v1 @ 06/22/24 12:59:48.853
  STEP: List CRs in v2 @ 06/22/24 12:59:48.858
  Jun 22 12:59:49.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7992" for this suite. @ 06/22/24 12:59:49.426
• [6.734 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 06/22/24 12:59:49.439
  Jun 22 12:59:49.439: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename resourcequota @ 06/22/24 12:59:49.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 12:59:49.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 12:59:49.459
  STEP: Counting existing ResourceQuota @ 06/22/24 12:59:49.462
  STEP: Creating a ResourceQuota @ 06/22/24 12:59:54.466
  STEP: Ensuring resource quota status is calculated @ 06/22/24 12:59:54.473
  STEP: Creating a ReplicationController @ 06/22/24 12:59:56.478
  STEP: Ensuring resource quota status captures replication controller creation @ 06/22/24 12:59:56.49
  STEP: Deleting a ReplicationController @ 06/22/24 12:59:58.497
  STEP: Ensuring resource quota status released usage @ 06/22/24 12:59:58.505
  Jun 22 13:00:00.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-758" for this suite. @ 06/22/24 13:00:00.515
• [11.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:470
  STEP: Creating a kubernetes client @ 06/22/24 13:00:00.524
  Jun 22 13:00:00.524: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename sched-pred @ 06/22/24 13:00:00.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:00:00.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:00:00.544
  Jun 22 13:00:00.547: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 22 13:00:00.554: INFO: Waiting for terminating namespaces to be deleted...
  Jun 22 13:00:00.557: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-25-91 before test
  Jun 22 13:00:00.562: INFO: nginx-ingress-controller-kubernetes-worker-fvrjf from ingress-nginx-kubernetes-worker started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 13:00:00.562: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 22 13:00:00.562: INFO: calico-node-ccx9h from kube-system started at 2024-06-22 12:19:33 +0000 UTC (1 container statuses recorded)
  Jun 22 13:00:00.562: INFO: 	Container calico-node ready: true, restart count 0
  Jun 22 13:00:00.562: INFO: coredns-bddfd76d7-nd2xx from kube-system started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 13:00:00.562: INFO: 	Container coredns ready: true, restart count 0
  Jun 22 13:00:00.562: INFO: kube-state-metrics-6f48cdd76-dd6kh from kube-system started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 13:00:00.562: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jun 22 13:00:00.562: INFO: metrics-server-v0.6.3-69d7fbfdf8-8zxgg from kube-system started at 2024-06-22 12:14:39 +0000 UTC (2 container statuses recorded)
  Jun 22 13:00:00.562: INFO: 	Container metrics-server ready: true, restart count 0
  Jun 22 13:00:00.562: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jun 22 13:00:00.562: INFO: dashboard-metrics-scraper-5dd7cb5fc-cjq29 from kubernetes-dashboard started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 13:00:00.562: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jun 22 13:00:00.562: INFO: kubernetes-dashboard-7b899cb9d9-zw59t from kubernetes-dashboard started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 13:00:00.562: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jun 22 13:00:00.562: INFO: sonobuoy-systemd-logs-daemon-set-94c32348a04f46b5-zhwcb from sonobuoy started at 2024-06-22 12:22:23 +0000 UTC (2 container statuses recorded)
  Jun 22 13:00:00.562: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 22 13:00:00.562: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 22 13:00:00.562: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-3-104 before test
  Jun 22 13:00:00.567: INFO: nginx-ingress-controller-kubernetes-worker-czctk from ingress-nginx-kubernetes-worker started at 2024-06-22 12:15:55 +0000 UTC (1 container statuses recorded)
  Jun 22 13:00:00.567: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 22 13:00:00.567: INFO: calico-node-82rw8 from kube-system started at 2024-06-22 12:20:14 +0000 UTC (1 container statuses recorded)
  Jun 22 13:00:00.567: INFO: 	Container calico-node ready: true, restart count 0
  Jun 22 13:00:00.567: INFO: sonobuoy from sonobuoy started at 2024-06-22 12:22:22 +0000 UTC (1 container statuses recorded)
  Jun 22 13:00:00.567: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 22 13:00:00.567: INFO: sonobuoy-systemd-logs-daemon-set-94c32348a04f46b5-fbr7r from sonobuoy started at 2024-06-22 12:22:23 +0000 UTC (2 container statuses recorded)
  Jun 22 13:00:00.568: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 22 13:00:00.568: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 22 13:00:00.568: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-85-228 before test
  Jun 22 13:00:00.573: INFO: nginx-ingress-controller-kubernetes-worker-nvkt2 from ingress-nginx-kubernetes-worker started at 2024-06-22 12:17:34 +0000 UTC (1 container statuses recorded)
  Jun 22 13:00:00.573: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 22 13:00:00.573: INFO: calico-node-q9fk8 from kube-system started at 2024-06-22 12:19:53 +0000 UTC (1 container statuses recorded)
  Jun 22 13:00:00.573: INFO: 	Container calico-node ready: true, restart count 0
  Jun 22 13:00:00.573: INFO: sonobuoy-e2e-job-2ca1d8ae60f44d6a from sonobuoy started at 2024-06-22 12:22:23 +0000 UTC (2 container statuses recorded)
  Jun 22 13:00:00.573: INFO: 	Container e2e ready: true, restart count 0
  Jun 22 13:00:00.573: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 22 13:00:00.573: INFO: sonobuoy-systemd-logs-daemon-set-94c32348a04f46b5-ntsj7 from sonobuoy started at 2024-06-22 12:22:23 +0000 UTC (2 container statuses recorded)
  Jun 22 13:00:00.573: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 22 13:00:00.573: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/22/24 13:00:00.573
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/22/24 13:00:02.597
  STEP: Trying to apply a random label on the found node. @ 06/22/24 13:00:02.614
  STEP: verifying the node has the label kubernetes.io/e2e-c6099304-8450-4f17-81b3-59697c6e0ca1 42 @ 06/22/24 13:00:02.624
  STEP: Trying to relaunch the pod, now with labels. @ 06/22/24 13:00:02.63
  STEP: removing the label kubernetes.io/e2e-c6099304-8450-4f17-81b3-59697c6e0ca1 off the node ip-172-31-3-104 @ 06/22/24 13:00:04.653
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-c6099304-8450-4f17-81b3-59697c6e0ca1 @ 06/22/24 13:00:04.665
  Jun 22 13:00:04.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-606" for this suite. @ 06/22/24 13:00:04.674
• [4.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 06/22/24 13:00:04.682
  Jun 22 13:00:04.682: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 13:00:04.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:00:04.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:00:04.704
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3357 @ 06/22/24 13:00:04.706
  STEP: changing the ExternalName service to type=ClusterIP @ 06/22/24 13:00:04.713
  STEP: creating replication controller externalname-service in namespace services-3357 @ 06/22/24 13:00:04.726
  I0622 13:00:04.737864      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-3357, replica count: 2
  I0622 13:00:07.789677      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 22 13:00:07.789: INFO: Creating new exec pod
  Jun 22 13:00:10.807: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3357 exec execpodjxznw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 22 13:00:10.906: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 22 13:00:10.906: INFO: stdout: ""
  Jun 22 13:00:11.807: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3357 exec execpodjxznw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 22 13:00:11.938: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 22 13:00:11.938: INFO: stdout: ""
  Jun 22 13:00:12.807: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3357 exec execpodjxznw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 22 13:00:12.931: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 22 13:00:12.931: INFO: stdout: "externalname-service-dqcbx"
  Jun 22 13:00:12.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3357 exec execpodjxznw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.113 80'
  Jun 22 13:00:13.057: INFO: stderr: "+ nc -v -t -w 2 10.152.183.113 80\n+ echo hostName\nConnection to 10.152.183.113 80 port [tcp/http] succeeded!\n"
  Jun 22 13:00:13.057: INFO: stdout: ""
  Jun 22 13:00:13.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3357 exec execpodjxznw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.113 80'
  Jun 22 13:00:14.053: INFO: stderr: "+ nc -v -t -w 2 10.152.183.113 80\nConnection to 10.152.183.113 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun 22 13:00:14.053: INFO: stdout: ""
  Jun 22 13:00:14.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3357 exec execpodjxznw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.113 80'
  Jun 22 13:00:15.080: INFO: stderr: "+ nc -v -t -w 2 10.152.183.113 80\nConnection to 10.152.183.113 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun 22 13:00:15.080: INFO: stdout: ""
  Jun 22 13:00:15.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3357 exec execpodjxznw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.113 80'
  Jun 22 13:00:16.056: INFO: stderr: "+ nc -v -t -w 2 10.152.183.113 80\n+ echo hostName\nConnection to 10.152.183.113 80 port [tcp/http] succeeded!\n"
  Jun 22 13:00:16.056: INFO: stdout: ""
  Jun 22 13:00:16.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3357 exec execpodjxznw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.113 80'
  Jun 22 13:00:17.029: INFO: stderr: "+ nc -v -t -w 2 10.152.183.113 80\nConnection to 10.152.183.113 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun 22 13:00:17.029: INFO: stdout: ""
  Jun 22 13:00:17.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-3357 exec execpodjxznw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.113 80'
  Jun 22 13:00:18.025: INFO: stderr: "+ nc -v -t -w 2 10.152.183.113 80\n+ echo hostName\nConnection to 10.152.183.113 80 port [tcp/http] succeeded!\n"
  Jun 22 13:00:18.025: INFO: stdout: "externalname-service-dqcbx"
  Jun 22 13:00:18.025: INFO: Cleaning up the ExternalName to ClusterIP test service
  Jun 22 13:00:18.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3357" for this suite. @ 06/22/24 13:00:18.051
• [13.376 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 06/22/24 13:00:18.058
  Jun 22 13:00:18.058: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:00:18.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:00:18.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:00:18.081
  STEP: Creating configMap with name projected-configmap-test-volume-935cb2d6-c3bc-4543-8f30-330d0a4283d0 @ 06/22/24 13:00:18.084
  STEP: Creating a pod to test consume configMaps @ 06/22/24 13:00:18.09
  STEP: Saw pod success @ 06/22/24 13:00:22.113
  Jun 22 13:00:22.116: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-projected-configmaps-47bf9b13-d16a-40f3-ba16-6b94cdd8d688 container agnhost-container: <nil>
  STEP: delete the pod @ 06/22/24 13:00:22.127
  Jun 22 13:00:22.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2901" for this suite. @ 06/22/24 13:00:22.147
• [4.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 06/22/24 13:00:22.156
  Jun 22 13:00:22.156: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename disruption @ 06/22/24 13:00:22.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:00:22.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:00:22.178
  STEP: creating the pdb @ 06/22/24 13:00:22.181
  STEP: Waiting for the pdb to be processed @ 06/22/24 13:00:22.185
  STEP: updating the pdb @ 06/22/24 13:00:24.192
  STEP: Waiting for the pdb to be processed @ 06/22/24 13:00:24.204
  STEP: patching the pdb @ 06/22/24 13:00:24.211
  STEP: Waiting for the pdb to be processed @ 06/22/24 13:00:24.224
  STEP: Waiting for the pdb to be deleted @ 06/22/24 13:00:24.239
  Jun 22 13:00:24.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2004" for this suite. @ 06/22/24 13:00:24.247
• [2.099 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 06/22/24 13:00:24.256
  Jun 22 13:00:24.256: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename secrets @ 06/22/24 13:00:24.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:00:24.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:00:24.277
  STEP: Creating secret with name secret-test-ff471b03-1006-4ff3-b786-29677bdafba1 @ 06/22/24 13:00:24.28
  STEP: Creating a pod to test consume secrets @ 06/22/24 13:00:24.285
  STEP: Saw pod success @ 06/22/24 13:00:28.309
  Jun 22 13:00:28.313: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-secrets-9dc6e179-4ca0-4879-8952-f652c0e1e8e6 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/22/24 13:00:28.32
  Jun 22 13:00:28.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6116" for this suite. @ 06/22/24 13:00:28.339
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 06/22/24 13:00:28.346
  Jun 22 13:00:28.347: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename secrets @ 06/22/24 13:00:28.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:00:28.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:00:28.365
  STEP: creating a secret @ 06/22/24 13:00:28.367
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 06/22/24 13:00:28.372
  STEP: patching the secret @ 06/22/24 13:00:28.376
  STEP: deleting the secret using a LabelSelector @ 06/22/24 13:00:28.385
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 06/22/24 13:00:28.393
  Jun 22 13:00:28.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7281" for this suite. @ 06/22/24 13:00:28.402
• [0.063 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 06/22/24 13:00:28.409
  Jun 22 13:00:28.409: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename var-expansion @ 06/22/24 13:00:28.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:00:28.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:00:28.429
  STEP: Creating a pod to test substitution in volume subpath @ 06/22/24 13:00:28.431
  STEP: Saw pod success @ 06/22/24 13:00:32.455
  Jun 22 13:00:32.460: INFO: Trying to get logs from node ip-172-31-3-104 pod var-expansion-e70b5109-feee-4435-a1c4-67dfb8df8962 container dapi-container: <nil>
  STEP: delete the pod @ 06/22/24 13:00:32.468
  Jun 22 13:00:32.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2979" for this suite. @ 06/22/24 13:00:32.488
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 06/22/24 13:00:32.496
  Jun 22 13:00:32.496: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:00:32.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:00:32.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:00:32.516
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 13:00:32.519
  STEP: Saw pod success @ 06/22/24 13:00:36.545
  Jun 22 13:00:36.549: INFO: Trying to get logs from node ip-172-31-3-104 pod downwardapi-volume-19be9db2-e986-4057-a64d-2a4d6d887f03 container client-container: <nil>
  STEP: delete the pod @ 06/22/24 13:00:36.557
  Jun 22 13:00:36.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8195" for this suite. @ 06/22/24 13:00:36.581
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 06/22/24 13:00:36.588
  Jun 22 13:00:36.588: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename deployment @ 06/22/24 13:00:36.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:00:36.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:00:36.607
  Jun 22 13:00:36.610: INFO: Creating deployment "test-recreate-deployment"
  Jun 22 13:00:36.617: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Jun 22 13:00:36.625: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Jun 22 13:00:38.633: INFO: Waiting deployment "test-recreate-deployment" to complete
  Jun 22 13:00:38.637: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Jun 22 13:00:38.649: INFO: Updating deployment test-recreate-deployment
  Jun 22 13:00:38.649: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Jun 22 13:00:38.740: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5021",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "15ecc8f0-3905-4092-b4ea-34150302e81f",
      ResourceVersion: (string) (len=5) "20251",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854658036,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 22 13:00:38.745: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5021",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab5511bd-cb2f-45aa-aa04-67455a62d88a",
      ResourceVersion: (string) (len=5) "20250",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854658038,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "15ecc8f0-3905-4092-b4ea-34150302e81f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 35 65 63 63 38  66 30 2d 33 39 30 35 2d  |\"15ecc8f0-3905-|
              00000120  34 30 39 32 2d 62 34 65  61 2d 33 34 31 35 30 33  |4092-b4ea-341503|
              00000130  30 32 65 38 31 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |02e81f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 22 13:00:38.746: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Jun 22 13:00:38.746: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5021",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b3f6e17-1ab1-4dbc-911a-487418816e72",
      ResourceVersion: (string) (len=5) "20239",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854658036,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "15ecc8f0-3905-4092-b4ea-34150302e81f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 35 65 63 63 38  66 30 2d 33 39 30 35 2d  |\"15ecc8f0-3905-|
              00000120  34 30 39 32 2d 62 34 65  61 2d 33 34 31 35 30 33  |4092-b4ea-341503|
              00000130  30 32 65 38 31 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |02e81f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 22 13:00:38.751: INFO: Pod "test-recreate-deployment-76fb77d45-82h4z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-82h4z",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-5021",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d87c6f11-7405-4b8c-b079-ba9cb5dfbdd0",
      ResourceVersion: (string) (len=5) "20252",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854658038,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "ab5511bd-cb2f-45aa-aa04-67455a62d88a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 62  35 35 31 31 62 64 2d 63  |d\":\"ab5511bd-c|
              00000090  62 32 66 2d 34 35 61 61  2d 61 61 30 34 2d 36 37  |b2f-45aa-aa04-67|
              000000a0  34 35 35 61 36 32 64 38  38 61 5c 22 7d 22 3a 7b  |455a62d88a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fb9pw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fb9pw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854658038,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854658038,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:00:38.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5021" for this suite. @ 06/22/24 13:00:38.757
• [2.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 06/22/24 13:00:38.765
  Jun 22 13:00:38.765: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename replicaset @ 06/22/24 13:00:38.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:00:38.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:00:38.785
  STEP: Create a ReplicaSet @ 06/22/24 13:00:38.787
  STEP: Verify that the required pods have come up @ 06/22/24 13:00:38.792
  Jun 22 13:00:38.796: INFO: Pod name sample-pod: Found 0 pods out of 3
  Jun 22 13:00:43.802: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 06/22/24 13:00:43.802
  Jun 22 13:00:43.806: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 06/22/24 13:00:43.806
  STEP: DeleteCollection of the ReplicaSets @ 06/22/24 13:00:43.811
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 06/22/24 13:00:43.828
  Jun 22 13:00:43.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3896" for this suite. @ 06/22/24 13:00:43.84
• [5.087 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 06/22/24 13:00:43.852
  Jun 22 13:00:43.852: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:00:43.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:00:43.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:00:43.874
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 13:00:43.878
  STEP: Saw pod success @ 06/22/24 13:00:47.91
  Jun 22 13:00:47.914: INFO: Trying to get logs from node ip-172-31-3-104 pod downwardapi-volume-3ac98a46-1b6b-4e28-8a49-485cda2773f4 container client-container: <nil>
  STEP: delete the pod @ 06/22/24 13:00:47.921
  Jun 22 13:00:47.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8091" for this suite. @ 06/22/24 13:00:47.941
• [4.098 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 06/22/24 13:00:47.95
  Jun 22 13:00:47.950: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename var-expansion @ 06/22/24 13:00:47.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:00:47.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:00:47.969
  STEP: creating the pod with failed condition @ 06/22/24 13:00:47.971
  STEP: updating the pod @ 06/22/24 13:02:47.982
  Jun 22 13:02:48.497: INFO: Successfully updated pod "var-expansion-9584ae2c-bd47-44ed-947b-07adbb315f01"
  STEP: waiting for pod running @ 06/22/24 13:02:48.497
  STEP: deleting the pod gracefully @ 06/22/24 13:02:50.507
  Jun 22 13:02:50.507: INFO: Deleting pod "var-expansion-9584ae2c-bd47-44ed-947b-07adbb315f01" in namespace "var-expansion-5650"
  Jun 22 13:02:50.517: INFO: Wait up to 5m0s for pod "var-expansion-9584ae2c-bd47-44ed-947b-07adbb315f01" to be fully deleted
  Jun 22 13:03:22.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5650" for this suite. @ 06/22/24 13:03:22.62
• [154.677 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 06/22/24 13:03:22.627
  Jun 22 13:03:22.627: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-probe @ 06/22/24 13:03:22.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:03:22.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:03:22.654
  STEP: Creating pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063 @ 06/22/24 13:03:22.656
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/22/24 13:03:24.674
  Jun 22 13:03:24.678: INFO: Initial restart count of pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f is 0
  Jun 22 13:03:24.683: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:26.687: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:28.693: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:30.698: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:32.703: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:34.709: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:36.714: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:38.720: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:40.727: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:42.732: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:44.737: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:46.741: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:48.747: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:50.752: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:52.756: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:54.762: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:56.768: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:03:58.772: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:00.778: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:02.784: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:04.792: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:06.797: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:08.806: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:10.813: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:12.818: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:14.825: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:16.830: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:18.836: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:20.842: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:22.848: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:24.853: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:26.858: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:28.862: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:30.868: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:32.874: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:34.880: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:36.887: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:38.892: INFO: Get pod test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f in namespace container-probe-6063
  Jun 22 13:04:38.892: INFO: Restart count of pod container-probe-6063/test-grpc-93b8acd4-b23e-4dbe-90f1-f11be1f2702f is now 1 (1m14.214385934s elapsed)
  STEP: deleting the pod @ 06/22/24 13:04:38.892
  Jun 22 13:04:38.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6063" for this suite. @ 06/22/24 13:04:38.909
• [76.289 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 06/22/24 13:04:38.917
  Jun 22 13:04:38.917: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename sched-preemption @ 06/22/24 13:04:38.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:04:38.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:04:38.938
  Jun 22 13:04:38.953: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun 22 13:05:38.959: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/22/24 13:05:38.963
  Jun 22 13:05:38.963: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/22/24 13:05:38.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:05:38.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:05:38.984
  STEP: Finding an available node @ 06/22/24 13:05:38.986
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/22/24 13:05:38.986
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/22/24 13:05:41.011
  Jun 22 13:05:41.024: INFO: found a healthy node: ip-172-31-3-104
  Jun 22 13:05:47.213: INFO: pods created so far: [1 1 1]
  Jun 22 13:05:47.213: INFO: length of pods created so far: 3
  Jun 22 13:05:49.226: INFO: pods created so far: [2 2 1]
  Jun 22 13:05:56.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8401" for this suite. @ 06/22/24 13:05:56.304
  Jun 22 13:05:56.313: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2607" for this suite. @ 06/22/24 13:05:56.317
• [77.418 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 06/22/24 13:05:56.335
  Jun 22 13:05:56.335: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 13:05:56.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:05:56.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:05:56.357
  STEP: Setting up server cert @ 06/22/24 13:05:56.39
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 13:05:56.535
  STEP: Deploying the webhook pod @ 06/22/24 13:05:56.545
  STEP: Wait for the deployment to be ready @ 06/22/24 13:05:56.557
  Jun 22 13:05:56.565: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/22/24 13:05:58.579
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 13:05:58.591
  Jun 22 13:05:59.592: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 22 13:05:59.603: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3334-crds.webhook.example.com via the AdmissionRegistration API @ 06/22/24 13:06:00.117
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/22/24 13:06:00.131
  Jun 22 13:06:02.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1098" for this suite. @ 06/22/24 13:06:02.764
  STEP: Destroying namespace "webhook-markers-700" for this suite. @ 06/22/24 13:06:02.772
• [6.444 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 06/22/24 13:06:02.779
  Jun 22 13:06:02.779: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-runtime @ 06/22/24 13:06:02.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:06:02.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:06:02.798
  STEP: create the container @ 06/22/24 13:06:02.802
  W0622 13:06:02.817598      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 06/22/24 13:06:02.817
  STEP: get the container status @ 06/22/24 13:06:05.838
  STEP: the container should be terminated @ 06/22/24 13:06:05.843
  STEP: the termination message should be set @ 06/22/24 13:06:05.843
  Jun 22 13:06:05.843: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/22/24 13:06:05.843
  Jun 22 13:06:05.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3197" for this suite. @ 06/22/24 13:06:05.867
• [3.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 06/22/24 13:06:05.875
  Jun 22 13:06:05.875: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename var-expansion @ 06/22/24 13:06:05.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:06:05.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:06:05.894
  Jun 22 13:06:07.919: INFO: Deleting pod "var-expansion-51aa3f3e-f3a9-40ed-8e46-983df3125176" in namespace "var-expansion-2854"
  Jun 22 13:06:07.928: INFO: Wait up to 5m0s for pod "var-expansion-51aa3f3e-f3a9-40ed-8e46-983df3125176" to be fully deleted
  Jun 22 13:06:09.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2854" for this suite. @ 06/22/24 13:06:09.942
• [4.077 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 06/22/24 13:06:09.951
  Jun 22 13:06:09.951: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir @ 06/22/24 13:06:09.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:06:09.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:06:09.969
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/22/24 13:06:09.972
  STEP: Saw pod success @ 06/22/24 13:06:13.997
  Jun 22 13:06:14.002: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-aa327155-9eda-4c1e-93cb-4f5cc8880c69 container test-container: <nil>
  STEP: delete the pod @ 06/22/24 13:06:14.016
  Jun 22 13:06:14.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-264" for this suite. @ 06/22/24 13:06:14.038
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 06/22/24 13:06:14.046
  Jun 22 13:06:14.046: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename statefulset @ 06/22/24 13:06:14.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:06:14.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:06:14.068
  STEP: Creating service test in namespace statefulset-5517 @ 06/22/24 13:06:14.071
  STEP: Creating statefulset ss in namespace statefulset-5517 @ 06/22/24 13:06:14.078
  Jun 22 13:06:14.090: INFO: Found 0 stateful pods, waiting for 1
  Jun 22 13:06:24.091: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 06/22/24 13:06:24.098
  STEP: updating a scale subresource @ 06/22/24 13:06:24.102
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/22/24 13:06:24.109
  STEP: Patch a scale subresource @ 06/22/24 13:06:24.116
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/22/24 13:06:24.133
  Jun 22 13:06:24.137: INFO: Deleting all statefulset in ns statefulset-5517
  Jun 22 13:06:24.140: INFO: Scaling statefulset ss to 0
  Jun 22 13:06:34.159: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 22 13:06:34.163: INFO: Deleting statefulset ss
  Jun 22 13:06:34.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5517" for this suite. @ 06/22/24 13:06:34.194
• [20.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 06/22/24 13:06:34.203
  Jun 22 13:06:34.203: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename resourcequota @ 06/22/24 13:06:34.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:06:34.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:06:34.231
  STEP: Creating a ResourceQuota @ 06/22/24 13:06:34.234
  STEP: Getting a ResourceQuota @ 06/22/24 13:06:34.239
  STEP: Updating a ResourceQuota @ 06/22/24 13:06:34.246
  STEP: Verifying a ResourceQuota was modified @ 06/22/24 13:06:34.252
  STEP: Deleting a ResourceQuota @ 06/22/24 13:06:34.256
  STEP: Verifying the deleted ResourceQuota @ 06/22/24 13:06:34.263
  Jun 22 13:06:34.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6410" for this suite. @ 06/22/24 13:06:34.271
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 06/22/24 13:06:34.28
  Jun 22 13:06:34.280: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename sched-preemption @ 06/22/24 13:06:34.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:06:34.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:06:34.299
  Jun 22 13:06:34.318: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun 22 13:07:34.322: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/22/24 13:07:34.326
  Jun 22 13:07:34.326: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/22/24 13:07:34.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:07:34.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:07:34.345
  Jun 22 13:07:34.361: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Jun 22 13:07:34.365: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Jun 22 13:07:34.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7633" for this suite. @ 06/22/24 13:07:34.441
  Jun 22 13:07:34.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7089" for this suite. @ 06/22/24 13:07:34.453
• [60.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 06/22/24 13:07:34.462
  Jun 22 13:07:34.462: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 13:07:34.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:07:34.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:07:34.482
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-773 @ 06/22/24 13:07:34.484
  STEP: changing the ExternalName service to type=NodePort @ 06/22/24 13:07:34.49
  STEP: creating replication controller externalname-service in namespace services-773 @ 06/22/24 13:07:34.515
  I0622 13:07:34.527226      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-773, replica count: 2
  I0622 13:07:37.578295      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 22 13:07:37.578: INFO: Creating new exec pod
  Jun 22 13:07:40.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-773 exec execpodqqd5k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 22 13:07:40.702: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 22 13:07:40.702: INFO: stdout: ""
  Jun 22 13:07:41.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-773 exec execpodqqd5k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 22 13:07:41.694: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 22 13:07:41.694: INFO: stdout: ""
  Jun 22 13:07:42.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-773 exec execpodqqd5k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 22 13:07:42.697: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 22 13:07:42.697: INFO: stdout: "externalname-service-6wjqx"
  Jun 22 13:07:42.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-773 exec execpodqqd5k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.191 80'
  Jun 22 13:07:42.785: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.191 80\nConnection to 10.152.183.191 80 port [tcp/http] succeeded!\n"
  Jun 22 13:07:42.785: INFO: stdout: "externalname-service-6wjqx"
  Jun 22 13:07:42.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-773 exec execpodqqd5k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.104 32249'
  Jun 22 13:07:42.881: INFO: stderr: "+ nc -v -t -w 2 172.31.3.104 32249\n+ echo hostName\nConnection to 172.31.3.104 32249 port [tcp/*] succeeded!\n"
  Jun 22 13:07:42.881: INFO: stdout: "externalname-service-cxcrm"
  Jun 22 13:07:42.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-773 exec execpodqqd5k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.85.228 32249'
  Jun 22 13:07:42.965: INFO: stderr: "+ nc -v -t -w 2 172.31.85.228 32249\n+ echo hostName\nConnection to 172.31.85.228 32249 port [tcp/*] succeeded!\n"
  Jun 22 13:07:42.965: INFO: stdout: "externalname-service-cxcrm"
  Jun 22 13:07:42.965: INFO: Cleaning up the ExternalName to NodePort test service
  Jun 22 13:07:43.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-773" for this suite. @ 06/22/24 13:07:43.005
• [8.550 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 06/22/24 13:07:43.013
  Jun 22 13:07:43.013: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename runtimeclass @ 06/22/24 13:07:43.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:07:43.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:07:43.031
  Jun 22 13:07:43.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-609" for this suite. @ 06/22/24 13:07:43.07
• [0.065 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 06/22/24 13:07:43.078
  Jun 22 13:07:43.078: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename podtemplate @ 06/22/24 13:07:43.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:07:43.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:07:43.097
  Jun 22 13:07:43.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3204" for this suite. @ 06/22/24 13:07:43.143
• [0.073 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 06/22/24 13:07:43.151
  Jun 22 13:07:43.151: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:07:43.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:07:43.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:07:43.171
  STEP: Creating configMap with name projected-configmap-test-volume-fa18bef6-f272-4edd-ab31-6dcf2bcd9534 @ 06/22/24 13:07:43.174
  STEP: Creating a pod to test consume configMaps @ 06/22/24 13:07:43.18
  STEP: Saw pod success @ 06/22/24 13:07:47.211
  Jun 22 13:07:47.214: INFO: Trying to get logs from node ip-172-31-85-228 pod pod-projected-configmaps-83ab1084-2897-4a0f-b27d-72849f89b3ad container agnhost-container: <nil>
  STEP: delete the pod @ 06/22/24 13:07:47.232
  Jun 22 13:07:47.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9988" for this suite. @ 06/22/24 13:07:47.257
• [4.114 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 06/22/24 13:07:47.266
  Jun 22 13:07:47.266: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename dns @ 06/22/24 13:07:47.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:07:47.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:07:47.288
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 06/22/24 13:07:47.291
  Jun 22 13:07:47.300: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9140  3013de85-cb74-4c3a-a19b-6c72000223fc 22018 0 2024-06-22 13:07:47 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-06-22 13:07:47 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-kj6mg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-kj6mg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 06/22/24 13:07:49.312
  Jun 22 13:07:49.313: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9140 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:07:49.313: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:07:49.313: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:07:49.313: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-9140/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 06/22/24 13:07:49.383
  Jun 22 13:07:49.383: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9140 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:07:49.383: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:07:49.383: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:07:49.384: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-9140/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 22 13:07:49.439: INFO: Deleting pod test-dns-nameservers...
  Jun 22 13:07:49.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9140" for this suite. @ 06/22/24 13:07:49.462
• [2.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 06/22/24 13:07:49.471
  Jun 22 13:07:49.471: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename downward-api @ 06/22/24 13:07:49.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:07:49.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:07:49.493
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 13:07:49.496
  STEP: Saw pod success @ 06/22/24 13:07:53.523
  Jun 22 13:07:53.527: INFO: Trying to get logs from node ip-172-31-3-104 pod downwardapi-volume-d99d5515-f6e4-4ed8-b869-fe0300c883a6 container client-container: <nil>
  STEP: delete the pod @ 06/22/24 13:07:53.539
  Jun 22 13:07:53.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6908" for this suite. @ 06/22/24 13:07:53.56
• [4.097 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 06/22/24 13:07:53.568
  Jun 22 13:07:53.568: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/22/24 13:07:53.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:07:53.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:07:53.587
  STEP: creating a target pod @ 06/22/24 13:07:53.59
  STEP: adding an ephemeral container @ 06/22/24 13:07:55.622
  STEP: checking pod container endpoints @ 06/22/24 13:07:57.64
  Jun 22 13:07:57.640: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9412 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:07:57.640: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:07:57.641: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:07:57.641: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-9412/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jun 22 13:07:57.682: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 06/22/24 13:07:57.69
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 06/22/24 13:07:57.694
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 06/22/24 13:07:57.707
  Jun 22 13:07:57.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9412" for this suite. @ 06/22/24 13:07:57.716
• [4.161 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 06/22/24 13:07:57.729
  Jun 22 13:07:57.729: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename namespaces @ 06/22/24 13:07:57.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:07:57.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:07:57.75
  STEP: Creating namespace "e2e-ns-xkv67" @ 06/22/24 13:07:57.753
  Jun 22 13:07:57.768: INFO: Namespace "e2e-ns-xkv67-4783" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-xkv67-4783" @ 06/22/24 13:07:57.768
  Jun 22 13:07:57.781: INFO: Namespace "e2e-ns-xkv67-4783" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-xkv67-4783" @ 06/22/24 13:07:57.781
  Jun 22 13:07:57.789: INFO: Namespace "e2e-ns-xkv67-4783" has []v1.FinalizerName{"kubernetes"}
  Jun 22 13:07:57.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6593" for this suite. @ 06/22/24 13:07:57.793
  STEP: Destroying namespace "e2e-ns-xkv67-4783" for this suite. @ 06/22/24 13:07:57.801
• [0.080 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 06/22/24 13:07:57.809
  Jun 22 13:07:57.809: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename secrets @ 06/22/24 13:07:57.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:07:57.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:07:57.829
  STEP: Creating secret with name secret-test-1580af1d-c497-47a0-a190-a4437925c62c @ 06/22/24 13:07:57.831
  STEP: Creating a pod to test consume secrets @ 06/22/24 13:07:57.837
  STEP: Saw pod success @ 06/22/24 13:08:01.865
  Jun 22 13:08:01.869: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-secrets-38f510f0-fc0a-45d1-8e6a-d528966f51ef container secret-volume-test: <nil>
  STEP: delete the pod @ 06/22/24 13:08:01.876
  Jun 22 13:08:01.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7659" for this suite. @ 06/22/24 13:08:01.897
• [4.097 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 06/22/24 13:08:01.906
  Jun 22 13:08:01.906: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 13:08:01.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:08:01.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:08:01.925
  STEP: Setting up server cert @ 06/22/24 13:08:01.954
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 13:08:02.127
  STEP: Deploying the webhook pod @ 06/22/24 13:08:02.138
  STEP: Wait for the deployment to be ready @ 06/22/24 13:08:02.152
  Jun 22 13:08:02.164: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/22/24 13:08:04.181
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 13:08:04.197
  Jun 22 13:08:05.197: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/22/24 13:08:05.28
  STEP: Creating a configMap that should be mutated @ 06/22/24 13:08:05.29
  STEP: Deleting the collection of validation webhooks @ 06/22/24 13:08:05.315
  STEP: Creating a configMap that should not be mutated @ 06/22/24 13:08:05.368
  Jun 22 13:08:05.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3505" for this suite. @ 06/22/24 13:08:05.434
  STEP: Destroying namespace "webhook-markers-8459" for this suite. @ 06/22/24 13:08:05.443
• [3.548 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 06/22/24 13:08:05.454
  Jun 22 13:08:05.454: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename discovery @ 06/22/24 13:08:05.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:08:05.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:08:05.473
  STEP: Setting up server cert @ 06/22/24 13:08:05.477
  STEP: Requesting APIResourceList from "/api/v1" @ 06/22/24 13:08:06.079
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 06/22/24 13:08:06.08
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 06/22/24 13:08:06.081
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 06/22/24 13:08:06.082
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 06/22/24 13:08:06.083
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 06/22/24 13:08:06.084
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 06/22/24 13:08:06.085
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 06/22/24 13:08:06.086
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 06/22/24 13:08:06.087
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 06/22/24 13:08:06.088
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 06/22/24 13:08:06.089
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 06/22/24 13:08:06.09
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 06/22/24 13:08:06.091
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 06/22/24 13:08:06.092
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 06/22/24 13:08:06.093
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 06/22/24 13:08:06.094
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 06/22/24 13:08:06.095
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 06/22/24 13:08:06.095
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 06/22/24 13:08:06.096
  Jun 22 13:08:06.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4832" for this suite. @ 06/22/24 13:08:06.101
• [0.654 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 06/22/24 13:08:06.109
  Jun 22 13:08:06.109: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 13:08:06.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:08:06.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:08:06.129
  STEP: Setting up server cert @ 06/22/24 13:08:06.152
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 13:08:06.434
  STEP: Deploying the webhook pod @ 06/22/24 13:08:06.441
  STEP: Wait for the deployment to be ready @ 06/22/24 13:08:06.455
  Jun 22 13:08:06.463: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/22/24 13:08:08.476
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 13:08:08.488
  Jun 22 13:08:09.489: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 22 13:08:09.497: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 06/22/24 13:08:10.008
  STEP: Creating a custom resource that should be denied by the webhook @ 06/22/24 13:08:10.023
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 06/22/24 13:08:12.04
  STEP: Updating the custom resource with disallowed data should be denied @ 06/22/24 13:08:12.049
  STEP: Deleting the custom resource should be denied @ 06/22/24 13:08:12.058
  STEP: Remove the offending key and value from the custom resource data @ 06/22/24 13:08:12.065
  STEP: Deleting the updated custom resource should be successful @ 06/22/24 13:08:12.076
  Jun 22 13:08:12.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-881" for this suite. @ 06/22/24 13:08:12.662
  STEP: Destroying namespace "webhook-markers-4873" for this suite. @ 06/22/24 13:08:12.669
• [6.568 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 06/22/24 13:08:12.677
  Jun 22 13:08:12.677: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-probe @ 06/22/24 13:08:12.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:08:12.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:08:12.696
  STEP: Creating pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600 @ 06/22/24 13:08:12.699
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/22/24 13:08:14.722
  Jun 22 13:08:14.726: INFO: Initial restart count of pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 is 0
  Jun 22 13:08:14.730: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:16.736: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:18.741: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:20.746: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:22.751: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:24.757: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:26.762: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:28.769: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:30.775: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:32.780: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:34.785: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:34.786: INFO: Restart count of pod container-probe-9600/liveness-941a2767-4da9-443e-9646-ac6395ef5537 is now 1 (20.059099052s elapsed)
  Jun 22 13:08:36.790: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:38.795: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:40.801: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:42.806: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:44.812: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:46.817: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:48.823: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:50.829: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:52.834: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:54.839: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:54.839: INFO: Restart count of pod container-probe-9600/liveness-941a2767-4da9-443e-9646-ac6395ef5537 is now 2 (40.113044884s elapsed)
  Jun 22 13:08:56.845: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:08:58.851: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:00.857: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:02.862: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:04.867: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:06.872: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:08.878: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:10.885: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:12.891: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:14.896: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:14.896: INFO: Restart count of pod container-probe-9600/liveness-941a2767-4da9-443e-9646-ac6395ef5537 is now 3 (1m0.169515605s elapsed)
  Jun 22 13:09:16.902: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:18.907: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:20.912: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:22.918: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:24.923: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:26.929: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:28.934: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:30.940: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:32.946: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:34.952: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:34.952: INFO: Restart count of pod container-probe-9600/liveness-941a2767-4da9-443e-9646-ac6395ef5537 is now 4 (1m20.225390283s elapsed)
  Jun 22 13:09:36.958: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:38.963: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:40.968: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:42.973: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:44.978: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:46.984: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:48.989: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:50.995: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:53.001: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:55.007: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:57.012: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:09:59.018: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:01.023: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:03.029: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:05.036: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:07.042: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:09.049: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:11.054: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:13.059: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:15.064: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:17.070: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:19.076: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:21.082: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:23.086: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:25.091: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:27.098: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:29.103: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:31.108: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:33.113: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:35.118: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:37.123: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:39.128: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:41.135: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:43.141: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:45.147: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:47.152: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:49.158: INFO: Get pod liveness-941a2767-4da9-443e-9646-ac6395ef5537 in namespace container-probe-9600
  Jun 22 13:10:49.158: INFO: Restart count of pod container-probe-9600/liveness-941a2767-4da9-443e-9646-ac6395ef5537 is now 5 (2m34.431305965s elapsed)
  STEP: deleting the pod @ 06/22/24 13:10:49.158
  Jun 22 13:10:49.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9600" for this suite. @ 06/22/24 13:10:49.177
• [156.512 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 06/22/24 13:10:49.189
  Jun 22 13:10:49.189: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename downward-api @ 06/22/24 13:10:49.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:10:49.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:10:49.206
  STEP: Creating a pod to test downward api env vars @ 06/22/24 13:10:49.216
  STEP: Saw pod success @ 06/22/24 13:10:53.244
  Jun 22 13:10:53.249: INFO: Trying to get logs from node ip-172-31-3-104 pod downward-api-6f70ada0-2115-411b-948a-8174b316c4b6 container dapi-container: <nil>
  STEP: delete the pod @ 06/22/24 13:10:53.26
  Jun 22 13:10:53.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3584" for this suite. @ 06/22/24 13:10:53.281
• [4.100 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 06/22/24 13:10:53.288
  Jun 22 13:10:53.288: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename statefulset @ 06/22/24 13:10:53.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:10:53.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:10:53.308
  STEP: Creating service test in namespace statefulset-3661 @ 06/22/24 13:10:53.311
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 06/22/24 13:10:53.318
  STEP: Creating stateful set ss in namespace statefulset-3661 @ 06/22/24 13:10:53.325
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3661 @ 06/22/24 13:10:53.333
  Jun 22 13:10:53.337: INFO: Found 0 stateful pods, waiting for 1
  Jun 22 13:11:03.339: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 06/22/24 13:11:03.339
  Jun 22 13:11:03.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-3661 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 22 13:11:03.435: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 22 13:11:03.435: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 22 13:11:03.435: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 22 13:11:03.440: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jun 22 13:11:13.442: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 22 13:11:13.442: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 22 13:11:13.461: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999836s
  Jun 22 13:11:14.467: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.995219953s
  Jun 22 13:11:15.472: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.989813284s
  Jun 22 13:11:16.479: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.984446813s
  Jun 22 13:11:17.483: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.978655527s
  Jun 22 13:11:18.489: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.973678681s
  Jun 22 13:11:19.495: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.967213489s
  Jun 22 13:11:20.501: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.961392938s
  Jun 22 13:11:21.505: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.956248437s
  Jun 22 13:11:22.511: INFO: Verifying statefulset ss doesn't scale past 1 for another 951.252728ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3661 @ 06/22/24 13:11:23.511
  Jun 22 13:11:23.516: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-3661 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 22 13:11:23.612: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 22 13:11:23.612: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 22 13:11:23.612: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 22 13:11:23.618: INFO: Found 1 stateful pods, waiting for 3
  Jun 22 13:11:33.618: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 22 13:11:33.618: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 22 13:11:33.618: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 06/22/24 13:11:33.618
  STEP: Scale down will halt with unhealthy stateful pod @ 06/22/24 13:11:33.618
  Jun 22 13:11:33.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-3661 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 22 13:11:33.720: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 22 13:11:33.720: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 22 13:11:33.720: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 22 13:11:33.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-3661 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 22 13:11:33.822: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 22 13:11:33.822: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 22 13:11:33.822: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 22 13:11:33.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-3661 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 22 13:11:33.936: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 22 13:11:33.936: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 22 13:11:33.936: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 22 13:11:33.936: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 22 13:11:33.940: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Jun 22 13:11:43.948: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 22 13:11:43.948: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun 22 13:11:43.948: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun 22 13:11:43.964: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999797s
  Jun 22 13:11:44.968: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.99596078s
  Jun 22 13:11:45.973: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.99166883s
  Jun 22 13:11:46.979: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.986000085s
  Jun 22 13:11:47.983: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.981129342s
  Jun 22 13:11:48.989: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.976683226s
  Jun 22 13:11:49.993: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.971206798s
  Jun 22 13:11:51.000: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.965982685s
  Jun 22 13:11:52.004: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.960343486s
  Jun 22 13:11:53.010: INFO: Verifying statefulset ss doesn't scale past 3 for another 955.419304ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3661 @ 06/22/24 13:11:54.01
  Jun 22 13:11:54.015: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-3661 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 22 13:11:54.108: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 22 13:11:54.108: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 22 13:11:54.108: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 22 13:11:54.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-3661 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 22 13:11:54.233: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 22 13:11:54.233: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 22 13:11:54.233: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 22 13:11:54.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-3661 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 22 13:11:54.336: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 22 13:11:54.336: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 22 13:11:54.336: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 22 13:11:54.336: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 06/22/24 13:12:04.347
  Jun 22 13:12:04.347: INFO: Deleting all statefulset in ns statefulset-3661
  Jun 22 13:12:04.350: INFO: Scaling statefulset ss to 0
  Jun 22 13:12:04.357: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 22 13:12:04.361: INFO: Deleting statefulset ss
  Jun 22 13:12:04.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3661" for this suite. @ 06/22/24 13:12:04.382
• [71.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 06/22/24 13:12:04.391
  Jun 22 13:12:04.391: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl @ 06/22/24 13:12:04.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:12:04.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:12:04.411
  STEP: validating api versions @ 06/22/24 13:12:04.414
  Jun 22 13:12:04.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-5852 api-versions'
  Jun 22 13:12:04.455: INFO: stderr: ""
  Jun 22 13:12:04.456: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Jun 22 13:12:04.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5852" for this suite. @ 06/22/24 13:12:04.46
• [0.077 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 06/22/24 13:12:04.468
  Jun 22 13:12:04.468: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename replicaset @ 06/22/24 13:12:04.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:12:04.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:12:04.488
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 06/22/24 13:12:04.49
  Jun 22 13:12:04.499: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jun 22 13:12:09.506: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/22/24 13:12:09.507
  STEP: getting scale subresource @ 06/22/24 13:12:09.507
  STEP: updating a scale subresource @ 06/22/24 13:12:09.514
  STEP: verifying the replicaset Spec.Replicas was modified @ 06/22/24 13:12:09.523
  STEP: Patch a scale subresource @ 06/22/24 13:12:09.537
  Jun 22 13:12:09.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9772" for this suite. @ 06/22/24 13:12:09.575
• [5.118 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 06/22/24 13:12:09.586
  Jun 22 13:12:09.586: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:12:09.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:12:09.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:12:09.615
  STEP: Creating configMap with name projected-configmap-test-volume-map-7d4b5cb7-edaa-45c5-acb2-97b4e68e0faa @ 06/22/24 13:12:09.618
  STEP: Creating a pod to test consume configMaps @ 06/22/24 13:12:09.623
  STEP: Saw pod success @ 06/22/24 13:12:13.652
  Jun 22 13:12:13.656: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-projected-configmaps-8daafe75-425e-4546-b952-5796686b7f5a container agnhost-container: <nil>
  STEP: delete the pod @ 06/22/24 13:12:13.67
  Jun 22 13:12:13.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8482" for this suite. @ 06/22/24 13:12:13.698
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 06/22/24 13:12:13.708
  Jun 22 13:12:13.708: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename namespaces @ 06/22/24 13:12:13.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:12:13.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:12:13.734
  STEP: Creating a test namespace @ 06/22/24 13:12:13.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:12:13.757
  STEP: Creating a service in the namespace @ 06/22/24 13:12:13.763
  STEP: Deleting the namespace @ 06/22/24 13:12:13.782
  STEP: Waiting for the namespace to be removed. @ 06/22/24 13:12:13.893
  STEP: Recreating the namespace @ 06/22/24 13:12:19.898
  STEP: Verifying there is no service in the namespace @ 06/22/24 13:12:19.915
  Jun 22 13:12:19.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7847" for this suite. @ 06/22/24 13:12:19.923
  STEP: Destroying namespace "nsdeletetest-6989" for this suite. @ 06/22/24 13:12:19.93
  Jun 22 13:12:19.933: INFO: Namespace nsdeletetest-6989 was already deleted
  STEP: Destroying namespace "nsdeletetest-9665" for this suite. @ 06/22/24 13:12:19.933
• [6.233 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 06/22/24 13:12:19.94
  Jun 22 13:12:19.940: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename watch @ 06/22/24 13:12:19.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:12:19.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:12:19.96
  STEP: creating a watch on configmaps with label A @ 06/22/24 13:12:19.962
  STEP: creating a watch on configmaps with label B @ 06/22/24 13:12:19.963
  STEP: creating a watch on configmaps with label A or B @ 06/22/24 13:12:19.964
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 06/22/24 13:12:19.965
  Jun 22 13:12:19.971: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8773  5319afde-9c12-49ee-bef1-35597fb73515 23500 0 2024-06-22 13:12:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-22 13:12:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 13:12:19.971: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8773  5319afde-9c12-49ee-bef1-35597fb73515 23500 0 2024-06-22 13:12:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-22 13:12:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 06/22/24 13:12:19.971
  Jun 22 13:12:19.984: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8773  5319afde-9c12-49ee-bef1-35597fb73515 23501 0 2024-06-22 13:12:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-22 13:12:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 13:12:19.984: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8773  5319afde-9c12-49ee-bef1-35597fb73515 23501 0 2024-06-22 13:12:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-22 13:12:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 06/22/24 13:12:19.984
  Jun 22 13:12:19.992: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8773  5319afde-9c12-49ee-bef1-35597fb73515 23502 0 2024-06-22 13:12:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-22 13:12:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 13:12:19.992: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8773  5319afde-9c12-49ee-bef1-35597fb73515 23502 0 2024-06-22 13:12:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-22 13:12:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 06/22/24 13:12:19.993
  Jun 22 13:12:19.999: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8773  5319afde-9c12-49ee-bef1-35597fb73515 23503 0 2024-06-22 13:12:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-22 13:12:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 13:12:19.999: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8773  5319afde-9c12-49ee-bef1-35597fb73515 23503 0 2024-06-22 13:12:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-22 13:12:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 06/22/24 13:12:19.999
  Jun 22 13:12:20.004: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8773  8197c7cd-6e2f-4675-bb83-7219da68c9ab 23504 0 2024-06-22 13:12:20 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-22 13:12:20 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 13:12:20.004: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8773  8197c7cd-6e2f-4675-bb83-7219da68c9ab 23504 0 2024-06-22 13:12:20 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-22 13:12:20 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 06/22/24 13:12:30.009
  Jun 22 13:12:30.018: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8773  8197c7cd-6e2f-4675-bb83-7219da68c9ab 23536 0 2024-06-22 13:12:20 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-22 13:12:20 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 13:12:30.018: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8773  8197c7cd-6e2f-4675-bb83-7219da68c9ab 23536 0 2024-06-22 13:12:20 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-22 13:12:20 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 13:12:40.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8773" for this suite. @ 06/22/24 13:12:40.025
• [20.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 06/22/24 13:12:40.033
  Jun 22 13:12:40.033: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename subpath @ 06/22/24 13:12:40.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:12:40.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:12:40.055
  STEP: Setting up data @ 06/22/24 13:12:40.057
  STEP: Creating pod pod-subpath-test-configmap-sk8j @ 06/22/24 13:12:40.067
  STEP: Creating a pod to test atomic-volume-subpath @ 06/22/24 13:12:40.067
  STEP: Saw pod success @ 06/22/24 13:13:02.143
  Jun 22 13:13:02.147: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-subpath-test-configmap-sk8j container test-container-subpath-configmap-sk8j: <nil>
  STEP: delete the pod @ 06/22/24 13:13:02.155
  STEP: Deleting pod pod-subpath-test-configmap-sk8j @ 06/22/24 13:13:02.17
  Jun 22 13:13:02.170: INFO: Deleting pod "pod-subpath-test-configmap-sk8j" in namespace "subpath-9036"
  Jun 22 13:13:02.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9036" for this suite. @ 06/22/24 13:13:02.182
• [22.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 06/22/24 13:13:02.19
  Jun 22 13:13:02.190: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir @ 06/22/24 13:13:02.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:13:02.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:13:02.21
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/22/24 13:13:02.212
  STEP: Saw pod success @ 06/22/24 13:13:04.24
  Jun 22 13:13:04.245: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-0adbe059-1ab9-46eb-aa33-1224b2a9141c container test-container: <nil>
  STEP: delete the pod @ 06/22/24 13:13:04.252
  Jun 22 13:13:04.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9786" for this suite. @ 06/22/24 13:13:04.273
• [2.090 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 06/22/24 13:13:04.28
  Jun 22 13:13:04.280: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename daemonsets @ 06/22/24 13:13:04.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:13:04.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:13:04.3
  STEP: Creating simple DaemonSet "daemon-set" @ 06/22/24 13:13:04.321
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/22/24 13:13:04.328
  Jun 22 13:13:04.332: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:13:04.332: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:13:04.336: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 13:13:04.336: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  Jun 22 13:13:05.334: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:13:05.334: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:13:05.338: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 22 13:13:05.338: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  Jun 22 13:13:06.333: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:13:06.333: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:13:06.337: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 22 13:13:06.337: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 06/22/24 13:13:06.341
  STEP: DeleteCollection of the DaemonSets @ 06/22/24 13:13:06.344
  STEP: Verify that ReplicaSets have been deleted @ 06/22/24 13:13:06.354
  Jun 22 13:13:06.367: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23710"},"items":null}

  Jun 22 13:13:06.379: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23712"},"items":[{"metadata":{"name":"daemon-set-5sb2r","generateName":"daemon-set-","namespace":"daemonsets-9112","uid":"ce813d8c-8d90-422b-808f-0df693069368","resourceVersion":"23711","creationTimestamp":"2024-06-22T13:13:04Z","deletionTimestamp":"2024-06-22T13:13:36Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0fc49ce2-764b-460a-9e5b-069d6eab2577","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-22T13:13:04Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0fc49ce2-764b-460a-9e5b-069d6eab2577\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-22T13:13:05Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.251.147\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-gzlg4","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-gzlg4","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-85-228","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-85-228"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-22T13:13:05Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-22T13:13:04Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-22T13:13:05Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-22T13:13:05Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-22T13:13:04Z"}],"hostIP":"172.31.85.228","hostIPs":[{"ip":"172.31.85.228"}],"podIP":"192.168.251.147","podIPs":[{"ip":"192.168.251.147"}],"startTime":"2024-06-22T13:13:04Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-22T13:13:04Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://b76d15f6addbab8325c1e844a900d88fe07129b1852e9dff092586c3145a880f","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-65l8k","generateName":"daemon-set-","namespace":"daemonsets-9112","uid":"543ccdda-8617-47d5-a2c4-8cf27430fb3d","resourceVersion":"23702","creationTimestamp":"2024-06-22T13:13:04Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0fc49ce2-764b-460a-9e5b-069d6eab2577","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-22T13:13:04Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0fc49ce2-764b-460a-9e5b-069d6eab2577\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-22T13:13:04Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.20.134\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-78m72","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-78m72","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-3-104","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-3-104"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-22T13:13:04Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-22T13:13:04Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-22T13:13:04Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-22T13:13:04Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-22T13:13:04Z"}],"hostIP":"172.31.3.104","hostIPs":[{"ip":"172.31.3.104"}],"podIP":"192.168.20.134","podIPs":[{"ip":"192.168.20.134"}],"startTime":"2024-06-22T13:13:04Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-22T13:13:04Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://3a6ecbccb65f9c7f5cd275a03e6cd23c4ea32dc57901908e616e1ad34d06a4d9","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-tsff8","generateName":"daemon-set-","namespace":"daemonsets-9112","uid":"2e913839-ff59-4ce0-948b-1867450a35cf","resourceVersion":"23712","creationTimestamp":"2024-06-22T13:13:04Z","deletionTimestamp":"2024-06-22T13:13:36Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0fc49ce2-764b-460a-9e5b-069d6eab2577","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-22T13:13:04Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0fc49ce2-764b-460a-9e5b-069d6eab2577\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-22T13:13:05Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.90.117\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vmd42","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vmd42","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-25-91","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-25-91"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-22T13:13:05Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-22T13:13:04Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-22T13:13:05Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-22T13:13:05Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-22T13:13:04Z"}],"hostIP":"172.31.25.91","hostIPs":[{"ip":"172.31.25.91"}],"podIP":"192.168.90.117","podIPs":[{"ip":"192.168.90.117"}],"startTime":"2024-06-22T13:13:04Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-22T13:13:04Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://ecbd45222343d1dd7511f72aac3d752aa99d6d7458f05489adcda62f43b78b8b","started":true}],"qosClass":"BestEffort"}}]}

  Jun 22 13:13:06.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9112" for this suite. @ 06/22/24 13:13:06.398
• [2.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 06/22/24 13:13:06.407
  Jun 22 13:13:06.407: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-runtime @ 06/22/24 13:13:06.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:13:06.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:13:06.427
  STEP: create the container @ 06/22/24 13:13:06.429
  W0622 13:13:06.439886      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/22/24 13:13:06.44
  STEP: get the container status @ 06/22/24 13:13:09.461
  STEP: the container should be terminated @ 06/22/24 13:13:09.464
  STEP: the termination message should be set @ 06/22/24 13:13:09.464
  Jun 22 13:13:09.464: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 06/22/24 13:13:09.465
  Jun 22 13:13:09.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4431" for this suite. @ 06/22/24 13:13:09.488
• [3.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 06/22/24 13:13:09.496
  Jun 22 13:13:09.496: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename watch @ 06/22/24 13:13:09.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:13:09.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:13:09.515
  STEP: getting a starting resourceVersion @ 06/22/24 13:13:09.517
  STEP: starting a background goroutine to produce watch events @ 06/22/24 13:13:09.521
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 06/22/24 13:13:09.521
  Jun 22 13:13:12.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-221" for this suite. @ 06/22/24 13:13:12.353
• [2.910 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 06/22/24 13:13:12.406
  Jun 22 13:13:12.407: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename chunking @ 06/22/24 13:13:12.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:13:12.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:13:12.426
  STEP: creating a large number of resources @ 06/22/24 13:13:12.428
  STEP: retrieving the first page @ 06/22/24 13:13:30.114
  Jun 22 13:13:30.164: INFO: Retrieved 40/40 results with rv 24382 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQzODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 06/22/24 13:13:30.164
  Jun 22 13:13:50.171: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQzODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 22 13:14:10.172: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQzODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 22 13:14:30.170: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQzODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 22 13:14:50.173: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQzODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 22 13:15:10.172: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQzODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 22 13:15:30.170: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQzODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 22 13:15:50.170: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQzODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 22 13:16:10.171: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQzODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 22 13:16:30.171: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQzODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 22 13:16:50.171: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQzODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 22 13:17:10.170: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQzODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 22 13:17:30.172: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQzODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 22 13:17:50.171: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQzODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 22 13:18:10.173: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQzODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 22 13:18:30.171: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQzODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jun 22 13:18:50.170: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Jun 22 13:18:50.170: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 06/22/24 13:18:50.17
  STEP: retrieving all remaining pages @ 06/22/24 13:18:50.175
  Jun 22 13:18:50.180: INFO: Retrieved 40/40 results with rv 25012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Jun 22 13:18:50.184: INFO: Retrieved 40/40 results with rv 25012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Jun 22 13:18:50.189: INFO: Retrieved 40/40 results with rv 25012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Jun 22 13:18:50.193: INFO: Retrieved 40/40 results with rv 25012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Jun 22 13:18:50.197: INFO: Retrieved 40/40 results with rv 25012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Jun 22 13:18:50.201: INFO: Retrieved 40/40 results with rv 25012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Jun 22 13:18:50.205: INFO: Retrieved 40/40 results with rv 25012 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUwMTIsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Jun 22 13:18:50.208: INFO: Retrieved 40/40 results with rv 25012 and continue 
  Jun 22 13:18:50.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2291" for this suite. @ 06/22/24 13:18:50.213
• [337.813 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 06/22/24 13:18:50.22
  Jun 22 13:18:50.220: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl @ 06/22/24 13:18:50.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:18:50.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:18:50.24
  STEP: starting the proxy server @ 06/22/24 13:18:50.242
  Jun 22 13:18:50.243: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-4128 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 06/22/24 13:18:50.274
  Jun 22 13:18:50.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4128" for this suite. @ 06/22/24 13:18:50.284
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 06/22/24 13:18:50.291
  Jun 22 13:18:50.291: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:18:50.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:18:50.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:18:50.31
  STEP: Creating projection with secret that has name projected-secret-test-9dc2f677-6f11-413e-940b-2be81c64cee8 @ 06/22/24 13:18:50.312
  STEP: Creating a pod to test consume secrets @ 06/22/24 13:18:50.317
  STEP: Saw pod success @ 06/22/24 13:18:54.345
  Jun 22 13:18:54.349: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-projected-secrets-247cd76d-ef74-4eee-9b6e-fe4a0f0b731f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/22/24 13:18:54.368
  Jun 22 13:18:54.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6367" for this suite. @ 06/22/24 13:18:54.393
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 06/22/24 13:18:54.401
  Jun 22 13:18:54.401: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename var-expansion @ 06/22/24 13:18:54.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:18:54.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:18:54.425
  STEP: creating the pod @ 06/22/24 13:18:54.428
  STEP: waiting for pod running @ 06/22/24 13:18:54.439
  STEP: creating a file in subpath @ 06/22/24 13:18:56.449
  Jun 22 13:18:56.454: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-8406 PodName:var-expansion-db50e16b-69ff-44d6-985c-b28230f5d0c9 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:18:56.454: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:18:56.454: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:18:56.454: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-8406/pods/var-expansion-db50e16b-69ff-44d6-985c-b28230f5d0c9/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 06/22/24 13:18:56.515
  Jun 22 13:18:56.525: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-8406 PodName:var-expansion-db50e16b-69ff-44d6-985c-b28230f5d0c9 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:18:56.525: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:18:56.525: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:18:56.525: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-8406/pods/var-expansion-db50e16b-69ff-44d6-985c-b28230f5d0c9/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 06/22/24 13:18:56.566
  Jun 22 13:18:57.079: INFO: Successfully updated pod "var-expansion-db50e16b-69ff-44d6-985c-b28230f5d0c9"
  STEP: waiting for annotated pod running @ 06/22/24 13:18:57.079
  STEP: deleting the pod gracefully @ 06/22/24 13:18:57.085
  Jun 22 13:18:57.085: INFO: Deleting pod "var-expansion-db50e16b-69ff-44d6-985c-b28230f5d0c9" in namespace "var-expansion-8406"
  Jun 22 13:18:57.094: INFO: Wait up to 5m0s for pod "var-expansion-db50e16b-69ff-44d6-985c-b28230f5d0c9" to be fully deleted
  Jun 22 13:19:29.184: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8406" for this suite. @ 06/22/24 13:19:29.189
• [34.797 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 06/22/24 13:19:29.198
  Jun 22 13:19:29.198: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename secrets @ 06/22/24 13:19:29.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:19:29.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:19:29.225
  STEP: Creating secret with name s-test-opt-del-f357777e-fc7c-4d76-8ebb-48b5ba61126b @ 06/22/24 13:19:29.234
  STEP: Creating secret with name s-test-opt-upd-4d732672-295a-4f4b-943f-963088295778 @ 06/22/24 13:19:29.239
  STEP: Creating the pod @ 06/22/24 13:19:29.244
  STEP: Deleting secret s-test-opt-del-f357777e-fc7c-4d76-8ebb-48b5ba61126b @ 06/22/24 13:19:31.292
  STEP: Updating secret s-test-opt-upd-4d732672-295a-4f4b-943f-963088295778 @ 06/22/24 13:19:31.299
  STEP: Creating secret with name s-test-opt-create-bbdb79ca-769c-4c7c-9932-707ec861d6b2 @ 06/22/24 13:19:31.305
  STEP: waiting to observe update in volume @ 06/22/24 13:19:31.312
  Jun 22 13:20:51.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2335" for this suite. @ 06/22/24 13:20:51.688
• [82.497 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 06/22/24 13:20:51.696
  Jun 22 13:20:51.696: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pods @ 06/22/24 13:20:51.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:20:51.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:20:51.715
  STEP: Create a pod @ 06/22/24 13:20:51.718
  STEP: patching /status @ 06/22/24 13:20:53.738
  Jun 22 13:20:53.749: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Jun 22 13:20:53.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4656" for this suite. @ 06/22/24 13:20:53.755
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 06/22/24 13:20:53.764
  Jun 22 13:20:53.764: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-probe @ 06/22/24 13:20:53.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:20:53.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:20:53.785
  STEP: Creating pod liveness-79fa2c90-72d9-4a44-9175-3e0f9830fe59 in namespace container-probe-1403 @ 06/22/24 13:20:53.789
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/22/24 13:20:55.813
  Jun 22 13:20:55.816: INFO: Initial restart count of pod liveness-79fa2c90-72d9-4a44-9175-3e0f9830fe59 is 0
  Jun 22 13:20:55.821: INFO: Get pod liveness-79fa2c90-72d9-4a44-9175-3e0f9830fe59 in namespace container-probe-1403
  Jun 22 13:20:57.826: INFO: Get pod liveness-79fa2c90-72d9-4a44-9175-3e0f9830fe59 in namespace container-probe-1403
  Jun 22 13:20:59.831: INFO: Get pod liveness-79fa2c90-72d9-4a44-9175-3e0f9830fe59 in namespace container-probe-1403
  Jun 22 13:21:01.836: INFO: Get pod liveness-79fa2c90-72d9-4a44-9175-3e0f9830fe59 in namespace container-probe-1403
  Jun 22 13:21:03.842: INFO: Get pod liveness-79fa2c90-72d9-4a44-9175-3e0f9830fe59 in namespace container-probe-1403
  Jun 22 13:21:05.846: INFO: Get pod liveness-79fa2c90-72d9-4a44-9175-3e0f9830fe59 in namespace container-probe-1403
  Jun 22 13:21:07.851: INFO: Get pod liveness-79fa2c90-72d9-4a44-9175-3e0f9830fe59 in namespace container-probe-1403
  Jun 22 13:21:09.856: INFO: Get pod liveness-79fa2c90-72d9-4a44-9175-3e0f9830fe59 in namespace container-probe-1403
  Jun 22 13:21:11.863: INFO: Get pod liveness-79fa2c90-72d9-4a44-9175-3e0f9830fe59 in namespace container-probe-1403
  Jun 22 13:21:13.868: INFO: Get pod liveness-79fa2c90-72d9-4a44-9175-3e0f9830fe59 in namespace container-probe-1403
  Jun 22 13:21:15.873: INFO: Get pod liveness-79fa2c90-72d9-4a44-9175-3e0f9830fe59 in namespace container-probe-1403
  Jun 22 13:21:15.873: INFO: Restart count of pod container-probe-1403/liveness-79fa2c90-72d9-4a44-9175-3e0f9830fe59 is now 1 (20.057208146s elapsed)
  STEP: deleting the pod @ 06/22/24 13:21:15.874
  Jun 22 13:21:15.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1403" for this suite. @ 06/22/24 13:21:15.895
• [22.140 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 06/22/24 13:21:15.904
  Jun 22 13:21:15.904: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename svcaccounts @ 06/22/24 13:21:15.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:21:15.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:21:15.927
  Jun 22 13:21:15.942: INFO: created pod
  STEP: Saw pod success @ 06/22/24 13:21:17.955
  Jun 22 13:21:47.955: INFO: polling logs
  Jun 22 13:21:47.963: INFO: Pod logs: 
  I0622 13:21:16.535997       1 log.go:245] OK: Got token
  I0622 13:21:16.536062       1 log.go:245] validating with in-cluster discovery
  I0622 13:21:16.536272       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0622 13:21:16.536293       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-9033:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0004570b0), NotBefore:(*jwt.NumericDate)(0xc000457198), IssuedAt:(*jwt.NumericDate)(0xc0004570c0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9033", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"60050dcc-f067-40ae-8a70-6b1420688cbf"}}}
  I0622 13:21:16.543584       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0622 13:21:16.547310       1 log.go:245] OK: Validated signature on JWT
  I0622 13:21:16.547424       1 log.go:245] OK: Got valid claims from token!
  I0622 13:21:16.547447       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-9033:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001268d0), NotBefore:(*jwt.NumericDate)(0xc000126938), IssuedAt:(*jwt.NumericDate)(0xc0001268d8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9033", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"60050dcc-f067-40ae-8a70-6b1420688cbf"}}}

  Jun 22 13:21:47.963: INFO: completed pod
  Jun 22 13:21:47.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9033" for this suite. @ 06/22/24 13:21:47.976
• [32.080 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 06/22/24 13:21:47.984
  Jun 22 13:21:47.984: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-probe @ 06/22/24 13:21:47.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:21:47.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:21:48.001
  Jun 22 13:22:48.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9177" for this suite. @ 06/22/24 13:22:48.022
• [60.045 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 06/22/24 13:22:48.03
  Jun 22 13:22:48.030: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:22:48.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:22:48.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:22:48.05
  STEP: Creating configMap with name projected-configmap-test-volume-map-9a5df754-2d44-49ed-9666-b12a20bf0f9c @ 06/22/24 13:22:48.053
  STEP: Creating a pod to test consume configMaps @ 06/22/24 13:22:48.058
  STEP: Saw pod success @ 06/22/24 13:22:50.082
  Jun 22 13:22:50.086: INFO: Trying to get logs from node ip-172-31-85-228 pod pod-projected-configmaps-0e265260-5f0e-49df-9496-8c54ed086ac6 container agnhost-container: <nil>
  STEP: delete the pod @ 06/22/24 13:22:50.102
  Jun 22 13:22:50.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9264" for this suite. @ 06/22/24 13:22:50.124
• [2.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 06/22/24 13:22:50.131
  Jun 22 13:22:50.131: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename crd-watch @ 06/22/24 13:22:50.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:22:50.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:22:50.152
  Jun 22 13:22:50.155: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Creating first CR  @ 06/22/24 13:22:52.694
  Jun 22 13:22:52.699: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-22T13:22:52Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-22T13:22:52Z]] name:name1 resourceVersion:26206 uid:7ae2fc30-e806-4893-9b89-62c9e07abd4c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 06/22/24 13:23:02.701
  Jun 22 13:23:02.708: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-22T13:23:02Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-22T13:23:02Z]] name:name2 resourceVersion:26258 uid:c46c66a6-567a-4b3f-9611-c2b31bd036d6] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 06/22/24 13:23:12.709
  Jun 22 13:23:12.716: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-22T13:22:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-22T13:23:12Z]] name:name1 resourceVersion:26278 uid:7ae2fc30-e806-4893-9b89-62c9e07abd4c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 06/22/24 13:23:22.717
  Jun 22 13:23:22.726: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-22T13:23:02Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-22T13:23:22Z]] name:name2 resourceVersion:26298 uid:c46c66a6-567a-4b3f-9611-c2b31bd036d6] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 06/22/24 13:23:32.726
  Jun 22 13:23:32.735: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-22T13:22:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-22T13:23:12Z]] name:name1 resourceVersion:26320 uid:7ae2fc30-e806-4893-9b89-62c9e07abd4c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 06/22/24 13:23:42.737
  Jun 22 13:23:42.747: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-22T13:23:02Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-22T13:23:22Z]] name:name2 resourceVersion:26341 uid:c46c66a6-567a-4b3f-9611-c2b31bd036d6] num:map[num1:9223372036854775807 num2:1000000]]}
  Jun 22 13:23:53.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-6595" for this suite. @ 06/22/24 13:23:53.269
• [63.146 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 06/22/24 13:23:53.277
  Jun 22 13:23:53.277: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename svcaccounts @ 06/22/24 13:23:53.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:23:53.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:23:53.298
  Jun 22 13:23:53.304: INFO: Got root ca configmap in namespace "svcaccounts-9709"
  Jun 22 13:23:53.312: INFO: Deleted root ca configmap in namespace "svcaccounts-9709"
  STEP: waiting for a new root ca configmap created @ 06/22/24 13:23:53.813
  Jun 22 13:23:53.817: INFO: Recreated root ca configmap in namespace "svcaccounts-9709"
  Jun 22 13:23:53.823: INFO: Updated root ca configmap in namespace "svcaccounts-9709"
  STEP: waiting for the root ca configmap reconciled @ 06/22/24 13:23:54.323
  Jun 22 13:23:54.327: INFO: Reconciled root ca configmap in namespace "svcaccounts-9709"
  Jun 22 13:23:54.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9709" for this suite. @ 06/22/24 13:23:54.332
• [1.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 06/22/24 13:23:54.34
  Jun 22 13:23:54.340: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename daemonsets @ 06/22/24 13:23:54.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:23:54.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:23:54.361
  STEP: Creating simple DaemonSet "daemon-set" @ 06/22/24 13:23:54.384
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/22/24 13:23:54.391
  Jun 22 13:23:54.396: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:23:54.396: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:23:54.399: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 13:23:54.399: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  Jun 22 13:23:55.397: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:23:55.397: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:23:55.401: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 22 13:23:55.401: INFO: Node ip-172-31-3-104 is running 0 daemon pod, expected 1
  Jun 22 13:23:56.399: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:23:56.399: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:23:56.403: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 22 13:23:56.403: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 06/22/24 13:23:56.408
  Jun 22 13:23:56.434: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:23:56.434: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:23:56.440: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 22 13:23:56.440: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  Jun 22 13:23:57.430: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:23:57.430: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:23:57.434: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 22 13:23:57.434: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  Jun 22 13:23:58.431: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:23:58.431: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:23:58.434: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 22 13:23:58.434: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/22/24 13:23:58.437
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9603, will wait for the garbage collector to delete the pods @ 06/22/24 13:23:58.437
  Jun 22 13:23:58.502: INFO: Deleting DaemonSet.extensions daemon-set took: 9.150883ms
  Jun 22 13:23:58.603: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.813358ms
  Jun 22 13:24:00.208: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 13:24:00.208: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 22 13:24:00.212: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26502"},"items":null}

  Jun 22 13:24:00.216: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26502"},"items":null}

  Jun 22 13:24:00.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9603" for this suite. @ 06/22/24 13:24:00.233
• [5.900 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 06/22/24 13:24:00.241
  Jun 22 13:24:00.241: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename endpointslice @ 06/22/24 13:24:00.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:24:00.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:24:00.261
  STEP: getting /apis @ 06/22/24 13:24:00.263
  STEP: getting /apis/discovery.k8s.io @ 06/22/24 13:24:00.266
  STEP: getting /apis/discovery.k8s.iov1 @ 06/22/24 13:24:00.267
  STEP: creating @ 06/22/24 13:24:00.268
  STEP: getting @ 06/22/24 13:24:00.285
  STEP: listing @ 06/22/24 13:24:00.29
  STEP: watching @ 06/22/24 13:24:00.293
  Jun 22 13:24:00.293: INFO: starting watch
  STEP: cluster-wide listing @ 06/22/24 13:24:00.294
  STEP: cluster-wide watching @ 06/22/24 13:24:00.298
  Jun 22 13:24:00.298: INFO: starting watch
  STEP: patching @ 06/22/24 13:24:00.299
  STEP: updating @ 06/22/24 13:24:00.306
  Jun 22 13:24:00.313: INFO: waiting for watch events with expected annotations
  Jun 22 13:24:00.313: INFO: saw patched and updated annotations
  STEP: deleting @ 06/22/24 13:24:00.313
  STEP: deleting a collection @ 06/22/24 13:24:00.328
  Jun 22 13:24:00.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2959" for this suite. @ 06/22/24 13:24:00.35
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 06/22/24 13:24:00.358
  Jun 22 13:24:00.358: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:24:00.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:24:00.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:24:00.377
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 13:24:00.38
  STEP: Saw pod success @ 06/22/24 13:24:04.408
  Jun 22 13:24:04.412: INFO: Trying to get logs from node ip-172-31-3-104 pod downwardapi-volume-80456193-92c8-46b9-8b39-91886dadf57a container client-container: <nil>
  STEP: delete the pod @ 06/22/24 13:24:04.426
  Jun 22 13:24:04.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7571" for this suite. @ 06/22/24 13:24:04.448
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 06/22/24 13:24:04.459
  Jun 22 13:24:04.459: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename dns @ 06/22/24 13:24:04.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:24:04.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:24:04.48
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6171.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-6171.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 06/22/24 13:24:04.49
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6171.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-6171.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 06/22/24 13:24:04.491
  STEP: creating a pod to probe /etc/hosts @ 06/22/24 13:24:04.491
  STEP: submitting the pod to kubernetes @ 06/22/24 13:24:04.491
  STEP: retrieving the pod @ 06/22/24 13:24:06.518
  STEP: looking for the results for each expected name from probers @ 06/22/24 13:24:06.522
  Jun 22 13:24:06.538: INFO: DNS probes using dns-6171/dns-test-6d1c3758-6225-4fcb-a512-f5440e349755 succeeded

  STEP: deleting the pod @ 06/22/24 13:24:06.538
  Jun 22 13:24:06.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6171" for this suite. @ 06/22/24 13:24:06.555
• [2.104 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 06/22/24 13:24:06.564
  Jun 22 13:24:06.564: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir @ 06/22/24 13:24:06.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:24:06.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:24:06.583
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/22/24 13:24:06.586
  STEP: Saw pod success @ 06/22/24 13:24:10.612
  Jun 22 13:24:10.616: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-46e9ec70-5d50-469d-b3e6-bfcd46b471b9 container test-container: <nil>
  STEP: delete the pod @ 06/22/24 13:24:10.625
  Jun 22 13:24:10.643: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8643" for this suite. @ 06/22/24 13:24:10.648
• [4.094 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 06/22/24 13:24:10.658
  Jun 22 13:24:10.658: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pods @ 06/22/24 13:24:10.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:24:10.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:24:10.681
  STEP: creating a Pod with a static label @ 06/22/24 13:24:10.691
  STEP: watching for Pod to be ready @ 06/22/24 13:24:10.704
  Jun 22 13:24:10.706: INFO: observed Pod pod-test in namespace pods-2549 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Jun 22 13:24:10.710: INFO: observed Pod pod-test in namespace pods-2549 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 13:24:10 +0000 UTC  }]
  Jun 22 13:24:10.724: INFO: observed Pod pod-test in namespace pods-2549 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-22 13:24:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 13:24:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-22 13:24:10 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-22 13:24:10 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 13:24:10 +0000 UTC  }]
  Jun 22 13:24:12.032: INFO: Found Pod pod-test in namespace pods-2549 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 13:24:12 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 13:24:10 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 13:24:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 13:24:12 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 13:24:10 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 06/22/24 13:24:12.037
  STEP: getting the Pod and ensuring that it's patched @ 06/22/24 13:24:12.047
  STEP: replacing the Pod's status Ready condition to False @ 06/22/24 13:24:12.051
  STEP: check the Pod again to ensure its Ready conditions are False @ 06/22/24 13:24:12.063
  STEP: deleting the Pod via a Collection with a LabelSelector @ 06/22/24 13:24:12.063
  STEP: watching for the Pod to be deleted @ 06/22/24 13:24:12.077
  Jun 22 13:24:12.079: INFO: observed event type MODIFIED
  Jun 22 13:24:14.041: INFO: observed event type MODIFIED
  Jun 22 13:24:14.200: INFO: observed event type MODIFIED
  Jun 22 13:24:15.041: INFO: observed event type MODIFIED
  Jun 22 13:24:15.058: INFO: observed event type MODIFIED
  Jun 22 13:24:15.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2549" for this suite. @ 06/22/24 13:24:15.069
• [4.418 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 06/22/24 13:24:15.076
  Jun 22 13:24:15.076: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename downward-api @ 06/22/24 13:24:15.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:24:15.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:24:15.096
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 13:24:15.098
  STEP: Saw pod success @ 06/22/24 13:24:19.125
  Jun 22 13:24:19.128: INFO: Trying to get logs from node ip-172-31-3-104 pod downwardapi-volume-9a254ad3-67a1-4bbc-ad59-986b8f5a591b container client-container: <nil>
  STEP: delete the pod @ 06/22/24 13:24:19.136
  Jun 22 13:24:19.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1288" for this suite. @ 06/22/24 13:24:19.16
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 06/22/24 13:24:19.167
  Jun 22 13:24:19.167: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename daemonsets @ 06/22/24 13:24:19.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:24:19.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:24:19.189
  STEP: Creating a simple DaemonSet "daemon-set" @ 06/22/24 13:24:19.213
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/22/24 13:24:19.219
  Jun 22 13:24:19.225: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:24:19.226: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:24:19.230: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 13:24:19.230: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  Jun 22 13:24:20.224: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:24:20.224: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:24:20.227: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 22 13:24:20.227: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 06/22/24 13:24:20.233
  Jun 22 13:24:20.255: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:24:20.255: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:24:20.259: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 22 13:24:20.259: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  Jun 22 13:24:21.252: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:24:21.252: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:24:21.256: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 22 13:24:21.256: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 06/22/24 13:24:21.256
  STEP: Deleting DaemonSet "daemon-set" @ 06/22/24 13:24:21.263
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-543, will wait for the garbage collector to delete the pods @ 06/22/24 13:24:21.263
  Jun 22 13:24:21.328: INFO: Deleting DaemonSet.extensions daemon-set took: 10.423888ms
  Jun 22 13:24:21.428: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.435336ms
  Jun 22 13:24:23.234: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 13:24:23.234: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 22 13:24:23.237: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26881"},"items":null}

  Jun 22 13:24:23.240: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26881"},"items":null}

  Jun 22 13:24:23.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-543" for this suite. @ 06/22/24 13:24:23.259
• [4.100 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 06/22/24 13:24:23.267
  Jun 22 13:24:23.267: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename proxy @ 06/22/24 13:24:23.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:24:23.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:24:23.285
  STEP: starting an echo server on multiple ports @ 06/22/24 13:24:23.298
  STEP: creating replication controller proxy-service-khgsg in namespace proxy-7100 @ 06/22/24 13:24:23.298
  I0622 13:24:23.306445      19 runners.go:197] Created replication controller with name: proxy-service-khgsg, namespace: proxy-7100, replica count: 1
  I0622 13:24:24.357633      19 runners.go:197] proxy-service-khgsg Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 22 13:24:24.361: INFO: setup took 1.073563314s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 06/22/24 13:24:24.361
  Jun 22 13:24:24.366: INFO: (0) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 5.065089ms)
  Jun 22 13:24:24.366: INFO: (0) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 4.986265ms)
  Jun 22 13:24:24.367: INFO: (0) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 5.568803ms)
  Jun 22 13:24:24.369: INFO: (0) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 7.481057ms)
  Jun 22 13:24:24.370: INFO: (0) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 8.433052ms)
  Jun 22 13:24:24.374: INFO: (0) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 12.596443ms)
  Jun 22 13:24:24.374: INFO: (0) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 12.950053ms)
  Jun 22 13:24:24.377: INFO: (0) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 15.695892ms)
  Jun 22 13:24:24.377: INFO: (0) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 15.703473ms)
  Jun 22 13:24:24.377: INFO: (0) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 15.590878ms)
  Jun 22 13:24:24.378: INFO: (0) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 16.749172ms)
  Jun 22 13:24:24.378: INFO: (0) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 16.77952ms)
  Jun 22 13:24:24.378: INFO: (0) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 16.734236ms)
  Jun 22 13:24:24.378: INFO: (0) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 17.37145ms)
  Jun 22 13:24:24.379: INFO: (0) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 17.469112ms)
  Jun 22 13:24:24.379: INFO: (0) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 17.550336ms)
  Jun 22 13:24:24.383: INFO: (1) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 4.554677ms)
  Jun 22 13:24:24.383: INFO: (1) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 4.523869ms)
  Jun 22 13:24:24.386: INFO: (1) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 7.180389ms)
  Jun 22 13:24:24.386: INFO: (1) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 7.238805ms)
  Jun 22 13:24:24.386: INFO: (1) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 7.229578ms)
  Jun 22 13:24:24.387: INFO: (1) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 8.502195ms)
  Jun 22 13:24:24.387: INFO: (1) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 8.276992ms)
  Jun 22 13:24:24.388: INFO: (1) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 9.099507ms)
  Jun 22 13:24:24.388: INFO: (1) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 9.155059ms)
  Jun 22 13:24:24.388: INFO: (1) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 9.614012ms)
  Jun 22 13:24:24.389: INFO: (1) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 9.482775ms)
  Jun 22 13:24:24.389: INFO: (1) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 9.631241ms)
  Jun 22 13:24:24.389: INFO: (1) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 9.513501ms)
  Jun 22 13:24:24.389: INFO: (1) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 10.092971ms)
  Jun 22 13:24:24.389: INFO: (1) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 10.050023ms)
  Jun 22 13:24:24.389: INFO: (1) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 10.275565ms)
  Jun 22 13:24:24.393: INFO: (2) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 3.557643ms)
  Jun 22 13:24:24.393: INFO: (2) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 3.674578ms)
  Jun 22 13:24:24.394: INFO: (2) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 4.256184ms)
  Jun 22 13:24:24.394: INFO: (2) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 4.806497ms)
  Jun 22 13:24:24.396: INFO: (2) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 6.016731ms)
  Jun 22 13:24:24.396: INFO: (2) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 6.13482ms)
  Jun 22 13:24:24.396: INFO: (2) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 6.874092ms)
  Jun 22 13:24:24.397: INFO: (2) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 7.501159ms)
  Jun 22 13:24:24.397: INFO: (2) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 7.448692ms)
  Jun 22 13:24:24.398: INFO: (2) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 7.889916ms)
  Jun 22 13:24:24.398: INFO: (2) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 8.235607ms)
  Jun 22 13:24:24.398: INFO: (2) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 8.397896ms)
  Jun 22 13:24:24.398: INFO: (2) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 8.471106ms)
  Jun 22 13:24:24.398: INFO: (2) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 8.599341ms)
  Jun 22 13:24:24.399: INFO: (2) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 8.929293ms)
  Jun 22 13:24:24.399: INFO: (2) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 9.099828ms)
  Jun 22 13:24:24.402: INFO: (3) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 3.004872ms)
  Jun 22 13:24:24.403: INFO: (3) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 3.609349ms)
  Jun 22 13:24:24.403: INFO: (3) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 4.083336ms)
  Jun 22 13:24:24.404: INFO: (3) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 4.854772ms)
  Jun 22 13:24:24.404: INFO: (3) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 5.343415ms)
  Jun 22 13:24:24.405: INFO: (3) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 6.093256ms)
  Jun 22 13:24:24.406: INFO: (3) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 6.575776ms)
  Jun 22 13:24:24.406: INFO: (3) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 7.091082ms)
  Jun 22 13:24:24.406: INFO: (3) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 7.27978ms)
  Jun 22 13:24:24.406: INFO: (3) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 7.386106ms)
  Jun 22 13:24:24.407: INFO: (3) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 8.077514ms)
  Jun 22 13:24:24.407: INFO: (3) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 7.92953ms)
  Jun 22 13:24:24.407: INFO: (3) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 8.300631ms)
  Jun 22 13:24:24.408: INFO: (3) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 8.7505ms)
  Jun 22 13:24:24.408: INFO: (3) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 8.968293ms)
  Jun 22 13:24:24.408: INFO: (3) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 9.041151ms)
  Jun 22 13:24:24.413: INFO: (4) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 4.723597ms)
  Jun 22 13:24:24.414: INFO: (4) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 5.222335ms)
  Jun 22 13:24:24.414: INFO: (4) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 5.181214ms)
  Jun 22 13:24:24.414: INFO: (4) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 5.36421ms)
  Jun 22 13:24:24.415: INFO: (4) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 6.066567ms)
  Jun 22 13:24:24.415: INFO: (4) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 6.260399ms)
  Jun 22 13:24:24.420: INFO: (4) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 11.263743ms)
  Jun 22 13:24:24.420: INFO: (4) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 11.192283ms)
  Jun 22 13:24:24.420: INFO: (4) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 11.322513ms)
  Jun 22 13:24:24.420: INFO: (4) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 11.514524ms)
  Jun 22 13:24:24.420: INFO: (4) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 11.669276ms)
  Jun 22 13:24:24.424: INFO: (4) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 15.219665ms)
  Jun 22 13:24:24.424: INFO: (4) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 15.939837ms)
  Jun 22 13:24:24.425: INFO: (4) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 16.378834ms)
  Jun 22 13:24:24.425: INFO: (4) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 16.375081ms)
  Jun 22 13:24:24.425: INFO: (4) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 16.615636ms)
  Jun 22 13:24:24.429: INFO: (5) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 3.981251ms)
  Jun 22 13:24:24.430: INFO: (5) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 4.995624ms)
  Jun 22 13:24:24.431: INFO: (5) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 6.057603ms)
  Jun 22 13:24:24.431: INFO: (5) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 6.246059ms)
  Jun 22 13:24:24.432: INFO: (5) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 6.362101ms)
  Jun 22 13:24:24.432: INFO: (5) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 7.04905ms)
  Jun 22 13:24:24.432: INFO: (5) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 7.370294ms)
  Jun 22 13:24:24.433: INFO: (5) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 7.741079ms)
  Jun 22 13:24:24.433: INFO: (5) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 8.031759ms)
  Jun 22 13:24:24.433: INFO: (5) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 8.030115ms)
  Jun 22 13:24:24.433: INFO: (5) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 8.223613ms)
  Jun 22 13:24:24.434: INFO: (5) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 8.658495ms)
  Jun 22 13:24:24.434: INFO: (5) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 8.72702ms)
  Jun 22 13:24:24.434: INFO: (5) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 8.811876ms)
  Jun 22 13:24:24.434: INFO: (5) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 9.263774ms)
  Jun 22 13:24:24.435: INFO: (5) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 9.975184ms)
  Jun 22 13:24:24.440: INFO: (6) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 5.248924ms)
  Jun 22 13:24:24.441: INFO: (6) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 5.891072ms)
  Jun 22 13:24:24.442: INFO: (6) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 6.572758ms)
  Jun 22 13:24:24.442: INFO: (6) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 6.519372ms)
  Jun 22 13:24:24.442: INFO: (6) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 6.558037ms)
  Jun 22 13:24:24.442: INFO: (6) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 6.649322ms)
  Jun 22 13:24:24.443: INFO: (6) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 7.37791ms)
  Jun 22 13:24:24.443: INFO: (6) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 8.22619ms)
  Jun 22 13:24:24.444: INFO: (6) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 8.356174ms)
  Jun 22 13:24:24.444: INFO: (6) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 8.754509ms)
  Jun 22 13:24:24.444: INFO: (6) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 9.088515ms)
  Jun 22 13:24:24.445: INFO: (6) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 9.333707ms)
  Jun 22 13:24:24.445: INFO: (6) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 9.496474ms)
  Jun 22 13:24:24.445: INFO: (6) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 9.647624ms)
  Jun 22 13:24:24.445: INFO: (6) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 9.979428ms)
  Jun 22 13:24:24.445: INFO: (6) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 10.141691ms)
  Jun 22 13:24:24.449: INFO: (7) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 3.921012ms)
  Jun 22 13:24:24.449: INFO: (7) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 3.852175ms)
  Jun 22 13:24:24.450: INFO: (7) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 3.88707ms)
  Jun 22 13:24:24.451: INFO: (7) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 5.40076ms)
  Jun 22 13:24:24.451: INFO: (7) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 5.307597ms)
  Jun 22 13:24:24.451: INFO: (7) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 5.993824ms)
  Jun 22 13:24:24.452: INFO: (7) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 5.772522ms)
  Jun 22 13:24:24.452: INFO: (7) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 6.342013ms)
  Jun 22 13:24:24.452: INFO: (7) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 6.511502ms)
  Jun 22 13:24:24.452: INFO: (7) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 6.593879ms)
  Jun 22 13:24:24.452: INFO: (7) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 6.590734ms)
  Jun 22 13:24:24.453: INFO: (7) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 7.084829ms)
  Jun 22 13:24:24.453: INFO: (7) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 7.387654ms)
  Jun 22 13:24:24.454: INFO: (7) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 8.127838ms)
  Jun 22 13:24:24.454: INFO: (7) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 8.199778ms)
  Jun 22 13:24:24.454: INFO: (7) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 7.994521ms)
  Jun 22 13:24:24.460: INFO: (8) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 5.339274ms)
  Jun 22 13:24:24.460: INFO: (8) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 5.611278ms)
  Jun 22 13:24:24.460: INFO: (8) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 5.629451ms)
  Jun 22 13:24:24.460: INFO: (8) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 5.66739ms)
  Jun 22 13:24:24.461: INFO: (8) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 6.431961ms)
  Jun 22 13:24:24.461: INFO: (8) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 6.62711ms)
  Jun 22 13:24:24.461: INFO: (8) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 6.881683ms)
  Jun 22 13:24:24.461: INFO: (8) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 6.915277ms)
  Jun 22 13:24:24.461: INFO: (8) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 7.384046ms)
  Jun 22 13:24:24.462: INFO: (8) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 7.867153ms)
  Jun 22 13:24:24.462: INFO: (8) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 7.864492ms)
  Jun 22 13:24:24.462: INFO: (8) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 7.876863ms)
  Jun 22 13:24:24.462: INFO: (8) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 8.205892ms)
  Jun 22 13:24:24.462: INFO: (8) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 8.132781ms)
  Jun 22 13:24:24.462: INFO: (8) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 8.237088ms)
  Jun 22 13:24:24.463: INFO: (8) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 8.484581ms)
  Jun 22 13:24:24.474: INFO: (9) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 10.942451ms)
  Jun 22 13:24:24.479: INFO: (9) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 15.587679ms)
  Jun 22 13:24:24.481: INFO: (9) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 18.035521ms)
  Jun 22 13:24:24.483: INFO: (9) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 20.157824ms)
  Jun 22 13:24:24.483: INFO: (9) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 20.205935ms)
  Jun 22 13:24:24.483: INFO: (9) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 20.186406ms)
  Jun 22 13:24:24.486: INFO: (9) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 23.373369ms)
  Jun 22 13:24:24.487: INFO: (9) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 23.730647ms)
  Jun 22 13:24:24.486: INFO: (9) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 23.356292ms)
  Jun 22 13:24:24.487: INFO: (9) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 23.638709ms)
  Jun 22 13:24:24.487: INFO: (9) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 23.583343ms)
  Jun 22 13:24:24.487: INFO: (9) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 23.614946ms)
  Jun 22 13:24:24.487: INFO: (9) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 23.578466ms)
  Jun 22 13:24:24.487: INFO: (9) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 23.534879ms)
  Jun 22 13:24:24.488: INFO: (9) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 24.604201ms)
  Jun 22 13:24:24.488: INFO: (9) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 24.579351ms)
  Jun 22 13:24:24.496: INFO: (10) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 8.368787ms)
  Jun 22 13:24:24.500: INFO: (10) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 12.16101ms)
  Jun 22 13:24:24.500: INFO: (10) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 12.602548ms)
  Jun 22 13:24:24.503: INFO: (10) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 14.728518ms)
  Jun 22 13:24:24.505: INFO: (10) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 17.311863ms)
  Jun 22 13:24:24.505: INFO: (10) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 17.145947ms)
  Jun 22 13:24:24.505: INFO: (10) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 17.103875ms)
  Jun 22 13:24:24.505: INFO: (10) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 17.808442ms)
  Jun 22 13:24:24.505: INFO: (10) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 17.759687ms)
  Jun 22 13:24:24.506: INFO: (10) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 17.984869ms)
  Jun 22 13:24:24.508: INFO: (10) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 19.824404ms)
  Jun 22 13:24:24.508: INFO: (10) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 20.001413ms)
  Jun 22 13:24:24.508: INFO: (10) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 19.944274ms)
  Jun 22 13:24:24.508: INFO: (10) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 20.205203ms)
  Jun 22 13:24:24.508: INFO: (10) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 20.131766ms)
  Jun 22 13:24:24.508: INFO: (10) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 20.133684ms)
  Jun 22 13:24:24.515: INFO: (11) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 6.84945ms)
  Jun 22 13:24:24.515: INFO: (11) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 7.070365ms)
  Jun 22 13:24:24.516: INFO: (11) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 7.681367ms)
  Jun 22 13:24:24.517: INFO: (11) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 8.279562ms)
  Jun 22 13:24:24.518: INFO: (11) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 10.040053ms)
  Jun 22 13:24:24.524: INFO: (11) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 15.707169ms)
  Jun 22 13:24:24.524: INFO: (11) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 15.785582ms)
  Jun 22 13:24:24.524: INFO: (11) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 15.778062ms)
  Jun 22 13:24:24.524: INFO: (11) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 15.666219ms)
  Jun 22 13:24:24.524: INFO: (11) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 15.656102ms)
  Jun 22 13:24:24.524: INFO: (11) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 15.644846ms)
  Jun 22 13:24:24.524: INFO: (11) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 15.663547ms)
  Jun 22 13:24:24.524: INFO: (11) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 15.655496ms)
  Jun 22 13:24:24.525: INFO: (11) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 16.950886ms)
  Jun 22 13:24:24.526: INFO: (11) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 17.241282ms)
  Jun 22 13:24:24.526: INFO: (11) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 17.93669ms)
  Jun 22 13:24:24.532: INFO: (12) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 5.463146ms)
  Jun 22 13:24:24.534: INFO: (12) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 7.326448ms)
  Jun 22 13:24:24.534: INFO: (12) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 7.271878ms)
  Jun 22 13:24:24.536: INFO: (12) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 8.948031ms)
  Jun 22 13:24:24.538: INFO: (12) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 11.418881ms)
  Jun 22 13:24:24.538: INFO: (12) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 11.634858ms)
  Jun 22 13:24:24.538: INFO: (12) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 11.600648ms)
  Jun 22 13:24:24.538: INFO: (12) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 11.800412ms)
  Jun 22 13:24:24.538: INFO: (12) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 12.059233ms)
  Jun 22 13:24:24.539: INFO: (12) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 11.939339ms)
  Jun 22 13:24:24.542: INFO: (12) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 15.301432ms)
  Jun 22 13:24:24.542: INFO: (12) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 15.382201ms)
  Jun 22 13:24:24.542: INFO: (12) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 15.277772ms)
  Jun 22 13:24:24.542: INFO: (12) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 15.302421ms)
  Jun 22 13:24:24.542: INFO: (12) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 15.438236ms)
  Jun 22 13:24:24.542: INFO: (12) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 15.799662ms)
  Jun 22 13:24:24.551: INFO: (13) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 8.161234ms)
  Jun 22 13:24:24.551: INFO: (13) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 8.458826ms)
  Jun 22 13:24:24.563: INFO: (13) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 20.535673ms)
  Jun 22 13:24:24.563: INFO: (13) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 20.707901ms)
  Jun 22 13:24:24.563: INFO: (13) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 20.695706ms)
  Jun 22 13:24:24.563: INFO: (13) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 20.68754ms)
  Jun 22 13:24:24.563: INFO: (13) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 20.676452ms)
  Jun 22 13:24:24.563: INFO: (13) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 20.648955ms)
  Jun 22 13:24:24.563: INFO: (13) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 20.643307ms)
  Jun 22 13:24:24.563: INFO: (13) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 20.595189ms)
  Jun 22 13:24:24.563: INFO: (13) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 20.869773ms)
  Jun 22 13:24:24.563: INFO: (13) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 20.590574ms)
  Jun 22 13:24:24.563: INFO: (13) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 20.860318ms)
  Jun 22 13:24:24.563: INFO: (13) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 20.773753ms)
  Jun 22 13:24:24.564: INFO: (13) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 21.473007ms)
  Jun 22 13:24:24.564: INFO: (13) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 21.883765ms)
  Jun 22 13:24:24.573: INFO: (14) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 8.277555ms)
  Jun 22 13:24:24.577: INFO: (14) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 13.012095ms)
  Jun 22 13:24:24.578: INFO: (14) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 13.00242ms)
  Jun 22 13:24:24.581: INFO: (14) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 16.158204ms)
  Jun 22 13:24:24.582: INFO: (14) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 17.031211ms)
  Jun 22 13:24:24.583: INFO: (14) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 17.879266ms)
  Jun 22 13:24:24.583: INFO: (14) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 18.76389ms)
  Jun 22 13:24:24.584: INFO: (14) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 19.402119ms)
  Jun 22 13:24:24.586: INFO: (14) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 21.241073ms)
  Jun 22 13:24:24.586: INFO: (14) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 21.0858ms)
  Jun 22 13:24:24.586: INFO: (14) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 21.375853ms)
  Jun 22 13:24:24.586: INFO: (14) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 21.294393ms)
  Jun 22 13:24:24.586: INFO: (14) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 21.287464ms)
  Jun 22 13:24:24.586: INFO: (14) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 21.607556ms)
  Jun 22 13:24:24.586: INFO: (14) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 21.621506ms)
  Jun 22 13:24:24.587: INFO: (14) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 22.11288ms)
  Jun 22 13:24:24.596: INFO: (15) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 9.363349ms)
  Jun 22 13:24:24.599: INFO: (15) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 11.475695ms)
  Jun 22 13:24:24.599: INFO: (15) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 11.696868ms)
  Jun 22 13:24:24.601: INFO: (15) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 13.718245ms)
  Jun 22 13:24:24.601: INFO: (15) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 13.593363ms)
  Jun 22 13:24:24.601: INFO: (15) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 13.706127ms)
  Jun 22 13:24:24.602: INFO: (15) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 15.012139ms)
  Jun 22 13:24:24.602: INFO: (15) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 15.04452ms)
  Jun 22 13:24:24.603: INFO: (15) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 16.167463ms)
  Jun 22 13:24:24.604: INFO: (15) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 16.843448ms)
  Jun 22 13:24:24.604: INFO: (15) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 16.957794ms)
  Jun 22 13:24:24.604: INFO: (15) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 16.879797ms)
  Jun 22 13:24:24.605: INFO: (15) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 18.081089ms)
  Jun 22 13:24:24.605: INFO: (15) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 18.380447ms)
  Jun 22 13:24:24.606: INFO: (15) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 18.916528ms)
  Jun 22 13:24:24.606: INFO: (15) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 19.115267ms)
  Jun 22 13:24:24.614: INFO: (16) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 7.276342ms)
  Jun 22 13:24:24.615: INFO: (16) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 8.392326ms)
  Jun 22 13:24:24.615: INFO: (16) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 8.741601ms)
  Jun 22 13:24:24.616: INFO: (16) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 9.865109ms)
  Jun 22 13:24:24.616: INFO: (16) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 10.00426ms)
  Jun 22 13:24:24.616: INFO: (16) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 9.986473ms)
  Jun 22 13:24:24.621: INFO: (16) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 14.417034ms)
  Jun 22 13:24:24.621: INFO: (16) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 14.510878ms)
  Jun 22 13:24:24.621: INFO: (16) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 14.787758ms)
  Jun 22 13:24:24.621: INFO: (16) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 14.730549ms)
  Jun 22 13:24:24.621: INFO: (16) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 14.508521ms)
  Jun 22 13:24:24.621: INFO: (16) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 14.535134ms)
  Jun 22 13:24:24.621: INFO: (16) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 14.76551ms)
  Jun 22 13:24:24.621: INFO: (16) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 14.754818ms)
  Jun 22 13:24:24.621: INFO: (16) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 14.714637ms)
  Jun 22 13:24:24.621: INFO: (16) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 14.654056ms)
  Jun 22 13:24:24.629: INFO: (17) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 7.859743ms)
  Jun 22 13:24:24.631: INFO: (17) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 9.53772ms)
  Jun 22 13:24:24.631: INFO: (17) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 9.954851ms)
  Jun 22 13:24:24.631: INFO: (17) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 10.046667ms)
  Jun 22 13:24:24.632: INFO: (17) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 10.452947ms)
  Jun 22 13:24:24.632: INFO: (17) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 10.306857ms)
  Jun 22 13:24:24.632: INFO: (17) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 10.646145ms)
  Jun 22 13:24:24.632: INFO: (17) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 10.789779ms)
  Jun 22 13:24:24.633: INFO: (17) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 11.802209ms)
  Jun 22 13:24:24.633: INFO: (17) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 11.699058ms)
  Jun 22 13:24:24.635: INFO: (17) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 14.2404ms)
  Jun 22 13:24:24.637: INFO: (17) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 15.15602ms)
  Jun 22 13:24:24.637: INFO: (17) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 15.483546ms)
  Jun 22 13:24:24.637: INFO: (17) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 16.045441ms)
  Jun 22 13:24:24.637: INFO: (17) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 15.903808ms)
  Jun 22 13:24:24.638: INFO: (17) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 16.152337ms)
  Jun 22 13:24:24.643: INFO: (18) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 5.009896ms)
  Jun 22 13:24:24.644: INFO: (18) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 5.848593ms)
  Jun 22 13:24:24.644: INFO: (18) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 5.948902ms)
  Jun 22 13:24:24.645: INFO: (18) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 7.464196ms)
  Jun 22 13:24:24.645: INFO: (18) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 7.396428ms)
  Jun 22 13:24:24.646: INFO: (18) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 8.252058ms)
  Jun 22 13:24:24.646: INFO: (18) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 8.33447ms)
  Jun 22 13:24:24.646: INFO: (18) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 8.471682ms)
  Jun 22 13:24:24.646: INFO: (18) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 8.549655ms)
  Jun 22 13:24:24.647: INFO: (18) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 8.997282ms)
  Jun 22 13:24:24.647: INFO: (18) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 9.282122ms)
  Jun 22 13:24:24.647: INFO: (18) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 9.79401ms)
  Jun 22 13:24:24.648: INFO: (18) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 10.046081ms)
  Jun 22 13:24:24.649: INFO: (18) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 10.953912ms)
  Jun 22 13:24:24.649: INFO: (18) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 11.357762ms)
  Jun 22 13:24:24.649: INFO: (18) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 11.382069ms)
  Jun 22 13:24:24.655: INFO: (19) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:1080/proxy/rewriteme">... (200; 5.260537ms)
  Jun 22 13:24:24.655: INFO: (19) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:160/proxy/: foo (200; 5.365028ms)
  Jun 22 13:24:24.657: INFO: (19) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr/proxy/rewriteme">test</a> (200; 7.408294ms)
  Jun 22 13:24:24.657: INFO: (19) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:1080/proxy/rewriteme">test<... (200; 7.734764ms)
  Jun 22 13:24:24.657: INFO: (19) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:162/proxy/: bar (200; 7.528736ms)
  Jun 22 13:24:24.657: INFO: (19) /api/v1/namespaces/proxy-7100/pods/proxy-service-khgsg-ztftr:162/proxy/: bar (200; 7.625149ms)
  Jun 22 13:24:24.658: INFO: (19) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname2/proxy/: bar (200; 8.61314ms)
  Jun 22 13:24:24.658: INFO: (19) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:462/proxy/: tls qux (200; 8.839785ms)
  Jun 22 13:24:24.658: INFO: (19) /api/v1/namespaces/proxy-7100/pods/http:proxy-service-khgsg-ztftr:160/proxy/: foo (200; 8.980373ms)
  Jun 22 13:24:24.658: INFO: (19) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/: <a href="/api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:443/proxy/tlsrewritem... (200; 8.91161ms)
  Jun 22 13:24:24.659: INFO: (19) /api/v1/namespaces/proxy-7100/pods/https:proxy-service-khgsg-ztftr:460/proxy/: tls baz (200; 8.906747ms)
  Jun 22 13:24:24.659: INFO: (19) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname2/proxy/: tls qux (200; 9.211095ms)
  Jun 22 13:24:24.659: INFO: (19) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname2/proxy/: bar (200; 9.271246ms)
  Jun 22 13:24:24.659: INFO: (19) /api/v1/namespaces/proxy-7100/services/https:proxy-service-khgsg:tlsportname1/proxy/: tls baz (200; 9.355937ms)
  Jun 22 13:24:24.659: INFO: (19) /api/v1/namespaces/proxy-7100/services/proxy-service-khgsg:portname1/proxy/: foo (200; 9.483535ms)
  Jun 22 13:24:24.661: INFO: (19) /api/v1/namespaces/proxy-7100/services/http:proxy-service-khgsg:portname1/proxy/: foo (200; 11.520783ms)
  STEP: deleting ReplicationController proxy-service-khgsg in namespace proxy-7100, will wait for the garbage collector to delete the pods @ 06/22/24 13:24:24.661
  Jun 22 13:24:24.723: INFO: Deleting ReplicationController proxy-service-khgsg took: 8.30111ms
  Jun 22 13:24:24.824: INFO: Terminating ReplicationController proxy-service-khgsg pods took: 100.851473ms
  Jun 22 13:24:27.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7100" for this suite. @ 06/22/24 13:24:27.13
• [3.871 seconds]
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 06/22/24 13:24:27.138
  Jun 22 13:24:27.138: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pods @ 06/22/24 13:24:27.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:24:27.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:24:27.157
  Jun 22 13:24:27.160: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: creating the pod @ 06/22/24 13:24:27.16
  STEP: submitting the pod to kubernetes @ 06/22/24 13:24:27.16
  Jun 22 13:24:29.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8841" for this suite. @ 06/22/24 13:24:29.252
• [2.122 seconds]
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 06/22/24 13:24:29.261
  Jun 22 13:24:29.261: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 06/22/24 13:24:29.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:24:29.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:24:29.277
  STEP: Setting up the test @ 06/22/24 13:24:29.279
  STEP: Creating hostNetwork=false pod @ 06/22/24 13:24:29.279
  STEP: Creating hostNetwork=true pod @ 06/22/24 13:24:31.304
  STEP: Running the test @ 06/22/24 13:24:33.325
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 06/22/24 13:24:33.325
  Jun 22 13:24:33.325: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5734 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:24:33.325: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:24:33.326: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:24:33.326: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5734/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 22 13:24:33.382: INFO: Exec stderr: ""
  Jun 22 13:24:33.382: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5734 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:24:33.382: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:24:33.382: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:24:33.382: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5734/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 22 13:24:33.421: INFO: Exec stderr: ""
  Jun 22 13:24:33.421: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5734 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:24:33.421: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:24:33.422: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:24:33.422: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5734/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 22 13:24:33.466: INFO: Exec stderr: ""
  Jun 22 13:24:33.466: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5734 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:24:33.466: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:24:33.467: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:24:33.467: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5734/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 22 13:24:33.513: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 06/22/24 13:24:33.513
  Jun 22 13:24:33.513: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5734 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:24:33.513: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:24:33.514: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:24:33.514: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5734/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun 22 13:24:33.565: INFO: Exec stderr: ""
  Jun 22 13:24:33.565: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5734 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:24:33.565: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:24:33.566: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:24:33.566: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5734/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun 22 13:24:33.605: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 06/22/24 13:24:33.605
  Jun 22 13:24:33.605: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5734 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:24:33.605: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:24:33.606: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:24:33.606: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5734/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 22 13:24:33.654: INFO: Exec stderr: ""
  Jun 22 13:24:33.654: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5734 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:24:33.654: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:24:33.655: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:24:33.655: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5734/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 22 13:24:33.704: INFO: Exec stderr: ""
  Jun 22 13:24:33.705: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5734 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:24:33.705: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:24:33.705: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:24:33.705: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5734/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 22 13:24:33.754: INFO: Exec stderr: ""
  Jun 22 13:24:33.754: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5734 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:24:33.754: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:24:33.755: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:24:33.755: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5734/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 22 13:24:33.798: INFO: Exec stderr: ""
  Jun 22 13:24:33.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-5734" for this suite. @ 06/22/24 13:24:33.803
• [4.551 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 06/22/24 13:24:33.812
  Jun 22 13:24:33.812: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename taint-multiple-pods @ 06/22/24 13:24:33.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:24:33.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:24:33.831
  Jun 22 13:24:33.834: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun 22 13:25:33.835: INFO: Waiting for terminating namespaces to be deleted...
  Jun 22 13:25:33.841: INFO: Starting informer...
  STEP: Starting pods... @ 06/22/24 13:25:33.841
  Jun 22 13:25:34.062: INFO: Pod1 is running on ip-172-31-3-104. Tainting Node
  Jun 22 13:25:36.285: INFO: Pod2 is running on ip-172-31-3-104. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/22/24 13:25:36.285
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/22/24 13:25:36.298
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 06/22/24 13:25:36.304
  Jun 22 13:25:42.232: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Jun 22 13:26:02.268: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/22/24 13:26:02.28
  Jun 22 13:26:02.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-1066" for this suite. @ 06/22/24 13:26:02.288
• [88.492 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:447
  STEP: Creating a kubernetes client @ 06/22/24 13:26:02.305
  Jun 22 13:26:02.305: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename sched-pred @ 06/22/24 13:26:02.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:26:02.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:26:02.35
  Jun 22 13:26:02.355: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 22 13:26:02.370: INFO: Waiting for terminating namespaces to be deleted...
  Jun 22 13:26:02.375: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-25-91 before test
  Jun 22 13:26:02.382: INFO: nginx-ingress-controller-kubernetes-worker-fvrjf from ingress-nginx-kubernetes-worker started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 13:26:02.382: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 22 13:26:02.382: INFO: calico-node-ccx9h from kube-system started at 2024-06-22 12:19:33 +0000 UTC (1 container statuses recorded)
  Jun 22 13:26:02.382: INFO: 	Container calico-node ready: true, restart count 0
  Jun 22 13:26:02.382: INFO: coredns-bddfd76d7-nd2xx from kube-system started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 13:26:02.382: INFO: 	Container coredns ready: true, restart count 0
  Jun 22 13:26:02.382: INFO: kube-state-metrics-6f48cdd76-dd6kh from kube-system started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 13:26:02.383: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jun 22 13:26:02.383: INFO: metrics-server-v0.6.3-69d7fbfdf8-8zxgg from kube-system started at 2024-06-22 12:14:39 +0000 UTC (2 container statuses recorded)
  Jun 22 13:26:02.383: INFO: 	Container metrics-server ready: true, restart count 0
  Jun 22 13:26:02.383: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jun 22 13:26:02.383: INFO: dashboard-metrics-scraper-5dd7cb5fc-cjq29 from kubernetes-dashboard started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 13:26:02.383: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jun 22 13:26:02.383: INFO: kubernetes-dashboard-7b899cb9d9-zw59t from kubernetes-dashboard started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 13:26:02.383: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jun 22 13:26:02.383: INFO: sonobuoy-systemd-logs-daemon-set-94c32348a04f46b5-zhwcb from sonobuoy started at 2024-06-22 12:22:23 +0000 UTC (2 container statuses recorded)
  Jun 22 13:26:02.383: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 22 13:26:02.383: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 22 13:26:02.383: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-3-104 before test
  Jun 22 13:26:02.393: INFO: nginx-ingress-controller-kubernetes-worker-strbp from ingress-nginx-kubernetes-worker started at 2024-06-22 13:26:02 +0000 UTC (1 container statuses recorded)
  Jun 22 13:26:02.393: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: false, restart count 0
  Jun 22 13:26:02.393: INFO: calico-node-82rw8 from kube-system started at 2024-06-22 12:20:14 +0000 UTC (1 container statuses recorded)
  Jun 22 13:26:02.393: INFO: 	Container calico-node ready: true, restart count 0
  Jun 22 13:26:02.393: INFO: sonobuoy from sonobuoy started at 2024-06-22 12:22:22 +0000 UTC (1 container statuses recorded)
  Jun 22 13:26:02.393: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 22 13:26:02.393: INFO: sonobuoy-systemd-logs-daemon-set-94c32348a04f46b5-fbr7r from sonobuoy started at 2024-06-22 12:22:23 +0000 UTC (2 container statuses recorded)
  Jun 22 13:26:02.393: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 22 13:26:02.393: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 22 13:26:02.393: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-85-228 before test
  Jun 22 13:26:02.401: INFO: nginx-ingress-controller-kubernetes-worker-nvkt2 from ingress-nginx-kubernetes-worker started at 2024-06-22 12:17:34 +0000 UTC (1 container statuses recorded)
  Jun 22 13:26:02.401: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 22 13:26:02.401: INFO: calico-node-q9fk8 from kube-system started at 2024-06-22 12:19:53 +0000 UTC (1 container statuses recorded)
  Jun 22 13:26:02.401: INFO: 	Container calico-node ready: true, restart count 0
  Jun 22 13:26:02.401: INFO: sonobuoy-e2e-job-2ca1d8ae60f44d6a from sonobuoy started at 2024-06-22 12:22:23 +0000 UTC (2 container statuses recorded)
  Jun 22 13:26:02.401: INFO: 	Container e2e ready: true, restart count 0
  Jun 22 13:26:02.401: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 22 13:26:02.401: INFO: sonobuoy-systemd-logs-daemon-set-94c32348a04f46b5-ntsj7 from sonobuoy started at 2024-06-22 12:22:23 +0000 UTC (2 container statuses recorded)
  Jun 22 13:26:02.401: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 22 13:26:02.401: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 06/22/24 13:26:02.401
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17db56797580d403], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 06/22/24 13:26:02.443
  Jun 22 13:26:03.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7405" for this suite. @ 06/22/24 13:26:03.445
• [1.149 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 06/22/24 13:26:03.454
  Jun 22 13:26:03.454: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/22/24 13:26:03.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:26:03.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:26:03.481
  STEP: create the container to handle the HTTPGet hook request. @ 06/22/24 13:26:03.491
  STEP: create the pod with lifecycle hook @ 06/22/24 13:26:05.516
  STEP: check poststart hook @ 06/22/24 13:26:07.537
  STEP: delete the pod with lifecycle hook @ 06/22/24 13:26:07.559
  Jun 22 13:26:09.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5132" for this suite. @ 06/22/24 13:26:09.596
• [6.151 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 06/22/24 13:26:09.605
  Jun 22 13:26:09.605: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:26:09.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:26:09.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:26:09.624
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 13:26:09.626
  STEP: Saw pod success @ 06/22/24 13:26:13.655
  Jun 22 13:26:13.659: INFO: Trying to get logs from node ip-172-31-85-228 pod downwardapi-volume-2b17ae4a-30dd-4535-8a58-5bceacb95d0a container client-container: <nil>
  STEP: delete the pod @ 06/22/24 13:26:13.675
  Jun 22 13:26:13.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4402" for this suite. @ 06/22/24 13:26:13.709
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 06/22/24 13:26:13.721
  Jun 22 13:26:13.721: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pods @ 06/22/24 13:26:13.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:26:13.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:26:13.753
  STEP: Saw pod success @ 06/22/24 13:26:19.826
  Jun 22 13:26:19.830: INFO: Trying to get logs from node ip-172-31-3-104 pod client-envvars-1211829f-baeb-4c47-a08c-48f0399c5175 container env3cont: <nil>
  STEP: delete the pod @ 06/22/24 13:26:19.838
  Jun 22 13:26:19.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8578" for this suite. @ 06/22/24 13:26:19.86
• [6.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 06/22/24 13:26:19.867
  Jun 22 13:26:19.867: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename sched-preemption @ 06/22/24 13:26:19.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:26:19.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:26:19.886
  Jun 22 13:26:19.903: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun 22 13:27:19.909: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/22/24 13:27:19.913
  Jun 22 13:27:19.935: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun 22 13:27:19.944: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun 22 13:27:19.961: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun 22 13:27:19.971: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jun 22 13:27:19.990: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jun 22 13:27:20.001: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/22/24 13:27:20.001
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 06/22/24 13:27:24.04
  Jun 22 13:27:28.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4337" for this suite. @ 06/22/24 13:27:28.153
• [68.294 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 06/22/24 13:27:28.162
  Jun 22 13:27:28.162: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename configmap @ 06/22/24 13:27:28.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:27:28.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:27:28.181
  STEP: Creating configMap configmap-4144/configmap-test-fa7dd8fe-16b4-466d-8915-a0fdcecdd7ef @ 06/22/24 13:27:28.184
  STEP: Creating a pod to test consume configMaps @ 06/22/24 13:27:28.189
  STEP: Saw pod success @ 06/22/24 13:27:32.214
  Jun 22 13:27:32.218: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-configmaps-eb7e4d0c-1579-4fc9-b9a8-1fbd5ebad679 container env-test: <nil>
  STEP: delete the pod @ 06/22/24 13:27:32.224
  Jun 22 13:27:32.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4144" for this suite. @ 06/22/24 13:27:32.244
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 06/22/24 13:27:32.253
  Jun 22 13:27:32.253: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename subpath @ 06/22/24 13:27:32.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:27:32.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:27:32.273
  STEP: Setting up data @ 06/22/24 13:27:32.276
  STEP: Creating pod pod-subpath-test-projected-thz2 @ 06/22/24 13:27:32.285
  STEP: Creating a pod to test atomic-volume-subpath @ 06/22/24 13:27:32.285
  STEP: Saw pod success @ 06/22/24 13:27:56.364
  Jun 22 13:27:56.368: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-subpath-test-projected-thz2 container test-container-subpath-projected-thz2: <nil>
  STEP: delete the pod @ 06/22/24 13:27:56.376
  STEP: Deleting pod pod-subpath-test-projected-thz2 @ 06/22/24 13:27:56.392
  Jun 22 13:27:56.392: INFO: Deleting pod "pod-subpath-test-projected-thz2" in namespace "subpath-3047"
  Jun 22 13:27:56.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3047" for this suite. @ 06/22/24 13:27:56.4
• [24.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 06/22/24 13:27:56.408
  Jun 22 13:27:56.408: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-probe @ 06/22/24 13:27:56.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:27:56.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:27:56.429
  STEP: Creating pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457 @ 06/22/24 13:27:56.432
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/22/24 13:27:58.454
  Jun 22 13:27:58.459: INFO: Initial restart count of pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 is 0
  Jun 22 13:27:58.462: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:00.468: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:02.474: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:04.479: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:06.485: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:08.491: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:10.496: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:12.502: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:14.507: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:16.513: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:18.518: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:20.524: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:22.530: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:24.535: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:26.540: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:28.547: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:30.553: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:32.558: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:34.564: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:36.570: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:38.575: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:40.581: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:42.587: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:44.592: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:46.597: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:48.604: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:50.609: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:52.614: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:54.619: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:56.624: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:28:58.632: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:00.637: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:02.643: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:04.648: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:06.653: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:08.660: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:10.665: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:12.672: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:14.678: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:16.683: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:18.689: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:20.693: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:22.699: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:24.703: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:26.709: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:28.714: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:30.720: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:32.726: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:34.731: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:36.738: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:38.746: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:40.752: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:42.758: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:44.764: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:46.770: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:48.775: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:50.780: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:52.786: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:54.793: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:56.797: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:29:58.803: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:00.809: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:02.813: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:04.820: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:06.824: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:08.829: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:10.836: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:12.841: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:14.847: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:16.852: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:18.858: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:20.864: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:22.869: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:24.874: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:26.880: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:28.886: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:30.892: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:32.897: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:34.903: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:36.908: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:38.914: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:40.920: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:42.925: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:44.930: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:46.936: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:48.943: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:50.947: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:52.952: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:54.957: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:56.963: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:30:58.968: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:00.973: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:02.978: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:04.983: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:06.989: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:08.995: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:11.001: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:13.008: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:15.012: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:17.018: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:19.023: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:21.029: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:23.035: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:25.040: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:27.045: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:29.052: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:31.057: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:33.062: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:35.067: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:37.076: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:39.081: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:41.086: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:43.091: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:45.097: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:47.102: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:49.107: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:51.113: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:53.117: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:55.122: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  Jun 22 13:31:57.127: INFO: Get pod busybox-d555ba7e-41d5-4fc1-bc3f-741cb4d0f535 in namespace container-probe-2457
  STEP: deleting the pod @ 06/22/24 13:31:59.127
  Jun 22 13:31:59.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2457" for this suite. @ 06/22/24 13:31:59.146
• [242.747 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 06/22/24 13:31:59.155
  Jun 22 13:31:59.155: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:31:59.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:31:59.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:31:59.175
  STEP: Creating projection with secret that has name projected-secret-test-map-a325f4e0-117e-4891-b1ef-50041b00e2c7 @ 06/22/24 13:31:59.178
  STEP: Creating a pod to test consume secrets @ 06/22/24 13:31:59.184
  STEP: Saw pod success @ 06/22/24 13:32:03.211
  Jun 22 13:32:03.215: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-projected-secrets-fb5a9655-835e-44b9-9ad2-96e5523371d0 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/22/24 13:32:03.231
  Jun 22 13:32:03.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7854" for this suite. @ 06/22/24 13:32:03.251
• [4.104 seconds]
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 06/22/24 13:32:03.259
  Jun 22 13:32:03.259: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename configmap @ 06/22/24 13:32:03.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:32:03.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:32:03.28
  STEP: Creating configMap with name configmap-test-upd-71f1c7a0-a67e-4273-b3f3-8a7e1eddaa6b @ 06/22/24 13:32:03.287
  STEP: Creating the pod @ 06/22/24 13:32:03.293
  STEP: Updating configmap configmap-test-upd-71f1c7a0-a67e-4273-b3f3-8a7e1eddaa6b @ 06/22/24 13:32:05.324
  STEP: waiting to observe update in volume @ 06/22/24 13:32:05.33
  Jun 22 13:32:09.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7361" for this suite. @ 06/22/24 13:32:09.357
• [6.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 06/22/24 13:32:09.365
  Jun 22 13:32:09.365: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename downward-api @ 06/22/24 13:32:09.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:32:09.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:32:09.386
  STEP: Creating the pod @ 06/22/24 13:32:09.388
  Jun 22 13:32:11.941: INFO: Successfully updated pod "labelsupdate0b776db0-fd1e-4917-844d-d686cc354c4e"
  Jun 22 13:32:15.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7947" for this suite. @ 06/22/24 13:32:15.974
• [6.616 seconds]
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 06/22/24 13:32:15.981
  Jun 22 13:32:15.981: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pods @ 06/22/24 13:32:15.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:32:15.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:32:16.002
  STEP: creating the pod @ 06/22/24 13:32:16.004
  STEP: submitting the pod to kubernetes @ 06/22/24 13:32:16.004
  W0622 13:32:16.013895      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 06/22/24 13:32:18.027
  STEP: updating the pod @ 06/22/24 13:32:18.031
  Jun 22 13:32:18.545: INFO: Successfully updated pod "pod-update-activedeadlineseconds-60baf93f-46b6-4be2-983e-3173dbc6bf49"
  Jun 22 13:32:22.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7169" for this suite. @ 06/22/24 13:32:22.565
• [6.593 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 06/22/24 13:32:22.575
  Jun 22 13:32:22.575: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename discovery @ 06/22/24 13:32:22.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:32:22.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:32:22.595
  STEP: Setting up server cert @ 06/22/24 13:32:22.598
  Jun 22 13:32:22.771: INFO: Checking APIGroup: apiregistration.k8s.io
  Jun 22 13:32:22.772: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Jun 22 13:32:22.772: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Jun 22 13:32:22.772: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Jun 22 13:32:22.772: INFO: Checking APIGroup: apps
  Jun 22 13:32:22.773: INFO: PreferredVersion.GroupVersion: apps/v1
  Jun 22 13:32:22.773: INFO: Versions found [{apps/v1 v1}]
  Jun 22 13:32:22.773: INFO: apps/v1 matches apps/v1
  Jun 22 13:32:22.773: INFO: Checking APIGroup: events.k8s.io
  Jun 22 13:32:22.774: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Jun 22 13:32:22.774: INFO: Versions found [{events.k8s.io/v1 v1}]
  Jun 22 13:32:22.774: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Jun 22 13:32:22.774: INFO: Checking APIGroup: authentication.k8s.io
  Jun 22 13:32:22.775: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Jun 22 13:32:22.775: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Jun 22 13:32:22.775: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Jun 22 13:32:22.775: INFO: Checking APIGroup: authorization.k8s.io
  Jun 22 13:32:22.776: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Jun 22 13:32:22.776: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Jun 22 13:32:22.776: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Jun 22 13:32:22.776: INFO: Checking APIGroup: autoscaling
  Jun 22 13:32:22.777: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Jun 22 13:32:22.777: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Jun 22 13:32:22.777: INFO: autoscaling/v2 matches autoscaling/v2
  Jun 22 13:32:22.777: INFO: Checking APIGroup: batch
  Jun 22 13:32:22.778: INFO: PreferredVersion.GroupVersion: batch/v1
  Jun 22 13:32:22.778: INFO: Versions found [{batch/v1 v1}]
  Jun 22 13:32:22.778: INFO: batch/v1 matches batch/v1
  Jun 22 13:32:22.778: INFO: Checking APIGroup: certificates.k8s.io
  Jun 22 13:32:22.779: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Jun 22 13:32:22.779: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Jun 22 13:32:22.779: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Jun 22 13:32:22.779: INFO: Checking APIGroup: networking.k8s.io
  Jun 22 13:32:22.780: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Jun 22 13:32:22.780: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Jun 22 13:32:22.780: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Jun 22 13:32:22.780: INFO: Checking APIGroup: policy
  Jun 22 13:32:22.781: INFO: PreferredVersion.GroupVersion: policy/v1
  Jun 22 13:32:22.781: INFO: Versions found [{policy/v1 v1}]
  Jun 22 13:32:22.781: INFO: policy/v1 matches policy/v1
  Jun 22 13:32:22.781: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Jun 22 13:32:22.781: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Jun 22 13:32:22.781: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Jun 22 13:32:22.781: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Jun 22 13:32:22.781: INFO: Checking APIGroup: storage.k8s.io
  Jun 22 13:32:22.782: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Jun 22 13:32:22.782: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Jun 22 13:32:22.782: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Jun 22 13:32:22.782: INFO: Checking APIGroup: admissionregistration.k8s.io
  Jun 22 13:32:22.783: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Jun 22 13:32:22.783: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Jun 22 13:32:22.783: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Jun 22 13:32:22.783: INFO: Checking APIGroup: apiextensions.k8s.io
  Jun 22 13:32:22.784: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Jun 22 13:32:22.784: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Jun 22 13:32:22.784: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Jun 22 13:32:22.784: INFO: Checking APIGroup: scheduling.k8s.io
  Jun 22 13:32:22.785: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Jun 22 13:32:22.785: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Jun 22 13:32:22.785: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Jun 22 13:32:22.785: INFO: Checking APIGroup: coordination.k8s.io
  Jun 22 13:32:22.786: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Jun 22 13:32:22.786: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Jun 22 13:32:22.786: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Jun 22 13:32:22.786: INFO: Checking APIGroup: node.k8s.io
  Jun 22 13:32:22.787: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Jun 22 13:32:22.787: INFO: Versions found [{node.k8s.io/v1 v1}]
  Jun 22 13:32:22.787: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Jun 22 13:32:22.787: INFO: Checking APIGroup: discovery.k8s.io
  Jun 22 13:32:22.788: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Jun 22 13:32:22.788: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Jun 22 13:32:22.788: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Jun 22 13:32:22.788: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Jun 22 13:32:22.789: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Jun 22 13:32:22.789: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Jun 22 13:32:22.789: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Jun 22 13:32:22.789: INFO: Checking APIGroup: metrics.k8s.io
  Jun 22 13:32:22.789: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Jun 22 13:32:22.789: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Jun 22 13:32:22.789: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Jun 22 13:32:22.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7203" for this suite. @ 06/22/24 13:32:22.794
• [0.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 06/22/24 13:32:22.803
  Jun 22 13:32:22.803: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename daemonsets @ 06/22/24 13:32:22.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:32:22.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:32:22.821
  Jun 22 13:32:22.844: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 06/22/24 13:32:22.851
  Jun 22 13:32:22.855: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 13:32:22.855: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 06/22/24 13:32:22.855
  Jun 22 13:32:22.875: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 13:32:22.875: INFO: Node ip-172-31-3-104 is running 0 daemon pod, expected 1
  Jun 22 13:32:23.877: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 13:32:23.877: INFO: Node ip-172-31-3-104 is running 0 daemon pod, expected 1
  Jun 22 13:32:24.876: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 22 13:32:24.876: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 06/22/24 13:32:24.88
  Jun 22 13:32:24.897: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 22 13:32:24.897: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Jun 22 13:32:25.897: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 13:32:25.897: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 06/22/24 13:32:25.897
  Jun 22 13:32:25.910: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 13:32:25.910: INFO: Node ip-172-31-3-104 is running 0 daemon pod, expected 1
  Jun 22 13:32:26.911: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 22 13:32:26.911: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/22/24 13:32:26.919
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7729, will wait for the garbage collector to delete the pods @ 06/22/24 13:32:26.919
  Jun 22 13:32:26.982: INFO: Deleting DaemonSet.extensions daemon-set took: 8.860081ms
  Jun 22 13:32:27.082: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.370139ms
  Jun 22 13:32:28.988: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 13:32:28.988: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 22 13:32:28.992: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28823"},"items":null}

  Jun 22 13:32:28.995: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28823"},"items":null}

  Jun 22 13:32:29.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7729" for this suite. @ 06/22/24 13:32:29.021
• [6.227 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 06/22/24 13:32:29.029
  Jun 22 13:32:29.029: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename configmap @ 06/22/24 13:32:29.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:32:29.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:32:29.049
  STEP: Creating configMap with name configmap-test-volume-map-b750c787-16aa-4808-85ac-23980f619c56 @ 06/22/24 13:32:29.051
  STEP: Creating a pod to test consume configMaps @ 06/22/24 13:32:29.056
  STEP: Saw pod success @ 06/22/24 13:32:31.078
  Jun 22 13:32:31.082: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-configmaps-acc88e65-dd97-4f64-98f8-41ea9990c4c7 container agnhost-container: <nil>
  STEP: delete the pod @ 06/22/24 13:32:31.088
  Jun 22 13:32:31.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3859" for this suite. @ 06/22/24 13:32:31.111
• [2.089 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 06/22/24 13:32:31.118
  Jun 22 13:32:31.118: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename field-validation @ 06/22/24 13:32:31.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:32:31.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:32:31.137
  Jun 22 13:32:31.141: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  W0622 13:32:31.142186      19 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0012216d0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0622 13:32:33.679401      19 warnings.go:70] unknown field "alpha"
  W0622 13:32:33.679422      19 warnings.go:70] unknown field "beta"
  W0622 13:32:33.679426      19 warnings.go:70] unknown field "delta"
  W0622 13:32:33.679429      19 warnings.go:70] unknown field "epsilon"
  W0622 13:32:33.679432      19 warnings.go:70] unknown field "gamma"
  Jun 22 13:32:34.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2102" for this suite. @ 06/22/24 13:32:34.24
• [3.130 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 06/22/24 13:32:34.248
  Jun 22 13:32:34.248: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/22/24 13:32:34.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:32:34.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:32:34.271
  Jun 22 13:32:34.274: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:32:34.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4650" for this suite. @ 06/22/24 13:32:34.826
• [0.587 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 06/22/24 13:32:34.836
  Jun 22 13:32:34.836: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/22/24 13:32:34.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:32:34.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:32:34.851
  Jun 22 13:32:34.854: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:32:37.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2307" for this suite. @ 06/22/24 13:32:37.947
• [3.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 06/22/24 13:32:37.957
  Jun 22 13:32:37.957: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename replication-controller @ 06/22/24 13:32:37.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:32:37.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:32:37.974
  STEP: creating a ReplicationController @ 06/22/24 13:32:37.981
  STEP: waiting for RC to be added @ 06/22/24 13:32:37.987
  STEP: waiting for available Replicas @ 06/22/24 13:32:37.988
  STEP: patching ReplicationController @ 06/22/24 13:32:38.922
  STEP: waiting for RC to be modified @ 06/22/24 13:32:38.955
  STEP: patching ReplicationController status @ 06/22/24 13:32:38.955
  STEP: waiting for RC to be modified @ 06/22/24 13:32:38.963
  STEP: waiting for available Replicas @ 06/22/24 13:32:38.963
  STEP: fetching ReplicationController status @ 06/22/24 13:32:38.972
  STEP: patching ReplicationController scale @ 06/22/24 13:32:38.977
  STEP: waiting for RC to be modified @ 06/22/24 13:32:38.985
  STEP: waiting for ReplicationController's scale to be the max amount @ 06/22/24 13:32:38.985
  STEP: fetching ReplicationController; ensuring that it's patched @ 06/22/24 13:32:39.82
  STEP: updating ReplicationController status @ 06/22/24 13:32:39.824
  STEP: waiting for RC to be modified @ 06/22/24 13:32:39.83
  STEP: listing all ReplicationControllers @ 06/22/24 13:32:39.83
  STEP: checking that ReplicationController has expected values @ 06/22/24 13:32:39.838
  STEP: deleting ReplicationControllers by collection @ 06/22/24 13:32:39.838
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 06/22/24 13:32:39.847
  Jun 22 13:32:39.897: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0622 13:32:39.897811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9034" for this suite. @ 06/22/24 13:32:39.901
• [1.951 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 06/22/24 13:32:39.908
  Jun 22 13:32:39.908: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename field-validation @ 06/22/24 13:32:39.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:32:39.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:32:39.928
  Jun 22 13:32:39.931: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  E0622 13:32:40.898545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:32:41.899036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:32:42.899145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:32:43.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4347" for this suite. @ 06/22/24 13:32:43.02
• [3.121 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 06/22/24 13:32:43.029
  Jun 22 13:32:43.029: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename job @ 06/22/24 13:32:43.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:32:43.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:32:43.053
  STEP: Creating Indexed job @ 06/22/24 13:32:43.056
  STEP: Ensuring job reaches completions @ 06/22/24 13:32:43.063
  E0622 13:32:43.899266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:32:44.899572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:32:45.899686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:32:46.899781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:32:47.900232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:32:48.900460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:32:49.900574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:32:50.901256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 06/22/24 13:32:51.069
  Jun 22 13:32:51.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9205" for this suite. @ 06/22/24 13:32:51.078
• [8.057 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 06/22/24 13:32:51.086
  Jun 22 13:32:51.086: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename replicaset @ 06/22/24 13:32:51.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:32:51.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:32:51.103
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 06/22/24 13:32:51.105
  E0622 13:32:51.901367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:32:52.901588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 06/22/24 13:32:53.129
  STEP: Then the orphan pod is adopted @ 06/22/24 13:32:53.137
  E0622 13:32:53.901692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 06/22/24 13:32:54.146
  Jun 22 13:32:54.150: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/22/24 13:32:54.164
  E0622 13:32:54.902350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:32:55.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4050" for this suite. @ 06/22/24 13:32:55.177
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 06/22/24 13:32:55.185
  Jun 22 13:32:55.185: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir @ 06/22/24 13:32:55.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:32:55.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:32:55.203
  STEP: Creating a pod to test emptydir volume type on node default medium @ 06/22/24 13:32:55.206
  E0622 13:32:55.902484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:32:56.902713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:32:57.226
  Jun 22 13:32:57.230: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-7fef8f59-a530-4f28-96ac-6f0c8f7aa663 container test-container: <nil>
  STEP: delete the pod @ 06/22/24 13:32:57.237
  Jun 22 13:32:57.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3244" for this suite. @ 06/22/24 13:32:57.259
• [2.083 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 06/22/24 13:32:57.268
  Jun 22 13:32:57.268: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename configmap @ 06/22/24 13:32:57.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:32:57.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:32:57.292
  STEP: Creating configMap with name cm-test-opt-del-8cd79d63-d81d-47ff-8f5d-88fdafe5b821 @ 06/22/24 13:32:57.308
  STEP: Creating configMap with name cm-test-opt-upd-db406eac-f368-4066-9c0f-26ac3d3cf8d7 @ 06/22/24 13:32:57.314
  STEP: Creating the pod @ 06/22/24 13:32:57.321
  E0622 13:32:57.903483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:32:58.903601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-8cd79d63-d81d-47ff-8f5d-88fdafe5b821 @ 06/22/24 13:32:59.376
  STEP: Updating configmap cm-test-opt-upd-db406eac-f368-4066-9c0f-26ac3d3cf8d7 @ 06/22/24 13:32:59.385
  STEP: Creating configMap with name cm-test-opt-create-b77fa6ef-6ea4-4617-8fa0-d862d0aeb0cc @ 06/22/24 13:32:59.39
  STEP: waiting to observe update in volume @ 06/22/24 13:32:59.396
  E0622 13:32:59.904328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:00.905387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:01.906293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:02.906370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:33:03.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-786" for this suite. @ 06/22/24 13:33:03.443
• [6.184 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 06/22/24 13:33:03.452
  Jun 22 13:33:03.452: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename downward-api @ 06/22/24 13:33:03.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:33:03.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:33:03.475
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 13:33:03.478
  E0622 13:33:03.906431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:04.906702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:05.907273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:06.907356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:33:07.505
  Jun 22 13:33:07.509: INFO: Trying to get logs from node ip-172-31-85-228 pod downwardapi-volume-fc275d3f-cf7d-454e-83ce-7895fea6efce container client-container: <nil>
  STEP: delete the pod @ 06/22/24 13:33:07.524
  Jun 22 13:33:07.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6512" for this suite. @ 06/22/24 13:33:07.547
• [4.103 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 06/22/24 13:33:07.555
  Jun 22 13:33:07.555: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename daemonsets @ 06/22/24 13:33:07.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:33:07.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:33:07.574
  STEP: Creating simple DaemonSet "daemon-set" @ 06/22/24 13:33:07.601
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/22/24 13:33:07.607
  Jun 22 13:33:07.613: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:33:07.613: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:33:07.617: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 13:33:07.617: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  E0622 13:33:07.907556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:33:08.612: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:33:08.612: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:33:08.618: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 13:33:08.618: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  E0622 13:33:08.907605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:33:09.612: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:33:09.612: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:33:09.616: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 22 13:33:09.616: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 06/22/24 13:33:09.62
  Jun 22 13:33:09.624: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 06/22/24 13:33:09.624
  Jun 22 13:33:09.634: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 06/22/24 13:33:09.634
  Jun 22 13:33:09.636: INFO: Observed &DaemonSet event: ADDED
  Jun 22 13:33:09.636: INFO: Observed &DaemonSet event: MODIFIED
  Jun 22 13:33:09.636: INFO: Observed &DaemonSet event: MODIFIED
  Jun 22 13:33:09.636: INFO: Observed &DaemonSet event: MODIFIED
  Jun 22 13:33:09.636: INFO: Observed &DaemonSet event: MODIFIED
  Jun 22 13:33:09.636: INFO: Found daemon set daemon-set in namespace daemonsets-2307 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 22 13:33:09.637: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 06/22/24 13:33:09.637
  STEP: watching for the daemon set status to be patched @ 06/22/24 13:33:09.644
  Jun 22 13:33:09.646: INFO: Observed &DaemonSet event: ADDED
  Jun 22 13:33:09.646: INFO: Observed &DaemonSet event: MODIFIED
  Jun 22 13:33:09.647: INFO: Observed &DaemonSet event: MODIFIED
  Jun 22 13:33:09.647: INFO: Observed &DaemonSet event: MODIFIED
  Jun 22 13:33:09.647: INFO: Observed &DaemonSet event: MODIFIED
  Jun 22 13:33:09.647: INFO: Observed daemon set daemon-set in namespace daemonsets-2307 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 22 13:33:09.647: INFO: Observed &DaemonSet event: MODIFIED
  Jun 22 13:33:09.647: INFO: Found daemon set daemon-set in namespace daemonsets-2307 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Jun 22 13:33:09.647: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 06/22/24 13:33:09.653
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2307, will wait for the garbage collector to delete the pods @ 06/22/24 13:33:09.653
  Jun 22 13:33:09.716: INFO: Deleting DaemonSet.extensions daemon-set took: 8.919609ms
  Jun 22 13:33:09.817: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.557808ms
  E0622 13:33:09.908280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:10.908604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:33:11.122: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 13:33:11.122: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 22 13:33:11.126: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29519"},"items":null}

  Jun 22 13:33:11.130: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29519"},"items":null}

  Jun 22 13:33:11.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2307" for this suite. @ 06/22/24 13:33:11.149
• [3.602 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 06/22/24 13:33:11.157
  Jun 22 13:33:11.157: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename runtimeclass @ 06/22/24 13:33:11.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:33:11.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:33:11.177
  STEP: Deleting RuntimeClass runtimeclass-2600-delete-me @ 06/22/24 13:33:11.185
  STEP: Waiting for the RuntimeClass to disappear @ 06/22/24 13:33:11.191
  Jun 22 13:33:11.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2600" for this suite. @ 06/22/24 13:33:11.206
• [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 06/22/24 13:33:11.214
  Jun 22 13:33:11.214: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pod-network-test @ 06/22/24 13:33:11.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:33:11.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:33:11.231
  STEP: Performing setup for networking test in namespace pod-network-test-7223 @ 06/22/24 13:33:11.233
  STEP: creating a selector @ 06/22/24 13:33:11.233
  STEP: Creating the service pods in kubernetes @ 06/22/24 13:33:11.233
  Jun 22 13:33:11.233: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0622 13:33:11.908696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:12.908820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:13.908926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:14.909826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:15.910697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:16.910792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:17.910884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:18.911100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:19.911321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:20.911518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:21.911791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:22.912178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/22/24 13:33:23.323
  E0622 13:33:23.913047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:24.914037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:33:25.346: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 22 13:33:25.346: INFO: Breadth first check of 192.168.90.126 on host 172.31.25.91...
  Jun 22 13:33:25.350: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.20.155:9080/dial?request=hostname&protocol=udp&host=192.168.90.126&port=8081&tries=1'] Namespace:pod-network-test-7223 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:33:25.350: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:33:25.350: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:33:25.350: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7223/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.20.155%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.90.126%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 22 13:33:25.402: INFO: Waiting for responses: map[]
  Jun 22 13:33:25.402: INFO: reached 192.168.90.126 after 0/1 tries
  Jun 22 13:33:25.402: INFO: Breadth first check of 192.168.20.156 on host 172.31.3.104...
  Jun 22 13:33:25.407: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.20.155:9080/dial?request=hostname&protocol=udp&host=192.168.20.156&port=8081&tries=1'] Namespace:pod-network-test-7223 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:33:25.407: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:33:25.407: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:33:25.407: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7223/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.20.155%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.20.156%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 22 13:33:25.461: INFO: Waiting for responses: map[]
  Jun 22 13:33:25.461: INFO: reached 192.168.20.156 after 0/1 tries
  Jun 22 13:33:25.461: INFO: Breadth first check of 192.168.251.163 on host 172.31.85.228...
  Jun 22 13:33:25.465: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.20.155:9080/dial?request=hostname&protocol=udp&host=192.168.251.163&port=8081&tries=1'] Namespace:pod-network-test-7223 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:33:25.465: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:33:25.465: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:33:25.465: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7223/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.20.155%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.251.163%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 22 13:33:25.517: INFO: Waiting for responses: map[]
  Jun 22 13:33:25.517: INFO: reached 192.168.251.163 after 0/1 tries
  Jun 22 13:33:25.517: INFO: Going to retry 0 out of 3 pods....
  Jun 22 13:33:25.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7223" for this suite. @ 06/22/24 13:33:25.522
• [14.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 06/22/24 13:33:25.53
  Jun 22 13:33:25.530: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename security-context-test @ 06/22/24 13:33:25.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:33:25.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:33:25.562
  E0622 13:33:25.914212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:26.914722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:27.915386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:28.915474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:33:29.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2328" for this suite. @ 06/22/24 13:33:29.609
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 06/22/24 13:33:29.619
  Jun 22 13:33:29.620: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename var-expansion @ 06/22/24 13:33:29.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:33:29.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:33:29.639
  E0622 13:33:29.916024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:30.916392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:33:31.662: INFO: Deleting pod "var-expansion-a90341aa-751f-407e-a6b6-5f9996767391" in namespace "var-expansion-357"
  Jun 22 13:33:31.672: INFO: Wait up to 5m0s for pod "var-expansion-a90341aa-751f-407e-a6b6-5f9996767391" to be fully deleted
  E0622 13:33:31.917356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:32.917460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:33:33.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-357" for this suite. @ 06/22/24 13:33:33.684
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 06/22/24 13:33:33.692
  Jun 22 13:33:33.693: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir @ 06/22/24 13:33:33.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:33:33.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:33:33.726
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/22/24 13:33:33.73
  E0622 13:33:33.918436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:34.918936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:35.919507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:36.919686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:33:37.768
  Jun 22 13:33:37.772: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-9b13bdf7-defd-4251-8616-5490a7f8072f container test-container: <nil>
  STEP: delete the pod @ 06/22/24 13:33:37.78
  Jun 22 13:33:37.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5910" for this suite. @ 06/22/24 13:33:37.803
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 06/22/24 13:33:37.812
  Jun 22 13:33:37.812: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename proxy @ 06/22/24 13:33:37.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:33:37.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:33:37.832
  Jun 22 13:33:37.834: INFO: Creating pod...
  E0622 13:33:37.919897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:38.919992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:33:39.856: INFO: Creating service...
  Jun 22 13:33:39.868: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1812/pods/agnhost/proxy?method=DELETE
  Jun 22 13:33:39.876: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 22 13:33:39.876: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1812/pods/agnhost/proxy?method=OPTIONS
  Jun 22 13:33:39.879: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 22 13:33:39.879: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1812/pods/agnhost/proxy?method=PATCH
  Jun 22 13:33:39.883: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 22 13:33:39.883: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1812/pods/agnhost/proxy?method=POST
  Jun 22 13:33:39.887: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 22 13:33:39.887: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1812/pods/agnhost/proxy?method=PUT
  Jun 22 13:33:39.890: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 22 13:33:39.890: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1812/services/e2e-proxy-test-service/proxy?method=DELETE
  Jun 22 13:33:39.896: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 22 13:33:39.896: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1812/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Jun 22 13:33:39.902: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 22 13:33:39.902: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1812/services/e2e-proxy-test-service/proxy?method=PATCH
  Jun 22 13:33:39.908: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 22 13:33:39.908: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1812/services/e2e-proxy-test-service/proxy?method=POST
  Jun 22 13:33:39.915: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 22 13:33:39.915: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1812/services/e2e-proxy-test-service/proxy?method=PUT
  E0622 13:33:39.920439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:33:39.921: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 22 13:33:39.921: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1812/pods/agnhost/proxy?method=GET
  Jun 22 13:33:39.924: INFO: http.Client request:GET StatusCode:301
  Jun 22 13:33:39.924: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1812/services/e2e-proxy-test-service/proxy?method=GET
  Jun 22 13:33:39.929: INFO: http.Client request:GET StatusCode:301
  Jun 22 13:33:39.929: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1812/pods/agnhost/proxy?method=HEAD
  Jun 22 13:33:39.933: INFO: http.Client request:HEAD StatusCode:301
  Jun 22 13:33:39.933: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1812/services/e2e-proxy-test-service/proxy?method=HEAD
  Jun 22 13:33:39.938: INFO: http.Client request:HEAD StatusCode:301
  Jun 22 13:33:39.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1812" for this suite. @ 06/22/24 13:33:39.942
• [2.138 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 06/22/24 13:33:39.95
  Jun 22 13:33:39.950: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/22/24 13:33:39.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:33:39.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:33:39.968
  STEP: create the container to handle the HTTPGet hook request. @ 06/22/24 13:33:39.974
  E0622 13:33:40.920590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:41.920656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/22/24 13:33:42.002
  E0622 13:33:42.920778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:43.920938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 06/22/24 13:33:44.025
  STEP: delete the pod with lifecycle hook @ 06/22/24 13:33:44.032
  E0622 13:33:44.920989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:45.921091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:33:46.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5869" for this suite. @ 06/22/24 13:33:46.053
• [6.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 06/22/24 13:33:46.061
  Jun 22 13:33:46.061: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename apf @ 06/22/24 13:33:46.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:33:46.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:33:46.08
  STEP: getting /apis @ 06/22/24 13:33:46.082
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/22/24 13:33:46.085
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/22/24 13:33:46.086
  STEP: creating @ 06/22/24 13:33:46.087
  STEP: getting @ 06/22/24 13:33:46.109
  STEP: listing @ 06/22/24 13:33:46.208
  STEP: watching @ 06/22/24 13:33:46.212
  Jun 22 13:33:46.213: INFO: starting watch
  STEP: patching @ 06/22/24 13:33:46.214
  STEP: updating @ 06/22/24 13:33:46.219
  Jun 22 13:33:46.229: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 06/22/24 13:33:46.229
  STEP: patching /status @ 06/22/24 13:33:46.233
  STEP: updating /status @ 06/22/24 13:33:46.239
  STEP: deleting @ 06/22/24 13:33:46.248
  STEP: deleting a collection @ 06/22/24 13:33:46.262
  Jun 22 13:33:46.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5648" for this suite. @ 06/22/24 13:33:46.288
• [0.234 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 06/22/24 13:33:46.295
  Jun 22 13:33:46.295: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename replicaset @ 06/22/24 13:33:46.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:33:46.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:33:46.316
  STEP: Create a Replicaset @ 06/22/24 13:33:46.322
  STEP: Verify that the required pods have come up. @ 06/22/24 13:33:46.327
  Jun 22 13:33:46.330: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0622 13:33:46.922142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:47.922220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:48.922334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:49.922431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:50.922630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:33:51.334: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/22/24 13:33:51.334
  STEP: Getting /status @ 06/22/24 13:33:51.334
  Jun 22 13:33:51.338: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 06/22/24 13:33:51.338
  Jun 22 13:33:51.348: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 06/22/24 13:33:51.348
  Jun 22 13:33:51.350: INFO: Observed &ReplicaSet event: ADDED
  Jun 22 13:33:51.350: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 22 13:33:51.350: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 22 13:33:51.350: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 22 13:33:51.350: INFO: Found replicaset test-rs in namespace replicaset-3265 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 22 13:33:51.350: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 06/22/24 13:33:51.35
  Jun 22 13:33:51.350: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun 22 13:33:51.360: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 06/22/24 13:33:51.361
  Jun 22 13:33:51.363: INFO: Observed &ReplicaSet event: ADDED
  Jun 22 13:33:51.363: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 22 13:33:51.363: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 22 13:33:51.363: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 22 13:33:51.363: INFO: Observed replicaset test-rs in namespace replicaset-3265 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 22 13:33:51.363: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 22 13:33:51.363: INFO: Found replicaset test-rs in namespace replicaset-3265 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jun 22 13:33:51.363: INFO: Replicaset test-rs has a patched status
  Jun 22 13:33:51.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3265" for this suite. @ 06/22/24 13:33:51.367
• [5.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 06/22/24 13:33:51.376
  Jun 22 13:33:51.376: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename endpointslice @ 06/22/24 13:33:51.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:33:51.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:33:51.4
  E0622 13:33:51.923313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:52.923352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:33:53.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3312" for this suite. @ 06/22/24 13:33:53.474
• [2.105 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 06/22/24 13:33:53.482
  Jun 22 13:33:53.482: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl-logs @ 06/22/24 13:33:53.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:33:53.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:33:53.501
  STEP: creating an pod @ 06/22/24 13:33:53.504
  Jun 22 13:33:53.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-logs-224 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Jun 22 13:33:53.557: INFO: stderr: ""
  Jun 22 13:33:53.557: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 06/22/24 13:33:53.557
  Jun 22 13:33:53.557: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0622 13:33:53.923468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:54.923819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:33:55.567: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 06/22/24 13:33:55.567
  Jun 22 13:33:55.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-logs-224 logs logs-generator logs-generator'
  Jun 22 13:33:55.618: INFO: stderr: ""
  Jun 22 13:33:55.618: INFO: stdout: "I0622 13:33:54.134557       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/zn9k 226\nI0622 13:33:54.334644       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/b9w 248\nI0622 13:33:54.535191       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/vpgd 571\nI0622 13:33:54.735506       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/n8c 299\nI0622 13:33:54.934701       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/ckbw 573\nI0622 13:33:55.134994       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/28h 503\nI0622 13:33:55.335291       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/xmz 325\nI0622 13:33:55.535522       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/sdq 307\n"
  STEP: limiting log lines @ 06/22/24 13:33:55.618
  Jun 22 13:33:55.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-logs-224 logs logs-generator logs-generator --tail=1'
  Jun 22 13:33:55.669: INFO: stderr: ""
  Jun 22 13:33:55.669: INFO: stdout: "I0622 13:33:55.535522       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/sdq 307\n"
  Jun 22 13:33:55.669: INFO: got output "I0622 13:33:55.535522       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/sdq 307\n"
  STEP: limiting log bytes @ 06/22/24 13:33:55.669
  Jun 22 13:33:55.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-logs-224 logs logs-generator logs-generator --limit-bytes=1'
  Jun 22 13:33:55.720: INFO: stderr: ""
  Jun 22 13:33:55.720: INFO: stdout: "I"
  Jun 22 13:33:55.720: INFO: got output "I"
  STEP: exposing timestamps @ 06/22/24 13:33:55.72
  Jun 22 13:33:55.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-logs-224 logs logs-generator logs-generator --tail=1 --timestamps'
  Jun 22 13:33:55.778: INFO: stderr: ""
  Jun 22 13:33:55.778: INFO: stdout: "2024-06-22T13:33:55.734861202Z I0622 13:33:55.734761       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/q9t2 237\n"
  Jun 22 13:33:55.778: INFO: got output "2024-06-22T13:33:55.734861202Z I0622 13:33:55.734761       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/q9t2 237\n"
  STEP: restricting to a time range @ 06/22/24 13:33:55.778
  E0622 13:33:55.924618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:56.924706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:33:57.925608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:33:58.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-logs-224 logs logs-generator logs-generator --since=1s'
  Jun 22 13:33:58.331: INFO: stderr: ""
  Jun 22 13:33:58.331: INFO: stdout: "I0622 13:33:57.335293       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/b46z 574\nI0622 13:33:57.535596       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/8tw 307\nI0622 13:33:57.734896       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/nl6l 439\nI0622 13:33:57.935186       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/m95 335\nI0622 13:33:58.135493       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/dk9l 376\n"
  Jun 22 13:33:58.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-logs-224 logs logs-generator logs-generator --since=24h'
  Jun 22 13:33:58.383: INFO: stderr: ""
  Jun 22 13:33:58.383: INFO: stdout: "I0622 13:33:54.134557       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/zn9k 226\nI0622 13:33:54.334644       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/b9w 248\nI0622 13:33:54.535191       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/vpgd 571\nI0622 13:33:54.735506       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/n8c 299\nI0622 13:33:54.934701       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/ckbw 573\nI0622 13:33:55.134994       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/28h 503\nI0622 13:33:55.335291       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/xmz 325\nI0622 13:33:55.535522       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/sdq 307\nI0622 13:33:55.734761       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/q9t2 237\nI0622 13:33:55.935238       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/wwgh 540\nI0622 13:33:56.135562       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/n5c 263\nI0622 13:33:56.334854       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/b7x 331\nI0622 13:33:56.535152       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/xkb 475\nI0622 13:33:56.735470       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/x6v 335\nI0622 13:33:56.934688       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/6s2 511\nI0622 13:33:57.134988       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/s2sv 435\nI0622 13:33:57.335293       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/b46z 574\nI0622 13:33:57.535596       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/8tw 307\nI0622 13:33:57.734896       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/nl6l 439\nI0622 13:33:57.935186       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/m95 335\nI0622 13:33:58.135493       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/dk9l 376\nI0622 13:33:58.334781       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/bdc2 342\n"
  Jun 22 13:33:58.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-logs-224 delete pod logs-generator'
  E0622 13:33:58.925634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:33:58.993: INFO: stderr: ""
  Jun 22 13:33:58.993: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Jun 22 13:33:58.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-224" for this suite. @ 06/22/24 13:33:58.998
• [5.523 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 06/22/24 13:33:59.005
  Jun 22 13:33:59.005: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename csi-storageclass @ 06/22/24 13:33:59.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:33:59.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:33:59.025
  STEP: Creating a StorageClass @ 06/22/24 13:33:59.028
  STEP: Get StorageClass "e2e-9jgxw" @ 06/22/24 13:33:59.032
  STEP: Patching the StorageClass "e2e-9jgxw" @ 06/22/24 13:33:59.036
  STEP: Delete StorageClass "e2e-9jgxw" @ 06/22/24 13:33:59.042
  STEP: Confirm deletion of StorageClass "e2e-9jgxw" @ 06/22/24 13:33:59.049
  STEP: Create a replacement StorageClass @ 06/22/24 13:33:59.052
  STEP: Updating StorageClass "e2e-v2-rv4sz" @ 06/22/24 13:33:59.06
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-rv4sz=updated" @ 06/22/24 13:33:59.068
  STEP: Deleting StorageClass "e2e-v2-rv4sz" via DeleteCollection @ 06/22/24 13:33:59.072
  STEP: Confirm deletion of StorageClass "e2e-v2-rv4sz" @ 06/22/24 13:33:59.081
  Jun 22 13:33:59.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-6730" for this suite. @ 06/22/24 13:33:59.089
• [0.091 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 06/22/24 13:33:59.097
  Jun 22 13:33:59.097: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename statefulset @ 06/22/24 13:33:59.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:33:59.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:33:59.116
  STEP: Creating service test in namespace statefulset-7351 @ 06/22/24 13:33:59.119
  STEP: Creating statefulset ss in namespace statefulset-7351 @ 06/22/24 13:33:59.133
  Jun 22 13:33:59.146: INFO: Found 0 stateful pods, waiting for 1
  E0622 13:33:59.926636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:00.926711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:01.926839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:02.926932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:03.927022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:04.927990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:05.928093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:06.928340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:07.929223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:08.929307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:34:09.145: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 06/22/24 13:34:09.154
  STEP: Getting /status @ 06/22/24 13:34:09.162
  Jun 22 13:34:09.166: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 06/22/24 13:34:09.166
  Jun 22 13:34:09.177: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 06/22/24 13:34:09.177
  Jun 22 13:34:09.179: INFO: Observed &StatefulSet event: ADDED
  Jun 22 13:34:09.179: INFO: Found Statefulset ss in namespace statefulset-7351 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 22 13:34:09.179: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 06/22/24 13:34:09.179
  Jun 22 13:34:09.179: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun 22 13:34:09.186: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 06/22/24 13:34:09.186
  Jun 22 13:34:09.188: INFO: Observed &StatefulSet event: ADDED
  Jun 22 13:34:09.188: INFO: Observed Statefulset ss in namespace statefulset-7351 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 22 13:34:09.188: INFO: Observed &StatefulSet event: MODIFIED
  Jun 22 13:34:09.188: INFO: Found Statefulset ss in namespace statefulset-7351 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jun 22 13:34:09.188: INFO: Deleting all statefulset in ns statefulset-7351
  Jun 22 13:34:09.193: INFO: Scaling statefulset ss to 0
  E0622 13:34:09.929661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:10.929753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:11.929830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:12.929913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:13.930792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:14.930875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:15.931000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:16.931270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:17.931384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:18.931562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:34:19.208: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 22 13:34:19.212: INFO: Deleting statefulset ss
  Jun 22 13:34:19.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7351" for this suite. @ 06/22/24 13:34:19.232
• [20.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 06/22/24 13:34:19.24
  Jun 22 13:34:19.240: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/22/24 13:34:19.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:34:19.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:34:19.26
  STEP: Creating two CSIDrivers @ 06/22/24 13:34:19.264
  STEP: Getting "inline-driver-6d32d738-b8ba-4bb7-b3f3-8172706dc439" & "inline-driver-07b3c645-4387-4a24-a581-76afc53c0efb" @ 06/22/24 13:34:19.283
  STEP: Patching the CSIDriver "inline-driver-07b3c645-4387-4a24-a581-76afc53c0efb" @ 06/22/24 13:34:19.29
  STEP: Updating the CSIDriver "inline-driver-07b3c645-4387-4a24-a581-76afc53c0efb" @ 06/22/24 13:34:19.298
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-6024" @ 06/22/24 13:34:19.307
  STEP: Deleting CSIDriver "inline-driver-6d32d738-b8ba-4bb7-b3f3-8172706dc439" @ 06/22/24 13:34:19.31
  STEP: Confirm deletion of CSIDriver "inline-driver-6d32d738-b8ba-4bb7-b3f3-8172706dc439" @ 06/22/24 13:34:19.317
  STEP: Deleting CSIDriver "inline-driver-07b3c645-4387-4a24-a581-76afc53c0efb" via DeleteCollection @ 06/22/24 13:34:19.321
  STEP: Confirm deletion of CSIDriver "inline-driver-07b3c645-4387-4a24-a581-76afc53c0efb" @ 06/22/24 13:34:19.33
  Jun 22 13:34:19.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6024" for this suite. @ 06/22/24 13:34:19.336
• [0.103 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 06/22/24 13:34:19.343
  Jun 22 13:34:19.343: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename container-runtime @ 06/22/24 13:34:19.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:34:19.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:34:19.36
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 06/22/24 13:34:19.372
  E0622 13:34:19.931929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:20.932680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:21.932745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:22.933505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:23.933676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:24.934686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:25.935386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:26.935957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:27.937022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:28.937105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:29.937770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:30.938709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:31.939610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:32.939701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:33.940740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:34.941357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 06/22/24 13:34:35.462
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 06/22/24 13:34:35.466
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 06/22/24 13:34:35.474
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 06/22/24 13:34:35.474
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 06/22/24 13:34:35.501
  E0622 13:34:35.941993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:36.942721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 06/22/24 13:34:37.517
  E0622 13:34:37.943579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 06/22/24 13:34:38.526
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 06/22/24 13:34:38.533
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 06/22/24 13:34:38.533
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 06/22/24 13:34:38.558
  E0622 13:34:38.944127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 06/22/24 13:34:39.57
  E0622 13:34:39.944224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:40.945054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 06/22/24 13:34:41.583
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 06/22/24 13:34:41.59
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 06/22/24 13:34:41.59
  Jun 22 13:34:41.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4246" for this suite. @ 06/22/24 13:34:41.623
• [22.288 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 06/22/24 13:34:41.632
  Jun 22 13:34:41.632: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:34:41.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:34:41.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:34:41.651
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-9babf3e0-9663-4690-aaa9-f11b26305f41 @ 06/22/24 13:34:41.657
  STEP: Creating the pod @ 06/22/24 13:34:41.661
  E0622 13:34:41.945314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:42.945440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-9babf3e0-9663-4690-aaa9-f11b26305f41 @ 06/22/24 13:34:43.694
  STEP: waiting to observe update in volume @ 06/22/24 13:34:43.701
  E0622 13:34:43.946007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:44.946093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:45.947022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:46.947119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:47.947960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:48.948206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:49.948943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:50.949048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:51.949522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:52.949636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:53.950397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:54.950782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:55.951702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:56.951913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:57.951996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:58.952187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:34:59.952618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:00.952876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:01.953416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:02.953643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:03.954325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:04.954725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:05.954760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:06.954844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:07.955629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:08.956394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:09.956621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:10.956700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:11.956844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:12.957049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:13.957189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:14.957986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:15.958123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:16.958673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:17.959054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:18.959300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:19.959671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:20.959985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:21.961045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:22.961239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:23.961966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:24.963033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:25.963548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:26.963699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:27.964714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:28.965659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:29.966589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:30.966699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:31.967736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:32.967857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:33.968052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:34.969012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:35.969269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:36.969632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:37.969710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:38.970707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:39.970844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:40.970916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:41.971044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:42.971781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:43.971861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:44.971978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:45.972085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:46.972168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:47.972258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:48.972378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:49.972475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:50.972589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:51.972684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:52.972784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:53.972920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:54.972979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:55.973123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:56.973639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:57.974701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:58.975721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:35:59.975820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:36:00.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5357" for this suite. @ 06/22/24 13:36:00.117
• [78.494 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 06/22/24 13:36:00.126
  Jun 22 13:36:00.126: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename gc @ 06/22/24 13:36:00.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:36:00.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:36:00.147
  STEP: create the deployment @ 06/22/24 13:36:00.15
  W0622 13:36:00.157153      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/22/24 13:36:00.157
  STEP: delete the deployment @ 06/22/24 13:36:00.275
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 06/22/24 13:36:00.291
  STEP: Gathering metrics @ 06/22/24 13:36:00.811
  W0622 13:36:00.816734      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 22 13:36:00.816: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 22 13:36:00.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7782" for this suite. @ 06/22/24 13:36:00.822
• [0.704 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 06/22/24 13:36:00.83
  Jun 22 13:36:00.830: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename configmap @ 06/22/24 13:36:00.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:36:00.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:36:00.85
  Jun 22 13:36:00.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1114" for this suite. @ 06/22/24 13:36:00.897
• [0.075 seconds]
------------------------------
SS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 06/22/24 13:36:00.905
  Jun 22 13:36:00.905: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename prestop @ 06/22/24 13:36:00.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:36:00.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:36:00.926
  STEP: Creating server pod server in namespace prestop-7769 @ 06/22/24 13:36:00.929
  STEP: Waiting for pods to come up. @ 06/22/24 13:36:00.938
  E0622 13:36:00.976697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:01.976814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-7769 @ 06/22/24 13:36:02.953
  E0622 13:36:02.977134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:03.977281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 06/22/24 13:36:04.969
  E0622 13:36:04.978019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:05.978814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:06.978917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:07.979113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:08.979321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:09.979820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:36:09.984: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 06/22/24 13:36:09.984
  Jun 22 13:36:09.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-7769" for this suite. @ 06/22/24 13:36:10.002
• [9.104 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 06/22/24 13:36:10.01
  Jun 22 13:36:10.010: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename deployment @ 06/22/24 13:36:10.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:36:10.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:36:10.031
  Jun 22 13:36:10.042: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0622 13:36:10.980038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:11.980140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:12.980336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:13.980425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:14.980831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:36:15.047: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/22/24 13:36:15.047
  Jun 22 13:36:15.047: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 06/22/24 13:36:15.057
  Jun 22 13:36:15.069: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8234",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "642cd3dd-6fe2-4c3d-91dc-b32d9a1b4ea2",
      ResourceVersion: (string) (len=5) "30744",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 22 13:36:15.075: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8234",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "57a739b1-86b0-40d8-9e60-201bc5a6440e",
      ResourceVersion: (string) (len=5) "30747",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "642cd3dd-6fe2-4c3d-91dc-b32d9a1b4ea2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 34 32 63 64 33  64 64 2d 36 66 65 32 2d  |\"642cd3dd-6fe2-|
              00000120  34 63 33 64 2d 39 31 64  63 2d 62 33 32 64 39 61  |4c3d-91dc-b32d9a|
              00000130  31 62 34 65 61 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1b4ea2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 22 13:36:15.076: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Jun 22 13:36:15.076: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8234",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "524a9ec9-f616-4f5c-bec0-b2cd07d5756a",
      ResourceVersion: (string) (len=5) "30745",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660170,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "642cd3dd-6fe2-4c3d-91dc-b32d9a1b4ea2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660170,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 36 34 32 63 64 33 64  |"uid\":\"642cd3d|
              00000040  64 2d 36 66 65 32 2d 34  63 33 64 2d 39 31 64 63  |d-6fe2-4c3d-91dc|
              00000050  2d 62 33 32 64 39 61 31  62 34 65 61 32 5c 22 7d  |-b32d9a1b4ea2\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 22 13:36:15.085: INFO: Pod "test-cleanup-controller-vdj2b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-vdj2b",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-8234",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7dc0785-77a9-4c6e-83db-5800f17bf34d",
      ResourceVersion: (string) (len=5) "30734",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660170,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "524a9ec9-f616-4f5c-bec0-b2cd07d5756a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660170,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  35 32 34 61 39 65 63 39  |uid\":\"524a9ec9|
              00000080  2d 66 36 31 36 2d 34 66  35 63 2d 62 65 63 30 2d  |-f616-4f5c-bec0-|
              00000090  62 32 63 64 30 37 64 35  37 35 36 61 5c 22 7d 22  |b2cd07d5756a\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  2e 31 38 31 5c 22 7d 22  |2.168.20.181\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gnwpr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gnwpr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660170,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660170,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) (len=14) "192.168.20.181",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.20.181"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660170,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660170,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://018bf4a433b772ef8375967a951c363d3560c021cabf6088d172a1f71f74eff2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:36:15.088: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-wnfw7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-wnfw7",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-8234",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3bfd7b25-8bf3-46b7-b86c-41cb19ae7ff2",
      ResourceVersion: (string) (len=5) "30749",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "57a739b1-86b0-40d8-9e60-201bc5a6440e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  61 37 33 39 62 31 2d 38  |d\":\"57a739b1-8|
              00000090  36 62 30 2d 34 30 64 38  2d 39 65 36 30 2d 32 30  |6b0-40d8-9e60-20|
              000000a0  31 62 63 35 61 36 34 34  30 65 5c 22 7d 22 3a 7b  |1bc5a6440e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zwzgn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zwzgn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:36:15.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8234" for this suite. @ 06/22/24 13:36:15.095
• [5.097 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 06/22/24 13:36:15.107
  Jun 22 13:36:15.107: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename field-validation @ 06/22/24 13:36:15.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:36:15.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:36:15.127
  STEP: apply creating a deployment @ 06/22/24 13:36:15.129
  Jun 22 13:36:15.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7051" for this suite. @ 06/22/24 13:36:15.149
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 06/22/24 13:36:15.156
  Jun 22 13:36:15.156: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename resourcequota @ 06/22/24 13:36:15.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:36:15.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:36:15.175
  E0622 13:36:15.980923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:16.980990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:17.981118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:18.981678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:19.981776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:20.981871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:21.981957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:22.982664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:23.982759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:24.982883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:25.983713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:26.983835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:27.983923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:28.984046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:29.984428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:30.984847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:31.985922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 06/22/24 13:36:32.182
  E0622 13:36:32.986038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:33.986197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:34.987025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:35.987133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:36.987223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/22/24 13:36:37.187
  STEP: Ensuring resource quota status is calculated @ 06/22/24 13:36:37.192
  E0622 13:36:37.987749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:38.987843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 06/22/24 13:36:39.198
  STEP: Ensuring resource quota status captures configMap creation @ 06/22/24 13:36:39.209
  E0622 13:36:39.988836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:40.989164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 06/22/24 13:36:41.215
  STEP: Ensuring resource quota status released usage @ 06/22/24 13:36:41.223
  E0622 13:36:41.989632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:42.989732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:36:43.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4258" for this suite. @ 06/22/24 13:36:43.231
• [28.083 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 06/22/24 13:36:43.24
  Jun 22 13:36:43.240: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename containers @ 06/22/24 13:36:43.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:36:43.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:36:43.261
  STEP: Creating a pod to test override all @ 06/22/24 13:36:43.264
  E0622 13:36:43.989845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:44.990021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:45.990699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:46.990898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:36:47.288
  Jun 22 13:36:47.292: INFO: Trying to get logs from node ip-172-31-3-104 pod client-containers-6da581e3-6e52-46e9-a3ff-c1771cbab3bc container agnhost-container: <nil>
  STEP: delete the pod @ 06/22/24 13:36:47.299
  Jun 22 13:36:47.315: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6962" for this suite. @ 06/22/24 13:36:47.32
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 06/22/24 13:36:47.328
  Jun 22 13:36:47.328: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename sysctl @ 06/22/24 13:36:47.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:36:47.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:36:47.348
  STEP: Creating a pod with one valid and two invalid sysctls @ 06/22/24 13:36:47.351
  Jun 22 13:36:47.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1046" for this suite. @ 06/22/24 13:36:47.359
• [0.038 seconds]
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 06/22/24 13:36:47.366
  Jun 22 13:36:47.366: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename lease-test @ 06/22/24 13:36:47.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:36:47.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:36:47.384
  Jun 22 13:36:47.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-900" for this suite. @ 06/22/24 13:36:47.556
• [0.199 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 06/22/24 13:36:47.565
  Jun 22 13:36:47.565: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir @ 06/22/24 13:36:47.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:36:47.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:36:47.585
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/22/24 13:36:47.587
  E0622 13:36:47.991883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:48.992092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:36:49.608
  Jun 22 13:36:49.613: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-c10ea804-f827-4f3c-9ce3-e93180448726 container test-container: <nil>
  STEP: delete the pod @ 06/22/24 13:36:49.619
  Jun 22 13:36:49.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5504" for this suite. @ 06/22/24 13:36:49.639
• [2.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 06/22/24 13:36:49.646
  Jun 22 13:36:49.646: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:36:49.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:36:49.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:36:49.665
  STEP: Creating configMap with name configmap-projected-all-test-volume-3f9e0e4d-03cd-48d1-8cd0-f7a3b6eaa623 @ 06/22/24 13:36:49.667
  STEP: Creating secret with name secret-projected-all-test-volume-7a366dea-f36c-40f5-b3d2-dfbcb816d314 @ 06/22/24 13:36:49.672
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 06/22/24 13:36:49.678
  E0622 13:36:49.992624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:50.992799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:36:51.698
  Jun 22 13:36:51.703: INFO: Trying to get logs from node ip-172-31-3-104 pod projected-volume-cf57dc52-8a22-41a3-b121-75a3ccf1444e container projected-all-volume-test: <nil>
  STEP: delete the pod @ 06/22/24 13:36:51.709
  Jun 22 13:36:51.725: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4750" for this suite. @ 06/22/24 13:36:51.729
• [2.090 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 06/22/24 13:36:51.736
  Jun 22 13:36:51.736: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir @ 06/22/24 13:36:51.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:36:51.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:36:51.754
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/22/24 13:36:51.757
  E0622 13:36:51.992862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:52.992970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:53.993627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:54.994029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:36:55.784
  Jun 22 13:36:55.787: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-a51da935-32e5-4f1f-a6ac-6b78e4726b17 container test-container: <nil>
  STEP: delete the pod @ 06/22/24 13:36:55.795
  Jun 22 13:36:55.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2278" for this suite. @ 06/22/24 13:36:55.815
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 06/22/24 13:36:55.824
  Jun 22 13:36:55.824: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/22/24 13:36:55.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:36:55.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:36:55.843
  Jun 22 13:36:55.845: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  E0622 13:36:55.994717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:56.995117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/22/24 13:36:57.141
  Jun 22 13:36:57.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-1442 --namespace=crd-publish-openapi-1442 create -f -'
  Jun 22 13:36:57.199: INFO: stderr: ""
  Jun 22 13:36:57.199: INFO: stdout: "e2e-test-crd-publish-openapi-5476-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun 22 13:36:57.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-1442 --namespace=crd-publish-openapi-1442 delete e2e-test-crd-publish-openapi-5476-crds test-cr'
  Jun 22 13:36:57.250: INFO: stderr: ""
  Jun 22 13:36:57.250: INFO: stdout: "e2e-test-crd-publish-openapi-5476-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Jun 22 13:36:57.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-1442 --namespace=crd-publish-openapi-1442 apply -f -'
  Jun 22 13:36:57.318: INFO: stderr: ""
  Jun 22 13:36:57.318: INFO: stdout: "e2e-test-crd-publish-openapi-5476-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun 22 13:36:57.319: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-1442 --namespace=crd-publish-openapi-1442 delete e2e-test-crd-publish-openapi-5476-crds test-cr'
  Jun 22 13:36:57.369: INFO: stderr: ""
  Jun 22 13:36:57.369: INFO: stdout: "e2e-test-crd-publish-openapi-5476-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/22/24 13:36:57.369
  Jun 22 13:36:57.369: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-1442 explain e2e-test-crd-publish-openapi-5476-crds'
  Jun 22 13:36:57.410: INFO: stderr: ""
  Jun 22 13:36:57.410: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-5476-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0622 13:36:57.995817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:36:58.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1442" for this suite. @ 06/22/24 13:36:58.68
• [2.863 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 06/22/24 13:36:58.688
  Jun 22 13:36:58.688: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename tables @ 06/22/24 13:36:58.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:36:58.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:36:58.708
  Jun 22 13:36:58.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-383" for this suite. @ 06/22/24 13:36:58.719
• [0.039 seconds]
------------------------------
S
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 06/22/24 13:36:58.727
  Jun 22 13:36:58.727: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pv @ 06/22/24 13:36:58.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:36:58.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:36:58.747
  STEP: Creating initial PV and PVC @ 06/22/24 13:36:58.749
  Jun 22 13:36:58.749: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-814" @ 06/22/24 13:36:58.762
  STEP: Listing PVCs in namespace "pv-814" @ 06/22/24 13:36:58.765
  STEP: Patching the PV "pv-814-79zbc" @ 06/22/24 13:36:58.77
  STEP: Patching the PVC "pvc-7pnb8" @ 06/22/24 13:36:58.778
  STEP: Getting PV "pv-814-79zbc" @ 06/22/24 13:36:58.785
  STEP: Getting PVC "pvc-7pnb8" @ 06/22/24 13:36:58.789
  STEP: Deleting PVC "pvc-7pnb8" @ 06/22/24 13:36:58.792
  STEP: Confirm deletion of PVC "pvc-7pnb8" @ 06/22/24 13:36:58.798
  E0622 13:36:58.996145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:36:59.996983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-814-79zbc" @ 06/22/24 13:37:00.806
  STEP: Confirm deletion of PV "pv-814-79zbc" @ 06/22/24 13:37:00.813
  E0622 13:37:00.997573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:01.997641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 06/22/24 13:37:02.821
  Jun 22 13:37:02.821: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-814-bsc27" @ 06/22/24 13:37:02.834
  STEP: Updating the PVC "pvc-w86w2" @ 06/22/24 13:37:02.842
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-w86w2=updated" @ 06/22/24 13:37:02.85
  STEP: Deleting PVC "pvc-w86w2" via DeleteCollection @ 06/22/24 13:37:02.853
  STEP: Confirm deletion of PVC "pvc-w86w2" @ 06/22/24 13:37:02.862
  E0622 13:37:02.998438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:03.998855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-814-bsc27" via DeleteCollection @ 06/22/24 13:37:04.871
  STEP: Confirm deletion of PV "pv-814-bsc27" @ 06/22/24 13:37:04.882
  E0622 13:37:04.999535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:06.000294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:37:06.893: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jun 22 13:37:06.893: INFO: Deleting PersistentVolumeClaim "pvc-w86w2"
  Jun 22 13:37:06.897: INFO: Deleting PersistentVolume "pv-814-bsc27"
  Jun 22 13:37:06.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-814" for this suite. @ 06/22/24 13:37:06.904
• [8.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 06/22/24 13:37:06.912
  Jun 22 13:37:06.912: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename csistoragecapacity @ 06/22/24 13:37:06.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:37:06.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:37:06.934
  STEP: getting /apis @ 06/22/24 13:37:06.937
  STEP: getting /apis/storage.k8s.io @ 06/22/24 13:37:06.94
  STEP: getting /apis/storage.k8s.io/v1 @ 06/22/24 13:37:06.941
  STEP: creating @ 06/22/24 13:37:06.942
  STEP: watching @ 06/22/24 13:37:06.958
  Jun 22 13:37:06.958: INFO: starting watch
  STEP: getting @ 06/22/24 13:37:06.964
  STEP: listing in namespace @ 06/22/24 13:37:06.967
  STEP: listing across namespaces @ 06/22/24 13:37:06.973
  STEP: patching @ 06/22/24 13:37:06.977
  STEP: updating @ 06/22/24 13:37:06.981
  Jun 22 13:37:06.986: INFO: waiting for watch events with expected annotations in namespace
  Jun 22 13:37:06.986: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 06/22/24 13:37:06.986
  STEP: deleting a collection @ 06/22/24 13:37:06.999
  E0622 13:37:07.000273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:37:07.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-8137" for this suite. @ 06/22/24 13:37:07.022
• [0.116 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 06/22/24 13:37:07.029
  Jun 22 13:37:07.029: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename init-container @ 06/22/24 13:37:07.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:37:07.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:37:07.049
  STEP: creating the pod @ 06/22/24 13:37:07.051
  Jun 22 13:37:07.051: INFO: PodSpec: initContainers in spec.initContainers
  E0622 13:37:08.000448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:09.001267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:10.002043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:37:10.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-442" for this suite. @ 06/22/24 13:37:10.472
• [3.452 seconds]
------------------------------
SSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 06/22/24 13:37:10.481
  Jun 22 13:37:10.481: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename ingressclass @ 06/22/24 13:37:10.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:37:10.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:37:10.503
  STEP: getting /apis @ 06/22/24 13:37:10.505
  STEP: getting /apis/networking.k8s.io @ 06/22/24 13:37:10.508
  STEP: getting /apis/networking.k8s.iov1 @ 06/22/24 13:37:10.509
  STEP: creating @ 06/22/24 13:37:10.51
  STEP: getting @ 06/22/24 13:37:10.523
  STEP: listing @ 06/22/24 13:37:10.526
  STEP: watching @ 06/22/24 13:37:10.53
  Jun 22 13:37:10.530: INFO: starting watch
  STEP: patching @ 06/22/24 13:37:10.531
  STEP: updating @ 06/22/24 13:37:10.536
  Jun 22 13:37:10.541: INFO: waiting for watch events with expected annotations
  Jun 22 13:37:10.541: INFO: saw patched and updated annotations
  STEP: deleting @ 06/22/24 13:37:10.541
  STEP: deleting a collection @ 06/22/24 13:37:10.553
  Jun 22 13:37:10.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4247" for this suite. @ 06/22/24 13:37:10.573
• [0.099 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 06/22/24 13:37:10.58
  Jun 22 13:37:10.580: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename gc @ 06/22/24 13:37:10.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:37:10.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:37:10.601
  STEP: create the rc @ 06/22/24 13:37:10.603
  W0622 13:37:10.608695      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0622 13:37:11.002280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:12.002315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:13.002449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:14.002700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:15.002992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/22/24 13:37:15.613
  STEP: wait for all pods to be garbage collected @ 06/22/24 13:37:15.624
  E0622 13:37:16.003898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:17.003983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:18.004110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:19.004223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:20.004511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/22/24 13:37:20.632
  W0622 13:37:20.638953      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 22 13:37:20.639: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 22 13:37:20.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7033" for this suite. @ 06/22/24 13:37:20.643
• [10.072 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 06/22/24 13:37:20.653
  Jun 22 13:37:20.653: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 13:37:20.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:37:20.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:37:20.678
  STEP: creating service multiprotocol-test in namespace services-4718 @ 06/22/24 13:37:20.683
  STEP: creating pod pod1 in namespace services-4718 @ 06/22/24 13:37:20.696
  STEP: Creating pod pod1 in namespace services-4718 @ 06/22/24 13:37:20.696
  E0622 13:37:21.004767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:22.004948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-4718 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 06/22/24 13:37:22.721
  Jun 22 13:37:22.733: INFO: successfully validated that service multiprotocol-test in namespace services-4718 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 06/22/24 13:37:22.733
  Jun 22 13:37:22.733: INFO: Creating new exec pod
  E0622 13:37:23.005714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:24.005835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:37:24.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4718 exec execpod9pr99 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.244 80'
  Jun 22 13:37:24.848: INFO: stderr: "+ nc -v -t -w 2 10.152.183.244 80\nConnection to 10.152.183.244 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun 22 13:37:24.848: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 13:37:24.848: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4718 exec execpod9pr99 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.244 80'
  E0622 13:37:25.006387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:26.006652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:27.006836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:28.007841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:37:28.942: INFO: stderr: "+ nc -v -u -w 2 10.152.183.244 80\n+ echo hostName\nConnection to 10.152.183.244 80 port [udp/*] succeeded!\n"
  Jun 22 13:37:28.942: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 06/22/24 13:37:28.942
  Jun 22 13:37:28.954: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4718 exec execpod9pr99 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.244 80'
  E0622 13:37:29.008586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:37:29.056: INFO: stderr: "+ nc -v -t -w 2 10.152.183.244 80\nConnection to 10.152.183.244 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun 22 13:37:29.056: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 13:37:29.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4718 exec execpod9pr99 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.244 80'
  E0622 13:37:30.008933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:31.009310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:32.009424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:33.010361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:37:33.157: INFO: stderr: "+ nc -v -u -w 2 10.152.183.244 80\n+ echo hostName\nConnection to 10.152.183.244 80 port [udp/*] succeeded!\n"
  Jun 22 13:37:33.158: INFO: stdout: ""
  Jun 22 13:37:33.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4718 exec execpod9pr99 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.244 80'
  E0622 13:37:34.011179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:35.012102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:36.012220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:37.012520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:37:37.252: INFO: stderr: "+ nc -v -u -w 2 10.152.183.244 80\n+ echo hostName\nConnection to 10.152.183.244 80 port [udp/*] succeeded!\n"
  Jun 22 13:37:37.252: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 06/22/24 13:37:37.252
  Jun 22 13:37:37.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4718 exec execpod9pr99 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.244 80'
  E0622 13:37:38.012752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:39.012921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:40.013389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:41.013862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:37:41.369: INFO: stderr: "+ nc -v -u -w 2 10.152.183.244 80\n+ echo hostName\nConnection to 10.152.183.244 80 port [udp/*] succeeded!\n"
  Jun 22 13:37:41.369: INFO: stdout: "pod1"
  Jun 22 13:37:41.370: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4718 exec execpod9pr99 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.244 80'
  E0622 13:37:42.014728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:43.014885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:37:43.462: INFO: rc: 1
  Jun 22 13:37:43.462: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4718 exec execpod9pr99 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.244 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.244 80
  + echo hostName
  nc: connect to 10.152.183.244 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 22 13:37:43.462: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4718 exec execpod9pr99 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.244 80'
  E0622 13:37:44.015288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:45.015657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:37:45.562: INFO: rc: 1
  Jun 22 13:37:45.562: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4718 exec execpod9pr99 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.244 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.244 80
  + echo hostName
  nc: connect to 10.152.183.244 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 22 13:37:45.562: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4718 exec execpod9pr99 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.244 80'
  E0622 13:37:46.016345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:47.016446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:37:47.653: INFO: rc: 1
  Jun 22 13:37:47.653: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-4718 exec execpod9pr99 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.244 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.244 80
  + echo hostName
  nc: connect to 10.152.183.244 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 22 13:37:47.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4718" for this suite. @ 06/22/24 13:37:47.658
• [27.012 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 06/22/24 13:37:47.665
  Jun 22 13:37:47.665: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename disruption @ 06/22/24 13:37:47.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:37:47.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:37:47.688
  STEP: Creating a pdb that targets all three pods in a test replica set @ 06/22/24 13:37:47.69
  STEP: Waiting for the pdb to be processed @ 06/22/24 13:37:47.695
  E0622 13:37:48.016928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:49.017041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 06/22/24 13:37:49.707
  STEP: Waiting for all pods to be running @ 06/22/24 13:37:49.707
  Jun 22 13:37:49.710: INFO: pods: 0 < 3
  E0622 13:37:50.018054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:51.018145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 06/22/24 13:37:51.712
  STEP: Updating the pdb to allow a pod to be evicted @ 06/22/24 13:37:51.723
  STEP: Waiting for the pdb to be processed @ 06/22/24 13:37:51.731
  E0622 13:37:52.018468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:53.018661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/22/24 13:37:53.736
  STEP: Waiting for all pods to be running @ 06/22/24 13:37:53.736
  STEP: Waiting for the pdb to observed all healthy pods @ 06/22/24 13:37:53.741
  STEP: Patching the pdb to disallow a pod to be evicted @ 06/22/24 13:37:53.769
  STEP: Waiting for the pdb to be processed @ 06/22/24 13:37:53.782
  E0622 13:37:54.018703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:55.018976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 06/22/24 13:37:55.787
  STEP: locating a running pod @ 06/22/24 13:37:55.791
  STEP: Deleting the pdb to allow a pod to be evicted @ 06/22/24 13:37:55.802
  STEP: Waiting for the pdb to be deleted @ 06/22/24 13:37:55.809
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/22/24 13:37:55.813
  STEP: Waiting for all pods to be running @ 06/22/24 13:37:55.813
  Jun 22 13:37:55.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8293" for this suite. @ 06/22/24 13:37:55.837
• [8.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 06/22/24 13:37:55.848
  Jun 22 13:37:55.849: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename resourcequota @ 06/22/24 13:37:55.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:37:55.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:37:55.87
  STEP: Creating a ResourceQuota with best effort scope @ 06/22/24 13:37:55.873
  STEP: Ensuring ResourceQuota status is calculated @ 06/22/24 13:37:55.877
  E0622 13:37:56.019690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:57.019768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 06/22/24 13:37:57.882
  STEP: Ensuring ResourceQuota status is calculated @ 06/22/24 13:37:57.887
  E0622 13:37:58.020098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:37:59.020240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 06/22/24 13:37:59.891
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 06/22/24 13:37:59.906
  E0622 13:38:00.021058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:01.021208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 06/22/24 13:38:01.91
  E0622 13:38:02.022218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:03.022701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/22/24 13:38:03.915
  STEP: Ensuring resource quota status released the pod usage @ 06/22/24 13:38:03.934
  E0622 13:38:04.022796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:05.022908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 06/22/24 13:38:05.939
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 06/22/24 13:38:05.95
  E0622 13:38:06.023596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:07.023879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 06/22/24 13:38:07.955
  E0622 13:38:08.024319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:09.024444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/22/24 13:38:09.959
  STEP: Ensuring resource quota status released the pod usage @ 06/22/24 13:38:09.975
  E0622 13:38:10.025291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:11.025660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:38:11.979: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4473" for this suite. @ 06/22/24 13:38:11.984
• [16.143 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 06/22/24 13:38:11.992
  Jun 22 13:38:11.992: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename dns @ 06/22/24 13:38:11.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:38:12.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:38:12.016
  STEP: Creating a test externalName service @ 06/22/24 13:38:12.018
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5043.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5043.svc.cluster.local; sleep 1; done
   @ 06/22/24 13:38:12.023
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5043.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5043.svc.cluster.local; sleep 1; done
   @ 06/22/24 13:38:12.023
  STEP: creating a pod to probe DNS @ 06/22/24 13:38:12.023
  STEP: submitting the pod to kubernetes @ 06/22/24 13:38:12.024
  E0622 13:38:12.026026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:13.026286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:14.026371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/22/24 13:38:14.049
  STEP: looking for the results for each expected name from probers @ 06/22/24 13:38:14.053
  Jun 22 13:38:14.063: INFO: DNS probes using dns-test-33385a5a-00d2-42a7-9baf-35e0cbdae3b1 succeeded

  STEP: changing the externalName to bar.example.com @ 06/22/24 13:38:14.063
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5043.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5043.svc.cluster.local; sleep 1; done
   @ 06/22/24 13:38:14.075
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5043.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5043.svc.cluster.local; sleep 1; done
   @ 06/22/24 13:38:14.075
  STEP: creating a second pod to probe DNS @ 06/22/24 13:38:14.075
  STEP: submitting the pod to kubernetes @ 06/22/24 13:38:14.075
  E0622 13:38:15.027110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:16.027302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:17.027808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:18.027884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:19.028002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:20.029025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/22/24 13:38:20.105
  STEP: looking for the results for each expected name from probers @ 06/22/24 13:38:20.109
  Jun 22 13:38:20.118: INFO: DNS probes using dns-test-c0b9f02e-5653-4f1c-89fd-c4eb4fee2dfe succeeded

  STEP: changing the service to type=ClusterIP @ 06/22/24 13:38:20.118
  W0622 13:38:20.135160      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5043.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-5043.svc.cluster.local; sleep 1; done
   @ 06/22/24 13:38:20.135
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5043.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-5043.svc.cluster.local; sleep 1; done
   @ 06/22/24 13:38:20.135
  STEP: creating a third pod to probe DNS @ 06/22/24 13:38:20.135
  STEP: submitting the pod to kubernetes @ 06/22/24 13:38:20.139
  E0622 13:38:21.029161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:22.029338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/22/24 13:38:22.156
  STEP: looking for the results for each expected name from probers @ 06/22/24 13:38:22.16
  Jun 22 13:38:22.170: INFO: DNS probes using dns-test-1320e933-c4c5-4b12-851c-2ed51c54fad4 succeeded

  STEP: deleting the pod @ 06/22/24 13:38:22.17
  STEP: deleting the pod @ 06/22/24 13:38:22.185
  STEP: deleting the pod @ 06/22/24 13:38:22.198
  STEP: deleting the test externalName service @ 06/22/24 13:38:22.212
  Jun 22 13:38:22.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5043" for this suite. @ 06/22/24 13:38:22.234
• [10.248 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 06/22/24 13:38:22.24
  Jun 22 13:38:22.240: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename subpath @ 06/22/24 13:38:22.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:38:22.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:38:22.26
  STEP: Setting up data @ 06/22/24 13:38:22.262
  STEP: Creating pod pod-subpath-test-downwardapi-jbjp @ 06/22/24 13:38:22.272
  STEP: Creating a pod to test atomic-volume-subpath @ 06/22/24 13:38:22.272
  E0622 13:38:23.029677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:24.030687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:25.031698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:26.031820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:27.031926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:28.032039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:29.032493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:30.032579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:31.032693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:32.033016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:33.033192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:34.033359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:35.034177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:36.034234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:37.034716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:38.034786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:39.034886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:40.035071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:41.035181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:42.035857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:43.035919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:44.036472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:45.036598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:46.036696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:38:46.351
  Jun 22 13:38:46.355: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-subpath-test-downwardapi-jbjp container test-container-subpath-downwardapi-jbjp: <nil>
  STEP: delete the pod @ 06/22/24 13:38:46.374
  STEP: Deleting pod pod-subpath-test-downwardapi-jbjp @ 06/22/24 13:38:46.39
  Jun 22 13:38:46.390: INFO: Deleting pod "pod-subpath-test-downwardapi-jbjp" in namespace "subpath-6198"
  Jun 22 13:38:46.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6198" for this suite. @ 06/22/24 13:38:46.398
• [24.165 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 06/22/24 13:38:46.406
  Jun 22 13:38:46.406: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 13:38:46.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:38:46.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:38:46.426
  STEP: Setting up server cert @ 06/22/24 13:38:46.451
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 13:38:46.837
  STEP: Deploying the webhook pod @ 06/22/24 13:38:46.847
  STEP: Wait for the deployment to be ready @ 06/22/24 13:38:46.858
  Jun 22 13:38:46.882: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0622 13:38:47.037303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:48.037461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/22/24 13:38:48.894
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 13:38:48.905
  E0622 13:38:49.037842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:38:49.905: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 22 13:38:49.913: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  E0622 13:38:50.037930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-750-crds.webhook.example.com via the AdmissionRegistration API @ 06/22/24 13:38:50.425
  STEP: Creating a custom resource while v1 is storage version @ 06/22/24 13:38:50.439
  E0622 13:38:51.038907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:52.039117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 06/22/24 13:38:52.469
  STEP: Patching the custom resource while v2 is storage version @ 06/22/24 13:38:52.481
  E0622 13:38:53.040183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:38:53.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2622" for this suite. @ 06/22/24 13:38:53.072
  STEP: Destroying namespace "webhook-markers-73" for this suite. @ 06/22/24 13:38:53.08
• [6.682 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:335
  STEP: Creating a kubernetes client @ 06/22/24 13:38:53.088
  Jun 22 13:38:53.088: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename sched-pred @ 06/22/24 13:38:53.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:38:53.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:38:53.109
  Jun 22 13:38:53.111: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 22 13:38:53.119: INFO: Waiting for terminating namespaces to be deleted...
  Jun 22 13:38:53.122: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-25-91 before test
  Jun 22 13:38:53.127: INFO: nginx-ingress-controller-kubernetes-worker-fvrjf from ingress-nginx-kubernetes-worker started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 13:38:53.127: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 22 13:38:53.127: INFO: calico-node-ccx9h from kube-system started at 2024-06-22 12:19:33 +0000 UTC (1 container statuses recorded)
  Jun 22 13:38:53.127: INFO: 	Container calico-node ready: true, restart count 0
  Jun 22 13:38:53.127: INFO: coredns-bddfd76d7-nd2xx from kube-system started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 13:38:53.127: INFO: 	Container coredns ready: true, restart count 0
  Jun 22 13:38:53.127: INFO: kube-state-metrics-6f48cdd76-dd6kh from kube-system started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 13:38:53.127: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jun 22 13:38:53.127: INFO: metrics-server-v0.6.3-69d7fbfdf8-8zxgg from kube-system started at 2024-06-22 12:14:39 +0000 UTC (2 container statuses recorded)
  Jun 22 13:38:53.127: INFO: 	Container metrics-server ready: true, restart count 0
  Jun 22 13:38:53.127: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jun 22 13:38:53.127: INFO: dashboard-metrics-scraper-5dd7cb5fc-cjq29 from kubernetes-dashboard started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 13:38:53.127: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jun 22 13:38:53.127: INFO: kubernetes-dashboard-7b899cb9d9-zw59t from kubernetes-dashboard started at 2024-06-22 12:14:39 +0000 UTC (1 container statuses recorded)
  Jun 22 13:38:53.127: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jun 22 13:38:53.127: INFO: sonobuoy-systemd-logs-daemon-set-94c32348a04f46b5-zhwcb from sonobuoy started at 2024-06-22 12:22:23 +0000 UTC (2 container statuses recorded)
  Jun 22 13:38:53.127: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 22 13:38:53.127: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 22 13:38:53.127: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-3-104 before test
  Jun 22 13:38:53.132: INFO: nginx-ingress-controller-kubernetes-worker-strbp from ingress-nginx-kubernetes-worker started at 2024-06-22 13:26:02 +0000 UTC (1 container statuses recorded)
  Jun 22 13:38:53.132: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 22 13:38:53.132: INFO: calico-node-82rw8 from kube-system started at 2024-06-22 12:20:14 +0000 UTC (1 container statuses recorded)
  Jun 22 13:38:53.132: INFO: 	Container calico-node ready: true, restart count 0
  Jun 22 13:38:53.132: INFO: sonobuoy from sonobuoy started at 2024-06-22 12:22:22 +0000 UTC (1 container statuses recorded)
  Jun 22 13:38:53.132: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 22 13:38:53.132: INFO: sonobuoy-systemd-logs-daemon-set-94c32348a04f46b5-fbr7r from sonobuoy started at 2024-06-22 12:22:23 +0000 UTC (2 container statuses recorded)
  Jun 22 13:38:53.132: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 22 13:38:53.132: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 22 13:38:53.132: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-85-228 before test
  Jun 22 13:38:53.137: INFO: nginx-ingress-controller-kubernetes-worker-nvkt2 from ingress-nginx-kubernetes-worker started at 2024-06-22 12:17:34 +0000 UTC (1 container statuses recorded)
  Jun 22 13:38:53.137: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun 22 13:38:53.137: INFO: calico-node-q9fk8 from kube-system started at 2024-06-22 12:19:53 +0000 UTC (1 container statuses recorded)
  Jun 22 13:38:53.137: INFO: 	Container calico-node ready: true, restart count 0
  Jun 22 13:38:53.137: INFO: sonobuoy-e2e-job-2ca1d8ae60f44d6a from sonobuoy started at 2024-06-22 12:22:23 +0000 UTC (2 container statuses recorded)
  Jun 22 13:38:53.137: INFO: 	Container e2e ready: true, restart count 0
  Jun 22 13:38:53.137: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 22 13:38:53.137: INFO: sonobuoy-systemd-logs-daemon-set-94c32348a04f46b5-ntsj7 from sonobuoy started at 2024-06-22 12:22:23 +0000 UTC (2 container statuses recorded)
  Jun 22 13:38:53.137: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 22 13:38:53.137: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-25-91 @ 06/22/24 13:38:53.151
  STEP: verifying the node has the label node ip-172-31-3-104 @ 06/22/24 13:38:53.162
  STEP: verifying the node has the label node ip-172-31-85-228 @ 06/22/24 13:38:53.173
  Jun 22 13:38:53.183: INFO: Pod nginx-ingress-controller-kubernetes-worker-fvrjf requesting resource cpu=0m on Node ip-172-31-25-91
  Jun 22 13:38:53.183: INFO: Pod nginx-ingress-controller-kubernetes-worker-nvkt2 requesting resource cpu=0m on Node ip-172-31-85-228
  Jun 22 13:38:53.183: INFO: Pod nginx-ingress-controller-kubernetes-worker-strbp requesting resource cpu=0m on Node ip-172-31-3-104
  Jun 22 13:38:53.183: INFO: Pod calico-node-82rw8 requesting resource cpu=250m on Node ip-172-31-3-104
  Jun 22 13:38:53.183: INFO: Pod calico-node-ccx9h requesting resource cpu=250m on Node ip-172-31-25-91
  Jun 22 13:38:53.183: INFO: Pod calico-node-q9fk8 requesting resource cpu=250m on Node ip-172-31-85-228
  Jun 22 13:38:53.183: INFO: Pod coredns-bddfd76d7-nd2xx requesting resource cpu=100m on Node ip-172-31-25-91
  Jun 22 13:38:53.184: INFO: Pod kube-state-metrics-6f48cdd76-dd6kh requesting resource cpu=0m on Node ip-172-31-25-91
  Jun 22 13:38:53.184: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-8zxgg requesting resource cpu=5m on Node ip-172-31-25-91
  Jun 22 13:38:53.184: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-cjq29 requesting resource cpu=0m on Node ip-172-31-25-91
  Jun 22 13:38:53.184: INFO: Pod kubernetes-dashboard-7b899cb9d9-zw59t requesting resource cpu=0m on Node ip-172-31-25-91
  Jun 22 13:38:53.184: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-3-104
  Jun 22 13:38:53.184: INFO: Pod sonobuoy-e2e-job-2ca1d8ae60f44d6a requesting resource cpu=0m on Node ip-172-31-85-228
  Jun 22 13:38:53.184: INFO: Pod sonobuoy-systemd-logs-daemon-set-94c32348a04f46b5-fbr7r requesting resource cpu=0m on Node ip-172-31-3-104
  Jun 22 13:38:53.184: INFO: Pod sonobuoy-systemd-logs-daemon-set-94c32348a04f46b5-ntsj7 requesting resource cpu=0m on Node ip-172-31-85-228
  Jun 22 13:38:53.184: INFO: Pod sonobuoy-systemd-logs-daemon-set-94c32348a04f46b5-zhwcb requesting resource cpu=0m on Node ip-172-31-25-91
  STEP: Starting Pods to consume most of the cluster CPU. @ 06/22/24 13:38:53.184
  Jun 22 13:38:53.184: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-3-104
  Jun 22 13:38:53.193: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-85-228
  Jun 22 13:38:53.200: INFO: Creating a pod which consumes cpu=1151m on Node ip-172-31-25-91
  E0622 13:38:54.040297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:55.040738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 06/22/24 13:38:55.225
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-322e0662-c7c2-4453-b525-c31e14bc4e8c.17db572ceb510a95], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8461/filler-pod-322e0662-c7c2-4453-b525-c31e14bc4e8c to ip-172-31-85-228] @ 06/22/24 13:38:55.229
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-322e0662-c7c2-4453-b525-c31e14bc4e8c.17db572d0abb309e], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/22/24 13:38:55.229
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-322e0662-c7c2-4453-b525-c31e14bc4e8c.17db572d0c267f9e], Reason = [Created], Message = [Created container filler-pod-322e0662-c7c2-4453-b525-c31e14bc4e8c] @ 06/22/24 13:38:55.229
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-322e0662-c7c2-4453-b525-c31e14bc4e8c.17db572d0ea6eb38], Reason = [Started], Message = [Started container filler-pod-322e0662-c7c2-4453-b525-c31e14bc4e8c] @ 06/22/24 13:38:55.229
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-59807ae8-f6cc-4741-8319-0db0618837f6.17db572cebd1acfe], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8461/filler-pod-59807ae8-f6cc-4741-8319-0db0618837f6 to ip-172-31-25-91] @ 06/22/24 13:38:55.229
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-59807ae8-f6cc-4741-8319-0db0618837f6.17db572d0e0ec252], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/22/24 13:38:55.229
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-59807ae8-f6cc-4741-8319-0db0618837f6.17db572d0ef24266], Reason = [Created], Message = [Created container filler-pod-59807ae8-f6cc-4741-8319-0db0618837f6] @ 06/22/24 13:38:55.229
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-59807ae8-f6cc-4741-8319-0db0618837f6.17db572d11ff4348], Reason = [Started], Message = [Started container filler-pod-59807ae8-f6cc-4741-8319-0db0618837f6] @ 06/22/24 13:38:55.229
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b7d11fe7-199d-4c68-a794-86bb42fb502b.17db572ceab41a8f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8461/filler-pod-b7d11fe7-199d-4c68-a794-86bb42fb502b to ip-172-31-3-104] @ 06/22/24 13:38:55.229
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b7d11fe7-199d-4c68-a794-86bb42fb502b.17db572d0cb4525e], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/22/24 13:38:55.229
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b7d11fe7-199d-4c68-a794-86bb42fb502b.17db572d0dd8ab1d], Reason = [Created], Message = [Created container filler-pod-b7d11fe7-199d-4c68-a794-86bb42fb502b] @ 06/22/24 13:38:55.229
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b7d11fe7-199d-4c68-a794-86bb42fb502b.17db572d124408e7], Reason = [Started], Message = [Started container filler-pod-b7d11fe7-199d-4c68-a794-86bb42fb502b] @ 06/22/24 13:38:55.229
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17db572d6411bee2], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 06/22/24 13:38:55.243
  E0622 13:38:56.040891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-25-91 @ 06/22/24 13:38:56.241
  STEP: verifying the node doesn't have the label node @ 06/22/24 13:38:56.252
  STEP: removing the label node off the node ip-172-31-3-104 @ 06/22/24 13:38:56.256
  STEP: verifying the node doesn't have the label node @ 06/22/24 13:38:56.267
  STEP: removing the label node off the node ip-172-31-85-228 @ 06/22/24 13:38:56.272
  STEP: verifying the node doesn't have the label node @ 06/22/24 13:38:56.286
  Jun 22 13:38:56.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8461" for this suite. @ 06/22/24 13:38:56.295
• [3.214 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 06/22/24 13:38:56.303
  Jun 22 13:38:56.303: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/22/24 13:38:56.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:38:56.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:38:56.327
  Jun 22 13:38:56.330: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  E0622 13:38:57.041701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/22/24 13:38:57.617
  Jun 22 13:38:57.617: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-4621 --namespace=crd-publish-openapi-4621 create -f -'
  E0622 13:38:58.042723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:38:59.042779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:38:59.687: INFO: stderr: ""
  Jun 22 13:38:59.687: INFO: stdout: "e2e-test-crd-publish-openapi-5448-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun 22 13:38:59.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-4621 --namespace=crd-publish-openapi-4621 delete e2e-test-crd-publish-openapi-5448-crds test-cr'
  Jun 22 13:38:59.748: INFO: stderr: ""
  Jun 22 13:38:59.748: INFO: stdout: "e2e-test-crd-publish-openapi-5448-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Jun 22 13:38:59.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-4621 --namespace=crd-publish-openapi-4621 apply -f -'
  Jun 22 13:38:59.803: INFO: stderr: ""
  Jun 22 13:38:59.803: INFO: stdout: "e2e-test-crd-publish-openapi-5448-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun 22 13:38:59.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-4621 --namespace=crd-publish-openapi-4621 delete e2e-test-crd-publish-openapi-5448-crds test-cr'
  Jun 22 13:38:59.853: INFO: stderr: ""
  Jun 22 13:38:59.853: INFO: stdout: "e2e-test-crd-publish-openapi-5448-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/22/24 13:38:59.853
  Jun 22 13:38:59.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=crd-publish-openapi-4621 explain e2e-test-crd-publish-openapi-5448-crds'
  Jun 22 13:38:59.895: INFO: stderr: ""
  Jun 22 13:38:59.895: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-5448-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0622 13:39:00.043586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:01.044077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:39:01.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4621" for this suite. @ 06/22/24 13:39:01.103
• [4.809 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 06/22/24 13:39:01.113
  Jun 22 13:39:01.113: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:39:01.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:39:01.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:39:01.134
  STEP: Creating projection with secret that has name projected-secret-test-5bc3c849-79c2-49a9-bf4c-09b0dd2da839 @ 06/22/24 13:39:01.136
  STEP: Creating a pod to test consume secrets @ 06/22/24 13:39:01.14
  E0622 13:39:02.044134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:03.044359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:04.044518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:05.044863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:39:05.163
  Jun 22 13:39:05.167: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-projected-secrets-a93fb35f-a602-4a46-b2d9-4683001c92e0 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/22/24 13:39:05.174
  Jun 22 13:39:05.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-557" for this suite. @ 06/22/24 13:39:05.198
• [4.093 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 06/22/24 13:39:05.206
  Jun 22 13:39:05.206: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename subpath @ 06/22/24 13:39:05.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:39:05.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:39:05.225
  STEP: Setting up data @ 06/22/24 13:39:05.227
  STEP: Creating pod pod-subpath-test-configmap-nhbp @ 06/22/24 13:39:05.236
  STEP: Creating a pod to test atomic-volume-subpath @ 06/22/24 13:39:05.236
  E0622 13:39:06.044911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:07.044997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:08.045108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:09.045196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:10.045719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:11.045816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:12.045932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:13.046021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:14.046696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:15.046950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:16.047063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:17.047163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:18.047285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:19.047476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:20.047969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:21.048076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:22.048170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:23.048280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:24.048429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:25.048533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:26.049378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:27.049534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:28.049585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:29.049626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:39:29.317
  Jun 22 13:39:29.323: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-subpath-test-configmap-nhbp container test-container-subpath-configmap-nhbp: <nil>
  STEP: delete the pod @ 06/22/24 13:39:29.333
  STEP: Deleting pod pod-subpath-test-configmap-nhbp @ 06/22/24 13:39:29.352
  Jun 22 13:39:29.352: INFO: Deleting pod "pod-subpath-test-configmap-nhbp" in namespace "subpath-4823"
  Jun 22 13:39:29.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4823" for this suite. @ 06/22/24 13:39:29.359
• [24.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 06/22/24 13:39:29.366
  Jun 22 13:39:29.366: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename statefulset @ 06/22/24 13:39:29.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:39:29.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:39:29.389
  STEP: Creating service test in namespace statefulset-1454 @ 06/22/24 13:39:29.391
  STEP: Looking for a node to schedule stateful set and pod @ 06/22/24 13:39:29.399
  STEP: Creating pod with conflicting port in namespace statefulset-1454 @ 06/22/24 13:39:29.403
  STEP: Waiting until pod test-pod will start running in namespace statefulset-1454 @ 06/22/24 13:39:29.412
  E0622 13:39:30.049726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:31.050286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-1454 @ 06/22/24 13:39:31.42
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-1454 @ 06/22/24 13:39:31.427
  Jun 22 13:39:31.450: INFO: Observed stateful pod in namespace: statefulset-1454, name: ss-0, uid: 6f522495-3851-4761-b5f1-693dfc3378e3, status phase: Pending. Waiting for statefulset controller to delete.
  Jun 22 13:39:31.469: INFO: Observed stateful pod in namespace: statefulset-1454, name: ss-0, uid: 6f522495-3851-4761-b5f1-693dfc3378e3, status phase: Failed. Waiting for statefulset controller to delete.
  Jun 22 13:39:31.476: INFO: Observed stateful pod in namespace: statefulset-1454, name: ss-0, uid: 6f522495-3851-4761-b5f1-693dfc3378e3, status phase: Failed. Waiting for statefulset controller to delete.
  Jun 22 13:39:31.479: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-1454
  STEP: Removing pod with conflicting port in namespace statefulset-1454 @ 06/22/24 13:39:31.479
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-1454 and will be in running state @ 06/22/24 13:39:31.496
  E0622 13:39:32.050409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:33.050521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:39:33.505: INFO: Deleting all statefulset in ns statefulset-1454
  Jun 22 13:39:33.509: INFO: Scaling statefulset ss to 0
  E0622 13:39:34.050626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:35.050705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:36.050936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:37.051231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:38.051286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:39.052271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:40.052475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:41.052746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:42.052884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:43.053064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:39:43.523: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 22 13:39:43.527: INFO: Deleting statefulset ss
  Jun 22 13:39:43.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1454" for this suite. @ 06/22/24 13:39:43.543
• [14.187 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 06/22/24 13:39:43.553
  Jun 22 13:39:43.553: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename downward-api @ 06/22/24 13:39:43.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:39:43.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:39:43.576
  STEP: Creating a pod to test downward api env vars @ 06/22/24 13:39:43.578
  E0622 13:39:44.053225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:45.053672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:46.054437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:47.054549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:39:47.602
  Jun 22 13:39:47.605: INFO: Trying to get logs from node ip-172-31-3-104 pod downward-api-b780c7b9-51b4-4d60-b1ad-9957df5cac6f container dapi-container: <nil>
  STEP: delete the pod @ 06/22/24 13:39:47.613
  Jun 22 13:39:47.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8369" for this suite. @ 06/22/24 13:39:47.634
• [4.087 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 06/22/24 13:39:47.64
  Jun 22 13:39:47.640: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename secrets @ 06/22/24 13:39:47.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:39:47.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:39:47.659
  STEP: creating secret secrets-1859/secret-test-3359005b-74de-4fb3-a830-9576b7c36c6a @ 06/22/24 13:39:47.662
  STEP: Creating a pod to test consume secrets @ 06/22/24 13:39:47.666
  E0622 13:39:48.055263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:49.055417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:50.056306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:51.056404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:39:51.692
  Jun 22 13:39:51.695: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-configmaps-6b00941c-9abb-46b9-93dd-445925464d2b container env-test: <nil>
  STEP: delete the pod @ 06/22/24 13:39:51.703
  Jun 22 13:39:51.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1859" for this suite. @ 06/22/24 13:39:51.724
• [4.091 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 06/22/24 13:39:51.731
  Jun 22 13:39:51.731: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubelet-test @ 06/22/24 13:39:51.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:39:51.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:39:51.751
  E0622 13:39:52.056500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:53.056598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:39:53.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-62" for this suite. @ 06/22/24 13:39:53.788
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 06/22/24 13:39:53.796
  Jun 22 13:39:53.796: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename job @ 06/22/24 13:39:53.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:39:53.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:39:53.815
  STEP: Creating a job @ 06/22/24 13:39:53.817
  STEP: Ensuring active pods == parallelism @ 06/22/24 13:39:53.822
  E0622 13:39:54.057459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:55.057760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 06/22/24 13:39:55.827
  E0622 13:39:56.057811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:39:56.344: INFO: Successfully updated pod "adopt-release-gqwvv"
  STEP: Checking that the Job readopts the Pod @ 06/22/24 13:39:56.345
  E0622 13:39:57.058406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:39:58.058507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 06/22/24 13:39:58.353
  Jun 22 13:39:58.864: INFO: Successfully updated pod "adopt-release-gqwvv"
  STEP: Checking that the Job releases the Pod @ 06/22/24 13:39:58.865
  E0622 13:39:59.059367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:00.059462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:40:00.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7677" for this suite. @ 06/22/24 13:40:00.884
• [7.095 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 06/22/24 13:40:00.892
  Jun 22 13:40:00.892: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 13:40:00.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:40:00.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:40:00.914
  STEP: Setting up server cert @ 06/22/24 13:40:00.939
  E0622 13:40:01.060294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 13:40:01.105
  STEP: Deploying the webhook pod @ 06/22/24 13:40:01.114
  STEP: Wait for the deployment to be ready @ 06/22/24 13:40:01.125
  Jun 22 13:40:01.132: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0622 13:40:02.061324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:03.061555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/22/24 13:40:03.145
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 13:40:03.155
  E0622 13:40:04.061654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:40:04.155: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 06/22/24 13:40:04.163
  STEP: create a namespace for the webhook @ 06/22/24 13:40:04.193
  STEP: create a configmap should be unconditionally rejected by the webhook @ 06/22/24 13:40:04.232
  Jun 22 13:40:04.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7628" for this suite. @ 06/22/24 13:40:04.293
  STEP: Destroying namespace "webhook-markers-8801" for this suite. @ 06/22/24 13:40:04.305
  STEP: Destroying namespace "fail-closed-namespace-2176" for this suite. @ 06/22/24 13:40:04.312
• [3.428 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 06/22/24 13:40:04.32
  Jun 22 13:40:04.320: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename controllerrevisions @ 06/22/24 13:40:04.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:40:04.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:40:04.345
  STEP: Creating DaemonSet "e2e-6jnwr-daemon-set" @ 06/22/24 13:40:04.368
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/22/24 13:40:04.375
  Jun 22 13:40:04.380: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:40:04.380: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:40:04.384: INFO: Number of nodes with available pods controlled by daemonset e2e-6jnwr-daemon-set: 0
  Jun 22 13:40:04.384: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  E0622 13:40:05.061751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:40:05.380: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:40:05.380: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:40:05.383: INFO: Number of nodes with available pods controlled by daemonset e2e-6jnwr-daemon-set: 0
  Jun 22 13:40:05.383: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  E0622 13:40:06.061843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:40:06.382: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:40:06.382: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:40:06.386: INFO: Number of nodes with available pods controlled by daemonset e2e-6jnwr-daemon-set: 3
  Jun 22 13:40:06.386: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-6jnwr-daemon-set
  STEP: Confirm DaemonSet "e2e-6jnwr-daemon-set" successfully created with "daemonset-name=e2e-6jnwr-daemon-set" label @ 06/22/24 13:40:06.393
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-6jnwr-daemon-set" @ 06/22/24 13:40:06.4
  Jun 22 13:40:06.403: INFO: Located ControllerRevision: "e2e-6jnwr-daemon-set-5d6946698d"
  STEP: Patching ControllerRevision "e2e-6jnwr-daemon-set-5d6946698d" @ 06/22/24 13:40:06.409
  Jun 22 13:40:06.419: INFO: e2e-6jnwr-daemon-set-5d6946698d has been patched
  STEP: Create a new ControllerRevision @ 06/22/24 13:40:06.419
  Jun 22 13:40:06.424: INFO: Created ControllerRevision: e2e-6jnwr-daemon-set-9799b446
  STEP: Confirm that there are two ControllerRevisions @ 06/22/24 13:40:06.424
  Jun 22 13:40:06.424: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 22 13:40:06.427: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-6jnwr-daemon-set-5d6946698d" @ 06/22/24 13:40:06.427
  STEP: Confirm that there is only one ControllerRevision @ 06/22/24 13:40:06.433
  Jun 22 13:40:06.433: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 22 13:40:06.438: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-6jnwr-daemon-set-9799b446" @ 06/22/24 13:40:06.442
  Jun 22 13:40:06.451: INFO: e2e-6jnwr-daemon-set-9799b446 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 06/22/24 13:40:06.451
  W0622 13:40:06.461590      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 06/22/24 13:40:06.461
  Jun 22 13:40:06.461: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0622 13:40:07.062843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:40:07.462: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 22 13:40:07.466: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-6jnwr-daemon-set-9799b446=updated" @ 06/22/24 13:40:07.466
  STEP: Confirm that there is only one ControllerRevision @ 06/22/24 13:40:07.475
  Jun 22 13:40:07.475: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 22 13:40:07.478: INFO: Found 1 ControllerRevisions
  Jun 22 13:40:07.482: INFO: ControllerRevision "e2e-6jnwr-daemon-set-76b895c695" has revision 3
  STEP: Deleting DaemonSet "e2e-6jnwr-daemon-set" @ 06/22/24 13:40:07.485
  STEP: deleting DaemonSet.extensions e2e-6jnwr-daemon-set in namespace controllerrevisions-2659, will wait for the garbage collector to delete the pods @ 06/22/24 13:40:07.485
  Jun 22 13:40:07.545: INFO: Deleting DaemonSet.extensions e2e-6jnwr-daemon-set took: 6.004832ms
  Jun 22 13:40:07.646: INFO: Terminating DaemonSet.extensions e2e-6jnwr-daemon-set pods took: 100.806809ms
  E0622 13:40:08.063032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:40:08.850: INFO: Number of nodes with available pods controlled by daemonset e2e-6jnwr-daemon-set: 0
  Jun 22 13:40:08.850: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-6jnwr-daemon-set
  Jun 22 13:40:08.855: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32888"},"items":null}

  Jun 22 13:40:08.861: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32888"},"items":null}

  Jun 22 13:40:08.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2659" for this suite. @ 06/22/24 13:40:08.879
• [4.565 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 06/22/24 13:40:08.885
  Jun 22 13:40:08.885: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename security-context-test @ 06/22/24 13:40:08.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:40:08.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:40:08.908
  E0622 13:40:09.063575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:10.063649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:11.064727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:12.064765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:40:12.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4775" for this suite. @ 06/22/24 13:40:12.953
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 06/22/24 13:40:12.962
  Jun 22 13:40:12.962: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename resourcequota @ 06/22/24 13:40:12.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:40:12.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:40:12.983
  STEP: Creating a ResourceQuota with terminating scope @ 06/22/24 13:40:12.985
  STEP: Ensuring ResourceQuota status is calculated @ 06/22/24 13:40:12.989
  E0622 13:40:13.065233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:14.065449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 06/22/24 13:40:14.994
  STEP: Ensuring ResourceQuota status is calculated @ 06/22/24 13:40:15
  E0622 13:40:15.065571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:16.065657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 06/22/24 13:40:17.005
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 06/22/24 13:40:17.018
  E0622 13:40:17.066168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:18.066279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 06/22/24 13:40:19.023
  E0622 13:40:19.066608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:20.066698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/22/24 13:40:21.028
  STEP: Ensuring resource quota status released the pod usage @ 06/22/24 13:40:21.045
  E0622 13:40:21.067309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:22.067483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 06/22/24 13:40:23.049
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 06/22/24 13:40:23.06
  E0622 13:40:23.067995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:24.068147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 06/22/24 13:40:25.066
  E0622 13:40:25.068235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:26.068383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:27.068871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/22/24 13:40:27.07
  STEP: Ensuring resource quota status released the pod usage @ 06/22/24 13:40:27.086
  E0622 13:40:28.069119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:29.069256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:40:29.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-729" for this suite. @ 06/22/24 13:40:29.094
• [16.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 06/22/24 13:40:29.101
  Jun 22 13:40:29.101: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl @ 06/22/24 13:40:29.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:40:29.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:40:29.123
  STEP: creating a replication controller @ 06/22/24 13:40:29.126
  Jun 22 13:40:29.126: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-8174 create -f -'
  Jun 22 13:40:29.206: INFO: stderr: ""
  Jun 22 13:40:29.206: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/22/24 13:40:29.206
  Jun 22 13:40:29.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-8174 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 22 13:40:29.258: INFO: stderr: ""
  Jun 22 13:40:29.258: INFO: stdout: "update-demo-nautilus-5xxpd update-demo-nautilus-x644m "
  Jun 22 13:40:29.258: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-8174 get pods update-demo-nautilus-5xxpd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 22 13:40:29.375: INFO: stderr: ""
  Jun 22 13:40:29.375: INFO: stdout: ""
  Jun 22 13:40:29.375: INFO: update-demo-nautilus-5xxpd is created but not running
  E0622 13:40:30.069641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:31.069724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:32.069853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:33.070719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:34.070907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:40:34.375: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-8174 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 22 13:40:34.421: INFO: stderr: ""
  Jun 22 13:40:34.421: INFO: stdout: "update-demo-nautilus-5xxpd update-demo-nautilus-x644m "
  Jun 22 13:40:34.421: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-8174 get pods update-demo-nautilus-5xxpd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 22 13:40:34.467: INFO: stderr: ""
  Jun 22 13:40:34.467: INFO: stdout: "true"
  Jun 22 13:40:34.467: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-8174 get pods update-demo-nautilus-5xxpd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 22 13:40:34.514: INFO: stderr: ""
  Jun 22 13:40:34.514: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 22 13:40:34.514: INFO: validating pod update-demo-nautilus-5xxpd
  Jun 22 13:40:34.520: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 22 13:40:34.520: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 22 13:40:34.520: INFO: update-demo-nautilus-5xxpd is verified up and running
  Jun 22 13:40:34.520: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-8174 get pods update-demo-nautilus-x644m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 22 13:40:34.563: INFO: stderr: ""
  Jun 22 13:40:34.563: INFO: stdout: "true"
  Jun 22 13:40:34.563: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-8174 get pods update-demo-nautilus-x644m -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 22 13:40:34.609: INFO: stderr: ""
  Jun 22 13:40:34.609: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 22 13:40:34.609: INFO: validating pod update-demo-nautilus-x644m
  Jun 22 13:40:34.618: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 22 13:40:34.618: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 22 13:40:34.618: INFO: update-demo-nautilus-x644m is verified up and running
  STEP: using delete to clean up resources @ 06/22/24 13:40:34.618
  Jun 22 13:40:34.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-8174 delete --grace-period=0 --force -f -'
  Jun 22 13:40:34.669: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 22 13:40:34.669: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun 22 13:40:34.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-8174 get rc,svc -l name=update-demo --no-headers'
  Jun 22 13:40:34.733: INFO: stderr: "No resources found in kubectl-8174 namespace.\n"
  Jun 22 13:40:34.733: INFO: stdout: ""
  Jun 22 13:40:34.733: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-8174 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 22 13:40:34.777: INFO: stderr: ""
  Jun 22 13:40:34.778: INFO: stdout: ""
  Jun 22 13:40:34.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8174" for this suite. @ 06/22/24 13:40:34.782
• [5.689 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 06/22/24 13:40:34.79
  Jun 22 13:40:34.790: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 13:40:34.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:40:34.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:40:34.81
  STEP: Setting up server cert @ 06/22/24 13:40:34.835
  E0622 13:40:35.071133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 13:40:35.268
  STEP: Deploying the webhook pod @ 06/22/24 13:40:35.277
  STEP: Wait for the deployment to be ready @ 06/22/24 13:40:35.288
  Jun 22 13:40:35.296: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0622 13:40:36.072213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:37.072420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/22/24 13:40:37.309
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 13:40:37.321
  E0622 13:40:38.072682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:40:38.322: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/22/24 13:40:38.391
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/22/24 13:40:38.417
  STEP: Deleting the collection of validation webhooks @ 06/22/24 13:40:38.441
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/22/24 13:40:38.493
  Jun 22 13:40:38.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7429" for this suite. @ 06/22/24 13:40:38.556
  STEP: Destroying namespace "webhook-markers-3544" for this suite. @ 06/22/24 13:40:38.564
• [3.781 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 06/22/24 13:40:38.572
  Jun 22 13:40:38.572: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename security-context-test @ 06/22/24 13:40:38.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:40:38.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:40:38.592
  E0622 13:40:39.073025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:40.073251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:41.074143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:42.074227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:40:42.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1145" for this suite. @ 06/22/24 13:40:42.624
• [4.060 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 06/22/24 13:40:42.632
  Jun 22 13:40:42.632: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename dns @ 06/22/24 13:40:42.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:40:42.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:40:42.659
  STEP: Creating a test headless service @ 06/22/24 13:40:42.661
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3588.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-3588.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 06/22/24 13:40:42.667
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3588.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-3588.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 06/22/24 13:40:42.667
  STEP: creating a pod to probe DNS @ 06/22/24 13:40:42.667
  STEP: submitting the pod to kubernetes @ 06/22/24 13:40:42.667
  E0622 13:40:43.074745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:44.074810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/22/24 13:40:44.685
  STEP: looking for the results for each expected name from probers @ 06/22/24 13:40:44.689
  Jun 22 13:40:44.706: INFO: DNS probes using dns-3588/dns-test-b8a8cc30-6afd-4259-836d-0a1d5ba8f59e succeeded

  STEP: deleting the pod @ 06/22/24 13:40:44.706
  STEP: deleting the test headless service @ 06/22/24 13:40:44.722
  Jun 22 13:40:44.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3588" for this suite. @ 06/22/24 13:40:44.739
• [2.116 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 06/22/24 13:40:44.756
  Jun 22 13:40:44.756: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:40:44.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:40:44.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:40:44.78
  STEP: Creating configMap with name cm-test-opt-del-d33217c9-166b-44cf-829e-692a3487f7f2 @ 06/22/24 13:40:44.786
  STEP: Creating configMap with name cm-test-opt-upd-730b3442-17bc-4ac7-82c4-b8fe667d28f2 @ 06/22/24 13:40:44.79
  STEP: Creating the pod @ 06/22/24 13:40:44.795
  E0622 13:40:45.074920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:46.075022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-d33217c9-166b-44cf-829e-692a3487f7f2 @ 06/22/24 13:40:46.839
  STEP: Updating configmap cm-test-opt-upd-730b3442-17bc-4ac7-82c4-b8fe667d28f2 @ 06/22/24 13:40:46.845
  STEP: Creating configMap with name cm-test-opt-create-caab9a5f-dee9-4fae-87eb-02b5406ff6c5 @ 06/22/24 13:40:46.85
  STEP: waiting to observe update in volume @ 06/22/24 13:40:46.855
  E0622 13:40:47.075905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:48.076039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:49.076698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:50.076786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:51.077233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:52.077342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:53.078122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:54.078399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:55.079187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:56.079359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:57.079821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:58.079997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:40:59.080091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:00.080190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:01.080795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:02.080988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:03.081788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:04.082720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:05.083651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:06.083709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:07.084247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:08.084371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:09.084981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:10.085091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:11.085919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:12.086127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:13.086874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:14.087005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:15.087308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:16.087403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:17.087854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:18.087978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:19.088650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:20.088753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:21.089772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:22.089873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:23.090716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:24.090835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:25.091802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:26.091903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:27.092103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:28.092226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:29.092544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:30.092637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:31.093008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:32.093189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:33.093700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:34.093811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:35.093997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:36.094128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:37.094473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:38.094690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:39.095622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:40.095759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:41.096530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:42.097406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:43.097873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:44.098994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:45.099096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:46.099198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:47.099461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:48.100202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:49.100347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:50.100411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:51.100498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:52.101220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:53.101664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:54.101777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:55.101868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:56.101978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:57.102054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:41:57.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9445" for this suite. @ 06/22/24 13:41:57.183
• [72.434 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 06/22/24 13:41:57.19
  Jun 22 13:41:57.190: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:41:57.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:41:57.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:41:57.211
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 13:41:57.213
  E0622 13:41:58.105670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:41:59.105765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:00.106238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:01.106331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:42:01.236
  Jun 22 13:42:01.240: INFO: Trying to get logs from node ip-172-31-85-228 pod downwardapi-volume-dc59d668-ad3c-44fc-bc26-e8102969ea3c container client-container: <nil>
  STEP: delete the pod @ 06/22/24 13:42:01.252
  Jun 22 13:42:01.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8873" for this suite. @ 06/22/24 13:42:01.273
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 06/22/24 13:42:01.28
  Jun 22 13:42:01.280: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename containers @ 06/22/24 13:42:01.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:42:01.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:42:01.3
  STEP: Creating a pod to test override arguments @ 06/22/24 13:42:01.302
  E0622 13:42:02.106426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:03.106522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:04.106621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:05.106959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:42:05.324
  Jun 22 13:42:05.328: INFO: Trying to get logs from node ip-172-31-85-228 pod client-containers-4f91772d-ab1d-41a4-85fd-8299f491e758 container agnhost-container: <nil>
  STEP: delete the pod @ 06/22/24 13:42:05.335
  Jun 22 13:42:05.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6851" for this suite. @ 06/22/24 13:42:05.356
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 06/22/24 13:42:05.364
  Jun 22 13:42:05.364: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename cronjob @ 06/22/24 13:42:05.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:42:05.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:42:05.385
  STEP: Creating a cronjob @ 06/22/24 13:42:05.388
  STEP: Ensuring more than one job is running at a time @ 06/22/24 13:42:05.393
  E0622 13:42:06.107073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:07.107208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:08.107456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:09.107565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:10.107629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:11.107694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:12.107796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:13.107907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:14.107992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:15.108085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:16.108198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:17.108284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:18.108412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:19.108516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:20.109223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:21.109756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:22.110672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:23.110967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:24.111107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:25.112148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:26.112426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:27.112591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:28.112711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:29.112791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:30.113697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:31.113772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:32.113899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:33.113984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:34.114074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:35.114114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:36.114716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:37.114798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:38.114901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:39.114965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:40.115833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:41.116003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:42.116801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:43.116911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:44.116997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:45.117464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:46.117660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:47.117747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:48.117788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:49.118681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:50.119703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:51.120023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:52.120825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:53.121047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:54.121193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:55.122165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:56.122267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:57.123290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:58.123786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:42:59.123999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:00.124082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:01.124400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:02.124664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:03.124933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:04.125038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:05.125093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:06.126023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:07.126119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:08.126198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:09.126679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:10.127384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:11.127566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:12.128423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:13.128631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:14.128924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:15.129022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:16.129389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:17.129603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:18.129696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:19.129801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:20.130671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:21.131036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:22.131329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:23.131420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:24.131530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:25.131610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:26.131705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:27.132335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:28.133251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:29.133567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:30.134514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:31.134658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:32.135688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:33.135774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:34.135867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:35.135947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:36.136044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:37.136227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:38.136321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:39.136492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:40.137315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:41.137604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:42.138674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:43.138855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:44.139590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:45.139931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:46.140262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:47.140450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:48.140543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:49.140748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:50.140838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:51.141213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:52.141472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:53.141621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:54.142721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:55.143030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:56.143169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:57.143276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:58.144349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:43:59.144439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:00.145202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:01.145339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 06/22/24 13:44:01.398
  STEP: Removing cronjob @ 06/22/24 13:44:01.401
  Jun 22 13:44:01.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4233" for this suite. @ 06/22/24 13:44:01.412
• [116.056 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 06/22/24 13:44:01.42
  Jun 22 13:44:01.420: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:44:01.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:44:01.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:44:01.449
  STEP: Creating projection with secret that has name projected-secret-test-map-93fa7b24-7c29-491c-9dc6-82834ab9f77c @ 06/22/24 13:44:01.451
  STEP: Creating a pod to test consume secrets @ 06/22/24 13:44:01.456
  E0622 13:44:02.145651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:03.146696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:04.146781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:05.146899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:44:05.479
  Jun 22 13:44:05.483: INFO: Trying to get logs from node ip-172-31-85-228 pod pod-projected-secrets-bba20365-afb9-4294-b729-e44d704d399b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/22/24 13:44:05.495
  Jun 22 13:44:05.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3879" for this suite. @ 06/22/24 13:44:05.517
• [4.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 06/22/24 13:44:05.525
  Jun 22 13:44:05.525: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename containers @ 06/22/24 13:44:05.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:44:05.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:44:05.545
  E0622 13:44:06.147958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:07.148070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:44:07.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7804" for this suite. @ 06/22/24 13:44:07.576
• [2.058 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 06/22/24 13:44:07.583
  Jun 22 13:44:07.583: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename gc @ 06/22/24 13:44:07.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:44:07.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:44:07.607
  STEP: create the rc1 @ 06/22/24 13:44:07.612
  STEP: create the rc2 @ 06/22/24 13:44:07.618
  E0622 13:44:08.148314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:09.149641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:10.150755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:11.150961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:12.151375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:13.157066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 06/22/24 13:44:13.721
  E0622 13:44:14.157234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 06/22/24 13:44:14.212
  STEP: wait for the rc to be deleted @ 06/22/24 13:44:14.219
  E0622 13:44:15.157372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:16.157641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:17.157717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:18.158676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:19.159499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:44:19.233: INFO: 72 pods remaining
  Jun 22 13:44:19.233: INFO: 72 pods has nil DeletionTimestamp
  Jun 22 13:44:19.233: INFO: 
  E0622 13:44:20.159588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:21.159684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:22.160074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:23.160458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:24.160616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/22/24 13:44:24.242
  W0622 13:44:24.256892      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 22 13:44:24.256: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 22 13:44:24.256: INFO: Deleting pod "simpletest-rc-to-be-deleted-22xpk" in namespace "gc-3030"
  Jun 22 13:44:24.272: INFO: Deleting pod "simpletest-rc-to-be-deleted-26dv9" in namespace "gc-3030"
  Jun 22 13:44:24.289: INFO: Deleting pod "simpletest-rc-to-be-deleted-28kt9" in namespace "gc-3030"
  Jun 22 13:44:24.304: INFO: Deleting pod "simpletest-rc-to-be-deleted-2cxqq" in namespace "gc-3030"
  Jun 22 13:44:24.338: INFO: Deleting pod "simpletest-rc-to-be-deleted-487n8" in namespace "gc-3030"
  Jun 22 13:44:24.352: INFO: Deleting pod "simpletest-rc-to-be-deleted-4r8fg" in namespace "gc-3030"
  Jun 22 13:44:24.365: INFO: Deleting pod "simpletest-rc-to-be-deleted-5x4pm" in namespace "gc-3030"
  Jun 22 13:44:24.379: INFO: Deleting pod "simpletest-rc-to-be-deleted-649l6" in namespace "gc-3030"
  Jun 22 13:44:24.393: INFO: Deleting pod "simpletest-rc-to-be-deleted-65rwz" in namespace "gc-3030"
  Jun 22 13:44:24.404: INFO: Deleting pod "simpletest-rc-to-be-deleted-7hxnp" in namespace "gc-3030"
  Jun 22 13:44:24.421: INFO: Deleting pod "simpletest-rc-to-be-deleted-7lcrz" in namespace "gc-3030"
  Jun 22 13:44:24.434: INFO: Deleting pod "simpletest-rc-to-be-deleted-7p97f" in namespace "gc-3030"
  Jun 22 13:44:24.448: INFO: Deleting pod "simpletest-rc-to-be-deleted-7xnbr" in namespace "gc-3030"
  Jun 22 13:44:24.461: INFO: Deleting pod "simpletest-rc-to-be-deleted-7z5wh" in namespace "gc-3030"
  Jun 22 13:44:24.472: INFO: Deleting pod "simpletest-rc-to-be-deleted-8794b" in namespace "gc-3030"
  Jun 22 13:44:24.489: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bx9b" in namespace "gc-3030"
  Jun 22 13:44:24.501: INFO: Deleting pod "simpletest-rc-to-be-deleted-8nmlq" in namespace "gc-3030"
  Jun 22 13:44:24.600: INFO: Deleting pod "simpletest-rc-to-be-deleted-8nwc2" in namespace "gc-3030"
  Jun 22 13:44:24.645: INFO: Deleting pod "simpletest-rc-to-be-deleted-8xhpg" in namespace "gc-3030"
  Jun 22 13:44:24.665: INFO: Deleting pod "simpletest-rc-to-be-deleted-9428c" in namespace "gc-3030"
  Jun 22 13:44:24.678: INFO: Deleting pod "simpletest-rc-to-be-deleted-95hqz" in namespace "gc-3030"
  Jun 22 13:44:24.698: INFO: Deleting pod "simpletest-rc-to-be-deleted-9ph29" in namespace "gc-3030"
  Jun 22 13:44:24.719: INFO: Deleting pod "simpletest-rc-to-be-deleted-b2zvm" in namespace "gc-3030"
  Jun 22 13:44:24.737: INFO: Deleting pod "simpletest-rc-to-be-deleted-bbzrw" in namespace "gc-3030"
  Jun 22 13:44:24.759: INFO: Deleting pod "simpletest-rc-to-be-deleted-bf6x5" in namespace "gc-3030"
  Jun 22 13:44:24.773: INFO: Deleting pod "simpletest-rc-to-be-deleted-bfhgb" in namespace "gc-3030"
  Jun 22 13:44:24.786: INFO: Deleting pod "simpletest-rc-to-be-deleted-bhv6w" in namespace "gc-3030"
  Jun 22 13:44:24.801: INFO: Deleting pod "simpletest-rc-to-be-deleted-bjz6b" in namespace "gc-3030"
  Jun 22 13:44:24.817: INFO: Deleting pod "simpletest-rc-to-be-deleted-cksxr" in namespace "gc-3030"
  Jun 22 13:44:24.833: INFO: Deleting pod "simpletest-rc-to-be-deleted-crjfl" in namespace "gc-3030"
  Jun 22 13:44:24.847: INFO: Deleting pod "simpletest-rc-to-be-deleted-cz5v4" in namespace "gc-3030"
  Jun 22 13:44:24.875: INFO: Deleting pod "simpletest-rc-to-be-deleted-d6x4g" in namespace "gc-3030"
  Jun 22 13:44:24.890: INFO: Deleting pod "simpletest-rc-to-be-deleted-dh6wm" in namespace "gc-3030"
  Jun 22 13:44:24.905: INFO: Deleting pod "simpletest-rc-to-be-deleted-dkxpp" in namespace "gc-3030"
  Jun 22 13:44:24.916: INFO: Deleting pod "simpletest-rc-to-be-deleted-dlpfs" in namespace "gc-3030"
  Jun 22 13:44:24.929: INFO: Deleting pod "simpletest-rc-to-be-deleted-dnh4m" in namespace "gc-3030"
  Jun 22 13:44:24.946: INFO: Deleting pod "simpletest-rc-to-be-deleted-dt7sv" in namespace "gc-3030"
  Jun 22 13:44:24.968: INFO: Deleting pod "simpletest-rc-to-be-deleted-fjdh8" in namespace "gc-3030"
  Jun 22 13:44:24.978: INFO: Deleting pod "simpletest-rc-to-be-deleted-fsnrf" in namespace "gc-3030"
  Jun 22 13:44:24.998: INFO: Deleting pod "simpletest-rc-to-be-deleted-gqbbm" in namespace "gc-3030"
  Jun 22 13:44:25.017: INFO: Deleting pod "simpletest-rc-to-be-deleted-gzgtf" in namespace "gc-3030"
  Jun 22 13:44:25.036: INFO: Deleting pod "simpletest-rc-to-be-deleted-h2xc5" in namespace "gc-3030"
  Jun 22 13:44:25.049: INFO: Deleting pod "simpletest-rc-to-be-deleted-hbqjw" in namespace "gc-3030"
  Jun 22 13:44:25.069: INFO: Deleting pod "simpletest-rc-to-be-deleted-hdxj7" in namespace "gc-3030"
  Jun 22 13:44:25.084: INFO: Deleting pod "simpletest-rc-to-be-deleted-htnlf" in namespace "gc-3030"
  Jun 22 13:44:25.100: INFO: Deleting pod "simpletest-rc-to-be-deleted-hzns4" in namespace "gc-3030"
  Jun 22 13:44:25.119: INFO: Deleting pod "simpletest-rc-to-be-deleted-jjz49" in namespace "gc-3030"
  Jun 22 13:44:25.144: INFO: Deleting pod "simpletest-rc-to-be-deleted-jndn6" in namespace "gc-3030"
  Jun 22 13:44:25.159: INFO: Deleting pod "simpletest-rc-to-be-deleted-jqmth" in namespace "gc-3030"
  E0622 13:44:25.160827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:44:25.177: INFO: Deleting pod "simpletest-rc-to-be-deleted-k8pj5" in namespace "gc-3030"
  Jun 22 13:44:25.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3030" for this suite. @ 06/22/24 13:44:25.198
• [17.623 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 06/22/24 13:44:25.208
  Jun 22 13:44:25.208: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename ingress @ 06/22/24 13:44:25.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:44:25.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:44:25.231
  STEP: getting /apis @ 06/22/24 13:44:25.235
  STEP: getting /apis/networking.k8s.io @ 06/22/24 13:44:25.239
  STEP: getting /apis/networking.k8s.iov1 @ 06/22/24 13:44:25.24
  STEP: creating @ 06/22/24 13:44:25.242
  STEP: getting @ 06/22/24 13:44:25.258
  STEP: listing @ 06/22/24 13:44:25.261
  STEP: watching @ 06/22/24 13:44:25.265
  Jun 22 13:44:25.265: INFO: starting watch
  STEP: cluster-wide listing @ 06/22/24 13:44:25.267
  STEP: cluster-wide watching @ 06/22/24 13:44:25.274
  Jun 22 13:44:25.274: INFO: starting watch
  STEP: patching @ 06/22/24 13:44:25.275
  STEP: updating @ 06/22/24 13:44:25.283
  Jun 22 13:44:25.294: INFO: waiting for watch events with expected annotations
  Jun 22 13:44:25.294: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/22/24 13:44:25.294
  STEP: updating /status @ 06/22/24 13:44:25.3
  STEP: get /status @ 06/22/24 13:44:25.314
  STEP: deleting @ 06/22/24 13:44:25.321
  STEP: deleting a collection @ 06/22/24 13:44:25.342
  Jun 22 13:44:25.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-780" for this suite. @ 06/22/24 13:44:25.389
• [0.189 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 06/22/24 13:44:25.399
  Jun 22 13:44:25.399: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename disruption @ 06/22/24 13:44:25.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:44:25.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:44:25.426
  STEP: Waiting for the pdb to be processed @ 06/22/24 13:44:25.441
  STEP: Waiting for all pods to be running @ 06/22/24 13:44:25.485
  Jun 22 13:44:25.488: INFO: running pods: 0 < 3
  E0622 13:44:26.161196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:27.161316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:44:27.491: INFO: running pods: 0 < 3
  E0622 13:44:28.161328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:29.161437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:44:29.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9523" for this suite. @ 06/22/24 13:44:29.497
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 06/22/24 13:44:29.506
  Jun 22 13:44:29.506: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename watch @ 06/22/24 13:44:29.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:44:29.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:44:29.529
  STEP: creating a watch on configmaps with a certain label @ 06/22/24 13:44:29.531
  STEP: creating a new configmap @ 06/22/24 13:44:29.532
  STEP: modifying the configmap once @ 06/22/24 13:44:29.537
  STEP: changing the label value of the configmap @ 06/22/24 13:44:29.544
  STEP: Expecting to observe a delete notification for the watched object @ 06/22/24 13:44:29.551
  Jun 22 13:44:29.551: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1321  433d194c-9fa3-43b2-aa18-076f112de7b0 36087 0 2024-06-22 13:44:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-22 13:44:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 13:44:29.552: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1321  433d194c-9fa3-43b2-aa18-076f112de7b0 36088 0 2024-06-22 13:44:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-22 13:44:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 13:44:29.552: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1321  433d194c-9fa3-43b2-aa18-076f112de7b0 36089 0 2024-06-22 13:44:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-22 13:44:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 06/22/24 13:44:29.552
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 06/22/24 13:44:29.56
  E0622 13:44:30.161622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:31.161741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:32.162698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:33.162780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:34.162877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:35.162942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:36.163056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:37.163236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:38.163437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:39.163534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 06/22/24 13:44:39.561
  STEP: modifying the configmap a third time @ 06/22/24 13:44:39.571
  STEP: deleting the configmap @ 06/22/24 13:44:39.579
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 06/22/24 13:44:39.585
  Jun 22 13:44:39.585: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1321  433d194c-9fa3-43b2-aa18-076f112de7b0 36698 0 2024-06-22 13:44:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-22 13:44:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 13:44:39.586: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1321  433d194c-9fa3-43b2-aa18-076f112de7b0 36699 0 2024-06-22 13:44:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-22 13:44:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 13:44:39.586: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1321  433d194c-9fa3-43b2-aa18-076f112de7b0 36700 0 2024-06-22 13:44:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-22 13:44:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 22 13:44:39.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1321" for this suite. @ 06/22/24 13:44:39.59
• [10.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 06/22/24 13:44:39.597
  Jun 22 13:44:39.597: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename endpointslice @ 06/22/24 13:44:39.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:44:39.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:44:39.62
  E0622 13:44:40.163664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:41.163753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:42.163882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:43.163989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:44.164253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 06/22/24 13:44:44.687
  E0622 13:44:45.164460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:46.164691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:47.165501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:48.165627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:49.165723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 06/22/24 13:44:49.696
  E0622 13:44:50.166706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:51.166828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:52.167240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:53.167449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:54.167644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 06/22/24 13:44:54.705
  E0622 13:44:55.167798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:56.167999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:57.168079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:58.168183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:44:59.168862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 06/22/24 13:44:59.714
  Jun 22 13:44:59.734: INFO: EndpointSlice for Service endpointslice-2050/example-named-port not found
  E0622 13:45:00.168950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:01.169252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:02.169564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:03.169654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:04.169764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:05.170434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:06.170854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:07.171191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:08.171257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:09.172028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:45:09.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2050" for this suite. @ 06/22/24 13:45:09.745
• [30.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 06/22/24 13:45:09.753
  Jun 22 13:45:09.753: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl @ 06/22/24 13:45:09.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:45:09.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:45:09.775
  Jun 22 13:45:09.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3762 create -f -'
  Jun 22 13:45:09.865: INFO: stderr: ""
  Jun 22 13:45:09.865: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Jun 22 13:45:09.865: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3762 create -f -'
  Jun 22 13:45:09.956: INFO: stderr: ""
  Jun 22 13:45:09.956: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/22/24 13:45:09.956
  E0622 13:45:10.172683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:45:10.961: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 22 13:45:10.961: INFO: Found 1 / 1
  Jun 22 13:45:10.961: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun 22 13:45:10.965: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 22 13:45:10.965: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 22 13:45:10.965: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3762 describe pod agnhost-primary-nfjsw'
  Jun 22 13:45:11.019: INFO: stderr: ""
  Jun 22 13:45:11.019: INFO: stdout: "Name:             agnhost-primary-nfjsw\nNamespace:        kubectl-3762\nPriority:         0\nService Account:  default\nNode:             ip-172-31-3-104/172.31.3.104\nStart Time:       Sat, 22 Jun 2024 13:45:09 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.20.136\nIPs:\n  IP:           192.168.20.136\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://dba0a746ff5072049b45191829e78341b79709cf2ff2825e32aeb74c63f4f975\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 22 Jun 2024 13:45:10 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-cfgfh (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-cfgfh:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-3762/agnhost-primary-nfjsw to ip-172-31-3-104\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Jun 22 13:45:11.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3762 describe rc agnhost-primary'
  Jun 22 13:45:11.082: INFO: stderr: ""
  Jun 22 13:45:11.082: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3762\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-nfjsw\n"
  Jun 22 13:45:11.082: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3762 describe service agnhost-primary'
  Jun 22 13:45:11.137: INFO: stderr: ""
  Jun 22 13:45:11.137: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-3762\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.49\nIPs:               10.152.183.49\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.20.136:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Jun 22 13:45:11.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3762 describe node ip-172-31-25-91'
  E0622 13:45:11.173635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:45:11.211: INFO: stderr: ""
  Jun 22 13:45:11.211: INFO: stdout: "Name:               ip-172-31-25-91\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-25-91\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 22 Jun 2024 12:11:58 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-25-91\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 22 Jun 2024 13:45:04 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 22 Jun 2024 12:19:41 +0000   Sat, 22 Jun 2024 12:19:41 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 22 Jun 2024 13:40:11 +0000   Sat, 22 Jun 2024 12:11:58 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 22 Jun 2024 13:40:11 +0000   Sat, 22 Jun 2024 12:11:58 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 22 Jun 2024 13:40:11 +0000   Sat, 22 Jun 2024 12:11:58 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 22 Jun 2024 13:40:11 +0000   Sat, 22 Jun 2024 12:14:30 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.25.91\n  Hostname:    ip-172-31-25-91\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      16069568Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7958140Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    2\n  ephemeral-storage:      14809713845\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7855740Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                      ec2e1700e638a4bcef01576be248eb1f\n  System UUID:                     ec2e1700-e638-a4bc-ef01-576be248eb1f\n  Boot ID:                         33f8bd6a-3c82-4ada-882a-855d14b9679d\n  Kernel Version:                  6.5.0-1020-aws\n  OS Image:                        Ubuntu 22.04.4 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.29.6\n  Kube-Proxy Version:              v1.29.6\nNon-terminated Pods:               (8 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-fvrjf           0 (0%)        0 (0%)      0 (0%)           0 (0%)         90m\n  kube-system                      calico-node-ccx9h                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         85m\n  kube-system                      coredns-bddfd76d7-nd2xx                                    100m (5%)     0 (0%)      70Mi (0%)        170Mi (2%)     104m\n  kube-system                      kube-state-metrics-6f48cdd76-dd6kh                         0 (0%)        0 (0%)      0 (0%)           0 (0%)         104m\n  kube-system                      metrics-server-v0.6.3-69d7fbfdf8-8zxgg                     5m (0%)       100m (5%)   50Mi (0%)        300Mi (3%)     104m\n  kubernetes-dashboard             dashboard-metrics-scraper-5dd7cb5fc-cjq29                  0 (0%)        0 (0%)      0 (0%)           0 (0%)         104m\n  kubernetes-dashboard             kubernetes-dashboard-7b899cb9d9-zw59t                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         104m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-94c32348a04f46b5-zhwcb    0 (0%)        0 (0%)      0 (0%)           0 (0%)         82m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests    Limits\n  --------               --------    ------\n  cpu                    355m (17%)  100m (5%)\n  memory                 120Mi (1%)  470Mi (6%)\n  ephemeral-storage      0 (0%)      0 (0%)\n  hugepages-1Gi          0 (0%)      0 (0%)\n  hugepages-2Mi          0 (0%)      0 (0%)\n  scheduling.k8s.io/foo  0           0\nEvents:                  <none>\n"
  Jun 22 13:45:11.211: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3762 describe namespace kubectl-3762'
  Jun 22 13:45:11.265: INFO: stderr: ""
  Jun 22 13:45:11.265: INFO: stdout: "Name:         kubectl-3762\nLabels:       e2e-framework=kubectl\n              e2e-run=d1420184-d040-484b-a2cd-f52bfe2caa64\n              kubernetes.io/metadata.name=kubectl-3762\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Jun 22 13:45:11.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3762" for this suite. @ 06/22/24 13:45:11.27
• [1.526 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 06/22/24 13:45:11.278
  Jun 22 13:45:11.278: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename sched-preemption @ 06/22/24 13:45:11.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:45:11.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:45:11.299
  Jun 22 13:45:11.315: INFO: Waiting up to 1m0s for all nodes to be ready
  E0622 13:45:12.173739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:13.173843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:14.174062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:15.174823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:16.174928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:17.175020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:18.175312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:19.175375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:20.175711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:21.175798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:22.175944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:23.176034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:24.176888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:25.176969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:26.177985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:27.178058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:28.178181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:29.178686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:30.179496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:31.180121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:32.180407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:33.181267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:34.182349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:35.182388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:36.182532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:37.182588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:38.182704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:39.182944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:40.183062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:41.183136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:42.183249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:43.183337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:44.186226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:45.186682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:46.186792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:47.186889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:48.186980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:49.187077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:50.187179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:51.187239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:52.187335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:53.187968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:54.189705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:55.190709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:56.191371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:57.192060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:58.193055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:45:59.193253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:00.193613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:01.193716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:02.194675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:03.194777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:04.196238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:05.196888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:06.196932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:07.197923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:08.198028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:09.199133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:10.199915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:11.200038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:46:11.320: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/22/24 13:46:11.325
  Jun 22 13:46:11.343: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun 22 13:46:11.350: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun 22 13:46:11.368: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun 22 13:46:11.374: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jun 22 13:46:11.391: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jun 22 13:46:11.398: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/22/24 13:46:11.398
  E0622 13:46:12.200143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:13.200221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 06/22/24 13:46:13.427
  E0622 13:46:14.200740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:15.201090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:16.201195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:17.201305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:46:17.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1843" for this suite. @ 06/22/24 13:46:17.519
• [66.248 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 06/22/24 13:46:17.526
  Jun 22 13:46:17.526: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename init-container @ 06/22/24 13:46:17.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:46:17.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:46:17.548
  STEP: creating the pod @ 06/22/24 13:46:17.55
  Jun 22 13:46:17.550: INFO: PodSpec: initContainers in spec.initContainers
  E0622 13:46:18.201634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:19.202159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:20.202922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:21.203038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:22.203118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:23.205376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:24.205861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:25.205970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:26.206036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:27.207103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:28.207200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:29.207288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:30.207396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:31.207479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:32.208490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:33.209032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:34.209250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:35.209642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:36.209734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:37.209821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:38.209921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:39.210033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:40.210714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:41.210795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:42.210896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:43.211720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:44.212237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:45.212931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:46.213052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:47.213207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:48.213379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:49.213608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:50.213699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:51.214697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:52.214881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:53.214993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:54.220741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:55.221063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:56.221185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:46:57.221352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:46:58.094: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-d47df438-07c7-4953-ac91-8f9e86b8f21c", GenerateName:"", Namespace:"init-container-4840", SelfLink:"", UID:"0aea7818-7e64-44ce-977d-990c963fbfd9", ResourceVersion:"37357", Generation:0, CreationTimestamp:time.Date(2024, time.June, 22, 13, 46, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"550329250"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 22, 13, 46, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008351a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 22, 13, 46, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008351d0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-27g2s", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00426ef00), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-27g2s", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-27g2s", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-27g2s", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00307ddf8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-3-104", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000387dc0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00307de80)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00307dea0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00307dea8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00307deac), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004098a00), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 22, 13, 46, 18, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 22, 13, 46, 17, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 22, 13, 46, 17, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 22, 13, 46, 17, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 22, 13, 46, 17, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.3.104", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.3.104"}}, PodIP:"192.168.20.172", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.20.172"}}, StartTime:time.Date(2024, time.June, 22, 13, 46, 17, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000387f80)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00064a000)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://2d5234f27fa1acc462aac39b3952223f2cc33aad2fde504802e55612c77133f0", Started:(*bool)(0xc00307df4a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00426ef60), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00307df5f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00426ef40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00307df2f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Jun 22 13:46:58.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4840" for this suite. @ 06/22/24 13:46:58.099
• [40.579 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 06/22/24 13:46:58.106
  Jun 22 13:46:58.106: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 13:46:58.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:46:58.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:46:58.127
  STEP: Setting up server cert @ 06/22/24 13:46:58.154
  E0622 13:46:58.221401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 13:46:58.407
  STEP: Deploying the webhook pod @ 06/22/24 13:46:58.416
  STEP: Wait for the deployment to be ready @ 06/22/24 13:46:58.429
  Jun 22 13:46:58.436: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0622 13:46:59.221785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:00.221895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/22/24 13:47:00.449
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 13:47:00.46
  E0622 13:47:01.222800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:47:01.461: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 06/22/24 13:47:01.47
  STEP: Creating a custom resource definition that should be denied by the webhook @ 06/22/24 13:47:01.483
  Jun 22 13:47:01.483: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:47:01.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1021" for this suite. @ 06/22/24 13:47:01.538
  STEP: Destroying namespace "webhook-markers-8404" for this suite. @ 06/22/24 13:47:01.546
• [3.447 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 06/22/24 13:47:01.553
  Jun 22 13:47:01.553: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename secrets @ 06/22/24 13:47:01.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:47:01.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:47:01.574
  STEP: Creating secret with name secret-test-4afa55ea-3bca-4004-973f-f8922653d3b5 @ 06/22/24 13:47:01.576
  STEP: Creating a pod to test consume secrets @ 06/22/24 13:47:01.582
  E0622 13:47:02.222922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:03.222997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:04.223929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:05.224352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:47:05.605
  Jun 22 13:47:05.609: INFO: Trying to get logs from node ip-172-31-85-228 pod pod-secrets-5a9fbddd-863e-468a-8557-c922f977c493 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/22/24 13:47:05.623
  Jun 22 13:47:05.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5351" for this suite. @ 06/22/24 13:47:05.656
• [4.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 06/22/24 13:47:05.663
  Jun 22 13:47:05.663: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename hostport @ 06/22/24 13:47:05.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:47:05.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:47:05.685
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 06/22/24 13:47:05.691
  E0622 13:47:06.225027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:07.225235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.3.104 on the node which pod1 resides and expect scheduled @ 06/22/24 13:47:07.708
  E0622 13:47:08.225871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:09.226702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.3.104 but use UDP protocol on the node which pod2 resides @ 06/22/24 13:47:09.722
  E0622 13:47:10.227473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:11.227590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:12.228637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:13.228734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 06/22/24 13:47:13.755
  Jun 22 13:47:13.755: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.3.104 http://127.0.0.1:54323/hostname] Namespace:hostport-6876 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:47:13.755: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:47:13.755: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:47:13.755: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6876/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.3.104+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.3.104, port: 54323 @ 06/22/24 13:47:13.809
  Jun 22 13:47:13.809: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.3.104:54323/hostname] Namespace:hostport-6876 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:47:13.809: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:47:13.810: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:47:13.810: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6876/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.3.104%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.3.104, port: 54323 UDP @ 06/22/24 13:47:13.857
  Jun 22 13:47:13.857: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.3.104 54323] Namespace:hostport-6876 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:47:13.857: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:47:13.857: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:47:13.858: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6876/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.3.104+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0622 13:47:14.229050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:15.229177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:16.229464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:17.229614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:18.229751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:47:18.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6876" for this suite. @ 06/22/24 13:47:18.921
• [13.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 06/22/24 13:47:18.931
  Jun 22 13:47:18.931: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 13:47:18.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:47:18.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:47:18.949
  STEP: creating service multi-endpoint-test in namespace services-1419 @ 06/22/24 13:47:18.951
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1419 to expose endpoints map[] @ 06/22/24 13:47:18.961
  Jun 22 13:47:18.965: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0622 13:47:19.230192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:47:19.974: INFO: successfully validated that service multi-endpoint-test in namespace services-1419 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1419 @ 06/22/24 13:47:19.974
  E0622 13:47:20.231238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:21.231316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1419 to expose endpoints map[pod1:[100]] @ 06/22/24 13:47:21.998
  Jun 22 13:47:22.010: INFO: successfully validated that service multi-endpoint-test in namespace services-1419 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-1419 @ 06/22/24 13:47:22.01
  E0622 13:47:22.231919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:23.232101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1419 to expose endpoints map[pod1:[100] pod2:[101]] @ 06/22/24 13:47:24.026
  Jun 22 13:47:24.043: INFO: successfully validated that service multi-endpoint-test in namespace services-1419 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 06/22/24 13:47:24.043
  Jun 22 13:47:24.043: INFO: Creating new exec pod
  E0622 13:47:24.232329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:25.233200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:26.233697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:47:27.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-1419 exec execpodtc2zw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Jun 22 13:47:27.161: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Jun 22 13:47:27.161: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 13:47:27.161: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-1419 exec execpodtc2zw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.97 80'
  E0622 13:47:27.234224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:47:27.279: INFO: stderr: "+ nc -v -t -w 2 10.152.183.97 80\n+ echo hostName\nConnection to 10.152.183.97 80 port [tcp/http] succeeded!\n"
  Jun 22 13:47:27.279: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 13:47:27.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-1419 exec execpodtc2zw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Jun 22 13:47:27.370: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Jun 22 13:47:27.370: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 13:47:27.370: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-1419 exec execpodtc2zw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.97 81'
  Jun 22 13:47:27.460: INFO: stderr: "+ nc -v -t -w 2 10.152.183.97 81\n+ echo hostName\nConnection to 10.152.183.97 81 port [tcp/*] succeeded!\n"
  Jun 22 13:47:27.460: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1419 @ 06/22/24 13:47:27.46
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1419 to expose endpoints map[pod2:[101]] @ 06/22/24 13:47:27.479
  Jun 22 13:47:27.493: INFO: successfully validated that service multi-endpoint-test in namespace services-1419 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-1419 @ 06/22/24 13:47:27.493
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1419 to expose endpoints map[] @ 06/22/24 13:47:27.506
  Jun 22 13:47:27.515: INFO: successfully validated that service multi-endpoint-test in namespace services-1419 exposes endpoints map[]
  Jun 22 13:47:27.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1419" for this suite. @ 06/22/24 13:47:27.537
• [8.612 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 06/22/24 13:47:27.543
  Jun 22 13:47:27.543: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 13:47:27.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:47:27.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:47:27.564
  STEP: creating service in namespace services-6727 @ 06/22/24 13:47:27.567
  STEP: creating service affinity-clusterip in namespace services-6727 @ 06/22/24 13:47:27.567
  STEP: creating replication controller affinity-clusterip in namespace services-6727 @ 06/22/24 13:47:27.577
  I0622 13:47:27.583744      19 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-6727, replica count: 3
  E0622 13:47:28.234362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:29.234411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:30.234482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0622 13:47:30.635163      19 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 22 13:47:30.643: INFO: Creating new exec pod
  E0622 13:47:31.234695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:32.234992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:33.235104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:47:33.661: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-6727 exec execpod-affinity5kdhm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Jun 22 13:47:33.758: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Jun 22 13:47:33.759: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 13:47:33.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-6727 exec execpod-affinity5kdhm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.114 80'
  Jun 22 13:47:33.853: INFO: stderr: "+ nc -v -t -w 2 10.152.183.114 80\n+ echo hostName\nConnection to 10.152.183.114 80 port [tcp/http] succeeded!\n"
  Jun 22 13:47:33.853: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 22 13:47:33.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=services-6727 exec execpod-affinity5kdhm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.114:80/ ; done'
  Jun 22 13:47:34.010: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n"
  Jun 22 13:47:34.010: INFO: stdout: "\naffinity-clusterip-rcqd8\naffinity-clusterip-rcqd8\naffinity-clusterip-rcqd8\naffinity-clusterip-rcqd8\naffinity-clusterip-rcqd8\naffinity-clusterip-rcqd8\naffinity-clusterip-rcqd8\naffinity-clusterip-rcqd8\naffinity-clusterip-rcqd8\naffinity-clusterip-rcqd8\naffinity-clusterip-rcqd8\naffinity-clusterip-rcqd8\naffinity-clusterip-rcqd8\naffinity-clusterip-rcqd8\naffinity-clusterip-rcqd8\naffinity-clusterip-rcqd8"
  Jun 22 13:47:34.010: INFO: Received response from host: affinity-clusterip-rcqd8
  Jun 22 13:47:34.010: INFO: Received response from host: affinity-clusterip-rcqd8
  Jun 22 13:47:34.010: INFO: Received response from host: affinity-clusterip-rcqd8
  Jun 22 13:47:34.010: INFO: Received response from host: affinity-clusterip-rcqd8
  Jun 22 13:47:34.010: INFO: Received response from host: affinity-clusterip-rcqd8
  Jun 22 13:47:34.010: INFO: Received response from host: affinity-clusterip-rcqd8
  Jun 22 13:47:34.010: INFO: Received response from host: affinity-clusterip-rcqd8
  Jun 22 13:47:34.010: INFO: Received response from host: affinity-clusterip-rcqd8
  Jun 22 13:47:34.010: INFO: Received response from host: affinity-clusterip-rcqd8
  Jun 22 13:47:34.010: INFO: Received response from host: affinity-clusterip-rcqd8
  Jun 22 13:47:34.010: INFO: Received response from host: affinity-clusterip-rcqd8
  Jun 22 13:47:34.010: INFO: Received response from host: affinity-clusterip-rcqd8
  Jun 22 13:47:34.010: INFO: Received response from host: affinity-clusterip-rcqd8
  Jun 22 13:47:34.010: INFO: Received response from host: affinity-clusterip-rcqd8
  Jun 22 13:47:34.010: INFO: Received response from host: affinity-clusterip-rcqd8
  Jun 22 13:47:34.010: INFO: Received response from host: affinity-clusterip-rcqd8
  Jun 22 13:47:34.011: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-6727, will wait for the garbage collector to delete the pods @ 06/22/24 13:47:34.028
  Jun 22 13:47:34.089: INFO: Deleting ReplicationController affinity-clusterip took: 8.173885ms
  Jun 22 13:47:34.193: INFO: Terminating ReplicationController affinity-clusterip pods took: 103.804796ms
  E0622 13:47:34.235922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:35.236454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:36.236915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:37.237404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:47:37.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6727" for this suite. @ 06/22/24 13:47:37.316
• [9.779 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 06/22/24 13:47:37.323
  Jun 22 13:47:37.323: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pods @ 06/22/24 13:47:37.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:47:37.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:47:37.344
  STEP: creating the pod @ 06/22/24 13:47:37.346
  STEP: submitting the pod to kubernetes @ 06/22/24 13:47:37.346
  STEP: verifying QOS class is set on the pod @ 06/22/24 13:47:37.355
  Jun 22 13:47:37.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2654" for this suite. @ 06/22/24 13:47:37.363
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 06/22/24 13:47:37.371
  Jun 22 13:47:37.371: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename configmap @ 06/22/24 13:47:37.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:47:37.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:47:37.394
  STEP: Creating configMap configmap-2966/configmap-test-505092d9-6db1-4009-a85b-b65472e8810a @ 06/22/24 13:47:37.396
  STEP: Creating a pod to test consume configMaps @ 06/22/24 13:47:37.4
  E0622 13:47:38.237641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:39.237782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:47:39.418
  Jun 22 13:47:39.422: INFO: Trying to get logs from node ip-172-31-85-228 pod pod-configmaps-8ecf920c-50bf-42db-852d-ca51208f9ee4 container env-test: <nil>
  STEP: delete the pod @ 06/22/24 13:47:39.429
  Jun 22 13:47:39.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2966" for this suite. @ 06/22/24 13:47:39.452
• [2.088 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 06/22/24 13:47:39.459
  Jun 22 13:47:39.459: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename downward-api @ 06/22/24 13:47:39.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:47:39.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:47:39.48
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 13:47:39.483
  E0622 13:47:40.238726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:41.238870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:47:41.498
  Jun 22 13:47:41.501: INFO: Trying to get logs from node ip-172-31-85-228 pod downwardapi-volume-3e1db7f1-9f80-4fc8-b673-0f6a3f368f52 container client-container: <nil>
  STEP: delete the pod @ 06/22/24 13:47:41.508
  Jun 22 13:47:41.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-95" for this suite. @ 06/22/24 13:47:41.531
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 06/22/24 13:47:41.539
  Jun 22 13:47:41.539: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename endpointslice @ 06/22/24 13:47:41.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:47:41.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:47:41.56
  Jun 22 13:47:41.573: INFO: Endpoints addresses: [172.31.6.63 172.31.74.149] , ports: [6443]
  Jun 22 13:47:41.573: INFO: EndpointSlices addresses: [172.31.6.63 172.31.74.149] , ports: [6443]
  Jun 22 13:47:41.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8292" for this suite. @ 06/22/24 13:47:41.577
• [0.045 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 06/22/24 13:47:41.584
  Jun 22 13:47:41.584: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename configmap @ 06/22/24 13:47:41.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:47:41.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:47:41.605
  STEP: Creating configMap with name configmap-test-volume-c73a23da-fff1-49e5-9118-f1ae3c3af508 @ 06/22/24 13:47:41.608
  STEP: Creating a pod to test consume configMaps @ 06/22/24 13:47:41.613
  E0622 13:47:42.238908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:43.239186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:44.243980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:45.244007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:47:45.637
  Jun 22 13:47:45.641: INFO: Trying to get logs from node ip-172-31-85-228 pod pod-configmaps-b17e24f9-f4c3-44db-a342-3bfb7445499a container agnhost-container: <nil>
  STEP: delete the pod @ 06/22/24 13:47:45.647
  Jun 22 13:47:45.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5778" for this suite. @ 06/22/24 13:47:45.669
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 06/22/24 13:47:45.676
  Jun 22 13:47:45.676: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename daemonsets @ 06/22/24 13:47:45.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:47:45.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:47:45.696
  Jun 22 13:47:45.718: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/22/24 13:47:45.723
  Jun 22 13:47:45.727: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:47:45.727: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:47:45.731: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 13:47:45.731: INFO: Node ip-172-31-25-91 is running 0 daemon pod, expected 1
  E0622 13:47:46.244811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:47:46.729: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:47:46.729: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:47:46.732: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 22 13:47:46.732: INFO: Node ip-172-31-3-104 is running 0 daemon pod, expected 1
  E0622 13:47:47.245553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:47:47.729: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:47:47.729: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:47:47.732: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 22 13:47:47.732: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 06/22/24 13:47:47.745
  STEP: Check that daemon pods images are updated. @ 06/22/24 13:47:47.753
  Jun 22 13:47:47.757: INFO: Wrong image for pod: daemon-set-b9zwm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 22 13:47:47.757: INFO: Wrong image for pod: daemon-set-h49m4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 22 13:47:47.757: INFO: Wrong image for pod: daemon-set-hvpr7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 22 13:47:47.856: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:47:47.856: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0622 13:47:48.245738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:47:48.758: INFO: Wrong image for pod: daemon-set-h49m4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 22 13:47:48.758: INFO: Wrong image for pod: daemon-set-hvpr7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 22 13:47:48.758: INFO: Pod daemon-set-rsn24 is not available
  Jun 22 13:47:48.762: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:47:48.762: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0622 13:47:49.246663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:47:49.759: INFO: Pod daemon-set-84msr is not available
  Jun 22 13:47:49.759: INFO: Wrong image for pod: daemon-set-h49m4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 22 13:47:49.762: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:47:49.762: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0622 13:47:50.247130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:47:50.762: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:47:50.762: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0622 13:47:51.247682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:47:51.758: INFO: Pod daemon-set-6pd6g is not available
  Jun 22 13:47:51.762: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:47:51.762: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 06/22/24 13:47:51.762
  Jun 22 13:47:51.765: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:47:51.765: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:47:51.769: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 22 13:47:51.769: INFO: Node ip-172-31-3-104 is running 0 daemon pod, expected 1
  E0622 13:47:52.248453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:47:52.767: INFO: DaemonSet pods can't tolerate node ip-172-31-6-63 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:47:52.767: INFO: DaemonSet pods can't tolerate node ip-172-31-74-149 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 22 13:47:52.771: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 22 13:47:52.771: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/22/24 13:47:52.789
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4858, will wait for the garbage collector to delete the pods @ 06/22/24 13:47:52.789
  Jun 22 13:47:52.851: INFO: Deleting DaemonSet.extensions daemon-set took: 8.755344ms
  Jun 22 13:47:52.952: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.759958ms
  E0622 13:47:53.249139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:54.249334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:47:54.359: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 22 13:47:54.359: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 22 13:47:54.363: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38215"},"items":null}

  Jun 22 13:47:54.366: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38215"},"items":null}

  Jun 22 13:47:54.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4858" for this suite. @ 06/22/24 13:47:54.384
• [8.716 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 06/22/24 13:47:54.393
  Jun 22 13:47:54.393: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename secrets @ 06/22/24 13:47:54.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:47:54.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:47:54.413
  STEP: Creating secret with name secret-test-map-e7b537d0-8988-4aa0-ba17-72e884227261 @ 06/22/24 13:47:54.416
  STEP: Creating a pod to test consume secrets @ 06/22/24 13:47:54.421
  E0622 13:47:55.249724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:56.249815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:47:56.437
  Jun 22 13:47:56.441: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-secrets-9b67152d-3a46-4f64-bbf8-e92ca6ede063 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/22/24 13:47:56.457
  Jun 22 13:47:56.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3954" for this suite. @ 06/22/24 13:47:56.479
• [2.093 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 06/22/24 13:47:56.486
  Jun 22 13:47:56.486: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename dns @ 06/22/24 13:47:56.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:47:56.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:47:56.506
  STEP: Creating a test headless service @ 06/22/24 13:47:56.509
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6157.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-6157.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6157.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6157.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6157.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-6157.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6157.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-6157.svc.cluster.local;sleep 1; done
   @ 06/22/24 13:47:56.514
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6157.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-6157.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6157.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-6157.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6157.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-6157.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6157.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-6157.svc.cluster.local;sleep 1; done
   @ 06/22/24 13:47:56.514
  STEP: creating a pod to probe DNS @ 06/22/24 13:47:56.514
  STEP: submitting the pod to kubernetes @ 06/22/24 13:47:56.515
  E0622 13:47:57.249899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:47:58.250022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/22/24 13:47:58.534
  STEP: looking for the results for each expected name from probers @ 06/22/24 13:47:58.538
  Jun 22 13:47:58.543: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6157.svc.cluster.local from pod dns-6157/dns-test-348ac16b-b996-41ba-a550-03ca8e268075: the server could not find the requested resource (get pods dns-test-348ac16b-b996-41ba-a550-03ca8e268075)
  Jun 22 13:47:58.547: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6157.svc.cluster.local from pod dns-6157/dns-test-348ac16b-b996-41ba-a550-03ca8e268075: the server could not find the requested resource (get pods dns-test-348ac16b-b996-41ba-a550-03ca8e268075)
  Jun 22 13:47:58.552: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-6157.svc.cluster.local from pod dns-6157/dns-test-348ac16b-b996-41ba-a550-03ca8e268075: the server could not find the requested resource (get pods dns-test-348ac16b-b996-41ba-a550-03ca8e268075)
  Jun 22 13:47:58.556: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-6157.svc.cluster.local from pod dns-6157/dns-test-348ac16b-b996-41ba-a550-03ca8e268075: the server could not find the requested resource (get pods dns-test-348ac16b-b996-41ba-a550-03ca8e268075)
  Jun 22 13:47:58.559: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6157.svc.cluster.local from pod dns-6157/dns-test-348ac16b-b996-41ba-a550-03ca8e268075: the server could not find the requested resource (get pods dns-test-348ac16b-b996-41ba-a550-03ca8e268075)
  Jun 22 13:47:58.563: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6157.svc.cluster.local from pod dns-6157/dns-test-348ac16b-b996-41ba-a550-03ca8e268075: the server could not find the requested resource (get pods dns-test-348ac16b-b996-41ba-a550-03ca8e268075)
  Jun 22 13:47:58.568: INFO: Unable to read jessie_udp@dns-test-service-2.dns-6157.svc.cluster.local from pod dns-6157/dns-test-348ac16b-b996-41ba-a550-03ca8e268075: the server could not find the requested resource (get pods dns-test-348ac16b-b996-41ba-a550-03ca8e268075)
  Jun 22 13:47:58.572: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-6157.svc.cluster.local from pod dns-6157/dns-test-348ac16b-b996-41ba-a550-03ca8e268075: the server could not find the requested resource (get pods dns-test-348ac16b-b996-41ba-a550-03ca8e268075)
  Jun 22 13:47:58.572: INFO: Lookups using dns-6157/dns-test-348ac16b-b996-41ba-a550-03ca8e268075 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6157.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6157.svc.cluster.local wheezy_udp@dns-test-service-2.dns-6157.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-6157.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6157.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6157.svc.cluster.local jessie_udp@dns-test-service-2.dns-6157.svc.cluster.local jessie_tcp@dns-test-service-2.dns-6157.svc.cluster.local]

  Jun 22 13:47:58.579: INFO: Pod client logs for webserver: 
  Jun 22 13:47:58.586: INFO: Pod client logs for querier: 
  Jun 22 13:47:58.593: INFO: Pod client logs for jessie-querier: 
  E0622 13:47:59.250707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:00.251583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:01.251706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:02.251809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:03.251897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:48:03.572: INFO: DNS probes using dns-6157/dns-test-348ac16b-b996-41ba-a550-03ca8e268075 succeeded

  STEP: deleting the pod @ 06/22/24 13:48:03.572
  STEP: deleting the test headless service @ 06/22/24 13:48:03.59
  Jun 22 13:48:03.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6157" for this suite. @ 06/22/24 13:48:03.608
• [7.129 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 06/22/24 13:48:03.615
  Jun 22 13:48:03.615: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir @ 06/22/24 13:48:03.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:03.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:03.635
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/22/24 13:48:03.638
  E0622 13:48:04.252745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:05.253121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:06.253641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:07.253729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:48:07.664
  Jun 22 13:48:07.668: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-80d4c3d9-537a-4b37-8c08-ee7cd60f63f8 container test-container: <nil>
  STEP: delete the pod @ 06/22/24 13:48:07.675
  Jun 22 13:48:07.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4720" for this suite. @ 06/22/24 13:48:07.696
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 06/22/24 13:48:07.703
  Jun 22 13:48:07.703: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename containers @ 06/22/24 13:48:07.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:07.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:07.724
  STEP: Creating a pod to test override command @ 06/22/24 13:48:07.726
  E0622 13:48:08.254705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:09.254809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:10.255239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:11.255321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:48:11.75
  Jun 22 13:48:11.754: INFO: Trying to get logs from node ip-172-31-3-104 pod client-containers-d83068ec-6448-4e7e-89ba-bdd054cdf569 container agnhost-container: <nil>
  STEP: delete the pod @ 06/22/24 13:48:11.763
  Jun 22 13:48:11.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8938" for this suite. @ 06/22/24 13:48:11.789
• [4.094 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 06/22/24 13:48:11.798
  Jun 22 13:48:11.798: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename configmap @ 06/22/24 13:48:11.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:11.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:11.819
  STEP: creating a ConfigMap @ 06/22/24 13:48:11.823
  STEP: fetching the ConfigMap @ 06/22/24 13:48:11.829
  STEP: patching the ConfigMap @ 06/22/24 13:48:11.832
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 06/22/24 13:48:11.839
  STEP: deleting the ConfigMap by collection with a label selector @ 06/22/24 13:48:11.845
  STEP: listing all ConfigMaps in test namespace @ 06/22/24 13:48:11.857
  Jun 22 13:48:11.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-638" for this suite. @ 06/22/24 13:48:11.869
• [0.078 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 06/22/24 13:48:11.876
  Jun 22 13:48:11.876: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl @ 06/22/24 13:48:11.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:11.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:11.897
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/22/24 13:48:11.899
  Jun 22 13:48:11.899: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-7996 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jun 22 13:48:11.953: INFO: stderr: ""
  Jun 22 13:48:11.953: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 06/22/24 13:48:11.953
  Jun 22 13:48:11.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-7996 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Jun 22 13:48:12.001: INFO: stderr: ""
  Jun 22 13:48:12.001: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/22/24 13:48:12.001
  Jun 22 13:48:12.005: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-7996 delete pods e2e-test-httpd-pod'
  E0622 13:48:12.255865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:13.255996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:48:13.328: INFO: stderr: ""
  Jun 22 13:48:13.328: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 22 13:48:13.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7996" for this suite. @ 06/22/24 13:48:13.332
• [1.462 seconds]
------------------------------
S
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 06/22/24 13:48:13.339
  Jun 22 13:48:13.339: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename subjectreview @ 06/22/24 13:48:13.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:13.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:13.359
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-2708" @ 06/22/24 13:48:13.361
  Jun 22 13:48:13.367: INFO: saUsername: "system:serviceaccount:subjectreview-2708:e2e"
  Jun 22 13:48:13.367: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-2708"}
  Jun 22 13:48:13.367: INFO: saUID: "af5910dc-37ec-4399-bd35-76d2bd8f2a1a"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-2708:e2e" @ 06/22/24 13:48:13.367
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-2708:e2e" @ 06/22/24 13:48:13.367
  Jun 22 13:48:13.369: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-2708:e2e" api 'list' configmaps in "subjectreview-2708" namespace @ 06/22/24 13:48:13.369
  Jun 22 13:48:13.370: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-2708:e2e" @ 06/22/24 13:48:13.37
  Jun 22 13:48:13.371: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Jun 22 13:48:13.371: INFO: LocalSubjectAccessReview has been verified
  Jun 22 13:48:13.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-2708" for this suite. @ 06/22/24 13:48:13.375
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 06/22/24 13:48:13.383
  Jun 22 13:48:13.383: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/22/24 13:48:13.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:13.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:13.405
  E0622 13:48:14.256866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:15.257616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 06/22/24 13:48:15.437
  STEP: Cleaning up the configmap @ 06/22/24 13:48:15.444
  STEP: Cleaning up the pod @ 06/22/24 13:48:15.45
  Jun 22 13:48:15.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5891" for this suite. @ 06/22/24 13:48:15.473
• [2.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 06/22/24 13:48:15.482
  Jun 22 13:48:15.482: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename resourcequota @ 06/22/24 13:48:15.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:15.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:15.508
  STEP: Creating a ResourceQuota @ 06/22/24 13:48:15.513
  STEP: Getting a ResourceQuota @ 06/22/24 13:48:15.517
  STEP: Listing all ResourceQuotas with LabelSelector @ 06/22/24 13:48:15.52
  STEP: Patching the ResourceQuota @ 06/22/24 13:48:15.523
  STEP: Deleting a Collection of ResourceQuotas @ 06/22/24 13:48:15.528
  STEP: Verifying the deleted ResourceQuota @ 06/22/24 13:48:15.538
  Jun 22 13:48:15.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-170" for this suite. @ 06/22/24 13:48:15.545
• [0.069 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 06/22/24 13:48:15.551
  Jun 22 13:48:15.551: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl @ 06/22/24 13:48:15.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:15.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:15.57
  STEP: validating cluster-info @ 06/22/24 13:48:15.572
  Jun 22 13:48:15.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-4003 cluster-info'
  Jun 22 13:48:15.616: INFO: stderr: ""
  Jun 22 13:48:15.616: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Jun 22 13:48:15.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4003" for this suite. @ 06/22/24 13:48:15.62
• [0.077 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 06/22/24 13:48:15.628
  Jun 22 13:48:15.628: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename init-container @ 06/22/24 13:48:15.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:15.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:15.65
  STEP: creating the pod @ 06/22/24 13:48:15.652
  Jun 22 13:48:15.652: INFO: PodSpec: initContainers in spec.initContainers
  E0622 13:48:16.257730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:17.258537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:18.258757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:19.258852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:48:19.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7217" for this suite. @ 06/22/24 13:48:19.49
• [3.869 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 06/22/24 13:48:19.498
  Jun 22 13:48:19.498: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename replicaset @ 06/22/24 13:48:19.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:19.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:19.52
  Jun 22 13:48:19.533: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0622 13:48:20.259598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:21.259723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:22.259815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:23.259892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:24.259972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:48:24.537: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/22/24 13:48:24.537
  STEP: Scaling up "test-rs" replicaset @ 06/22/24 13:48:24.537
  Jun 22 13:48:24.548: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 06/22/24 13:48:24.548
  Jun 22 13:48:24.558: INFO: observed ReplicaSet test-rs in namespace replicaset-2432 with ReadyReplicas 1, AvailableReplicas 1
  Jun 22 13:48:24.585: INFO: observed ReplicaSet test-rs in namespace replicaset-2432 with ReadyReplicas 1, AvailableReplicas 1
  Jun 22 13:48:24.606: INFO: observed ReplicaSet test-rs in namespace replicaset-2432 with ReadyReplicas 1, AvailableReplicas 1
  Jun 22 13:48:24.618: INFO: observed ReplicaSet test-rs in namespace replicaset-2432 with ReadyReplicas 1, AvailableReplicas 1
  E0622 13:48:25.260730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:48:25.269: INFO: observed ReplicaSet test-rs in namespace replicaset-2432 with ReadyReplicas 2, AvailableReplicas 2
  Jun 22 13:48:25.720: INFO: observed Replicaset test-rs in namespace replicaset-2432 with ReadyReplicas 3 found true
  Jun 22 13:48:25.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2432" for this suite. @ 06/22/24 13:48:25.724
• [6.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 06/22/24 13:48:25.731
  Jun 22 13:48:25.731: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/22/24 13:48:25.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:25.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:25.753
  Jun 22 13:48:25.755: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  E0622 13:48:26.260789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:48:26.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2705" for this suite. @ 06/22/24 13:48:26.784
• [1.061 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 06/22/24 13:48:26.792
  Jun 22 13:48:26.792: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename runtimeclass @ 06/22/24 13:48:26.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:26.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:26.812
  Jun 22 13:48:26.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6941" for this suite. @ 06/22/24 13:48:26.825
• [0.039 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 06/22/24 13:48:26.832
  Jun 22 13:48:26.832: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/22/24 13:48:26.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:26.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:26.852
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 06/22/24 13:48:26.854
  Jun 22 13:48:26.855: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  E0622 13:48:27.260884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:28.261650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:29.261841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:30.262346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:31.262451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 06/22/24 13:48:31.798
  Jun 22 13:48:31.799: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  E0622 13:48:32.262579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:48:33.169: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  E0622 13:48:33.263044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:34.263108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:35.263244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:36.263554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:37.263596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:48:38.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7553" for this suite. @ 06/22/24 13:48:38.134
• [11.309 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 06/22/24 13:48:38.141
  Jun 22 13:48:38.141: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:48:38.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:38.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:38.163
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 13:48:38.165
  E0622 13:48:38.264376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:39.264570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:40.265345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:41.265636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:48:42.19
  Jun 22 13:48:42.194: INFO: Trying to get logs from node ip-172-31-3-104 pod downwardapi-volume-dd034123-0f74-446d-9f52-2b73a843d163 container client-container: <nil>
  STEP: delete the pod @ 06/22/24 13:48:42.207
  Jun 22 13:48:42.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4994" for this suite. @ 06/22/24 13:48:42.227
• [4.093 seconds]
------------------------------
SSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 06/22/24 13:48:42.234
  Jun 22 13:48:42.234: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename certificates @ 06/22/24 13:48:42.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:42.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:42.252
  E0622 13:48:42.265898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 06/22/24 13:48:42.466
  STEP: getting /apis/certificates.k8s.io @ 06/22/24 13:48:42.469
  STEP: getting /apis/certificates.k8s.io/v1 @ 06/22/24 13:48:42.47
  STEP: creating @ 06/22/24 13:48:42.471
  STEP: getting @ 06/22/24 13:48:42.49
  STEP: listing @ 06/22/24 13:48:42.493
  STEP: watching @ 06/22/24 13:48:42.496
  Jun 22 13:48:42.496: INFO: starting watch
  STEP: patching @ 06/22/24 13:48:42.497
  STEP: updating @ 06/22/24 13:48:42.503
  Jun 22 13:48:42.509: INFO: waiting for watch events with expected annotations
  Jun 22 13:48:42.509: INFO: saw patched and updated annotations
  STEP: getting /approval @ 06/22/24 13:48:42.509
  STEP: patching /approval @ 06/22/24 13:48:42.512
  STEP: updating /approval @ 06/22/24 13:48:42.518
  STEP: getting /status @ 06/22/24 13:48:42.525
  STEP: patching /status @ 06/22/24 13:48:42.528
  STEP: updating /status @ 06/22/24 13:48:42.535
  STEP: deleting @ 06/22/24 13:48:42.543
  STEP: deleting a collection @ 06/22/24 13:48:42.555
  Jun 22 13:48:42.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-1925" for this suite. @ 06/22/24 13:48:42.576
• [0.350 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 06/22/24 13:48:42.584
  Jun 22 13:48:42.584: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename gc @ 06/22/24 13:48:42.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:42.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:42.605
  STEP: create the rc @ 06/22/24 13:48:42.611
  W0622 13:48:42.617388      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0622 13:48:43.266091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:44.267991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:45.268105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:46.268508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:47.269469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:48.277731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/22/24 13:48:48.627
  STEP: wait for the rc to be deleted @ 06/22/24 13:48:48.661
  E0622 13:48:49.274773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:48:49.673: INFO: 80 pods remaining
  Jun 22 13:48:49.673: INFO: 80 pods has nil DeletionTimestamp
  Jun 22 13:48:49.673: INFO: 
  E0622 13:48:50.274881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:48:50.692: INFO: 70 pods remaining
  Jun 22 13:48:50.692: INFO: 70 pods has nil DeletionTimestamp
  Jun 22 13:48:50.692: INFO: 
  E0622 13:48:51.275729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:48:51.679: INFO: 59 pods remaining
  Jun 22 13:48:51.679: INFO: 59 pods has nil DeletionTimestamp
  Jun 22 13:48:51.679: INFO: 
  E0622 13:48:52.276601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:48:52.700: INFO: 40 pods remaining
  Jun 22 13:48:52.700: INFO: 40 pods has nil DeletionTimestamp
  Jun 22 13:48:52.700: INFO: 
  E0622 13:48:53.276707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:48:53.675: INFO: 31 pods remaining
  Jun 22 13:48:53.675: INFO: 30 pods has nil DeletionTimestamp
  Jun 22 13:48:53.675: INFO: 
  E0622 13:48:54.276872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:48:54.671: INFO: 19 pods remaining
  Jun 22 13:48:54.671: INFO: 19 pods has nil DeletionTimestamp
  Jun 22 13:48:54.671: INFO: 
  E0622 13:48:55.277810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/22/24 13:48:55.67
  W0622 13:48:55.677376      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 22 13:48:55.677: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 22 13:48:55.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1265" for this suite. @ 06/22/24 13:48:55.693
• [13.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 06/22/24 13:48:55.707
  Jun 22 13:48:55.707: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename deployment @ 06/22/24 13:48:55.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:48:55.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:48:55.741
  Jun 22 13:48:55.744: INFO: Creating deployment "webserver-deployment"
  Jun 22 13:48:55.749: INFO: Waiting for observed generation 1
  E0622 13:48:56.278610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:57.278667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:48:57.757: INFO: Waiting for all required pods to come up
  Jun 22 13:48:57.761: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 06/22/24 13:48:57.761
  Jun 22 13:48:57.762: INFO: Waiting for deployment "webserver-deployment" to complete
  Jun 22 13:48:57.769: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Jun 22 13:48:57.778: INFO: Updating deployment webserver-deployment
  Jun 22 13:48:57.778: INFO: Waiting for observed generation 2
  E0622 13:48:58.279959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:48:59.280860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:48:59.786: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Jun 22 13:48:59.790: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Jun 22 13:48:59.794: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun 22 13:48:59.804: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Jun 22 13:48:59.804: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Jun 22 13:48:59.808: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun 22 13:48:59.815: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Jun 22 13:48:59.815: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Jun 22 13:48:59.824: INFO: Updating deployment webserver-deployment
  Jun 22 13:48:59.824: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Jun 22 13:48:59.830: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Jun 22 13:48:59.836: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  E0622 13:49:00.281588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:01.281892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:49:01.844: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49b8ab0c-f61f-4b32-8fa4-42aea4206f6d",
      ResourceVersion: (string) (len=5) "41385",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 17,
      AvailableReplicas: (int32) 17,
      UnavailableReplicas: (int32) 16,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 22 13:49:01.878: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d21befdd-5b89-4153-aa07-a0647db8c1de",
      ResourceVersion: (string) (len=5) "41110",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660937,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "49b8ab0c-f61f-4b32-8fa4-42aea4206f6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 39 62 38 61 62  30 63 2d 66 36 31 66 2d  |\"49b8ab0c-f61f-|
              00000120  34 62 33 32 2d 38 66 61  34 2d 34 32 61 65 61 34  |4b32-8fa4-42aea4|
              00000130  32 30 36 66 36 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |206f6d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 22 13:49:01.879: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Jun 22 13:49:01.879: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
      ResourceVersion: (string) (len=5) "41383",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "49b8ab0c-f61f-4b32-8fa4-42aea4206f6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 39 62 38 61 62  30 63 2d 66 36 31 66 2d  |\"49b8ab0c-f61f-|
              00000120  34 62 33 32 2d 38 66 61  34 2d 34 32 61 65 61 34  |4b32-8fa4-42aea4|
              00000130  32 30 36 66 36 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |206f6d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 17,
      AvailableReplicas: (int32) 17,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 22 13:49:01.889: INFO: Pod "webserver-deployment-557759b7c7-2gngw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2gngw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "673f4fdb-0be4-459e-9888-8b6911f6fb55",
      ResourceVersion: (string) (len=5) "40913",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 30  2e 39 35 5c 22 7d 22 3a  |2.168.90.95\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tk925",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tk925",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-25-91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.25.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.25.91"
        }
      },
      PodIP: (string) (len=13) "192.168.90.95",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.90.95"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660936,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5f4daab025e61c121fa81c0014fb2e07eb68d5619c3b41bc20fda68ebe6488b6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.903: INFO: Pod "webserver-deployment-557759b7c7-2j4bf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2j4bf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b184275-7018-41aa-b9e4-84077e4fa883",
      ResourceVersion: (string) (len=5) "41094",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qxps7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qxps7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.908: INFO: Pod "webserver-deployment-557759b7c7-2s6fg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2s6fg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6f010b2-3e8c-44cb-9627-0181446dffd2",
      ResourceVersion: (string) (len=5) "41366",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 30  2e 37 37 5c 22 7d 22 3a  |2.168.90.77\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qx7mw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qx7mw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-25-91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.25.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.25.91"
        }
      },
      PodIP: (string) (len=13) "192.168.90.77",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.90.77"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660941,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1ce393d50823efd87c37ecbc6749e2bb87e6ee938c74846594c27b0b0e8b12da",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.910: INFO: Pod "webserver-deployment-557759b7c7-4ssdx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4ssdx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "659225be-837b-4ad4-88bb-cdc8308ec878",
      ResourceVersion: (string) (len=5) "41307",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  31 2e 31 36 38 5c 22 7d  |2.168.251.168\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r82z5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r82z5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.85.228"
        }
      },
      PodIP: (string) (len=15) "192.168.251.168",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.251.168"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660941,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://306208698cfaa67953cf62a1ecda82bc1e2aecef3a154553ab6e0fab428e5a8c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.911: INFO: Pod "webserver-deployment-557759b7c7-4t946" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4t946",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6b5fc54-3bc4-4df3-9415-867c9f818806",
      ResourceVersion: (string) (len=5) "40897",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  2e 31 35 30 5c 22 7d 22  |2.168.20.150\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vnj5g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vnj5g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) (len=14) "192.168.20.150",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.20.150"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660936,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://42e645123340d0485d92f85b507c75caf131cf4bd14ec8a1a01af1c2e6303835",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.913: INFO: Pod "webserver-deployment-557759b7c7-5k2zl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5k2zl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c2b42fa-ad3a-418b-8287-dec298a8c94a",
      ResourceVersion: (string) (len=5) "40909",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 30  2e 31 30 31 5c 22 7d 22  |2.168.90.101\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nl8gq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nl8gq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-25-91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.25.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.25.91"
        }
      },
      PodIP: (string) (len=14) "192.168.90.101",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.90.101"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660936,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8ecee29ed6becef8461baadd9f83c70739ed3408f7b16755278c47840cae8eda",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.914: INFO: Pod "webserver-deployment-557759b7c7-6vjs6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6vjs6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a4e8292-81b9-49f8-9180-33a07dbbbe66",
      ResourceVersion: (string) (len=5) "41300",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  31 2e 31 36 35 5c 22 7d  |2.168.251.165\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xskm6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xskm6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.85.228"
        }
      },
      PodIP: (string) (len=15) "192.168.251.165",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.251.165"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660941,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://603849f153acd68650786061e36b411bb18fc27a16758c358bcc54405b4fbc86",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.916: INFO: Pod "webserver-deployment-557759b7c7-7mnzg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7mnzg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "815e5739-f6c0-4e8e-a746-9bfbf0b1172c",
      ResourceVersion: (string) (len=5) "41312",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  31 2e 31 34 34 5c 22 7d  |2.168.251.144\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sz7w2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sz7w2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.85.228"
        }
      },
      PodIP: (string) (len=15) "192.168.251.144",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.251.144"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660941,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://41d66c572142a1181fb8f5e328bb75891fe19530babbe5140e4a92efc7a8968e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.917: INFO: Pod "webserver-deployment-557759b7c7-fbmkr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fbmkr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "218fd97d-1c04-45cb-b9b0-e60c4175d35b",
      ResourceVersion: (string) (len=5) "41122",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660940,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r67xk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r67xk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.919: INFO: Pod "webserver-deployment-557759b7c7-ft4fx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ft4fx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c8a1cd48-4856-40bd-a41b-ab3160395b94",
      ResourceVersion: (string) (len=5) "41372",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 30  2e 39 36 5c 22 7d 22 3a  |2.168.90.96\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r6lw4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r6lw4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-25-91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.25.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.25.91"
        }
      },
      PodIP: (string) (len=13) "192.168.90.96",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.90.96"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660941,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://95cc5b12604a5ec55b8d869801e15e8bb7bfee965e045a86aeac7f885d5fdc68",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.920: INFO: Pod "webserver-deployment-557759b7c7-hww48" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hww48",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2cce1d1-9709-43ee-8fb0-6b8c3c0fef7f",
      ResourceVersion: (string) (len=5) "41291",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  31 2e 31 33 31 5c 22 7d  |2.168.251.131\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bspsq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bspsq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.85.228"
        }
      },
      PodIP: (string) (len=15) "192.168.251.131",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.251.131"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660940,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0baa2678e283875811d8ad07efad1a1552d3480de8335aa6af598ab6a0cbb557",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.922: INFO: Pod "webserver-deployment-557759b7c7-kh6rb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kh6rb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d630b7a-25cd-48fb-a910-6825eebc04d1",
      ResourceVersion: (string) (len=5) "40904",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  2e 31 35 35 5c 22 7d 22  |2.168.20.155\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gr2tw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gr2tw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) (len=14) "192.168.20.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.20.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660936,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://52e3069e8fb044ed2834b8527fbcc6bf016a436ecbbd00afea29fed0e53ffefa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.924: INFO: Pod "webserver-deployment-557759b7c7-kqttj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kqttj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3cba5826-cfcc-4d5a-8933-42e4ef16b784",
      ResourceVersion: (string) (len=5) "41331",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  2e 31 37 30 5c 22 7d 22  |2.168.20.170\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h9lqm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h9lqm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) (len=14) "192.168.20.170",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.20.170"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660941,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3d8664ee8b49974cf29cd5442addadb8eebc5b81e611e0163915ece4d541555e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.925: INFO: Pod "webserver-deployment-557759b7c7-nd56z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nd56z",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59624cc2-bdca-49fc-8cf0-fac29a727170",
      ResourceVersion: (string) (len=5) "40891",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  31 2e 31 33 38 5c 22 7d  |2.168.251.138\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-src4h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-src4h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.85.228"
        }
      },
      PodIP: (string) (len=15) "192.168.251.138",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.251.138"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660936,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://270c15d46b5e85823a846df0892789d79c3f04baf2c3c7b38ac27bc24764eb07",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.930: INFO: Pod "webserver-deployment-557759b7c7-qf2ct" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qf2ct",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3f9028ba-a244-4aea-a288-12cadeb61f0a",
      ResourceVersion: (string) (len=5) "41336",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  2e 31 37 39 5c 22 7d 22  |2.168.20.179\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r5jxn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r5jxn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) (len=14) "192.168.20.179",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.20.179"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660941,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b1e229f1085626baf0d6d17365c3188b82361c8406ccc6d20823070b67b97087",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.932: INFO: Pod "webserver-deployment-557759b7c7-sxknp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-sxknp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f5a1612-266f-4be2-b5ea-4e98119d362b",
      ResourceVersion: (string) (len=5) "41128",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660940,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f6hlw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f6hlw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.934: INFO: Pod "webserver-deployment-557759b7c7-vlnjw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vlnjw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c510558c-a510-4070-82ba-1daeeea28ecc",
      ResourceVersion: (string) (len=5) "41382",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 30  2e 31 30 39 5c 22 7d 22  |2.168.90.109\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-df67t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-df67t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-25-91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.25.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.25.91"
        }
      },
      PodIP: (string) (len=14) "192.168.90.109",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.90.109"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660941,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://17350b5e9a33b05669e46b34247be07086d5fe0d2ced4c1558d7340df115bc2e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.935: INFO: Pod "webserver-deployment-557759b7c7-xjdrz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xjdrz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55058183-2d55-49e8-a101-4a241aaeb7d8",
      ResourceVersion: (string) (len=5) "40887",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  31 2e 31 35 33 5c 22 7d  |2.168.251.153\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8x47m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8x47m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.85.228"
        }
      },
      PodIP: (string) (len=15) "192.168.251.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.251.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660936,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b1761b4bc17a1ce1f1c7d1215dd8c8a3ca9ef57dc7fc7c80fada94343419d43c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.937: INFO: Pod "webserver-deployment-557759b7c7-xjf2d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xjf2d",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dbdb31e7-47c9-4167-95ad-f30462c3c158",
      ResourceVersion: (string) (len=5) "40894",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  31 2e 31 39 31 5c 22 7d  |2.168.251.191\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sq28q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sq28q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.85.228"
        }
      },
      PodIP: (string) (len=15) "192.168.251.191",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.251.191"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660936,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://650060caa542f1f26c689f76cf7c3b1715184371582e4d63305af82bad35b87b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.938: INFO: Pod "webserver-deployment-557759b7c7-xz47s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xz47s",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2acb99f6-b87d-4e79-a7f0-794f7b75dc4d",
      ResourceVersion: (string) (len=5) "40916",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0d9f79a4-9143-4ad1-a394-397a904d8cd0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  39 66 37 39 61 34 2d 39  |d\":\"0d9f79a4-9|
              00000090  31 34 33 2d 34 61 64 31  2d 61 33 39 34 2d 33 39  |143-4ad1-a394-39|
              000000a0  37 61 39 30 34 64 38 63  64 30 5c 22 7d 22 3a 7b  |7a904d8cd0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 30  2e 31 31 31 5c 22 7d 22  |2.168.90.111\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2lmcr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2lmcr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-25-91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660935,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.25.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.25.91"
        }
      },
      PodIP: (string) (len=14) "192.168.90.111",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.90.111"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660935,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854660936,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dd7c514e6f761862b8032392fbf209c569c5746bf801b29acee6c8eb761a0b85",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.939: INFO: Pod "webserver-deployment-9b4f5bf69-4qfps" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4qfps",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "834b0184-47bf-499e-a4d7-54eeb0a542e8",
      ResourceVersion: (string) (len=5) "41014",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660937,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21befdd-5b89-4153-aa07-a0647db8c1de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 62 65 66 64 64 2d 35  |d\":\"d21befdd-5|
              00000090  62 38 39 2d 34 31 35 33  2d 61 61 30 37 2d 61 30  |b89-4153-aa07-a0|
              000000a0  36 34 37 64 62 38 63 31  64 65 5c 22 7d 22 3a 7b  |647db8c1de\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 35 31 2e 31  33 39 5c 22 7d 22 3a 7b  |68.251.139\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bwwtr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bwwtr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.85.228"
        }
      },
      PodIP: (string) (len=15) "192.168.251.139",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.251.139"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660937,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.944: INFO: Pod "webserver-deployment-9b4f5bf69-79wvt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-79wvt",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58e286d5-140a-4693-9a03-fcae5938ded9",
      ResourceVersion: (string) (len=5) "40992",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660937,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21befdd-5b89-4153-aa07-a0647db8c1de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 62 65 66 64 64 2d 35  |d\":\"d21befdd-5|
              00000090  62 38 39 2d 34 31 35 33  2d 61 61 30 37 2d 61 30  |b89-4153-aa07-a0|
              000000a0  36 34 37 64 62 38 63 31  64 65 5c 22 7d 22 3a 7b  |647db8c1de\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 39 30 2e 38 33  5c 22 7d 22 3a 7b 22 2e  |68.90.83\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vn7hb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vn7hb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-25-91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.25.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.25.91"
        }
      },
      PodIP: (string) (len=13) "192.168.90.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.90.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660937,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.948: INFO: Pod "webserver-deployment-9b4f5bf69-brvns" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-brvns",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cbf6b02b-ee99-4d91-acd1-0c5ac9de420b",
      ResourceVersion: (string) (len=5) "41024",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660937,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21befdd-5b89-4153-aa07-a0647db8c1de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 62 65 66 64 64 2d 35  |d\":\"d21befdd-5|
              00000090  62 38 39 2d 34 31 35 33  2d 61 61 30 37 2d 61 30  |b89-4153-aa07-a0|
              000000a0  36 34 37 64 62 38 63 31  64 65 5c 22 7d 22 3a 7b  |647db8c1de\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 30 2e 31 39  30 5c 22 7d 22 3a 7b 22  |68.20.190\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-56k8f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-56k8f",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) (len=14) "192.168.20.190",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.20.190"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660937,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.949: INFO: Pod "webserver-deployment-9b4f5bf69-d5q2b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-d5q2b",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad1a7f42-d3f7-4316-84fd-f9ae99fb6d67",
      ResourceVersion: (string) (len=5) "41284",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21befdd-5b89-4153-aa07-a0647db8c1de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 62 65 66 64 64 2d 35  |d\":\"d21befdd-5|
              00000090  62 38 39 2d 34 31 35 33  2d 61 61 30 37 2d 61 30  |b89-4153-aa07-a0|
              000000a0  36 34 37 64 62 38 63 31  64 65 5c 22 7d 22 3a 7b  |647db8c1de\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 35 31 2e 31  34 32 5c 22 7d 22 3a 7b  |68.251.142\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4xr6x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4xr6x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.85.228"
        }
      },
      PodIP: (string) (len=15) "192.168.251.142",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.251.142"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.962: INFO: Pod "webserver-deployment-9b4f5bf69-dch75" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-dch75",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a4ce314-9fff-4fc8-a79d-b7d132180452",
      ResourceVersion: (string) (len=5) "41126",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21befdd-5b89-4153-aa07-a0647db8c1de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 62 65 66 64 64 2d 35  |d\":\"d21befdd-5|
              00000090  62 38 39 2d 34 31 35 33  2d 61 61 30 37 2d 61 30  |b89-4153-aa07-a0|
              000000a0  36 34 37 64 62 38 63 31  64 65 5c 22 7d 22 3a 7b  |647db8c1de\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660940,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7v8q6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7v8q6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.967: INFO: Pod "webserver-deployment-9b4f5bf69-hsmc2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-hsmc2",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac4663ca-68b9-481b-9ebc-99bb6eca716e",
      ResourceVersion: (string) (len=5) "41318",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21befdd-5b89-4153-aa07-a0647db8c1de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 62 65 66 64 64 2d 35  |d\":\"d21befdd-5|
              00000090  62 38 39 2d 34 31 35 33  2d 61 61 30 37 2d 61 30  |b89-4153-aa07-a0|
              000000a0  36 34 37 64 62 38 63 31  64 65 5c 22 7d 22 3a 7b  |647db8c1de\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 35 31 2e 31  34 39 5c 22 7d 22 3a 7b  |68.251.149\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x8ngw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x8ngw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.85.228"
        }
      },
      PodIP: (string) (len=15) "192.168.251.149",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.251.149"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.968: INFO: Pod "webserver-deployment-9b4f5bf69-j8lqc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-j8lqc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb7be581-702d-4b50-888a-1b1b685822bf",
      ResourceVersion: (string) (len=5) "41017",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660937,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21befdd-5b89-4153-aa07-a0647db8c1de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 62 65 66 64 64 2d 35  |d\":\"d21befdd-5|
              00000090  62 38 39 2d 34 31 35 33  2d 61 61 30 37 2d 61 30  |b89-4153-aa07-a0|
              000000a0  36 34 37 64 62 38 63 31  64 65 5c 22 7d 22 3a 7b  |647db8c1de\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 35 31 2e 31  34 35 5c 22 7d 22 3a 7b  |68.251.145\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k5vdk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k5vdk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.85.228"
        }
      },
      PodIP: (string) (len=15) "192.168.251.145",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.251.145"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660937,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.970: INFO: Pod "webserver-deployment-9b4f5bf69-jmz7f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jmz7f",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6dfba484-bca5-4c99-add2-a63e069fde29",
      ResourceVersion: (string) (len=5) "41390",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21befdd-5b89-4153-aa07-a0647db8c1de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 62 65 66 64 64 2d 35  |d\":\"d21befdd-5|
              00000090  62 38 39 2d 34 31 35 33  2d 61 61 30 37 2d 61 30  |b89-4153-aa07-a0|
              000000a0  36 34 37 64 62 38 63 31  64 65 5c 22 7d 22 3a 7b  |647db8c1de\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 39 30 2e 31 31  33 5c 22 7d 22 3a 7b 22  |68.90.113\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t5xnn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t5xnn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-25-91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.25.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.25.91"
        }
      },
      PodIP: (string) (len=14) "192.168.90.113",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.90.113"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.973: INFO: Pod "webserver-deployment-9b4f5bf69-vhs7b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vhs7b",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30a907ef-bc55-45e5-9063-aa78bf87d071",
      ResourceVersion: (string) (len=5) "41125",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21befdd-5b89-4153-aa07-a0647db8c1de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 62 65 66 64 64 2d 35  |d\":\"d21befdd-5|
              00000090  62 38 39 2d 34 31 35 33  2d 61 61 30 37 2d 61 30  |b89-4153-aa07-a0|
              000000a0  36 34 37 64 62 38 63 31  64 65 5c 22 7d 22 3a 7b  |647db8c1de\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660940,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wsrr7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wsrr7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.975: INFO: Pod "webserver-deployment-9b4f5bf69-vksqz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vksqz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "baff07f7-b224-4773-ac3d-6afe4e2f8c79",
      ResourceVersion: (string) (len=5) "41020",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660937,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21befdd-5b89-4153-aa07-a0647db8c1de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 62 65 66 64 64 2d 35  |d\":\"d21befdd-5|
              00000090  62 38 39 2d 34 31 35 33  2d 61 61 30 37 2d 61 30  |b89-4153-aa07-a0|
              000000a0  36 34 37 64 62 38 63 31  64 65 5c 22 7d 22 3a 7b  |647db8c1de\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 30 2e 31 34  39 5c 22 7d 22 3a 7b 22  |68.20.149\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jgfwc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jgfwc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660937,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) (len=14) "192.168.20.149",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.20.149"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660937,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.976: INFO: Pod "webserver-deployment-9b4f5bf69-vxhhg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vxhhg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33428054-cacf-404d-aa68-072acc4b3b86",
      ResourceVersion: (string) (len=5) "41379",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21befdd-5b89-4153-aa07-a0647db8c1de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 62 65 66 64 64 2d 35  |d\":\"d21befdd-5|
              00000090  62 38 39 2d 34 31 35 33  2d 61 61 30 37 2d 61 30  |b89-4153-aa07-a0|
              000000a0  36 34 37 64 62 38 63 31  64 65 5c 22 7d 22 3a 7b  |647db8c1de\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 39 30 2e 39 30  5c 22 7d 22 3a 7b 22 2e  |68.90.90\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sjzkd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sjzkd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-25-91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.25.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.25.91"
        }
      },
      PodIP: (string) (len=13) "192.168.90.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.90.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.977: INFO: Pod "webserver-deployment-9b4f5bf69-w2cbh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-w2cbh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c5120fad-5b32-40f3-b1a1-4ec58f52b918",
      ResourceVersion: (string) (len=5) "41386",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21befdd-5b89-4153-aa07-a0647db8c1de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 62 65 66 64 64 2d 35  |d\":\"d21befdd-5|
              00000090  62 38 39 2d 34 31 35 33  2d 61 61 30 37 2d 61 30  |b89-4153-aa07-a0|
              000000a0  36 34 37 64 62 38 63 31  64 65 5c 22 7d 22 3a 7b  |647db8c1de\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 39 30 2e 38 38  5c 22 7d 22 3a 7b 22 2e  |68.90.88\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gjrwv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gjrwv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-25-91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.25.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.25.91"
        }
      },
      PodIP: (string) (len=13) "192.168.90.88",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.90.88"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.980: INFO: Pod "webserver-deployment-9b4f5bf69-zx2nz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-zx2nz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fba479dc-b1c9-4d62-ba81-3fba6dde07cf",
      ResourceVersion: (string) (len=5) "41326",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21befdd-5b89-4153-aa07-a0647db8c1de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 62 65 66 64 64 2d 35  |d\":\"d21befdd-5|
              00000090  62 38 39 2d 34 31 35 33  2d 61 61 30 37 2d 61 30  |b89-4153-aa07-a0|
              000000a0  36 34 37 64 62 38 63 31  64 65 5c 22 7d 22 3a 7b  |647db8c1de\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 30 2e 31 37  35 5c 22 7d 22 3a 7b 22  |68.20.175\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5nl2g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5nl2g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-3-104",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660941,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854660939,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.104",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.104"
        }
      },
      PodIP: (string) (len=14) "192.168.20.175",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.20.175"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854660939,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 13:49:01.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4183" for this suite. @ 06/22/24 13:49:01.986
• [6.285 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 06/22/24 13:49:01.993
  Jun 22 13:49:01.993: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename statefulset @ 06/22/24 13:49:01.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:49:02.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:49:02.013
  STEP: Creating service test in namespace statefulset-134 @ 06/22/24 13:49:02.015
  STEP: Creating a new StatefulSet @ 06/22/24 13:49:02.021
  Jun 22 13:49:02.031: INFO: Found 0 stateful pods, waiting for 3
  E0622 13:49:02.282554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:03.283079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:04.283962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:05.284851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:06.285093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:07.285685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:08.286522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:09.286604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:10.287196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:11.287288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:49:12.032: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 22 13:49:12.032: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 22 13:49:12.032: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/22/24 13:49:12.042
  Jun 22 13:49:12.062: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/22/24 13:49:12.062
  E0622 13:49:12.287407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:13.287517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:14.287701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:15.287792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:16.287937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:17.288076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:18.288186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:19.288342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:20.288448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:21.288859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 06/22/24 13:49:22.072
  STEP: Performing a canary update @ 06/22/24 13:49:22.072
  Jun 22 13:49:22.092: INFO: Updating stateful set ss2
  Jun 22 13:49:22.101: INFO: Waiting for Pod statefulset-134/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0622 13:49:22.289213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:23.289429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:24.289613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:25.289642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:26.289683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:27.289750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:28.290694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:29.290788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:30.290967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:31.291078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 06/22/24 13:49:32.101
  Jun 22 13:49:32.146: INFO: Found 1 stateful pods, waiting for 3
  E0622 13:49:32.291888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:33.291998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:34.293755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:35.294099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:36.294209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:37.294256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:38.294720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:39.295666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:40.295756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:41.295855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:49:42.146: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 22 13:49:42.146: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 22 13:49:42.146: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 06/22/24 13:49:42.153
  Jun 22 13:49:42.174: INFO: Updating stateful set ss2
  Jun 22 13:49:42.181: INFO: Waiting for Pod statefulset-134/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0622 13:49:42.296578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:43.296971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:44.297082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:45.297166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:46.297312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:47.297378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:48.298174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:49.298692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:50.298772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:51.299091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:49:52.204: INFO: Updating stateful set ss2
  Jun 22 13:49:52.213: INFO: Waiting for StatefulSet statefulset-134/ss2 to complete update
  Jun 22 13:49:52.213: INFO: Waiting for Pod statefulset-134/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0622 13:49:52.299504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:53.299684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:54.299859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:55.300188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:56.301203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:57.301307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:58.301567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:49:59.301619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:00.302700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:01.303143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:50:02.213: INFO: Deleting all statefulset in ns statefulset-134
  Jun 22 13:50:02.216: INFO: Scaling statefulset ss2 to 0
  E0622 13:50:02.303989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:03.304353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:04.304583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:05.304683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:06.304799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:07.305758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:08.305839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:09.305935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:10.306022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:11.306740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:50:12.231: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 22 13:50:12.235: INFO: Deleting statefulset ss2
  Jun 22 13:50:12.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-134" for this suite. @ 06/22/24 13:50:12.252
• [70.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 06/22/24 13:50:12.26
  Jun 22 13:50:12.261: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:50:12.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:50:12.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:50:12.281
  STEP: Creating secret with name projected-secret-test-194d13f1-0d9a-40f3-a9ea-51b248454f19 @ 06/22/24 13:50:12.283
  STEP: Creating a pod to test consume secrets @ 06/22/24 13:50:12.289
  E0622 13:50:12.307590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:13.307753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:14.308754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:15.308891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:16.309288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:50:16.314
  Jun 22 13:50:16.319: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-projected-secrets-22d8c97e-02a9-455c-93fa-24251da4b707 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/22/24 13:50:16.33
  Jun 22 13:50:16.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8284" for this suite. @ 06/22/24 13:50:16.353
• [4.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 06/22/24 13:50:16.361
  Jun 22 13:50:16.361: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename svcaccounts @ 06/22/24 13:50:16.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:50:16.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:50:16.381
  Jun 22 13:50:16.402: INFO: created pod pod-service-account-defaultsa
  Jun 22 13:50:16.402: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Jun 22 13:50:16.409: INFO: created pod pod-service-account-mountsa
  Jun 22 13:50:16.409: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Jun 22 13:50:16.416: INFO: created pod pod-service-account-nomountsa
  Jun 22 13:50:16.416: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Jun 22 13:50:16.424: INFO: created pod pod-service-account-defaultsa-mountspec
  Jun 22 13:50:16.424: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Jun 22 13:50:16.432: INFO: created pod pod-service-account-mountsa-mountspec
  Jun 22 13:50:16.432: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Jun 22 13:50:16.438: INFO: created pod pod-service-account-nomountsa-mountspec
  Jun 22 13:50:16.438: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Jun 22 13:50:16.442: INFO: created pod pod-service-account-defaultsa-nomountspec
  Jun 22 13:50:16.442: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Jun 22 13:50:16.450: INFO: created pod pod-service-account-mountsa-nomountspec
  Jun 22 13:50:16.450: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Jun 22 13:50:16.457: INFO: created pod pod-service-account-nomountsa-nomountspec
  Jun 22 13:50:16.457: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Jun 22 13:50:16.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3096" for this suite. @ 06/22/24 13:50:16.464
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 06/22/24 13:50:16.478
  Jun 22 13:50:16.478: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename downward-api @ 06/22/24 13:50:16.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:50:16.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:50:16.502
  STEP: Creating a pod to test downward api env vars @ 06/22/24 13:50:16.505
  E0622 13:50:17.309642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:18.309733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:19.310309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:20.310401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:50:20.535
  Jun 22 13:50:20.538: INFO: Trying to get logs from node ip-172-31-25-91 pod downward-api-dfb80f58-cce2-457e-8ee2-ed0103ac7d88 container dapi-container: <nil>
  STEP: delete the pod @ 06/22/24 13:50:20.557
  Jun 22 13:50:20.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1015" for this suite. @ 06/22/24 13:50:20.58
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 06/22/24 13:50:20.588
  Jun 22 13:50:20.588: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename replication-controller @ 06/22/24 13:50:20.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:50:20.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:50:20.608
  Jun 22 13:50:20.611: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0622 13:50:21.310728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 06/22/24 13:50:21.624
  STEP: Checking rc "condition-test" has the desired failure condition set @ 06/22/24 13:50:21.631
  E0622 13:50:22.311116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 06/22/24 13:50:22.639
  Jun 22 13:50:22.649: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 06/22/24 13:50:22.649
  E0622 13:50:23.311942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:50:23.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3699" for this suite. @ 06/22/24 13:50:23.661
• [3.079 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 06/22/24 13:50:23.668
  Jun 22 13:50:23.668: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename dns @ 06/22/24 13:50:23.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:50:23.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:50:23.69
  STEP: Creating a test headless service @ 06/22/24 13:50:23.692
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5942.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5942.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5942.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5942.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5942.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5942.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5942.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5942.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5942.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5942.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5942.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5942.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 235.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.235_udp@PTR;check="$$(dig +tcp +noall +answer +search 235.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.235_tcp@PTR;sleep 1; done
   @ 06/22/24 13:50:23.717
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5942.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5942.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5942.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5942.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5942.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5942.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5942.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5942.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5942.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5942.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5942.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5942.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 235.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.235_udp@PTR;check="$$(dig +tcp +noall +answer +search 235.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.235_tcp@PTR;sleep 1; done
   @ 06/22/24 13:50:23.717
  STEP: creating a pod to probe DNS @ 06/22/24 13:50:23.717
  STEP: submitting the pod to kubernetes @ 06/22/24 13:50:23.717
  E0622 13:50:24.312855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:25.313840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/22/24 13:50:25.736
  STEP: looking for the results for each expected name from probers @ 06/22/24 13:50:25.74
  Jun 22 13:50:25.746: INFO: Unable to read wheezy_udp@dns-test-service.dns-5942.svc.cluster.local from pod dns-5942/dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a: the server could not find the requested resource (get pods dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a)
  Jun 22 13:50:25.750: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5942.svc.cluster.local from pod dns-5942/dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a: the server could not find the requested resource (get pods dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a)
  Jun 22 13:50:25.754: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5942.svc.cluster.local from pod dns-5942/dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a: the server could not find the requested resource (get pods dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a)
  Jun 22 13:50:25.757: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5942.svc.cluster.local from pod dns-5942/dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a: the server could not find the requested resource (get pods dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a)
  Jun 22 13:50:25.776: INFO: Unable to read jessie_udp@dns-test-service.dns-5942.svc.cluster.local from pod dns-5942/dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a: the server could not find the requested resource (get pods dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a)
  Jun 22 13:50:25.780: INFO: Unable to read jessie_tcp@dns-test-service.dns-5942.svc.cluster.local from pod dns-5942/dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a: the server could not find the requested resource (get pods dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a)
  Jun 22 13:50:25.784: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5942.svc.cluster.local from pod dns-5942/dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a: the server could not find the requested resource (get pods dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a)
  Jun 22 13:50:25.788: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5942.svc.cluster.local from pod dns-5942/dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a: the server could not find the requested resource (get pods dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a)
  Jun 22 13:50:25.803: INFO: Lookups using dns-5942/dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a failed for: [wheezy_udp@dns-test-service.dns-5942.svc.cluster.local wheezy_tcp@dns-test-service.dns-5942.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5942.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5942.svc.cluster.local jessie_udp@dns-test-service.dns-5942.svc.cluster.local jessie_tcp@dns-test-service.dns-5942.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5942.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5942.svc.cluster.local]

  Jun 22 13:50:25.809: INFO: Pod client logs for webserver: 
  Jun 22 13:50:25.817: INFO: Pod client logs for querier: 
  Jun 22 13:50:25.823: INFO: Pod client logs for jessie-querier: 
  E0622 13:50:26.314743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:27.314868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:28.314955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:29.315027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:30.316100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:50:30.806: INFO: DNS probes using dns-5942/dns-test-d4f6442e-2436-4d2e-92a6-6d61d0279b5a succeeded

  STEP: deleting the pod @ 06/22/24 13:50:30.806
  STEP: deleting the test service @ 06/22/24 13:50:30.888
  STEP: deleting the test headless service @ 06/22/24 13:50:30.909
  Jun 22 13:50:30.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5942" for this suite. @ 06/22/24 13:50:30.929
• [7.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 06/22/24 13:50:30.938
  Jun 22 13:50:30.938: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubelet-test @ 06/22/24 13:50:30.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:50:30.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:50:30.964
  E0622 13:50:31.316551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:32.316646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:50:32.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3300" for this suite. @ 06/22/24 13:50:32.999
• [2.070 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 06/22/24 13:50:33.008
  Jun 22 13:50:33.008: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename downward-api @ 06/22/24 13:50:33.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:50:33.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:50:33.028
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 13:50:33.031
  E0622 13:50:33.317108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:34.317305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:35.318041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:36.318139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:50:37.051
  Jun 22 13:50:37.054: INFO: Trying to get logs from node ip-172-31-85-228 pod downwardapi-volume-cfe049f2-7247-4c15-9e87-6bd635607d6c container client-container: <nil>
  STEP: delete the pod @ 06/22/24 13:50:37.066
  Jun 22 13:50:37.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9846" for this suite. @ 06/22/24 13:50:37.089
• [4.089 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 06/22/24 13:50:37.097
  Jun 22 13:50:37.097: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 13:50:37.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:50:37.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:50:37.121
  STEP: Setting up server cert @ 06/22/24 13:50:37.147
  E0622 13:50:37.319139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 13:50:37.391
  STEP: Deploying the webhook pod @ 06/22/24 13:50:37.399
  STEP: Wait for the deployment to be ready @ 06/22/24 13:50:37.412
  Jun 22 13:50:37.421: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0622 13:50:38.319275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:39.319365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/22/24 13:50:39.433
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 13:50:39.444
  E0622 13:50:40.320378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:50:40.444: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 06/22/24 13:50:40.453
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/22/24 13:50:40.467
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 06/22/24 13:50:40.472
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/22/24 13:50:40.485
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 06/22/24 13:50:40.497
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/22/24 13:50:40.503
  Jun 22 13:50:40.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4340" for this suite. @ 06/22/24 13:50:40.56
  STEP: Destroying namespace "webhook-markers-5854" for this suite. @ 06/22/24 13:50:40.567
• [3.476 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 06/22/24 13:50:40.573
  Jun 22 13:50:40.574: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename configmap @ 06/22/24 13:50:40.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:50:40.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:50:40.597
  STEP: Creating configMap with name configmap-test-volume-7f4c1f86-38e2-4eb2-b0c9-16f88b43a50c @ 06/22/24 13:50:40.599
  STEP: Creating a pod to test consume configMaps @ 06/22/24 13:50:40.605
  E0622 13:50:41.320450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:42.320486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:43.320614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:44.320705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:50:44.627
  Jun 22 13:50:44.632: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-configmaps-cc6470e8-167d-44d0-b188-4f60cdfb5e1c container agnhost-container: <nil>
  STEP: delete the pod @ 06/22/24 13:50:44.64
  Jun 22 13:50:44.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9464" for this suite. @ 06/22/24 13:50:44.663
• [4.097 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 06/22/24 13:50:44.671
  Jun 22 13:50:44.671: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl @ 06/22/24 13:50:44.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:50:44.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:50:44.693
  STEP: creating Agnhost RC @ 06/22/24 13:50:44.696
  Jun 22 13:50:44.696: INFO: namespace kubectl-778
  Jun 22 13:50:44.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-778 create -f -'
  Jun 22 13:50:44.778: INFO: stderr: ""
  Jun 22 13:50:44.778: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/22/24 13:50:44.778
  E0622 13:50:45.320968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:50:45.783: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 22 13:50:45.783: INFO: Found 1 / 1
  Jun 22 13:50:45.783: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun 22 13:50:45.786: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 22 13:50:45.786: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 22 13:50:45.786: INFO: wait on agnhost-primary startup in kubectl-778 
  Jun 22 13:50:45.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-778 logs agnhost-primary-54rvt agnhost-primary'
  Jun 22 13:50:45.843: INFO: stderr: ""
  Jun 22 13:50:45.843: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 06/22/24 13:50:45.843
  Jun 22 13:50:45.843: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-778 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Jun 22 13:50:45.901: INFO: stderr: ""
  Jun 22 13:50:45.901: INFO: stdout: "service/rm2 exposed\n"
  Jun 22 13:50:45.905: INFO: Service rm2 in namespace kubectl-778 found.
  E0622 13:50:46.321286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:47.321379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 06/22/24 13:50:47.913
  Jun 22 13:50:47.914: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-778 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Jun 22 13:50:47.971: INFO: stderr: ""
  Jun 22 13:50:47.971: INFO: stdout: "service/rm3 exposed\n"
  Jun 22 13:50:47.976: INFO: Service rm3 in namespace kubectl-778 found.
  E0622 13:50:48.321621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:49.321741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:50:49.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-778" for this suite. @ 06/22/24 13:50:49.989
• [5.324 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 06/22/24 13:50:49.996
  Jun 22 13:50:49.996: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename cronjob @ 06/22/24 13:50:49.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:50:50.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:50:50.019
  STEP: Creating a suspended cronjob @ 06/22/24 13:50:50.022
  STEP: Ensuring no jobs are scheduled @ 06/22/24 13:50:50.028
  E0622 13:50:50.322701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:51.322905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:52.323409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:53.324031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:54.324119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:55.325078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:56.325249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:57.325641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:58.326547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:50:59.326664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:00.327067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:01.327531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:02.327765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:03.327786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:04.328047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:05.328453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:06.328926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:07.329019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:08.329443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:09.329601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:10.329975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:11.330087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:12.330667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:13.330843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:14.331491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:15.332056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:16.332715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:17.333544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:18.334051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:19.334701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:20.335510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:21.335611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:22.335982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:23.336917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:24.337413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:25.337940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:26.338576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:27.338660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:28.339289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:29.339396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:30.340042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:31.340156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:32.340867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:33.340911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:34.341423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:35.342088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:36.343153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:37.343249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:38.343348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:39.343496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:40.344009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:41.344122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:42.345090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:43.345371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:44.345469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:45.345966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:46.346061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:47.346750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:48.346788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:49.347227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:50.348086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:51.348276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:52.348822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:53.349089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:54.350131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:55.351099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:56.352036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:57.352128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:58.352913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:51:59.353021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:00.353183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:01.353289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:02.353607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:03.354675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:04.355736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:05.356688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:06.357017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:07.357887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:08.357946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:09.358692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:10.359078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:11.359183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:12.359271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:13.359605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:14.360471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:15.361033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:16.361828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:17.361933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:18.362065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:19.362155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:20.363191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:21.364140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:22.364247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:23.364403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:24.365440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:25.365773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:26.366686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:27.366774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:28.367247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:29.367353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:30.368047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:31.368903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:32.369648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:33.369744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:34.370237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:35.370794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:36.371344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:37.371521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:38.371612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:39.371916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:40.372637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:41.372876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:42.372964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:43.373125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:44.373962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:45.374017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:46.374439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:47.374736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:48.375479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:49.375576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:50.376531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:51.377336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:52.377831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:53.378681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:54.379701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:55.380255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:56.381282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:57.381378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:58.381569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:52:59.381620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:00.381954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:01.382732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:02.382971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:03.383172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:04.383967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:05.384028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:06.384165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:07.384460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:08.384655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:09.384851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:10.385647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:11.385739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:12.386680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:13.386774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:14.387669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:15.388108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:16.388518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:17.388727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:18.389418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:19.389614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:20.390389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:21.390503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:22.390870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:23.391036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:24.392044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:25.393097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:26.393792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:27.393913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:28.394673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:29.394807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:30.395173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:31.395252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:32.396251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:33.396343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:34.397171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:35.397664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:36.398502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:37.398586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:38.399115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:39.399211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:40.400109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:41.401025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:42.401592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:43.401621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:44.402375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:45.402620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:46.402674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:47.402868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:48.403349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:49.403514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:50.403631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:51.403833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:52.403924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:53.404130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:54.404617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:55.405079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:56.405733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:57.405825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:58.406707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:53:59.406785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:00.406865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:01.407214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:02.407561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:03.407653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:04.408238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:05.408803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:06.409755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:07.409858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:08.410464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:09.410652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:10.411467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:11.411581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:12.411672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:13.412673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:14.413219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:15.413469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:16.413627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:17.413742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:18.414685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:19.414888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:20.415605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:21.416683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:22.417595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:23.418636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:24.419039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:25.419086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:26.419869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:27.420055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:28.420476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:29.421195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:30.421836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:31.421930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:32.422003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:33.422690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:34.423345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:35.423821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:36.424522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:37.424635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:38.424720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:39.424889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:40.425140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:41.425279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:42.425679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:43.425788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:44.426681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:45.427112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:46.427776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:47.427954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:48.428729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:49.428759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:50.429722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:51.429828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:52.430420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:53.430624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:54.430711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:55.431132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:56.431388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:57.431477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:58.432350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:54:59.433366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:00.434034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:01.434668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:02.435021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:03.434888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:04.435811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:05.436117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:06.436410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:07.436571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:08.437586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:09.437681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:10.438204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:11.438698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:12.439708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:13.439988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:14.440201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:15.440615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:16.441029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:17.441281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:18.441421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:19.441610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:20.442509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:21.442696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:22.443454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:23.444427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:24.444534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:25.445157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:26.445232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:27.446002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:28.446063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:29.446746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:30.447142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:31.447201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:32.448020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:33.448080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:34.448969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:35.449095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:36.450032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:37.450149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:38.450677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:39.450781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:40.451143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:41.451679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:42.451833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:43.452036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:44.452076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:45.452420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:46.452550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:47.452650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:48.452801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:49.452981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 06/22/24 13:55:50.037
  STEP: Removing cronjob @ 06/22/24 13:55:50.04
  Jun 22 13:55:50.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6740" for this suite. @ 06/22/24 13:55:50.052
• [300.063 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 06/22/24 13:55:50.059
  Jun 22 13:55:50.059: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename taint-single-pod @ 06/22/24 13:55:50.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:55:50.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:55:50.083
  Jun 22 13:55:50.085: INFO: Waiting up to 1m0s for all nodes to be ready
  E0622 13:55:50.454050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:51.454127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:52.454684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:53.454868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:54.455481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:55.455747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:56.456516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:57.456603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:58.457121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:55:59.457199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:00.457966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:01.458086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:02.458678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:03.458758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:04.459407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:05.460145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:06.460254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:07.460447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:08.461451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:09.461626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:10.462110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:11.462174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:12.463204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:13.463285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:14.463382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:15.463849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:16.463995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:17.464054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:18.464859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:19.464895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:20.465718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:21.465831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:22.466286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:23.466328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:24.466416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:25.466943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:26.467758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:27.468009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:28.468651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:29.468715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:30.469297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:31.469387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:32.470231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:33.470668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:34.470756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:35.471220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:36.471743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:37.472006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:38.472603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:39.472764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:40.473855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:41.474667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:42.475574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:43.475624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:44.475976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:45.476387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:46.476945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:47.477105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:48.477313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:49.477359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:56:50.087: INFO: Waiting for terminating namespaces to be deleted...
  Jun 22 13:56:50.092: INFO: Starting informer...
  STEP: Starting pod... @ 06/22/24 13:56:50.092
  Jun 22 13:56:50.310: INFO: Pod is running on ip-172-31-3-104. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/22/24 13:56:50.31
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/22/24 13:56:50.321
  STEP: Waiting short time to make sure Pod is queued for deletion @ 06/22/24 13:56:50.325
  Jun 22 13:56:50.325: INFO: Pod wasn't evicted. Proceeding
  Jun 22 13:56:50.325: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/22/24 13:56:50.335
  STEP: Waiting some time to make sure that toleration time passed. @ 06/22/24 13:56:50.341
  E0622 13:56:50.478303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:51.478411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:52.478618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:53.478765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:54.478819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:55.479203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:56.479309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:57.479409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:58.479491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:56:59.479580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:00.480131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:01.480265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:02.480357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:03.481440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:04.481608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:05.482029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:06.482707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:07.482776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:08.482949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:09.483041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:10.483363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:11.483454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:12.484275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:13.484372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:14.484560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:15.485197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:16.485298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:17.486152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:18.486863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:19.486945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:20.487157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:21.487497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:22.487744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:23.487955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:24.488060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:25.488128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:26.488243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:27.488507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:28.488672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:29.488769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:30.489094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:31.489206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:32.489402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:33.489562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:34.489616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:35.490119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:36.490697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:37.490888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:38.491631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:39.491723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:40.492154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:41.492358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:42.492556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:43.492741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:44.493016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:45.493551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:46.493630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:47.494682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:48.494859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:49.495034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:50.495162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:51.495280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:52.496166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:53.496822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:54.497013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:55.497081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:56.497253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:57.498292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:58.498387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:57:59.498484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:00.498672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:01.498769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:02.498962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:03.499121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:04.499299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:58:05.341: INFO: Pod wasn't evicted. Test successful
  Jun 22 13:58:05.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-8657" for this suite. @ 06/22/24 13:58:05.347
• [135.296 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 06/22/24 13:58:05.355
  Jun 22 13:58:05.355: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename job @ 06/22/24 13:58:05.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:58:05.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:58:05.376
  STEP: Creating a job @ 06/22/24 13:58:05.378
  STEP: Ensuring job reaches completions @ 06/22/24 13:58:05.385
  E0622 13:58:05.499534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:06.499620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:07.500008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:08.500546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:09.501638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:10.502186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:11.502743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:12.502822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:58:13.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5042" for this suite. @ 06/22/24 13:58:13.394
• [8.048 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 06/22/24 13:58:13.403
  Jun 22 13:58:13.403: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir @ 06/22/24 13:58:13.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:58:13.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:58:13.424
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/22/24 13:58:13.426
  E0622 13:58:13.503717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:14.503819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:58:15.446
  Jun 22 13:58:15.451: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-a11b2e3d-5a6a-414f-a50e-b8dee65bf490 container test-container: <nil>
  STEP: delete the pod @ 06/22/24 13:58:15.468
  Jun 22 13:58:15.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5216" for this suite. @ 06/22/24 13:58:15.491
• [2.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 06/22/24 13:58:15.5
  Jun 22 13:58:15.500: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl @ 06/22/24 13:58:15.501
  E0622 13:58:15.504108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:58:15.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:58:15.522
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/22/24 13:58:15.524
  Jun 22 13:58:15.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3375 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Jun 22 13:58:15.576: INFO: stderr: ""
  Jun 22 13:58:15.576: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/22/24 13:58:15.576
  Jun 22 13:58:15.580: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-3375 delete pods e2e-test-httpd-pod'
  E0622 13:58:16.504246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:58:17.308: INFO: stderr: ""
  Jun 22 13:58:17.308: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 22 13:58:17.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3375" for this suite. @ 06/22/24 13:58:17.312
• [1.819 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 06/22/24 13:58:17.32
  Jun 22 13:58:17.320: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename endpointslicemirroring @ 06/22/24 13:58:17.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:58:17.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:58:17.341
  STEP: mirroring a new custom Endpoint @ 06/22/24 13:58:17.354
  Jun 22 13:58:17.364: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0622 13:58:17.504841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:18.504956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 06/22/24 13:58:19.369
  Jun 22 13:58:19.379: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0622 13:58:19.505536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:20.505842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 06/22/24 13:58:21.384
  Jun 22 13:58:21.396: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0622 13:58:21.505922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:22.505982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:58:23.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8374" for this suite. @ 06/22/24 13:58:23.406
• [6.093 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 06/22/24 13:58:23.412
  Jun 22 13:58:23.412: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename security-context @ 06/22/24 13:58:23.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:58:23.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:58:23.431
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/22/24 13:58:23.433
  E0622 13:58:23.506514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:24.506612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:58:25.453
  Jun 22 13:58:25.457: INFO: Trying to get logs from node ip-172-31-3-104 pod security-context-a2e9fb97-2af9-4428-b194-8f206fcaf355 container test-container: <nil>
  STEP: delete the pod @ 06/22/24 13:58:25.463
  Jun 22 13:58:25.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9159" for this suite. @ 06/22/24 13:58:25.483
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 06/22/24 13:58:25.489
  Jun 22 13:58:25.489: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename configmap @ 06/22/24 13:58:25.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:58:25.506
  E0622 13:58:25.509422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:58:25.512
  STEP: Creating configMap with name configmap-test-volume-map-c6b15007-20d8-40b9-92c5-2f3f740e892a @ 06/22/24 13:58:25.515
  STEP: Creating a pod to test consume configMaps @ 06/22/24 13:58:25.519
  E0622 13:58:26.509658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:27.509765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:58:27.537
  Jun 22 13:58:27.541: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-configmaps-4d8326bd-cca4-4b5e-a363-25ccf862fa92 container agnhost-container: <nil>
  STEP: delete the pod @ 06/22/24 13:58:27.547
  Jun 22 13:58:27.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6240" for this suite. @ 06/22/24 13:58:27.662
• [2.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 06/22/24 13:58:27.669
  Jun 22 13:58:27.669: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename downward-api @ 06/22/24 13:58:27.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:58:27.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:58:27.689
  STEP: Creating a pod to test downward API volume plugin @ 06/22/24 13:58:27.692
  E0622 13:58:28.510683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:29.510784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:30.511050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:31.511004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:58:31.713
  Jun 22 13:58:31.716: INFO: Trying to get logs from node ip-172-31-3-104 pod downwardapi-volume-bf7be514-843b-4d08-b35d-f923f07f8958 container client-container: <nil>
  STEP: delete the pod @ 06/22/24 13:58:31.724
  Jun 22 13:58:31.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5687" for this suite. @ 06/22/24 13:58:31.745
• [4.084 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 06/22/24 13:58:31.753
  Jun 22 13:58:31.753: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 13:58:31.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:58:31.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:58:31.773
  STEP: Setting up server cert @ 06/22/24 13:58:31.797
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 13:58:32.177
  STEP: Deploying the webhook pod @ 06/22/24 13:58:32.186
  STEP: Wait for the deployment to be ready @ 06/22/24 13:58:32.198
  Jun 22 13:58:32.204: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0622 13:58:32.511110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:33.511185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/22/24 13:58:34.222
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 13:58:34.244
  E0622 13:58:34.511233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:58:35.244: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 06/22/24 13:58:35.253
  STEP: create a configmap that should be updated by the webhook @ 06/22/24 13:58:35.266
  Jun 22 13:58:35.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6020" for this suite. @ 06/22/24 13:58:35.325
  STEP: Destroying namespace "webhook-markers-7882" for this suite. @ 06/22/24 13:58:35.332
• [3.586 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 06/22/24 13:58:35.34
  Jun 22 13:58:35.340: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename projected @ 06/22/24 13:58:35.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:58:35.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:58:35.36
  STEP: Creating configMap with name projected-configmap-test-volume-map-633a6eaa-4702-4b9a-803a-d8d277d151a7 @ 06/22/24 13:58:35.362
  STEP: Creating a pod to test consume configMaps @ 06/22/24 13:58:35.366
  E0622 13:58:35.511714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:36.511862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:37.511974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:38.512421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:58:39.388
  Jun 22 13:58:39.392: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-projected-configmaps-4cd86bcd-d10c-424a-92d6-70854b6a14ef container agnhost-container: <nil>
  STEP: delete the pod @ 06/22/24 13:58:39.4
  Jun 22 13:58:39.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1192" for this suite. @ 06/22/24 13:58:39.421
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 06/22/24 13:58:39.429
  Jun 22 13:58:39.429: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename runtimeclass @ 06/22/24 13:58:39.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:58:39.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:58:39.451
  STEP: getting /apis @ 06/22/24 13:58:39.453
  STEP: getting /apis/node.k8s.io @ 06/22/24 13:58:39.457
  STEP: getting /apis/node.k8s.io/v1 @ 06/22/24 13:58:39.458
  STEP: creating @ 06/22/24 13:58:39.459
  STEP: watching @ 06/22/24 13:58:39.472
  Jun 22 13:58:39.472: INFO: starting watch
  STEP: getting @ 06/22/24 13:58:39.478
  STEP: listing @ 06/22/24 13:58:39.482
  STEP: patching @ 06/22/24 13:58:39.484
  STEP: updating @ 06/22/24 13:58:39.49
  Jun 22 13:58:39.496: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 06/22/24 13:58:39.496
  STEP: deleting a collection @ 06/22/24 13:58:39.507
  E0622 13:58:39.513093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:58:39.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8826" for this suite. @ 06/22/24 13:58:39.527
• [0.103 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 06/22/24 13:58:39.533
  Jun 22 13:58:39.533: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename job @ 06/22/24 13:58:39.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:58:39.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:58:39.554
  STEP: Creating a suspended job @ 06/22/24 13:58:39.56
  STEP: Patching the Job @ 06/22/24 13:58:39.566
  STEP: Watching for Job to be patched @ 06/22/24 13:58:39.582
  Jun 22 13:58:39.584: INFO: Event ADDED observed for Job e2e-kjp4n in namespace job-1578 with labels: map[e2e-job-label:e2e-kjp4n] and annotations: map[]
  Jun 22 13:58:39.584: INFO: Event MODIFIED observed for Job e2e-kjp4n in namespace job-1578 with labels: map[e2e-job-label:e2e-kjp4n] and annotations: map[]
  Jun 22 13:58:39.584: INFO: Event MODIFIED found for Job e2e-kjp4n in namespace job-1578 with labels: map[e2e-job-label:e2e-kjp4n e2e-kjp4n:patched] and annotations: map[]
  STEP: Updating the job @ 06/22/24 13:58:39.584
  STEP: Watching for Job to be updated @ 06/22/24 13:58:39.594
  Jun 22 13:58:39.595: INFO: Event MODIFIED found for Job e2e-kjp4n in namespace job-1578 with labels: map[e2e-job-label:e2e-kjp4n e2e-kjp4n:patched] and annotations: map[updated:true]
  Jun 22 13:58:39.595: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 06/22/24 13:58:39.595
  Jun 22 13:58:39.598: INFO: Job: e2e-kjp4n as labels: map[e2e-job-label:e2e-kjp4n e2e-kjp4n:patched]
  STEP: Waiting for job to complete @ 06/22/24 13:58:39.599
  E0622 13:58:40.514533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:41.514646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:42.515326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:43.515502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:44.515843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:45.516266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:46.516355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:47.517275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 06/22/24 13:58:47.604
  STEP: Watching for Job to be deleted @ 06/22/24 13:58:47.613
  Jun 22 13:58:47.614: INFO: Event MODIFIED observed for Job e2e-kjp4n in namespace job-1578 with labels: map[e2e-job-label:e2e-kjp4n e2e-kjp4n:patched] and annotations: map[updated:true]
  Jun 22 13:58:47.614: INFO: Event MODIFIED observed for Job e2e-kjp4n in namespace job-1578 with labels: map[e2e-job-label:e2e-kjp4n e2e-kjp4n:patched] and annotations: map[updated:true]
  Jun 22 13:58:47.614: INFO: Event MODIFIED observed for Job e2e-kjp4n in namespace job-1578 with labels: map[e2e-job-label:e2e-kjp4n e2e-kjp4n:patched] and annotations: map[updated:true]
  Jun 22 13:58:47.614: INFO: Event MODIFIED observed for Job e2e-kjp4n in namespace job-1578 with labels: map[e2e-job-label:e2e-kjp4n e2e-kjp4n:patched] and annotations: map[updated:true]
  Jun 22 13:58:47.615: INFO: Event MODIFIED observed for Job e2e-kjp4n in namespace job-1578 with labels: map[e2e-job-label:e2e-kjp4n e2e-kjp4n:patched] and annotations: map[updated:true]
  Jun 22 13:58:47.615: INFO: Event MODIFIED observed for Job e2e-kjp4n in namespace job-1578 with labels: map[e2e-job-label:e2e-kjp4n e2e-kjp4n:patched] and annotations: map[updated:true]
  Jun 22 13:58:47.615: INFO: Event MODIFIED observed for Job e2e-kjp4n in namespace job-1578 with labels: map[e2e-job-label:e2e-kjp4n e2e-kjp4n:patched] and annotations: map[updated:true]
  Jun 22 13:58:47.615: INFO: Event MODIFIED observed for Job e2e-kjp4n in namespace job-1578 with labels: map[e2e-job-label:e2e-kjp4n e2e-kjp4n:patched] and annotations: map[updated:true]
  Jun 22 13:58:47.615: INFO: Event MODIFIED observed for Job e2e-kjp4n in namespace job-1578 with labels: map[e2e-job-label:e2e-kjp4n e2e-kjp4n:patched] and annotations: map[updated:true]
  Jun 22 13:58:47.615: INFO: Event DELETED found for Job e2e-kjp4n in namespace job-1578 with labels: map[e2e-job-label:e2e-kjp4n e2e-kjp4n:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 06/22/24 13:58:47.615
  Jun 22 13:58:47.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1578" for this suite. @ 06/22/24 13:58:47.623
• [8.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 06/22/24 13:58:47.641
  Jun 22 13:58:47.641: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 13:58:47.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:58:47.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:58:47.663
  STEP: Setting up server cert @ 06/22/24 13:58:47.693
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 13:58:47.937
  STEP: Deploying the webhook pod @ 06/22/24 13:58:47.942
  STEP: Wait for the deployment to be ready @ 06/22/24 13:58:47.955
  Jun 22 13:58:47.964: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0622 13:58:48.518223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:49.518322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/22/24 13:58:49.976
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 13:58:49.988
  E0622 13:58:50.519063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:58:50.988: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/22/24 13:58:50.995
  STEP: create a pod @ 06/22/24 13:58:51.008
  E0622 13:58:51.519784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:52.519978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 06/22/24 13:58:53.025
  Jun 22 13:58:53.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=webhook-8547 attach --namespace=webhook-8547 to-be-attached-pod -i -c=container1'
  Jun 22 13:58:53.079: INFO: rc: 1
  Jun 22 13:58:53.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8547" for this suite. @ 06/22/24 13:58:53.131
  STEP: Destroying namespace "webhook-markers-5392" for this suite. @ 06/22/24 13:58:53.141
• [5.506 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 06/22/24 13:58:53.147
  Jun 22 13:58:53.147: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename var-expansion @ 06/22/24 13:58:53.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:58:53.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:58:53.169
  STEP: Creating a pod to test substitution in container's args @ 06/22/24 13:58:53.171
  E0622 13:58:53.520509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:54.520698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:55.521047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:56.521294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 13:58:57.195
  Jun 22 13:58:57.199: INFO: Trying to get logs from node ip-172-31-3-104 pod var-expansion-d08d443e-f782-4238-9d06-c4c2ce13bc1c container dapi-container: <nil>
  STEP: delete the pod @ 06/22/24 13:58:57.208
  Jun 22 13:58:57.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6028" for this suite. @ 06/22/24 13:58:57.231
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 06/22/24 13:58:57.238
  Jun 22 13:58:57.238: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename resourcequota @ 06/22/24 13:58:57.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:58:57.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:58:57.26
  STEP: Counting existing ResourceQuota @ 06/22/24 13:58:57.263
  E0622 13:58:57.522368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:58.522501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:58:59.522589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:00.523222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:01.523734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/22/24 13:59:02.268
  STEP: Ensuring resource quota status is calculated @ 06/22/24 13:59:02.273
  E0622 13:59:02.524113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:03.524224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 06/22/24 13:59:04.277
  STEP: Creating a NodePort Service @ 06/22/24 13:59:04.294
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 06/22/24 13:59:04.322
  STEP: Ensuring resource quota status captures service creation @ 06/22/24 13:59:04.345
  E0622 13:59:04.525150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:05.525555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 06/22/24 13:59:06.35
  STEP: Ensuring resource quota status released usage @ 06/22/24 13:59:06.387
  E0622 13:59:06.525597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:07.525807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:59:08.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7302" for this suite. @ 06/22/24 13:59:08.397
• [11.166 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 06/22/24 13:59:08.404
  Jun 22 13:59:08.404: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename resourcequota @ 06/22/24 13:59:08.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:59:08.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:59:08.428
  STEP: Discovering how many secrets are in namespace by default @ 06/22/24 13:59:08.43
  E0622 13:59:08.525858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:09.526805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:10.527555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:11.528159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:12.528222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 06/22/24 13:59:13.434
  E0622 13:59:13.528700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:14.529610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:15.529687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:16.530567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:17.530676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/22/24 13:59:18.438
  STEP: Ensuring resource quota status is calculated @ 06/22/24 13:59:18.445
  E0622 13:59:18.531662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:19.531740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 06/22/24 13:59:20.45
  STEP: Ensuring resource quota status captures secret creation @ 06/22/24 13:59:20.462
  E0622 13:59:20.531783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:21.531966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 06/22/24 13:59:22.467
  STEP: Ensuring resource quota status released usage @ 06/22/24 13:59:22.474
  E0622 13:59:22.532155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:23.532286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:59:24.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1194" for this suite. @ 06/22/24 13:59:24.483
• [16.086 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 06/22/24 13:59:24.49
  Jun 22 13:59:24.490: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/22/24 13:59:24.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:59:24.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:59:24.515
  STEP: Creating 50 configmaps @ 06/22/24 13:59:24.517
  E0622 13:59:24.532939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 06/22/24 13:59:24.839
  Jun 22 13:59:24.850: INFO: Pod name wrapped-volume-race-a5b2b954-f5a6-42d9-ad92-8b5963c00d6b: Found 0 pods out of 5
  E0622 13:59:25.533996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:26.534136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:27.534220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:28.534325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:29.534672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:59:29.857: INFO: Pod name wrapped-volume-race-a5b2b954-f5a6-42d9-ad92-8b5963c00d6b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/22/24 13:59:29.857
  STEP: Creating RC which spawns configmap-volume pods @ 06/22/24 13:59:29.88
  Jun 22 13:59:29.892: INFO: Pod name wrapped-volume-race-ef33d0f1-574f-4802-80af-e87d534f462e: Found 0 pods out of 5
  E0622 13:59:30.534966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:31.535080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:32.535995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:33.536104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:34.536204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:59:34.899: INFO: Pod name wrapped-volume-race-ef33d0f1-574f-4802-80af-e87d534f462e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/22/24 13:59:34.899
  STEP: Creating RC which spawns configmap-volume pods @ 06/22/24 13:59:34.92
  Jun 22 13:59:34.934: INFO: Pod name wrapped-volume-race-a1f90974-4e8a-4eed-ac87-3e124d5c051e: Found 0 pods out of 5
  E0622 13:59:35.536902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:36.537013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:37.537102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:38.537189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:39.537312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:59:39.941: INFO: Pod name wrapped-volume-race-a1f90974-4e8a-4eed-ac87-3e124d5c051e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/22/24 13:59:39.941
  STEP: deleting ReplicationController wrapped-volume-race-a1f90974-4e8a-4eed-ac87-3e124d5c051e in namespace emptydir-wrapper-1850, will wait for the garbage collector to delete the pods @ 06/22/24 13:59:39.959
  Jun 22 13:59:40.022: INFO: Deleting ReplicationController wrapped-volume-race-a1f90974-4e8a-4eed-ac87-3e124d5c051e took: 8.151482ms
  Jun 22 13:59:40.122: INFO: Terminating ReplicationController wrapped-volume-race-a1f90974-4e8a-4eed-ac87-3e124d5c051e pods took: 100.225804ms
  E0622 13:59:40.538345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:41.539109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-ef33d0f1-574f-4802-80af-e87d534f462e in namespace emptydir-wrapper-1850, will wait for the garbage collector to delete the pods @ 06/22/24 13:59:41.822
  Jun 22 13:59:41.883: INFO: Deleting ReplicationController wrapped-volume-race-ef33d0f1-574f-4802-80af-e87d534f462e took: 7.128434ms
  Jun 22 13:59:41.984: INFO: Terminating ReplicationController wrapped-volume-race-ef33d0f1-574f-4802-80af-e87d534f462e pods took: 100.847642ms
  E0622 13:59:42.539472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:43.540515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-a5b2b954-f5a6-42d9-ad92-8b5963c00d6b in namespace emptydir-wrapper-1850, will wait for the garbage collector to delete the pods @ 06/22/24 13:59:43.584
  Jun 22 13:59:43.647: INFO: Deleting ReplicationController wrapped-volume-race-a5b2b954-f5a6-42d9-ad92-8b5963c00d6b took: 7.739445ms
  Jun 22 13:59:43.747: INFO: Terminating ReplicationController wrapped-volume-race-a5b2b954-f5a6-42d9-ad92-8b5963c00d6b pods took: 100.592303ms
  E0622 13:59:44.541190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 06/22/24 13:59:45.049
  Jun 22 13:59:45.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1850" for this suite. @ 06/22/24 13:59:45.373
• [20.889 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 06/22/24 13:59:45.38
  Jun 22 13:59:45.380: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename emptydir @ 06/22/24 13:59:45.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:59:45.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:59:45.401
  STEP: Creating Pod @ 06/22/24 13:59:45.403
  E0622 13:59:45.541562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:46.541764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 06/22/24 13:59:47.42
  Jun 22 13:59:47.420: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7542 PodName:pod-sharedvolume-1bfcb854-47f7-4187-92c5-e49bfcd4926f ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 22 13:59:47.420: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  Jun 22 13:59:47.420: INFO: ExecWithOptions: Clientset creation
  Jun 22 13:59:47.420: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-7542/pods/pod-sharedvolume-1bfcb854-47f7-4187-92c5-e49bfcd4926f/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Jun 22 13:59:47.475: INFO: Exec stderr: ""
  Jun 22 13:59:47.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7542" for this suite. @ 06/22/24 13:59:47.48
• [2.109 seconds]
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 06/22/24 13:59:47.489
  Jun 22 13:59:47.489: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pods @ 06/22/24 13:59:47.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:59:47.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:59:47.509
  STEP: creating the pod @ 06/22/24 13:59:47.512
  STEP: submitting the pod to kubernetes @ 06/22/24 13:59:47.512
  E0622 13:59:47.541855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:48.542695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 06/22/24 13:59:49.534
  STEP: updating the pod @ 06/22/24 13:59:49.538
  E0622 13:59:49.542817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:59:50.051: INFO: Successfully updated pod "pod-update-4ab0d855-8249-45d4-b06b-f5daf45a3627"
  STEP: verifying the updated pod is in kubernetes @ 06/22/24 13:59:50.055
  Jun 22 13:59:50.058: INFO: Pod update OK
  Jun 22 13:59:50.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7597" for this suite. @ 06/22/24 13:59:50.062
• [2.580 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 06/22/24 13:59:50.069
  Jun 22 13:59:50.069: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/22/24 13:59:50.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:59:50.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:59:50.091
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 06/22/24 13:59:50.093
  Jun 22 13:59:50.093: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  E0622 13:59:50.542970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:59:51.416: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  E0622 13:59:51.543915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:52.544053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:53.545088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:54.545431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:55.545523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:59:56.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8339" for this suite. @ 06/22/24 13:59:56.47
• [6.410 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 06/22/24 13:59:56.479
  Jun 22 13:59:56.479: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename pods @ 06/22/24 13:59:56.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:59:56.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:59:56.5
  Jun 22 13:59:56.502: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: creating the pod @ 06/22/24 13:59:56.502
  STEP: submitting the pod to kubernetes @ 06/22/24 13:59:56.502
  E0622 13:59:56.546028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 13:59:57.546133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:59:58.535: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1832" for this suite. @ 06/22/24 13:59:58.539
  E0622 13:59:58.546841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.069 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 06/22/24 13:59:58.548
  Jun 22 13:59:58.548: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename kubectl @ 06/22/24 13:59:58.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:59:58.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:59:58.57
  STEP: creating Agnhost RC @ 06/22/24 13:59:58.572
  Jun 22 13:59:58.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-2538 create -f -'
  Jun 22 13:59:58.657: INFO: stderr: ""
  Jun 22 13:59:58.657: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/22/24 13:59:58.657
  E0622 13:59:59.547150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 13:59:59.663: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 22 13:59:59.663: INFO: Found 1 / 1
  Jun 22 13:59:59.663: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 06/22/24 13:59:59.663
  Jun 22 13:59:59.667: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 22 13:59:59.667: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 22 13:59:59.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=kubectl-2538 patch pod agnhost-primary-fpn5j -p {"metadata":{"annotations":{"x":"y"}}}'
  Jun 22 13:59:59.719: INFO: stderr: ""
  Jun 22 13:59:59.720: INFO: stdout: "pod/agnhost-primary-fpn5j patched\n"
  STEP: checking annotations @ 06/22/24 13:59:59.72
  Jun 22 13:59:59.724: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 22 13:59:59.724: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 22 13:59:59.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2538" for this suite. @ 06/22/24 13:59:59.728
• [1.186 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 06/22/24 13:59:59.734
  Jun 22 13:59:59.734: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename chunking @ 06/22/24 13:59:59.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 13:59:59.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 13:59:59.755
  STEP: creating a large number of resources @ 06/22/24 13:59:59.757
  E0622 14:00:00.547829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:01.548828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:02.549570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:03.550543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:04.551108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:05.552080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:06.552908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:07.553927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:08.553969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:09.554274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:10.554432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:11.555136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:12.555852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:13.556705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:14.556802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:15.557592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:16.557833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 06/22/24 14:00:17.44
  Jun 22 14:00:17.490: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun 22 14:00:17.539: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  E0622 14:00:17.557918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:00:17.590: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun 22 14:00:17.639: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun 22 14:00:17.690: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun 22 14:00:17.739: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun 22 14:00:17.789: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun 22 14:00:17.839: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun 22 14:00:17.889: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun 22 14:00:17.939: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun 22 14:00:17.990: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun 22 14:00:18.039: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun 22 14:00:18.089: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun 22 14:00:18.139: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun 22 14:00:18.190: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun 22 14:00:18.239: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun 22 14:00:18.290: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun 22 14:00:18.340: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun 22 14:00:18.389: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun 22 14:00:18.440: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun 22 14:00:18.490: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun 22 14:00:18.539: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  E0622 14:00:18.558483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:00:18.590: INFO: Retrieved 17/17 results with rv 46447 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun 22 14:00:18.640: INFO: Retrieved 9/17 results with rv 46447 and continue 
  Jun 22 14:00:18.689: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun 22 14:00:18.740: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun 22 14:00:18.790: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun 22 14:00:18.839: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun 22 14:00:18.890: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun 22 14:00:18.939: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun 22 14:00:18.990: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun 22 14:00:19.040: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun 22 14:00:19.090: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun 22 14:00:19.139: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun 22 14:00:19.190: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun 22 14:00:19.239: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun 22 14:00:19.290: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun 22 14:00:19.339: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun 22 14:00:19.390: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun 22 14:00:19.439: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun 22 14:00:19.490: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun 22 14:00:19.539: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  E0622 14:00:19.558901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:00:19.590: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun 22 14:00:19.639: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun 22 14:00:19.690: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun 22 14:00:19.739: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun 22 14:00:19.790: INFO: Retrieved 17/17 results with rv 46449 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NDksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun 22 14:00:19.839: INFO: Retrieved 9/17 results with rv 46449 and continue 
  Jun 22 14:00:19.890: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun 22 14:00:19.939: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun 22 14:00:19.990: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun 22 14:00:20.039: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun 22 14:00:20.090: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun 22 14:00:20.140: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun 22 14:00:20.189: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun 22 14:00:20.240: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun 22 14:00:20.289: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun 22 14:00:20.339: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun 22 14:00:20.390: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun 22 14:00:20.439: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun 22 14:00:20.489: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun 22 14:00:20.540: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  E0622 14:00:20.559607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:00:20.590: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun 22 14:00:20.639: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun 22 14:00:20.689: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun 22 14:00:20.740: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun 22 14:00:20.789: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun 22 14:00:20.840: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun 22 14:00:20.888: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun 22 14:00:20.940: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun 22 14:00:20.989: INFO: Retrieved 17/17 results with rv 46451 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY0NTEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun 22 14:00:21.039: INFO: Retrieved 9/17 results with rv 46451 and continue 
  STEP: retrieving those results all at once @ 06/22/24 14:00:21.039
  Jun 22 14:00:21.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-4863" for this suite. @ 06/22/24 14:00:21.138
• [21.459 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 06/22/24 14:00:21.193
  Jun 22 14:00:21.193: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename statefulset @ 06/22/24 14:00:21.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 14:00:21.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 14:00:21.216
  STEP: Creating service test in namespace statefulset-4450 @ 06/22/24 14:00:21.218
  STEP: Creating stateful set ss in namespace statefulset-4450 @ 06/22/24 14:00:21.223
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4450 @ 06/22/24 14:00:21.233
  Jun 22 14:00:21.237: INFO: Found 0 stateful pods, waiting for 1
  E0622 14:00:21.560100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:22.560195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:23.561258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:24.561607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:25.562627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:26.563153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:27.563496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:28.563744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:29.564481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:30.565136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:00:31.239: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 06/22/24 14:00:31.239
  Jun 22 14:00:31.244: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-4450 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 22 14:00:31.362: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 22 14:00:31.362: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 22 14:00:31.362: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 22 14:00:31.366: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0622 14:00:31.566116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:32.566696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:33.566797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:34.566885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:35.567260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:36.567347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:37.567436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:38.567618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:39.567800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:40.568204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:00:41.367: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 22 14:00:41.367: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 22 14:00:41.384: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Jun 22 14:00:41.384: INFO: ss-0  ip-172-31-85-228  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:22 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:21 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:21 +0000 UTC  }]
  Jun 22 14:00:41.384: INFO: 
  Jun 22 14:00:41.384: INFO: StatefulSet ss has not reached scale 3, at 1
  E0622 14:00:41.568265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:00:42.388: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996336876s
  E0622 14:00:42.568935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:00:43.393: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.992152924s
  E0622 14:00:43.569347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:00:44.398: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.987450269s
  E0622 14:00:44.569615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:00:45.403: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.981952367s
  E0622 14:00:45.569980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:00:46.408: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.976861552s
  E0622 14:00:46.570043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:00:47.413: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.971790955s
  E0622 14:00:47.571014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:00:48.418: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.966068637s
  E0622 14:00:48.571051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:00:49.424: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.96164993s
  E0622 14:00:49.571084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:00:50.429: INFO: Verifying statefulset ss doesn't scale past 3 for another 955.746644ms
  E0622 14:00:50.571970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4450 @ 06/22/24 14:00:51.429
  Jun 22 14:00:51.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-4450 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 22 14:00:51.547: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 22 14:00:51.547: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 22 14:00:51.547: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 22 14:00:51.547: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-4450 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0622 14:00:51.572859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:00:51.689: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun 22 14:00:51.689: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 22 14:00:51.689: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 22 14:00:51.689: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-4450 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 22 14:00:51.841: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun 22 14:00:51.841: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 22 14:00:51.841: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 22 14:00:51.846: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 22 14:00:51.846: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 22 14:00:51.846: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 06/22/24 14:00:51.846
  Jun 22 14:00:51.850: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-4450 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 22 14:00:51.967: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 22 14:00:51.967: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 22 14:00:51.967: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 22 14:00:51.967: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-4450 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 22 14:00:52.066: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 22 14:00:52.066: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 22 14:00:52.066: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 22 14:00:52.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-4450 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 22 14:00:52.162: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 22 14:00:52.162: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 22 14:00:52.162: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 22 14:00:52.162: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 22 14:00:52.166: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0622 14:00:52.573411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:53.573537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:54.573627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:55.574265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:56.574708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:57.575620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:58.576386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:00:59.576611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:00.576698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:01.576871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:01:02.173: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 22 14:01:02.173: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun 22 14:01:02.173: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun 22 14:01:02.187: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Jun 22 14:01:02.187: INFO: ss-0  ip-172-31-85-228  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:22 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:21 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:21 +0000 UTC  }]
  Jun 22 14:01:02.187: INFO: ss-1  ip-172-31-3-104   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:42 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:41 +0000 UTC  }]
  Jun 22 14:01:02.187: INFO: ss-2  ip-172-31-25-91   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:42 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:41 +0000 UTC  }]
  Jun 22 14:01:02.187: INFO: 
  Jun 22 14:01:02.187: INFO: StatefulSet ss has not reached scale 0, at 3
  E0622 14:01:02.577932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:01:03.193: INFO: POD   NODE              PHASE      GRACE  CONDITIONS
  Jun 22 14:01:03.193: INFO: ss-0  ip-172-31-85-228  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:01:02 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:21 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:52 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:52 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-22 14:00:21 +0000 UTC  }]
  Jun 22 14:01:03.193: INFO: 
  Jun 22 14:01:03.193: INFO: StatefulSet ss has not reached scale 0, at 1
  E0622 14:01:03.578037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:01:04.201: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.987369598s
  E0622 14:01:04.578218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:01:05.206: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.98151178s
  E0622 14:01:05.579069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:01:06.211: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.977615827s
  E0622 14:01:06.579672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:01:07.215: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.972752195s
  E0622 14:01:07.580061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:01:08.219: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.968488566s
  E0622 14:01:08.580100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:01:09.224: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.964431857s
  E0622 14:01:09.580722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:01:10.229: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.959830916s
  E0622 14:01:10.581677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:01:11.234: INFO: Verifying statefulset ss doesn't scale past 0 for another 954.977916ms
  E0622 14:01:11.582624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4450 @ 06/22/24 14:01:12.234
  Jun 22 14:01:12.239: INFO: Scaling statefulset ss to 0
  Jun 22 14:01:12.246: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 22 14:01:12.250: INFO: Deleting all statefulset in ns statefulset-4450
  Jun 22 14:01:12.253: INFO: Scaling statefulset ss to 0
  Jun 22 14:01:12.260: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 22 14:01:12.264: INFO: Deleting statefulset ss
  Jun 22 14:01:12.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4450" for this suite. @ 06/22/24 14:01:12.279
• [51.093 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 06/22/24 14:01:12.286
  Jun 22 14:01:12.286: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename configmap @ 06/22/24 14:01:12.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 14:01:12.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 14:01:12.308
  STEP: Creating configMap with name configmap-test-volume-929e0b91-a953-49cd-a5da-79c61ac059fe @ 06/22/24 14:01:12.311
  STEP: Creating a pod to test consume configMaps @ 06/22/24 14:01:12.315
  E0622 14:01:12.582913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:13.582987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:14.584049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:15.584304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/22/24 14:01:16.337
  Jun 22 14:01:16.342: INFO: Trying to get logs from node ip-172-31-3-104 pod pod-configmaps-509b866a-4a09-4bd0-8b79-06ae3c326e23 container configmap-volume-test: <nil>
  STEP: delete the pod @ 06/22/24 14:01:16.349
  Jun 22 14:01:16.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9744" for this suite. @ 06/22/24 14:01:16.372
• [4.092 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 06/22/24 14:01:16.379
  Jun 22 14:01:16.379: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename configmap @ 06/22/24 14:01:16.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 14:01:16.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 14:01:16.399
  STEP: Creating configMap with name configmap-test-upd-c7f1bb9d-8034-46c0-b20d-261c8f55f515 @ 06/22/24 14:01:16.404
  STEP: Creating the pod @ 06/22/24 14:01:16.41
  E0622 14:01:16.584880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:17.585053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 06/22/24 14:01:18.429
  STEP: Waiting for pod with binary data @ 06/22/24 14:01:18.437
  Jun 22 14:01:18.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3165" for this suite. @ 06/22/24 14:01:18.447
• [2.075 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 06/22/24 14:01:18.454
  Jun 22 14:01:18.454: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename deployment @ 06/22/24 14:01:18.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 14:01:18.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 14:01:18.476
  STEP: creating a Deployment @ 06/22/24 14:01:18.482
  Jun 22 14:01:18.482: INFO: Creating simple deployment test-deployment-v4h6j
  Jun 22 14:01:18.495: INFO: deployment "test-deployment-v4h6j" doesn't have the required revision set
  E0622 14:01:18.585854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:19.586773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 06/22/24 14:01:20.511
  Jun 22 14:01:20.514: INFO: Deployment test-deployment-v4h6j has Conditions: [{Available True 2024-06-22 14:01:19 +0000 UTC 2024-06-22 14:01:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-06-22 14:01:19 +0000 UTC 2024-06-22 14:01:18 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v4h6j-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 06/22/24 14:01:20.515
  Jun 22 14:01:20.524: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 14, 1, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 14, 1, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 22, 14, 1, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 22, 14, 1, 18, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-v4h6j-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 06/22/24 14:01:20.524
  Jun 22 14:01:20.526: INFO: Observed &Deployment event: ADDED
  Jun 22 14:01:20.526: INFO: Observed Deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-22 14:01:18 +0000 UTC 2024-06-22 14:01:18 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-v4h6j-5d576bd769"}
  Jun 22 14:01:20.526: INFO: Observed &Deployment event: MODIFIED
  Jun 22 14:01:20.526: INFO: Observed Deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-22 14:01:18 +0000 UTC 2024-06-22 14:01:18 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-v4h6j-5d576bd769"}
  Jun 22 14:01:20.526: INFO: Observed Deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-22 14:01:18 +0000 UTC 2024-06-22 14:01:18 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 22 14:01:20.526: INFO: Observed &Deployment event: MODIFIED
  Jun 22 14:01:20.526: INFO: Observed Deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-22 14:01:18 +0000 UTC 2024-06-22 14:01:18 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 22 14:01:20.526: INFO: Observed Deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-22 14:01:18 +0000 UTC 2024-06-22 14:01:18 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-v4h6j-5d576bd769" is progressing.}
  Jun 22 14:01:20.526: INFO: Observed &Deployment event: MODIFIED
  Jun 22 14:01:20.526: INFO: Observed Deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-22 14:01:19 +0000 UTC 2024-06-22 14:01:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 22 14:01:20.526: INFO: Observed Deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-22 14:01:19 +0000 UTC 2024-06-22 14:01:18 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v4h6j-5d576bd769" has successfully progressed.}
  Jun 22 14:01:20.526: INFO: Observed &Deployment event: MODIFIED
  Jun 22 14:01:20.526: INFO: Observed Deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-22 14:01:19 +0000 UTC 2024-06-22 14:01:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 22 14:01:20.526: INFO: Observed Deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-22 14:01:19 +0000 UTC 2024-06-22 14:01:18 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v4h6j-5d576bd769" has successfully progressed.}
  Jun 22 14:01:20.526: INFO: Found Deployment test-deployment-v4h6j in namespace deployment-9601 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 22 14:01:20.526: INFO: Deployment test-deployment-v4h6j has an updated status
  STEP: patching the Statefulset Status @ 06/22/24 14:01:20.526
  Jun 22 14:01:20.526: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun 22 14:01:20.533: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 06/22/24 14:01:20.533
  Jun 22 14:01:20.534: INFO: Observed &Deployment event: ADDED
  Jun 22 14:01:20.534: INFO: Observed deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-22 14:01:18 +0000 UTC 2024-06-22 14:01:18 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-v4h6j-5d576bd769"}
  Jun 22 14:01:20.534: INFO: Observed &Deployment event: MODIFIED
  Jun 22 14:01:20.534: INFO: Observed deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-22 14:01:18 +0000 UTC 2024-06-22 14:01:18 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-v4h6j-5d576bd769"}
  Jun 22 14:01:20.534: INFO: Observed deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-22 14:01:18 +0000 UTC 2024-06-22 14:01:18 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 22 14:01:20.535: INFO: Observed &Deployment event: MODIFIED
  Jun 22 14:01:20.535: INFO: Observed deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-22 14:01:18 +0000 UTC 2024-06-22 14:01:18 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 22 14:01:20.535: INFO: Observed deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-22 14:01:18 +0000 UTC 2024-06-22 14:01:18 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-v4h6j-5d576bd769" is progressing.}
  Jun 22 14:01:20.535: INFO: Observed &Deployment event: MODIFIED
  Jun 22 14:01:20.535: INFO: Observed deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-22 14:01:19 +0000 UTC 2024-06-22 14:01:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 22 14:01:20.535: INFO: Observed deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-22 14:01:19 +0000 UTC 2024-06-22 14:01:18 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v4h6j-5d576bd769" has successfully progressed.}
  Jun 22 14:01:20.535: INFO: Observed &Deployment event: MODIFIED
  Jun 22 14:01:20.535: INFO: Observed deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-22 14:01:19 +0000 UTC 2024-06-22 14:01:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 22 14:01:20.535: INFO: Observed deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-22 14:01:19 +0000 UTC 2024-06-22 14:01:18 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v4h6j-5d576bd769" has successfully progressed.}
  Jun 22 14:01:20.535: INFO: Observed deployment test-deployment-v4h6j in namespace deployment-9601 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 22 14:01:20.535: INFO: Observed &Deployment event: MODIFIED
  Jun 22 14:01:20.535: INFO: Found deployment test-deployment-v4h6j in namespace deployment-9601 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Jun 22 14:01:20.535: INFO: Deployment test-deployment-v4h6j has a patched status
  Jun 22 14:01:20.541: INFO: Deployment "test-deployment-v4h6j":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-v4h6j",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9601",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "232f0bff-e3a8-437b-abcb-8305b4a0b675",
      ResourceVersion: (string) (len=5) "47277",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854661678,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854661678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854661680,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854661680,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854661680,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854661680,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-v4h6j-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 22 14:01:20.546: INFO: New ReplicaSet "test-deployment-v4h6j-5d576bd769" of Deployment "test-deployment-v4h6j":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-v4h6j-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9601",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df796efe-4e2b-4a67-89b5-6010444af1f7",
      ResourceVersion: (string) (len=5) "47271",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854661678,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-v4h6j",
          UID: (types.UID) (len=36) "232f0bff-e3a8-437b-abcb-8305b4a0b675",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854661678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 32 33 32  |k:{\"uid\":\"232|
              00000120  66 30 62 66 66 2d 65 33  61 38 2d 34 33 37 62 2d  |f0bff-e3a8-437b-|
              00000130  61 62 63 62 2d 38 33 30  35 62 34 61 30 62 36 37  |abcb-8305b4a0b67|
              00000140  35 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |5\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854661679,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 22 14:01:20.554: INFO: Pod "test-deployment-v4h6j-5d576bd769-xkz99" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-v4h6j-5d576bd769-xkz99",
      GenerateName: (string) (len=33) "test-deployment-v4h6j-5d576bd769-",
      Namespace: (string) (len=15) "deployment-9601",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e1e4101d-e61f-4a7a-b0ec-f835f09eea13",
      ResourceVersion: (string) (len=5) "47270",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854661678,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-v4h6j-5d576bd769",
          UID: (types.UID) (len=36) "df796efe-4e2b-4a67-89b5-6010444af1f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854661678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 64 66 37 39 36 65 66  65 2d 34 65 32 62 2d 34  |"df796efe-4e2b-4|
              000000a0  61 36 37 2d 38 39 62 35  2d 36 30 31 30 34 34 34  |a67-89b5-6010444|
              000000b0  61 66 31 66 37 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |af1f7\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854661679,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 35  31 2e 31 38 30 5c 22 7d  |2.168.251.180\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bnhpm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bnhpm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-85-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854661679,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854661678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854661679,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854661679,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854661678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.85.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.85.228"
        }
      },
      PodIP: (string) (len=15) "192.168.251.180",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.251.180"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854661678,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854661679,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://afe90b81b79b9177c38fac2bc82e574f3a40326aa579c7872414c2fe1340860b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 22 14:01:20.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9601" for this suite. @ 06/22/24 14:01:20.56
• [2.113 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 06/22/24 14:01:20.567
  Jun 22 14:01:20.567: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 14:01:20.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 14:01:20.585
  E0622 14:01:20.586749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 14:01:20.587
  STEP: Setting up server cert @ 06/22/24 14:01:20.611
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 14:01:20.902
  STEP: Deploying the webhook pod @ 06/22/24 14:01:20.912
  STEP: Wait for the deployment to be ready @ 06/22/24 14:01:20.924
  Jun 22 14:01:20.931: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0622 14:01:21.587761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:22.587888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/22/24 14:01:22.944
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 14:01:22.955
  E0622 14:01:23.588003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:01:23.955: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 22 14:01:23.963: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6319-crds.webhook.example.com via the AdmissionRegistration API @ 06/22/24 14:01:24.473
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/22/24 14:01:24.487
  E0622 14:01:24.588555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:25.589123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:26.590033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:01:27.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7464" for this suite. @ 06/22/24 14:01:27.077
  STEP: Destroying namespace "webhook-markers-1562" for this suite. @ 06/22/24 14:01:27.084
• [6.526 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 06/22/24 14:01:27.093
  Jun 22 14:01:27.093: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename sysctl @ 06/22/24 14:01:27.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 14:01:27.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 14:01:27.111
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 06/22/24 14:01:27.113
  STEP: Watching for error events or started pod @ 06/22/24 14:01:27.121
  E0622 14:01:27.590695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:28.590816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 06/22/24 14:01:29.125
  E0622 14:01:29.591772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:30.592678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 06/22/24 14:01:31.137
  STEP: Getting logs from the pod @ 06/22/24 14:01:31.137
  STEP: Checking that the sysctl is actually updated @ 06/22/24 14:01:31.144
  Jun 22 14:01:31.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5416" for this suite. @ 06/22/24 14:01:31.148
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 06/22/24 14:01:31.155
  Jun 22 14:01:31.155: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename limitrange @ 06/22/24 14:01:31.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 14:01:31.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 14:01:31.177
  STEP: Creating a LimitRange @ 06/22/24 14:01:31.179
  STEP: Setting up watch @ 06/22/24 14:01:31.179
  STEP: Submitting a LimitRange @ 06/22/24 14:01:31.282
  STEP: Verifying LimitRange creation was observed @ 06/22/24 14:01:31.289
  STEP: Fetching the LimitRange to ensure it has proper values @ 06/22/24 14:01:31.289
  Jun 22 14:01:31.292: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun 22 14:01:31.292: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 06/22/24 14:01:31.292
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 06/22/24 14:01:31.299
  Jun 22 14:01:31.305: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun 22 14:01:31.305: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 06/22/24 14:01:31.305
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 06/22/24 14:01:31.31
  Jun 22 14:01:31.319: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Jun 22 14:01:31.319: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 06/22/24 14:01:31.319
  STEP: Failing to create a Pod with more than max resources @ 06/22/24 14:01:31.321
  STEP: Updating a LimitRange @ 06/22/24 14:01:31.322
  STEP: Verifying LimitRange updating is effective @ 06/22/24 14:01:31.327
  E0622 14:01:31.593180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:32.593642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 06/22/24 14:01:33.333
  STEP: Failing to create a Pod with more than max resources @ 06/22/24 14:01:33.341
  STEP: Deleting a LimitRange @ 06/22/24 14:01:33.343
  STEP: Verifying the LimitRange was deleted @ 06/22/24 14:01:33.35
  E0622 14:01:33.594138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:34.594689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:35.594880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:36.594979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:37.595070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:01:38.355: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 06/22/24 14:01:38.355
  Jun 22 14:01:38.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8561" for this suite. @ 06/22/24 14:01:38.369
• [7.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 06/22/24 14:01:38.392
  Jun 22 14:01:38.392: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename services @ 06/22/24 14:01:38.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 14:01:38.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 14:01:38.415
  STEP: creating a Service @ 06/22/24 14:01:38.42
  STEP: watching for the Service to be added @ 06/22/24 14:01:38.436
  Jun 22 14:01:38.438: INFO: Found Service test-service-p92rc in namespace services-9769 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30583}]
  Jun 22 14:01:38.438: INFO: Service test-service-p92rc created
  STEP: Getting /status @ 06/22/24 14:01:38.438
  Jun 22 14:01:38.442: INFO: Service test-service-p92rc has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 06/22/24 14:01:38.442
  STEP: watching for the Service to be patched @ 06/22/24 14:01:38.449
  Jun 22 14:01:38.451: INFO: observed Service test-service-p92rc in namespace services-9769 with annotations: map[] & LoadBalancer: {[]}
  Jun 22 14:01:38.451: INFO: Found Service test-service-p92rc in namespace services-9769 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Jun 22 14:01:38.451: INFO: Service test-service-p92rc has service status patched
  STEP: updating the ServiceStatus @ 06/22/24 14:01:38.451
  Jun 22 14:01:38.460: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 06/22/24 14:01:38.46
  Jun 22 14:01:38.461: INFO: Observed Service test-service-p92rc in namespace services-9769 with annotations: map[] & Conditions: {[]}
  Jun 22 14:01:38.461: INFO: Observed event: &Service{ObjectMeta:{test-service-p92rc  services-9769  991e2919-bf57-4aaa-a446-6176a1e525e8 47515 0 2024-06-22 14:01:38 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-06-22 14:01:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-06-22 14:01:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:30583,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.78,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.78],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jun 22 14:01:38.462: INFO: Found Service test-service-p92rc in namespace services-9769 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 22 14:01:38.462: INFO: Service test-service-p92rc has service status updated
  STEP: patching the service @ 06/22/24 14:01:38.462
  STEP: watching for the Service to be patched @ 06/22/24 14:01:38.475
  Jun 22 14:01:38.476: INFO: observed Service test-service-p92rc in namespace services-9769 with labels: map[test-service-static:true]
  Jun 22 14:01:38.476: INFO: observed Service test-service-p92rc in namespace services-9769 with labels: map[test-service-static:true]
  Jun 22 14:01:38.476: INFO: observed Service test-service-p92rc in namespace services-9769 with labels: map[test-service-static:true]
  Jun 22 14:01:38.476: INFO: Found Service test-service-p92rc in namespace services-9769 with labels: map[test-service:patched test-service-static:true]
  Jun 22 14:01:38.476: INFO: Service test-service-p92rc patched
  STEP: deleting the service @ 06/22/24 14:01:38.476
  STEP: watching for the Service to be deleted @ 06/22/24 14:01:38.495
  Jun 22 14:01:38.496: INFO: Observed event: ADDED
  Jun 22 14:01:38.496: INFO: Observed event: MODIFIED
  Jun 22 14:01:38.496: INFO: Observed event: MODIFIED
  Jun 22 14:01:38.496: INFO: Observed event: MODIFIED
  Jun 22 14:01:38.496: INFO: Found Service test-service-p92rc in namespace services-9769 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Jun 22 14:01:38.496: INFO: Service test-service-p92rc deleted
  Jun 22 14:01:38.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9769" for this suite. @ 06/22/24 14:01:38.5
• [0.116 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 06/22/24 14:01:38.507
  Jun 22 14:01:38.507: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename webhook @ 06/22/24 14:01:38.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 14:01:38.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 14:01:38.528
  STEP: Setting up server cert @ 06/22/24 14:01:38.555
  E0622 14:01:38.595983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/22/24 14:01:38.713
  STEP: Deploying the webhook pod @ 06/22/24 14:01:38.719
  STEP: Wait for the deployment to be ready @ 06/22/24 14:01:38.731
  Jun 22 14:01:38.740: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0622 14:01:39.596791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:40.597665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/22/24 14:01:40.753
  STEP: Verifying the service has paired with the endpoint @ 06/22/24 14:01:40.766
  E0622 14:01:41.598700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:01:41.766: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/22/24 14:01:41.775
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/22/24 14:01:41.789
  STEP: Creating a dummy validating-webhook-configuration object @ 06/22/24 14:01:41.802
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 06/22/24 14:01:41.81
  STEP: Creating a dummy mutating-webhook-configuration object @ 06/22/24 14:01:41.817
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 06/22/24 14:01:41.825
  Jun 22 14:01:41.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6016" for this suite. @ 06/22/24 14:01:41.886
  STEP: Destroying namespace "webhook-markers-6165" for this suite. @ 06/22/24 14:01:41.892
• [3.393 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 06/22/24 14:01:41.9
  Jun 22 14:01:41.900: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename field-validation @ 06/22/24 14:01:41.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 14:01:41.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 14:01:41.922
  Jun 22 14:01:41.924: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  E0622 14:01:42.599425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:43.599749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0622 14:01:44.464048      19 warnings.go:70] unknown field "alpha"
  W0622 14:01:44.464069      19 warnings.go:70] unknown field "beta"
  W0622 14:01:44.464072      19 warnings.go:70] unknown field "delta"
  W0622 14:01:44.464076      19 warnings.go:70] unknown field "epsilon"
  W0622 14:01:44.464079      19 warnings.go:70] unknown field "gamma"
  E0622 14:01:44.600062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:01:45.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7401" for this suite. @ 06/22/24 14:01:45.015
• [3.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 06/22/24 14:01:45.022
  Jun 22 14:01:45.022: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename statefulset @ 06/22/24 14:01:45.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 14:01:45.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 14:01:45.045
  STEP: Creating service test in namespace statefulset-3478 @ 06/22/24 14:01:45.047
  STEP: Creating a new StatefulSet @ 06/22/24 14:01:45.053
  Jun 22 14:01:45.064: INFO: Found 0 stateful pods, waiting for 3
  E0622 14:01:45.600815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:46.600961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:47.601156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:48.601270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:49.601879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:50.602653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:51.602757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:52.602865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:53.603083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:54.604100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:01:55.068: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 22 14:01:55.068: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 22 14:01:55.068: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Jun 22 14:01:55.079: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-3478 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 22 14:01:55.176: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 22 14:01:55.177: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 22 14:01:55.177: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0622 14:01:55.604223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:56.604333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:57.604619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:58.604709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:01:59.604900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:00.604974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:01.605510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:02.605636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:03.605733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:04.605864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/22/24 14:02:05.186
  Jun 22 14:02:05.205: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/22/24 14:02:05.205
  E0622 14:02:05.606418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:06.606487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:07.606712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:08.606976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:09.607075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:10.607256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:11.607437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:12.607551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:13.608321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:14.608432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 06/22/24 14:02:15.214
  Jun 22 14:02:15.218: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-3478 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 22 14:02:15.316: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 22 14:02:15.316: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 22 14:02:15.316: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0622 14:02:15.609147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:16.609243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:17.610014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:18.610093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:19.610205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:20.610268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:21.610357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:22.610510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:23.610690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:24.610790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 06/22/24 14:02:25.337
  Jun 22 14:02:25.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-3478 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 22 14:02:25.438: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 22 14:02:25.438: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 22 14:02:25.438: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0622 14:02:25.611729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:26.611919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:27.612001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:28.612158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:29.612312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:30.613291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:31.613520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:32.613611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:33.613725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:34.613810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:02:35.469: INFO: Updating stateful set ss2
  E0622 14:02:35.614455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:36.614634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:37.614833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:38.614954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:39.615122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:40.615287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:41.615370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:42.615983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:43.616070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:44.616177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 06/22/24 14:02:45.478
  Jun 22 14:02:45.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-621801865 --namespace=statefulset-3478 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 22 14:02:45.576: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 22 14:02:45.576: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 22 14:02:45.576: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0622 14:02:45.616488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:46.616625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:47.617533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:48.617644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:49.618692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:50.618813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:51.618911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:52.619153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:53.619348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:54.619819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:02:55.592: INFO: Deleting all statefulset in ns statefulset-3478
  Jun 22 14:02:55.595: INFO: Scaling statefulset ss2 to 0
  E0622 14:02:55.620086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:56.620401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:57.620578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:58.620765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:02:59.620982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:03:00.621061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:03:01.621139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:03:02.621336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:03:03.621518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0622 14:03:04.621694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:03:05.609: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 22 14:03:05.613: INFO: Deleting statefulset ss2
  E0622 14:03:05.622262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 22 14:03:05.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3478" for this suite. @ 06/22/24 14:03:05.63
• [80.617 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 06/22/24 14:03:05.638
  Jun 22 14:03:05.638: INFO: >>> kubeConfig: /tmp/kubeconfig-621801865
  STEP: Building a namespace api object, basename podtemplate @ 06/22/24 14:03:05.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/22/24 14:03:05.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/22/24 14:03:05.659
  STEP: Create a pod template @ 06/22/24 14:03:05.662
  STEP: Replace a pod template @ 06/22/24 14:03:05.666
  Jun 22 14:03:05.674: INFO: Found updated podtemplate annotation: "true"

  Jun 22 14:03:05.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9713" for this suite. @ 06/22/24 14:03:05.678
• [0.054 seconds]
------------------------------
SSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Jun 22 14:03:05.693: INFO: Running AfterSuite actions on node 1
  Jun 22 14:03:05.693: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.031 seconds]
------------------------------

Ran 388 of 7408 Specs in 6030.228 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7020 Skipped
PASS

Ginkgo ran 1 suite in 1h40m31.059703745s
Test Suite Passed
