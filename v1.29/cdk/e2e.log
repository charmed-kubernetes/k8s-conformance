  I0511 12:13:26.457761      19 e2e.go:117] Starting e2e run "9ba88339-bf51-4bfb-8588-41c64075f6d1" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1715429606 - will randomize all specs

Will run 388 of 7407 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  May 11 12:13:26.586: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 12:13:26.587: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  May 11 12:13:26.612: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  May 11 12:13:26.617: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  May 11 12:13:26.617: INFO: e2e test version: v1.29.4
  May 11 12:13:26.618: INFO: kube-apiserver version: v1.29.4
  May 11 12:13:26.618: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 12:13:26.621: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.039 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 05/11/24 12:13:26.759
  May 11 12:13:26.759: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename secrets @ 05/11/24 12:13:26.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:13:26.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:13:26.778
  STEP: Creating secret with name secret-test-419568c0-90f7-42f5-b446-61e796857327 @ 05/11/24 12:13:26.78
  STEP: Creating a pod to test consume secrets @ 05/11/24 12:13:26.787
  STEP: Saw pod success @ 05/11/24 12:13:34.815
  May 11 12:13:34.818: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-secrets-6f269b27-b07a-472f-b9c3-51c7ee7b7877 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/11/24 12:13:34.833
  May 11 12:13:34.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5850" for this suite. @ 05/11/24 12:13:34.852
• [8.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 05/11/24 12:13:34.86
  May 11 12:13:34.860: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename events @ 05/11/24 12:13:34.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:13:34.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:13:34.877
  STEP: creating a test event @ 05/11/24 12:13:34.879
  STEP: listing events in all namespaces @ 05/11/24 12:13:34.883
  STEP: listing events in test namespace @ 05/11/24 12:13:34.898
  STEP: listing events with field selection filtering on source @ 05/11/24 12:13:34.9
  STEP: listing events with field selection filtering on reportingController @ 05/11/24 12:13:34.902
  STEP: getting the test event @ 05/11/24 12:13:34.905
  STEP: patching the test event @ 05/11/24 12:13:34.908
  STEP: getting the test event @ 05/11/24 12:13:34.915
  STEP: updating the test event @ 05/11/24 12:13:34.918
  STEP: getting the test event @ 05/11/24 12:13:34.927
  STEP: deleting the test event @ 05/11/24 12:13:34.93
  STEP: listing events in all namespaces @ 05/11/24 12:13:34.938
  STEP: listing events in test namespace @ 05/11/24 12:13:34.949
  May 11 12:13:34.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9605" for this suite. @ 05/11/24 12:13:34.956
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 05/11/24 12:13:34.963
  May 11 12:13:34.963: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/11/24 12:13:34.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:13:34.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:13:34.981
  STEP: set up a multi version CRD @ 05/11/24 12:13:34.983
  May 11 12:13:34.983: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: rename a version @ 05/11/24 12:13:38.199
  STEP: check the new version name is served @ 05/11/24 12:13:38.212
  STEP: check the old version name is removed @ 05/11/24 12:13:38.973
  STEP: check the other version is not changed @ 05/11/24 12:13:39.572
  May 11 12:13:41.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6112" for this suite. @ 05/11/24 12:13:41.961
• [7.004 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 05/11/24 12:13:41.968
  May 11 12:13:41.968: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename statefulset @ 05/11/24 12:13:41.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:13:41.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:13:41.993
  STEP: Creating service test in namespace statefulset-3972 @ 05/11/24 12:13:41.995
  STEP: Creating statefulset ss in namespace statefulset-3972 @ 05/11/24 12:13:42.001
  May 11 12:13:42.009: INFO: Found 0 stateful pods, waiting for 1
  May 11 12:13:52.011: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/11/24 12:13:52.017
  STEP: updating a scale subresource @ 05/11/24 12:13:52.021
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/11/24 12:13:52.026
  STEP: Patch a scale subresource @ 05/11/24 12:13:52.029
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/11/24 12:13:52.035
  May 11 12:13:52.037: INFO: Deleting all statefulset in ns statefulset-3972
  May 11 12:13:52.040: INFO: Scaling statefulset ss to 0
  May 11 12:14:02.054: INFO: Waiting for statefulset status.replicas updated to 0
  May 11 12:14:02.057: INFO: Deleting statefulset ss
  May 11 12:14:02.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3972" for this suite. @ 05/11/24 12:14:02.072
• [20.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 05/11/24 12:14:02.078
  May 11 12:14:02.078: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename watch @ 05/11/24 12:14:02.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:14:02.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:14:02.097
  STEP: creating a new configmap @ 05/11/24 12:14:02.098
  STEP: modifying the configmap once @ 05/11/24 12:14:02.103
  STEP: modifying the configmap a second time @ 05/11/24 12:14:02.109
  STEP: deleting the configmap @ 05/11/24 12:14:02.118
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/11/24 12:14:02.123
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/11/24 12:14:02.124
  May 11 12:14:02.124: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-593  4a4a9edb-a16b-43f5-a722-bee51027d1f9 4711 0 2024-05-11 12:14:02 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-11 12:14:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 12:14:02.125: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-593  4a4a9edb-a16b-43f5-a722-bee51027d1f9 4712 0 2024-05-11 12:14:02 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-11 12:14:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 12:14:02.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-593" for this suite. @ 05/11/24 12:14:02.128
• [0.058 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 05/11/24 12:14:02.135
  May 11 12:14:02.135: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pods @ 05/11/24 12:14:02.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:14:02.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:14:02.154
  STEP: creating the pod @ 05/11/24 12:14:02.157
  STEP: submitting the pod to kubernetes @ 05/11/24 12:14:02.157
  W0511 12:14:02.163808      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 05/11/24 12:14:04.174
  STEP: updating the pod @ 05/11/24 12:14:04.176
  May 11 12:14:04.689: INFO: Successfully updated pod "pod-update-activedeadlineseconds-cf9d8432-14e0-439f-8d40-ba5d7c64bfee"
  May 11 12:14:08.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7885" for this suite. @ 05/11/24 12:14:08.705
• [6.577 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 05/11/24 12:14:08.713
  May 11 12:14:08.713: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename configmap @ 05/11/24 12:14:08.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:14:08.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:14:08.734
  STEP: Creating configMap with name configmap-test-volume-map-ca925391-e403-443e-a5a7-9f8479b10824 @ 05/11/24 12:14:08.736
  STEP: Creating a pod to test consume configMaps @ 05/11/24 12:14:08.741
  STEP: Saw pod success @ 05/11/24 12:14:12.868
  May 11 12:14:12.872: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-configmaps-a6a27b39-0d76-472e-935d-baae90b17299 container agnhost-container: <nil>
  STEP: delete the pod @ 05/11/24 12:14:12.882
  May 11 12:14:12.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1665" for this suite. @ 05/11/24 12:14:12.901
• [4.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 05/11/24 12:14:12.907
  May 11 12:14:12.907: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir @ 05/11/24 12:14:12.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:14:12.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:14:12.928
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/11/24 12:14:12.93
  STEP: Saw pod success @ 05/11/24 12:14:16.957
  May 11 12:14:16.961: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-b5f1eca1-a572-4804-a954-89ed64f5bd77 container test-container: <nil>
  STEP: delete the pod @ 05/11/24 12:14:16.966
  May 11 12:14:16.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1723" for this suite. @ 05/11/24 12:14:16.983
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 05/11/24 12:14:16.988
  May 11 12:14:16.988: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename resourcequota @ 05/11/24 12:14:16.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:14:17.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:14:17.009
  STEP: Counting existing ResourceQuota @ 05/11/24 12:14:17.011
  STEP: Creating a ResourceQuota @ 05/11/24 12:14:22.014
  STEP: Ensuring resource quota status is calculated @ 05/11/24 12:14:22.02
  STEP: Creating a ReplicaSet @ 05/11/24 12:14:24.024
  STEP: Ensuring resource quota status captures replicaset creation @ 05/11/24 12:14:24.037
  STEP: Deleting a ReplicaSet @ 05/11/24 12:14:26.042
  STEP: Ensuring resource quota status released usage @ 05/11/24 12:14:26.047
  May 11 12:14:28.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2486" for this suite. @ 05/11/24 12:14:28.056
• [11.074 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 05/11/24 12:14:28.062
  May 11 12:14:28.062: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename server-version @ 05/11/24 12:14:28.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:14:28.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:14:28.083
  STEP: Request ServerVersion @ 05/11/24 12:14:28.085
  STEP: Confirm major version @ 05/11/24 12:14:28.086
  May 11 12:14:28.086: INFO: Major version: 1
  STEP: Confirm minor version @ 05/11/24 12:14:28.086
  May 11 12:14:28.086: INFO: cleanMinorVersion: 29
  May 11 12:14:28.086: INFO: Minor version: 29
  May 11 12:14:28.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5313" for this suite. @ 05/11/24 12:14:28.089
• [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 05/11/24 12:14:28.094
  May 11 12:14:28.094: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 12:14:28.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:14:28.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:14:28.114
  STEP: Creating the pod @ 05/11/24 12:14:28.115
  May 11 12:14:30.653: INFO: Successfully updated pod "labelsupdate26b1c0b2-6c39-4bb0-b57f-d2d61303227b"
  May 11 12:14:34.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9247" for this suite. @ 05/11/24 12:14:34.679
• [6.592 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 05/11/24 12:14:34.687
  May 11 12:14:34.687: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename dns @ 05/11/24 12:14:34.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:14:34.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:14:34.705
  STEP: Creating a test headless service @ 05/11/24 12:14:34.707
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8946.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8946.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8946.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8946.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8946.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8946.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8946.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8946.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8946.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8946.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8946.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8946.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 227.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.227_udp@PTR;check="$$(dig +tcp +noall +answer +search 227.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.227_tcp@PTR;sleep 1; done
   @ 05/11/24 12:14:34.723
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8946.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8946.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8946.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8946.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8946.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8946.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8946.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8946.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8946.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8946.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8946.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8946.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 227.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.227_udp@PTR;check="$$(dig +tcp +noall +answer +search 227.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.227_tcp@PTR;sleep 1; done
   @ 05/11/24 12:14:34.723
  STEP: creating a pod to probe DNS @ 05/11/24 12:14:34.723
  STEP: submitting the pod to kubernetes @ 05/11/24 12:14:34.723
  STEP: retrieving the pod @ 05/11/24 12:14:44.76
  STEP: looking for the results for each expected name from probers @ 05/11/24 12:14:44.763
  May 11 12:14:44.768: INFO: Unable to read wheezy_udp@dns-test-service.dns-8946.svc.cluster.local from pod dns-8946/dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c: the server could not find the requested resource (get pods dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c)
  May 11 12:14:44.772: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8946.svc.cluster.local from pod dns-8946/dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c: the server could not find the requested resource (get pods dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c)
  May 11 12:14:44.775: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8946.svc.cluster.local from pod dns-8946/dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c: the server could not find the requested resource (get pods dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c)
  May 11 12:14:44.778: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8946.svc.cluster.local from pod dns-8946/dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c: the server could not find the requested resource (get pods dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c)
  May 11 12:14:44.793: INFO: Unable to read jessie_udp@dns-test-service.dns-8946.svc.cluster.local from pod dns-8946/dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c: the server could not find the requested resource (get pods dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c)
  May 11 12:14:44.796: INFO: Unable to read jessie_tcp@dns-test-service.dns-8946.svc.cluster.local from pod dns-8946/dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c: the server could not find the requested resource (get pods dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c)
  May 11 12:14:44.799: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8946.svc.cluster.local from pod dns-8946/dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c: the server could not find the requested resource (get pods dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c)
  May 11 12:14:44.802: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8946.svc.cluster.local from pod dns-8946/dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c: the server could not find the requested resource (get pods dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c)
  May 11 12:14:44.815: INFO: Lookups using dns-8946/dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c failed for: [wheezy_udp@dns-test-service.dns-8946.svc.cluster.local wheezy_tcp@dns-test-service.dns-8946.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8946.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8946.svc.cluster.local jessie_udp@dns-test-service.dns-8946.svc.cluster.local jessie_tcp@dns-test-service.dns-8946.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8946.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8946.svc.cluster.local]

  May 11 12:14:44.830: INFO: Pod client logs for webserver: 
  May 11 12:14:44.835: INFO: Pod client logs for querier: 
  May 11 12:14:44.842: INFO: Pod client logs for jessie-querier: 
  May 11 12:14:49.817: INFO: DNS probes using dns-8946/dns-test-e1defe73-4799-460b-90aa-3f15de38ec3c succeeded

  STEP: deleting the pod @ 05/11/24 12:14:49.817
  STEP: deleting the test service @ 05/11/24 12:14:49.832
  STEP: deleting the test headless service @ 05/11/24 12:14:49.852
  May 11 12:14:49.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8946" for this suite. @ 05/11/24 12:14:49.869
• [15.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 05/11/24 12:14:49.874
  May 11 12:14:49.874: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename endpointslice @ 05/11/24 12:14:49.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:14:49.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:14:49.896
  STEP: getting /apis @ 05/11/24 12:14:49.897
  STEP: getting /apis/discovery.k8s.io @ 05/11/24 12:14:49.901
  STEP: getting /apis/discovery.k8s.iov1 @ 05/11/24 12:14:49.902
  STEP: creating @ 05/11/24 12:14:49.903
  STEP: getting @ 05/11/24 12:14:49.918
  STEP: listing @ 05/11/24 12:14:49.919
  STEP: watching @ 05/11/24 12:14:49.922
  May 11 12:14:49.922: INFO: starting watch
  STEP: cluster-wide listing @ 05/11/24 12:14:49.923
  STEP: cluster-wide watching @ 05/11/24 12:14:49.926
  May 11 12:14:49.926: INFO: starting watch
  STEP: patching @ 05/11/24 12:14:49.927
  STEP: updating @ 05/11/24 12:14:49.931
  May 11 12:14:49.938: INFO: waiting for watch events with expected annotations
  May 11 12:14:49.938: INFO: saw patched and updated annotations
  STEP: deleting @ 05/11/24 12:14:49.939
  STEP: deleting a collection @ 05/11/24 12:14:49.948
  May 11 12:14:49.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8216" for this suite. @ 05/11/24 12:14:49.965
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 05/11/24 12:14:49.972
  May 11 12:14:49.972: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename dns @ 05/11/24 12:14:49.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:14:49.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:14:49.991
  STEP: Creating a test headless service @ 05/11/24 12:14:49.996
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9059 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9059;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9059 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9059;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9059.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9059.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9059.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9059.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9059.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9059.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9059.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9059.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9059.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9059.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9059.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9059.svc;check="$$(dig +notcp +noall +answer +search 174.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.174_udp@PTR;check="$$(dig +tcp +noall +answer +search 174.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.174_tcp@PTR;sleep 1; done
   @ 05/11/24 12:14:50.013
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9059 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9059;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9059 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9059;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9059.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9059.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9059.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9059.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9059.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9059.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9059.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9059.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9059.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9059.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9059.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9059.svc;check="$$(dig +notcp +noall +answer +search 174.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.174_udp@PTR;check="$$(dig +tcp +noall +answer +search 174.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.174_tcp@PTR;sleep 1; done
   @ 05/11/24 12:14:50.013
  STEP: creating a pod to probe DNS @ 05/11/24 12:14:50.013
  STEP: submitting the pod to kubernetes @ 05/11/24 12:14:50.013
  STEP: retrieving the pod @ 05/11/24 12:14:56.042
  STEP: looking for the results for each expected name from probers @ 05/11/24 12:14:56.045
  May 11 12:14:56.050: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9059/dns-test-4beec71f-393f-4796-a46f-445a260cc78c: the server could not find the requested resource (get pods dns-test-4beec71f-393f-4796-a46f-445a260cc78c)
  May 11 12:14:56.053: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9059/dns-test-4beec71f-393f-4796-a46f-445a260cc78c: the server could not find the requested resource (get pods dns-test-4beec71f-393f-4796-a46f-445a260cc78c)
  May 11 12:14:56.070: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9059.svc from pod dns-9059/dns-test-4beec71f-393f-4796-a46f-445a260cc78c: the server could not find the requested resource (get pods dns-test-4beec71f-393f-4796-a46f-445a260cc78c)
  May 11 12:14:56.072: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9059.svc from pod dns-9059/dns-test-4beec71f-393f-4796-a46f-445a260cc78c: the server could not find the requested resource (get pods dns-test-4beec71f-393f-4796-a46f-445a260cc78c)
  May 11 12:14:56.089: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9059/dns-test-4beec71f-393f-4796-a46f-445a260cc78c: the server could not find the requested resource (get pods dns-test-4beec71f-393f-4796-a46f-445a260cc78c)
  May 11 12:14:56.091: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9059/dns-test-4beec71f-393f-4796-a46f-445a260cc78c: the server could not find the requested resource (get pods dns-test-4beec71f-393f-4796-a46f-445a260cc78c)
  May 11 12:14:56.094: INFO: Unable to read jessie_udp@dns-test-service.dns-9059 from pod dns-9059/dns-test-4beec71f-393f-4796-a46f-445a260cc78c: the server could not find the requested resource (get pods dns-test-4beec71f-393f-4796-a46f-445a260cc78c)
  May 11 12:14:56.097: INFO: Unable to read jessie_tcp@dns-test-service.dns-9059 from pod dns-9059/dns-test-4beec71f-393f-4796-a46f-445a260cc78c: the server could not find the requested resource (get pods dns-test-4beec71f-393f-4796-a46f-445a260cc78c)
  May 11 12:14:56.100: INFO: Unable to read jessie_udp@dns-test-service.dns-9059.svc from pod dns-9059/dns-test-4beec71f-393f-4796-a46f-445a260cc78c: the server could not find the requested resource (get pods dns-test-4beec71f-393f-4796-a46f-445a260cc78c)
  May 11 12:14:56.103: INFO: Unable to read jessie_tcp@dns-test-service.dns-9059.svc from pod dns-9059/dns-test-4beec71f-393f-4796-a46f-445a260cc78c: the server could not find the requested resource (get pods dns-test-4beec71f-393f-4796-a46f-445a260cc78c)
  May 11 12:14:56.107: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9059.svc from pod dns-9059/dns-test-4beec71f-393f-4796-a46f-445a260cc78c: the server could not find the requested resource (get pods dns-test-4beec71f-393f-4796-a46f-445a260cc78c)
  May 11 12:14:56.109: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9059.svc from pod dns-9059/dns-test-4beec71f-393f-4796-a46f-445a260cc78c: the server could not find the requested resource (get pods dns-test-4beec71f-393f-4796-a46f-445a260cc78c)
  May 11 12:14:56.122: INFO: Lookups using dns-9059/dns-test-4beec71f-393f-4796-a46f-445a260cc78c failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@_http._tcp.dns-test-service.dns-9059.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9059.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9059 jessie_tcp@dns-test-service.dns-9059 jessie_udp@dns-test-service.dns-9059.svc jessie_tcp@dns-test-service.dns-9059.svc jessie_udp@_http._tcp.dns-test-service.dns-9059.svc jessie_tcp@_http._tcp.dns-test-service.dns-9059.svc]

  May 11 12:14:56.128: INFO: Pod client logs for webserver: 
  May 11 12:14:56.132: INFO: Pod client logs for querier: 
  May 11 12:14:56.137: INFO: Pod client logs for jessie-querier: 
  May 11 12:15:01.122: INFO: DNS probes using dns-9059/dns-test-4beec71f-393f-4796-a46f-445a260cc78c succeeded

  STEP: deleting the pod @ 05/11/24 12:15:01.122
  STEP: deleting the test service @ 05/11/24 12:15:01.142
  STEP: deleting the test headless service @ 05/11/24 12:15:01.159
  May 11 12:15:01.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9059" for this suite. @ 05/11/24 12:15:01.173
• [11.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 05/11/24 12:15:01.179
  May 11 12:15:01.179: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename chunking @ 05/11/24 12:15:01.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:15:01.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:15:01.199
  STEP: creating a large number of resources @ 05/11/24 12:15:01.201
  STEP: retrieving the first page @ 05/11/24 12:15:18.886
  May 11 12:15:18.934: INFO: Retrieved 40/40 results with rv 5650 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0
  STEP: retrieving the second page until the token expires @ 05/11/24 12:15:18.934
  May 11 12:15:38.939: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:15:58.940: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:16:18.941: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:16:38.940: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:16:58.938: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:17:18.941: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:17:38.938: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:17:58.939: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:18:18.940: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:18:38.938: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:18:58.939: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:19:18.940: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:19:38.939: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:19:58.941: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:20:18.939: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:20:38.940: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:20:58.939: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:21:18.939: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:21:38.938: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY1MCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  May 11 12:21:58.940: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  May 11 12:21:58.940: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 05/11/24 12:21:58.94
  STEP: retrieving all remaining pages @ 05/11/24 12:21:58.945
  May 11 12:21:58.948: INFO: Retrieved 40/40 results with rv 6409 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE5XHUwMDAwIn0
  May 11 12:21:58.951: INFO: Retrieved 40/40 results with rv 6409 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTU5XHUwMDAwIn0
  May 11 12:21:58.956: INFO: Retrieved 40/40 results with rv 6409 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTk5XHUwMDAwIn0
  May 11 12:21:58.958: INFO: Retrieved 40/40 results with rv 6409 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM5XHUwMDAwIn0
  May 11 12:21:58.962: INFO: Retrieved 40/40 results with rv 6409 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjc5XHUwMDAwIn0
  May 11 12:21:58.966: INFO: Retrieved 40/40 results with rv 6409 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzE5XHUwMDAwIn0
  May 11 12:21:58.969: INFO: Retrieved 40/40 results with rv 6409 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU5XHUwMDAwIn0
  May 11 12:21:58.972: INFO: Retrieved 40/40 results with rv 6409 and continue 
  May 11 12:21:58.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1722" for this suite. @ 05/11/24 12:21:58.976
• [417.804 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 05/11/24 12:21:58.983
  May 11 12:21:58.983: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename tables @ 05/11/24 12:21:58.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:21:59.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:21:59.003
  May 11 12:21:59.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-995" for this suite. @ 05/11/24 12:21:59.012
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 05/11/24 12:21:59.018
  May 11 12:21:59.018: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename security-context-test @ 05/11/24 12:21:59.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:21:59.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:21:59.036
  May 11 12:22:03.074: INFO: Got logs for pod "busybox-privileged-false-4d9418ee-64ce-4d27-a429-d76a2a932da5": "ip: RTNETLINK answers: Operation not permitted\n"
  May 11 12:22:03.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3366" for this suite. @ 05/11/24 12:22:03.078
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 05/11/24 12:22:03.083
  May 11 12:22:03.083: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename job @ 05/11/24 12:22:03.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:22:03.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:22:03.106
  STEP: Creating a suspended job @ 05/11/24 12:22:03.11
  STEP: Patching the Job @ 05/11/24 12:22:03.118
  STEP: Watching for Job to be patched @ 05/11/24 12:22:03.124
  May 11 12:22:03.125: INFO: Event ADDED observed for Job e2e-jp8rv in namespace job-6087 with labels: map[e2e-job-label:e2e-jp8rv] and annotations: map[]
  May 11 12:22:03.125: INFO: Event MODIFIED found for Job e2e-jp8rv in namespace job-6087 with labels: map[e2e-job-label:e2e-jp8rv e2e-jp8rv:patched] and annotations: map[]
  STEP: Updating the job @ 05/11/24 12:22:03.125
  STEP: Watching for Job to be updated @ 05/11/24 12:22:03.135
  May 11 12:22:03.136: INFO: Event MODIFIED found for Job e2e-jp8rv in namespace job-6087 with labels: map[e2e-job-label:e2e-jp8rv e2e-jp8rv:patched] and annotations: map[updated:true]
  May 11 12:22:03.136: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/11/24 12:22:03.136
  May 11 12:22:03.138: INFO: Job: e2e-jp8rv as labels: map[e2e-job-label:e2e-jp8rv e2e-jp8rv:patched]
  STEP: Waiting for job to complete @ 05/11/24 12:22:03.138
  STEP: Delete a job collection with a labelselector @ 05/11/24 12:22:11.142
  STEP: Watching for Job to be deleted @ 05/11/24 12:22:11.152
  May 11 12:22:11.153: INFO: Event MODIFIED observed for Job e2e-jp8rv in namespace job-6087 with labels: map[e2e-job-label:e2e-jp8rv e2e-jp8rv:patched] and annotations: map[updated:true]
  May 11 12:22:11.153: INFO: Event MODIFIED observed for Job e2e-jp8rv in namespace job-6087 with labels: map[e2e-job-label:e2e-jp8rv e2e-jp8rv:patched] and annotations: map[updated:true]
  May 11 12:22:11.153: INFO: Event MODIFIED observed for Job e2e-jp8rv in namespace job-6087 with labels: map[e2e-job-label:e2e-jp8rv e2e-jp8rv:patched] and annotations: map[updated:true]
  May 11 12:22:11.153: INFO: Event MODIFIED observed for Job e2e-jp8rv in namespace job-6087 with labels: map[e2e-job-label:e2e-jp8rv e2e-jp8rv:patched] and annotations: map[updated:true]
  May 11 12:22:11.153: INFO: Event MODIFIED observed for Job e2e-jp8rv in namespace job-6087 with labels: map[e2e-job-label:e2e-jp8rv e2e-jp8rv:patched] and annotations: map[updated:true]
  May 11 12:22:11.153: INFO: Event DELETED found for Job e2e-jp8rv in namespace job-6087 with labels: map[e2e-job-label:e2e-jp8rv e2e-jp8rv:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/11/24 12:22:11.153
  May 11 12:22:11.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6087" for this suite. @ 05/11/24 12:22:11.16
• [8.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 05/11/24 12:22:11.177
  May 11 12:22:11.177: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename watch @ 05/11/24 12:22:11.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:22:11.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:22:11.197
  STEP: creating a watch on configmaps with label A @ 05/11/24 12:22:11.199
  STEP: creating a watch on configmaps with label B @ 05/11/24 12:22:11.2
  STEP: creating a watch on configmaps with label A or B @ 05/11/24 12:22:11.201
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/11/24 12:22:11.202
  May 11 12:22:11.207: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5463  bd5000fb-aa2b-492c-b860-886a8b3a8264 6990 0 2024-05-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-11 12:22:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 12:22:11.207: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5463  bd5000fb-aa2b-492c-b860-886a8b3a8264 6990 0 2024-05-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-11 12:22:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/11/24 12:22:11.207
  May 11 12:22:11.214: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5463  bd5000fb-aa2b-492c-b860-886a8b3a8264 6991 0 2024-05-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-11 12:22:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 12:22:11.214: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5463  bd5000fb-aa2b-492c-b860-886a8b3a8264 6991 0 2024-05-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-11 12:22:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/11/24 12:22:11.214
  May 11 12:22:11.222: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5463  bd5000fb-aa2b-492c-b860-886a8b3a8264 6992 0 2024-05-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-11 12:22:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 12:22:11.222: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5463  bd5000fb-aa2b-492c-b860-886a8b3a8264 6992 0 2024-05-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-11 12:22:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/11/24 12:22:11.222
  May 11 12:22:11.229: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5463  bd5000fb-aa2b-492c-b860-886a8b3a8264 6993 0 2024-05-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-11 12:22:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 12:22:11.229: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5463  bd5000fb-aa2b-492c-b860-886a8b3a8264 6993 0 2024-05-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-11 12:22:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/11/24 12:22:11.229
  May 11 12:22:11.233: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5463  ecc1ad4e-2cd2-4888-8b11-118ee2d95aba 6994 0 2024-05-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-11 12:22:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 12:22:11.233: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5463  ecc1ad4e-2cd2-4888-8b11-118ee2d95aba 6994 0 2024-05-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-11 12:22:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/11/24 12:22:21.236
  May 11 12:22:21.243: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5463  ecc1ad4e-2cd2-4888-8b11-118ee2d95aba 7043 0 2024-05-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-11 12:22:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 12:22:21.244: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5463  ecc1ad4e-2cd2-4888-8b11-118ee2d95aba 7043 0 2024-05-11 12:22:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-11 12:22:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 12:22:31.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5463" for this suite. @ 05/11/24 12:22:31.252
• [20.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 05/11/24 12:22:31.259
  May 11 12:22:31.259: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-runtime @ 05/11/24 12:22:31.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:22:31.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:22:31.281
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/11/24 12:22:31.29
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/11/24 12:22:51.383
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/11/24 12:22:51.387
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/11/24 12:22:51.394
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 05/11/24 12:22:51.394
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/11/24 12:22:51.412
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/11/24 12:22:54.429
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/11/24 12:22:55.438
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/11/24 12:22:55.444
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 05/11/24 12:22:55.444
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/11/24 12:22:55.464
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/11/24 12:22:56.471
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/11/24 12:22:58.485
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/11/24 12:22:58.49
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 05/11/24 12:22:58.49
  May 11 12:22:58.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9983" for this suite. @ 05/11/24 12:22:58.516
• [27.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 05/11/24 12:22:58.524
  May 11 12:22:58.524: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-probe @ 05/11/24 12:22:58.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:22:58.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:22:58.545
  STEP: Creating pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333 @ 05/11/24 12:22:58.549
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/11/24 12:23:00.564
  May 11 12:23:00.568: INFO: Initial restart count of pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 is 0
  May 11 12:23:00.570: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:02.576: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:04.579: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:06.584: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:08.587: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:10.592: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:12.598: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:14.602: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:16.607: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:18.612: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:20.616: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:22.621: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:24.626: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:26.630: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:28.634: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:30.638: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:32.644: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:34.648: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:36.652: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:38.659: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:40.662: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:42.668: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:44.672: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:46.677: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:48.683: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:50.687: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:52.692: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:54.696: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:56.700: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:23:58.704: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:24:00.710: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:24:02.714: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:24:04.720: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:24:06.724: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:24:08.729: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:24:10.735: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:24:12.740: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:24:14.745: INFO: Get pod test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 in namespace container-probe-3333
  May 11 12:24:14.745: INFO: Restart count of pod container-probe-3333/test-grpc-d47acf1c-19b4-4e64-b91d-6ddcaf63a551 is now 1 (1m14.176643438s elapsed)
  STEP: deleting the pod @ 05/11/24 12:24:14.745
  May 11 12:24:14.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3333" for this suite. @ 05/11/24 12:24:14.759
• [76.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 05/11/24 12:24:14.768
  May 11 12:24:14.768: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pod-network-test @ 05/11/24 12:24:14.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:24:14.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:24:14.787
  STEP: Performing setup for networking test in namespace pod-network-test-1753 @ 05/11/24 12:24:14.789
  STEP: creating a selector @ 05/11/24 12:24:14.789
  STEP: Creating the service pods in kubernetes @ 05/11/24 12:24:14.789
  May 11 12:24:14.789: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/11/24 12:24:36.882
  May 11 12:24:38.913: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  May 11 12:24:38.913: INFO: Going to poll 192.168.204.132 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  May 11 12:24:38.915: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.204.132:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1753 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 12:24:38.915: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 12:24:38.915: INFO: ExecWithOptions: Clientset creation
  May 11 12:24:38.915: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1753/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.204.132%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 11 12:24:38.964: INFO: Found all 1 expected endpoints: [netserver-0]
  May 11 12:24:38.964: INFO: Going to poll 192.168.55.132 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  May 11 12:24:38.968: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.55.132:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1753 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 12:24:38.968: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 12:24:38.968: INFO: ExecWithOptions: Clientset creation
  May 11 12:24:38.968: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1753/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.55.132%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 11 12:24:39.009: INFO: Found all 1 expected endpoints: [netserver-1]
  May 11 12:24:39.009: INFO: Going to poll 192.168.105.211 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  May 11 12:24:39.012: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.105.211:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1753 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 12:24:39.012: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 12:24:39.012: INFO: ExecWithOptions: Clientset creation
  May 11 12:24:39.012: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1753/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.105.211%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 11 12:24:39.057: INFO: Found all 1 expected endpoints: [netserver-2]
  May 11 12:24:39.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1753" for this suite. @ 05/11/24 12:24:39.061
• [24.299 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 05/11/24 12:24:39.067
  May 11 12:24:39.067: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename security-context-test @ 05/11/24 12:24:39.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:24:39.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:24:39.091
  May 11 12:24:43.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5727" for this suite. @ 05/11/24 12:24:43.113
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 05/11/24 12:24:43.122
  May 11 12:24:43.122: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/11/24 12:24:43.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:24:43.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:24:43.141
  May 11 12:24:43.143: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 12:24:44.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3691" for this suite. @ 05/11/24 12:24:44.167
• [1.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 05/11/24 12:24:44.175
  May 11 12:24:44.175: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename cronjob @ 05/11/24 12:24:44.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:24:44.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:24:44.195
  STEP: Creating a cronjob @ 05/11/24 12:24:44.196
  STEP: Ensuring more than one job is running at a time @ 05/11/24 12:24:44.201
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/11/24 12:26:00.206
  STEP: Removing cronjob @ 05/11/24 12:26:00.21
  May 11 12:26:00.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-439" for this suite. @ 05/11/24 12:26:00.219
• [76.052 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 05/11/24 12:26:00.228
  May 11 12:26:00.228: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename downward-api @ 05/11/24 12:26:00.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:26:00.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:26:00.254
  STEP: Creating a pod to test downward api env vars @ 05/11/24 12:26:00.256
  STEP: Saw pod success @ 05/11/24 12:26:04.277
  May 11 12:26:04.279: INFO: Trying to get logs from node ip-172-31-16-37 pod downward-api-43c59a05-8576-486e-80af-596f4738872a container dapi-container: <nil>
  STEP: delete the pod @ 05/11/24 12:26:04.302
  May 11 12:26:04.315: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9654" for this suite. @ 05/11/24 12:26:04.318
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 05/11/24 12:26:04.324
  May 11 12:26:04.324: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename sched-preemption @ 05/11/24 12:26:04.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:26:04.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:26:04.345
  May 11 12:26:04.360: INFO: Waiting up to 1m0s for all nodes to be ready
  May 11 12:27:04.364: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/11/24 12:27:04.368
  May 11 12:27:04.386: INFO: Created pod: pod0-0-sched-preemption-low-priority
  May 11 12:27:04.390: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  May 11 12:27:04.405: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  May 11 12:27:04.408: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  May 11 12:27:04.423: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  May 11 12:27:04.432: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/11/24 12:27:04.432
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/11/24 12:27:06.456
  May 11 12:27:10.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4879" for this suite. @ 05/11/24 12:27:10.556
• [66.238 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 05/11/24 12:27:10.562
  May 11 12:27:10.562: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pods @ 05/11/24 12:27:10.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:27:10.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:27:10.583
  May 11 12:27:10.586: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: creating the pod @ 05/11/24 12:27:10.586
  STEP: submitting the pod to kubernetes @ 05/11/24 12:27:10.586
  May 11 12:27:12.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-342" for this suite. @ 05/11/24 12:27:12.618
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 05/11/24 12:27:12.628
  May 11 12:27:12.628: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-probe @ 05/11/24 12:27:12.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:27:12.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:27:12.646
  STEP: Creating pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321 @ 05/11/24 12:27:12.648
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/11/24 12:27:14.664
  May 11 12:27:14.666: INFO: Initial restart count of pod liveness-454f4708-4271-433b-b726-07505134d0d6 is 0
  May 11 12:27:14.669: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:16.674: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:18.678: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:20.683: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:22.688: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:24.694: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:26.697: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:28.702: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:30.707: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:32.712: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:34.716: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:34.716: INFO: Restart count of pod container-probe-321/liveness-454f4708-4271-433b-b726-07505134d0d6 is now 1 (20.049986739s elapsed)
  May 11 12:27:36.720: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:38.725: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:40.729: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:42.734: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:44.737: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:46.742: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:48.747: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:50.750: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:52.755: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:54.758: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:54.758: INFO: Restart count of pod container-probe-321/liveness-454f4708-4271-433b-b726-07505134d0d6 is now 2 (40.092226837s elapsed)
  May 11 12:27:56.763: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:27:58.768: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:00.773: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:02.778: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:04.782: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:06.787: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:08.793: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:10.797: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:12.801: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:14.806: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:14.806: INFO: Restart count of pod container-probe-321/liveness-454f4708-4271-433b-b726-07505134d0d6 is now 3 (1m0.139539106s elapsed)
  May 11 12:28:16.810: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:18.815: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:20.820: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:22.825: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:24.829: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:26.833: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:28.839: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:30.843: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:32.847: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:34.852: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:34.852: INFO: Restart count of pod container-probe-321/liveness-454f4708-4271-433b-b726-07505134d0d6 is now 4 (1m20.18575754s elapsed)
  May 11 12:28:36.857: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:38.862: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:40.866: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:42.871: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:44.875: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:46.879: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:48.884: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:50.888: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:52.893: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:54.897: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:56.901: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:28:58.906: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:00.912: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:02.917: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:04.922: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:06.926: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:08.932: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:10.936: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:12.940: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:14.946: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:16.950: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:18.955: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:20.960: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:22.963: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:24.969: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:26.972: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:28.977: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:30.982: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:32.985: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:34.990: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:36.995: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:39.001: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:41.006: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:43.010: INFO: Get pod liveness-454f4708-4271-433b-b726-07505134d0d6 in namespace container-probe-321
  May 11 12:29:43.010: INFO: Restart count of pod container-probe-321/liveness-454f4708-4271-433b-b726-07505134d0d6 is now 5 (2m28.344351005s elapsed)
  STEP: deleting the pod @ 05/11/24 12:29:43.011
  May 11 12:29:43.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-321" for this suite. @ 05/11/24 12:29:43.028
• [150.405 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 05/11/24 12:29:43.034
  May 11 12:29:43.034: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 12:29:43.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:29:43.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:29:43.055
  STEP: creating service multiprotocol-test in namespace services-2792 @ 05/11/24 12:29:43.057
  STEP: creating pod pod1 in namespace services-2792 @ 05/11/24 12:29:43.067
  STEP: Creating pod pod1 in namespace services-2792 @ 05/11/24 12:29:43.067
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-2792 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 05/11/24 12:29:45.088
  May 11 12:29:45.096: INFO: successfully validated that service multiprotocol-test in namespace services-2792 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 05/11/24 12:29:45.096
  May 11 12:29:45.096: INFO: Creating new exec pod
  May 11 12:29:47.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2792 exec execpodczln5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.166 80'
  May 11 12:29:47.203: INFO: stderr: "+ nc -v -t -w 2 10.152.183.166 80\nConnection to 10.152.183.166 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  May 11 12:29:47.203: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 12:29:47.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2792 exec execpodczln5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.166 80'
  May 11 12:29:51.287: INFO: stderr: "+ nc -v -u -w 2 10.152.183.166 80\n+ echo hostName\nConnection to 10.152.183.166 80 port [udp/*] succeeded!\n"
  May 11 12:29:51.287: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 05/11/24 12:29:51.287
  May 11 12:29:51.297: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2792 exec execpodczln5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.166 80'
  May 11 12:29:51.377: INFO: stderr: "+ nc -v -t -w 2 10.152.183.166 80\n+ echo hostName\nConnection to 10.152.183.166 80 port [tcp/http] succeeded!\n"
  May 11 12:29:51.377: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 12:29:51.377: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2792 exec execpodczln5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.166 80'
  May 11 12:29:55.463: INFO: stderr: "+ nc -v -u -w 2 10.152.183.166 80\n+ echo hostName\nConnection to 10.152.183.166 80 port [udp/*] succeeded!\n"
  May 11 12:29:55.463: INFO: stdout: ""
  May 11 12:29:55.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2792 exec execpodczln5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.166 80'
  May 11 12:29:59.570: INFO: stderr: "+ nc -v -u -w 2 10.152.183.166 80\n+ echo hostName\nConnection to 10.152.183.166 80 port [udp/*] succeeded!\n"
  May 11 12:29:59.570: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 05/11/24 12:29:59.57
  May 11 12:29:59.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2792 exec execpodczln5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.166 80'
  May 11 12:30:03.683: INFO: stderr: "+ nc -v -u -w 2 10.152.183.166 80\n+ echo hostName\nConnection to 10.152.183.166 80 port [udp/*] succeeded!\n"
  May 11 12:30:03.683: INFO: stdout: "pod1"
  May 11 12:30:03.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2792 exec execpodczln5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.166 80'
  May 11 12:30:05.770: INFO: rc: 1
  May 11 12:30:05.770: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2792 exec execpodczln5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.166 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.166 80
  nc: connect to 10.152.183.166 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  May 11 12:30:05.770: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2792 exec execpodczln5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.166 80'
  May 11 12:30:07.859: INFO: rc: 1
  May 11 12:30:07.859: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2792 exec execpodczln5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.166 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.166 80
  + echo hostName
  nc: connect to 10.152.183.166 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  May 11 12:30:07.859: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2792 exec execpodczln5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.166 80'
  May 11 12:30:09.946: INFO: rc: 1
  May 11 12:30:09.946: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2792 exec execpodczln5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.166 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.166 80
  + echo hostName
  nc: connect to 10.152.183.166 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  May 11 12:30:09.946: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2792" for this suite. @ 05/11/24 12:30:09.95
• [26.924 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 05/11/24 12:30:09.958
  May 11 12:30:09.958: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename svcaccounts @ 05/11/24 12:30:09.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:30:09.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:30:09.977
  May 11 12:30:09.997: INFO: created pod pod-service-account-defaultsa
  May 11 12:30:09.997: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  May 11 12:30:10.012: INFO: created pod pod-service-account-mountsa
  May 11 12:30:10.012: INFO: pod pod-service-account-mountsa service account token volume mount: true
  May 11 12:30:10.027: INFO: created pod pod-service-account-nomountsa
  May 11 12:30:10.027: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  May 11 12:30:10.034: INFO: created pod pod-service-account-defaultsa-mountspec
  May 11 12:30:10.034: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  May 11 12:30:10.040: INFO: created pod pod-service-account-mountsa-mountspec
  May 11 12:30:10.040: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  May 11 12:30:10.044: INFO: created pod pod-service-account-nomountsa-mountspec
  May 11 12:30:10.044: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  May 11 12:30:10.052: INFO: created pod pod-service-account-defaultsa-nomountspec
  May 11 12:30:10.052: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  May 11 12:30:10.058: INFO: created pod pod-service-account-mountsa-nomountspec
  May 11 12:30:10.058: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  May 11 12:30:10.069: INFO: created pod pod-service-account-nomountsa-nomountspec
  May 11 12:30:10.069: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  May 11 12:30:10.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5684" for this suite. @ 05/11/24 12:30:10.074
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 05/11/24 12:30:10.082
  May 11 12:30:10.082: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename resourcequota @ 05/11/24 12:30:10.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:30:10.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:30:10.109
  STEP: Creating a ResourceQuota with best effort scope @ 05/11/24 12:30:10.112
  STEP: Ensuring ResourceQuota status is calculated @ 05/11/24 12:30:10.218
  STEP: Creating a ResourceQuota with not best effort scope @ 05/11/24 12:30:12.221
  STEP: Ensuring ResourceQuota status is calculated @ 05/11/24 12:30:12.226
  STEP: Creating a best-effort pod @ 05/11/24 12:30:14.23
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/11/24 12:30:14.24
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/11/24 12:30:16.246
  STEP: Deleting the pod @ 05/11/24 12:30:18.252
  STEP: Ensuring resource quota status released the pod usage @ 05/11/24 12:30:18.262
  STEP: Creating a not best-effort pod @ 05/11/24 12:30:20.266
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/11/24 12:30:20.276
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/11/24 12:30:22.282
  STEP: Deleting the pod @ 05/11/24 12:30:24.286
  STEP: Ensuring resource quota status released the pod usage @ 05/11/24 12:30:24.294
  May 11 12:30:26.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2040" for this suite. @ 05/11/24 12:30:26.307
• [16.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 05/11/24 12:30:26.315
  May 11 12:30:26.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir @ 05/11/24 12:30:26.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:30:26.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:30:26.336
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/11/24 12:30:26.338
  STEP: Saw pod success @ 05/11/24 12:30:30.357
  May 11 12:30:30.360: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-0ae61f80-b4f1-41dd-b4b9-f0545b60ab76 container test-container: <nil>
  STEP: delete the pod @ 05/11/24 12:30:30.374
  May 11 12:30:30.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-178" for this suite. @ 05/11/24 12:30:30.39
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 05/11/24 12:30:30.398
  May 11 12:30:30.398: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 12:30:30.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:30:30.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:30:30.415
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 12:30:30.417
  STEP: Saw pod success @ 05/11/24 12:30:34.436
  May 11 12:30:34.438: INFO: Trying to get logs from node ip-172-31-73-54 pod downwardapi-volume-22cd0ad4-0e20-4a67-879b-962ae6622ffd container client-container: <nil>
  STEP: delete the pod @ 05/11/24 12:30:34.445
  May 11 12:30:34.461: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9917" for this suite. @ 05/11/24 12:30:34.463
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 05/11/24 12:30:34.469
  May 11 12:30:34.469: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir @ 05/11/24 12:30:34.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:30:34.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:30:34.491
  STEP: Creating Pod @ 05/11/24 12:30:34.492
  STEP: Reading file content from the nginx-container @ 05/11/24 12:30:36.51
  May 11 12:30:36.510: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1137 PodName:pod-sharedvolume-5da2b160-495c-4e91-8b69-01e19eb875ae ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 12:30:36.510: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 12:30:36.511: INFO: ExecWithOptions: Clientset creation
  May 11 12:30:36.511: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-1137/pods/pod-sharedvolume-5da2b160-495c-4e91-8b69-01e19eb875ae/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  May 11 12:30:36.556: INFO: Exec stderr: ""
  May 11 12:30:36.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1137" for this suite. @ 05/11/24 12:30:36.56
• [2.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 05/11/24 12:30:36.567
  May 11 12:30:36.567: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename downward-api @ 05/11/24 12:30:36.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:30:36.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:30:36.586
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 12:30:36.588
  STEP: Saw pod success @ 05/11/24 12:30:40.606
  May 11 12:30:40.610: INFO: Trying to get logs from node ip-172-31-16-37 pod downwardapi-volume-b7f7c6ba-e69f-49bf-9cb9-24f897b5e863 container client-container: <nil>
  STEP: delete the pod @ 05/11/24 12:30:40.619
  May 11 12:30:40.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7964" for this suite. @ 05/11/24 12:30:40.635
• [4.072 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 05/11/24 12:30:40.64
  May 11 12:30:40.640: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 12:30:40.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:30:40.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:30:40.66
  STEP: Setting up server cert @ 05/11/24 12:30:40.685
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 12:30:41.008
  STEP: Deploying the webhook pod @ 05/11/24 12:30:41.017
  STEP: Wait for the deployment to be ready @ 05/11/24 12:30:41.03
  May 11 12:30:41.035: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/11/24 12:30:43.047
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 12:30:43.057
  May 11 12:30:44.057: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/11/24 12:30:44.065
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/11/24 12:30:44.077
  STEP: Creating a dummy validating-webhook-configuration object @ 05/11/24 12:30:44.087
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/11/24 12:30:44.094
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/11/24 12:30:44.1
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/11/24 12:30:44.109
  May 11 12:30:44.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3424" for this suite. @ 05/11/24 12:30:44.18
  STEP: Destroying namespace "webhook-markers-6976" for this suite. @ 05/11/24 12:30:44.185
• [3.552 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 05/11/24 12:30:44.192
  May 11 12:30:44.192: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename statefulset @ 05/11/24 12:30:44.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:30:44.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:30:44.214
  STEP: Creating service test in namespace statefulset-2243 @ 05/11/24 12:30:44.216
  May 11 12:30:44.308: INFO: Found 0 stateful pods, waiting for 1
  May 11 12:30:54.310: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/11/24 12:30:54.316
  W0511 12:30:54.325450      19 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  May 11 12:30:54.333: INFO: Found 1 stateful pods, waiting for 2
  May 11 12:31:04.335: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May 11 12:31:04.335: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/11/24 12:31:04.342
  STEP: Delete all of the StatefulSets @ 05/11/24 12:31:04.346
  STEP: Verify that StatefulSets have been deleted @ 05/11/24 12:31:04.353
  May 11 12:31:04.355: INFO: Deleting all statefulset in ns statefulset-2243
  May 11 12:31:04.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2243" for this suite. @ 05/11/24 12:31:04.366
• [20.185 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 05/11/24 12:31:04.377
  May 11 12:31:04.378: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename init-container @ 05/11/24 12:31:04.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:31:04.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:31:04.397
  STEP: creating the pod @ 05/11/24 12:31:04.399
  May 11 12:31:04.399: INFO: PodSpec: initContainers in spec.initContainers
  May 11 12:31:08.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5082" for this suite. @ 05/11/24 12:31:08.533
• [4.163 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 05/11/24 12:31:08.54
  May 11 12:31:08.540: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename events @ 05/11/24 12:31:08.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:31:08.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:31:08.558
  STEP: creating a test event @ 05/11/24 12:31:08.561
  STEP: listing all events in all namespaces @ 05/11/24 12:31:08.564
  STEP: patching the test event @ 05/11/24 12:31:08.576
  STEP: fetching the test event @ 05/11/24 12:31:08.582
  STEP: updating the test event @ 05/11/24 12:31:08.585
  STEP: getting the test event @ 05/11/24 12:31:08.593
  STEP: deleting the test event @ 05/11/24 12:31:08.596
  STEP: listing all events in all namespaces @ 05/11/24 12:31:08.603
  May 11 12:31:08.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6628" for this suite. @ 05/11/24 12:31:08.617
• [0.084 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 05/11/24 12:31:08.625
  May 11 12:31:08.625: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename disruption @ 05/11/24 12:31:08.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:31:08.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:31:08.647
  STEP: Creating a kubernetes client @ 05/11/24 12:31:08.649
  May 11 12:31:08.649: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename disruption-2 @ 05/11/24 12:31:08.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:31:08.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:31:08.668
  STEP: Waiting for the pdb to be processed @ 05/11/24 12:31:08.675
  STEP: Waiting for the pdb to be processed @ 05/11/24 12:31:10.685
  STEP: Waiting for the pdb to be processed @ 05/11/24 12:31:12.695
  STEP: listing a collection of PDBs across all namespaces @ 05/11/24 12:31:14.7
  STEP: listing a collection of PDBs in namespace disruption-9342 @ 05/11/24 12:31:14.704
  STEP: deleting a collection of PDBs @ 05/11/24 12:31:14.706
  STEP: Waiting for the PDB collection to be deleted @ 05/11/24 12:31:14.719
  May 11 12:31:14.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6275" for this suite. @ 05/11/24 12:31:14.723
  May 11 12:31:14.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9342" for this suite. @ 05/11/24 12:31:14.731
• [6.113 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 05/11/24 12:31:14.738
  May 11 12:31:14.738: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/11/24 12:31:14.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:31:14.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:31:14.757
  STEP: fetching the /apis discovery document @ 05/11/24 12:31:14.76
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/11/24 12:31:14.76
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/11/24 12:31:14.76
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/11/24 12:31:14.761
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/11/24 12:31:14.761
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/11/24 12:31:14.762
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/11/24 12:31:14.762
  May 11 12:31:14.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9620" for this suite. @ 05/11/24 12:31:14.766
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 05/11/24 12:31:14.774
  May 11 12:31:14.774: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename deployment @ 05/11/24 12:31:14.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:31:14.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:31:14.793
  STEP: creating a Deployment @ 05/11/24 12:31:14.799
  STEP: waiting for Deployment to be created @ 05/11/24 12:31:14.804
  STEP: waiting for all Replicas to be Ready @ 05/11/24 12:31:14.805
  May 11 12:31:14.806: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 11 12:31:14.806: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 11 12:31:14.815: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 11 12:31:14.815: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 11 12:31:14.832: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 11 12:31:14.832: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 11 12:31:14.854: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 11 12:31:14.854: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 11 12:31:15.805: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  May 11 12:31:15.805: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  May 11 12:31:16.146: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/11/24 12:31:16.146
  May 11 12:31:16.156: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/11/24 12:31:16.156
  May 11 12:31:16.157: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 0
  May 11 12:31:16.157: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 0
  May 11 12:31:16.157: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 0
  May 11 12:31:16.157: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 0
  May 11 12:31:16.157: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 0
  May 11 12:31:16.157: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 0
  May 11 12:31:16.157: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 0
  May 11 12:31:16.157: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 0
  May 11 12:31:16.157: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1
  May 11 12:31:16.157: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1
  May 11 12:31:16.157: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2
  May 11 12:31:16.157: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2
  May 11 12:31:16.157: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2
  May 11 12:31:16.157: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2
  May 11 12:31:16.169: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2
  May 11 12:31:16.169: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2
  May 11 12:31:16.187: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2
  May 11 12:31:16.187: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2
  May 11 12:31:16.195: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1
  May 11 12:31:16.195: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1
  May 11 12:31:16.211: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1
  May 11 12:31:16.211: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1
  May 11 12:31:16.821: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2
  May 11 12:31:16.821: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2
  May 11 12:31:16.853: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1
  STEP: listing Deployments @ 05/11/24 12:31:16.853
  May 11 12:31:16.856: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/11/24 12:31:16.856
  May 11 12:31:16.867: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/11/24 12:31:16.867
  May 11 12:31:16.874: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 11 12:31:16.879: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 11 12:31:16.904: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 11 12:31:16.917: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 11 12:31:17.837: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May 11 12:31:17.859: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May 11 12:31:17.866: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May 11 12:31:17.880: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May 11 12:31:19.160: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/11/24 12:31:19.181
  STEP: fetching the DeploymentStatus @ 05/11/24 12:31:19.189
  May 11 12:31:19.193: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1
  May 11 12:31:19.193: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1
  May 11 12:31:19.193: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1
  May 11 12:31:19.194: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 1
  May 11 12:31:19.194: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2
  May 11 12:31:19.194: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2
  May 11 12:31:19.194: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2
  May 11 12:31:19.194: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 2
  May 11 12:31:19.194: INFO: observed Deployment test-deployment in namespace deployment-8056 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/11/24 12:31:19.194
  May 11 12:31:19.203: INFO: observed event type MODIFIED
  May 11 12:31:19.203: INFO: observed event type MODIFIED
  May 11 12:31:19.203: INFO: observed event type MODIFIED
  May 11 12:31:19.203: INFO: observed event type MODIFIED
  May 11 12:31:19.203: INFO: observed event type MODIFIED
  May 11 12:31:19.203: INFO: observed event type MODIFIED
  May 11 12:31:19.203: INFO: observed event type MODIFIED
  May 11 12:31:19.203: INFO: observed event type MODIFIED
  May 11 12:31:19.203: INFO: observed event type MODIFIED
  May 11 12:31:19.203: INFO: observed event type MODIFIED
  May 11 12:31:19.203: INFO: observed event type MODIFIED
  May 11 12:31:19.203: INFO: observed event type MODIFIED
  May 11 12:31:19.207: INFO: Log out all the ReplicaSets if there is no deployment created
  May 11 12:31:19.209: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8056",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a70a1e92-30d2-41df-bf86-421be0e298df",
      ResourceVersion: (string) (len=4) "9662",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "9b5e1f70-1029-4add-a81f-19ef39ff15f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 39 62 35 65  31 66 37 30 2d 31 30 32  |":\"9b5e1f70-102|
              00000130  39 2d 34 61 64 64 2d 61  38 31 66 2d 31 39 65 66  |9-4add-a81f-19ef|
              00000140  33 39 66 66 31 35 66 37  5c 22 7d 22 3a 7b 7d 7d  |39ff15f7\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May 11 12:31:19.216: INFO: pod: "test-deployment-64fd565c98-2vtdf":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-2vtdf",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-8056",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6cc56612-1176-414e-859d-ffeb55430b48",
      ResourceVersion: (string) (len=4) "9650",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "a70a1e92-30d2-41df-bf86-421be0e298df",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  61 37 30 61 31 65 39 32  |uid\":\"a70a1e92|
              000000a0  2d 33 30 64 32 2d 34 31  64 66 2d 62 66 38 36 2d  |-30d2-41df-bf86-|
              000000b0  34 32 31 62 65 30 65 32  39 38 64 66 5c 22 7d 22  |421be0e298df\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=621) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 73 74  |:phase":{},"f:st|
              00000260  61 72 74 54 69 6d 65 22  3a 7b 7d 7d 7d           |artTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2r4c2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2r4c2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-35-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.35.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.35.147"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851027477,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851027478,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://007b77e343e01dd7854e91f98793d5bea81024a4c06c6b9ea6cc86654ae37e9b"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://007b77e343e01dd7854e91f98793d5bea81024a4c06c6b9ea6cc86654ae37e9b",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May 11 12:31:19.219: INFO: pod: "test-deployment-64fd565c98-k2njx":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-k2njx",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-8056",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "651dc418-5dbc-4622-9158-0ce1bc5cf182",
      ResourceVersion: (string) (len=4) "9657",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027481,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "a70a1e92-30d2-41df-bf86-421be0e298df",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  61 37 30 61 31 65 39 32  |uid\":\"a70a1e92|
              000000a0  2d 33 30 64 32 2d 34 31  64 66 2d 62 66 38 36 2d  |-30d2-41df-bf86-|
              000000b0  34 32 31 62 65 30 65 32  39 38 64 66 5c 22 7d 22  |421be0e298df\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  35 2e 32 32 37 5c 22 7d  |2.168.105.227\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5jl7d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5jl7d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-73-54",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.73.54",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.73.54"
        }
      },
      PodIP: (string) (len=15) "192.168.105.227",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.105.227"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851027476,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://4f4070279d19f7ad00b4b8b1809992ec0937241ba4a31f4e2e2c49e2bfd1308e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May 11 12:31:19.220: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8056",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e5074342-1ed2-46eb-b99e-ba848dede680",
      ResourceVersion: (string) (len=4) "9654",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "9b5e1f70-1029-4add-a81f-19ef39ff15f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 39 62 35 65  31 66 37 30 2d 31 30 32  |":\"9b5e1f70-102|
              00000130  39 2d 34 61 64 64 2d 61  38 31 66 2d 31 39 65 66  |9-4add-a81f-19ef|
              00000140  33 39 66 66 31 35 66 37  5c 22 7d 22 3a 7b 7d 7d  |39ff15f7\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May 11 12:31:19.223: INFO: pod: "test-deployment-79ff746c4-7jm9z":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-7jm9z",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-8056",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "26045bc2-5ad6-451a-84f7-c6d3337ae2dd",
      ResourceVersion: (string) (len=4) "9612",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "e5074342-1ed2-46eb-b99e-ba848dede680",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 35 30 37 34 33 34 32  |uid\":\"e5074342|
              000000a0  2d 31 65 64 32 2d 34 36  65 62 2d 62 39 39 65 2d  |-1ed2-46eb-b99e-|
              000000b0  62 61 38 34 38 64 65 64  65 36 38 30 5c 22 7d 22  |ba848dede680\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  35 2e 32 32 38 5c 22 7d  |2.168.105.228\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-klsqq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-klsqq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-73-54",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.73.54",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.73.54"
        }
      },
      PodIP: (string) (len=15) "192.168.105.228",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.105.228"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851027477,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5c415fb46f01a18d4c82f2493524786853fb2f0b510368a92a60d8d4de3e3cb8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May 11 12:31:19.225: INFO: pod: "test-deployment-79ff746c4-pvx4f":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-pvx4f",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-8056",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e7ba12d-c4ae-4d5d-aa28-d4394ba9ad4f",
      ResourceVersion: (string) (len=4) "9653",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "e5074342-1ed2-46eb-b99e-ba848dede680",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 35 30 37 34 33 34 32  |uid\":\"e5074342|
              000000a0  2d 31 65 64 32 2d 34 36  65 62 2d 62 39 39 65 2d  |-1ed2-46eb-b99e-|
              000000b0  62 61 38 34 38 64 65 64  65 36 38 30 5c 22 7d 22  |ba848dede680\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  34 2e 31 34 34 5c 22 7d  |2.168.204.144\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lkb9q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lkb9q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-16-37",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.37"
        }
      },
      PodIP: (string) (len=15) "192.168.204.144",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.204.144"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851027478,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cd5c0f1b85e02f80fa0a4cda237f3b3514c2e4fff2fd07c27fa181a77deb65b6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May 11 12:31:19.227: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8056",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b854f0f-2e67-4b25-8d2f-ade5a23a4612",
      ResourceVersion: (string) (len=4) "9564",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "9b5e1f70-1029-4add-a81f-19ef39ff15f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 39 62 35 65  31 66 37 30 2d 31 30 32  |":\"9b5e1f70-102|
              00000130  39 2d 34 61 64 64 2d 61  38 31 66 2d 31 39 65 66  |9-4add-a81f-19ef|
              00000140  33 39 66 66 31 35 66 37  5c 22 7d 22 3a 7b 7d 7d  |39ff15f7\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May 11 12:31:19.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8056" for this suite. @ 05/11/24 12:31:19.233
• [4.468 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 05/11/24 12:31:19.242
  May 11 12:31:19.242: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename replicaset @ 05/11/24 12:31:19.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:31:19.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:31:19.26
  STEP: Create a Replicaset @ 05/11/24 12:31:19.268
  STEP: Verify that the required pods have come up. @ 05/11/24 12:31:19.273
  May 11 12:31:19.275: INFO: Pod name sample-pod: Found 0 pods out of 1
  May 11 12:31:24.280: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/11/24 12:31:24.28
  STEP: Getting /status @ 05/11/24 12:31:24.28
  May 11 12:31:24.284: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/11/24 12:31:24.284
  May 11 12:31:24.293: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/11/24 12:31:24.293
  May 11 12:31:24.295: INFO: Observed &ReplicaSet event: ADDED
  May 11 12:31:24.295: INFO: Observed &ReplicaSet event: MODIFIED
  May 11 12:31:24.295: INFO: Observed &ReplicaSet event: MODIFIED
  May 11 12:31:24.295: INFO: Observed &ReplicaSet event: MODIFIED
  May 11 12:31:24.295: INFO: Found replicaset test-rs in namespace replicaset-4231 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 11 12:31:24.295: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/11/24 12:31:24.295
  May 11 12:31:24.295: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May 11 12:31:24.300: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/11/24 12:31:24.3
  May 11 12:31:24.301: INFO: Observed &ReplicaSet event: ADDED
  May 11 12:31:24.301: INFO: Observed &ReplicaSet event: MODIFIED
  May 11 12:31:24.301: INFO: Observed &ReplicaSet event: MODIFIED
  May 11 12:31:24.301: INFO: Observed &ReplicaSet event: MODIFIED
  May 11 12:31:24.301: INFO: Observed replicaset test-rs in namespace replicaset-4231 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 11 12:31:24.301: INFO: Observed &ReplicaSet event: MODIFIED
  May 11 12:31:24.301: INFO: Found replicaset test-rs in namespace replicaset-4231 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  May 11 12:31:24.301: INFO: Replicaset test-rs has a patched status
  May 11 12:31:24.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4231" for this suite. @ 05/11/24 12:31:24.306
• [5.070 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 05/11/24 12:31:24.313
  May 11 12:31:24.313: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename gc @ 05/11/24 12:31:24.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:31:24.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:31:24.335
  STEP: create the rc @ 05/11/24 12:31:24.341
  W0511 12:31:24.344940      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/11/24 12:31:30.349
  STEP: wait for the rc to be deleted @ 05/11/24 12:31:30.36
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/11/24 12:31:35.365
  STEP: Gathering metrics @ 05/11/24 12:32:05.373
  W0511 12:32:05.380101      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May 11 12:32:05.380: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 11 12:32:05.380: INFO: Deleting pod "simpletest.rc-22dhr" in namespace "gc-3760"
  May 11 12:32:05.389: INFO: Deleting pod "simpletest.rc-2csrh" in namespace "gc-3760"
  May 11 12:32:05.398: INFO: Deleting pod "simpletest.rc-488qf" in namespace "gc-3760"
  May 11 12:32:05.407: INFO: Deleting pod "simpletest.rc-48jf2" in namespace "gc-3760"
  May 11 12:32:05.418: INFO: Deleting pod "simpletest.rc-48rgx" in namespace "gc-3760"
  May 11 12:32:05.429: INFO: Deleting pod "simpletest.rc-4bm5r" in namespace "gc-3760"
  May 11 12:32:05.439: INFO: Deleting pod "simpletest.rc-4d7mv" in namespace "gc-3760"
  May 11 12:32:05.450: INFO: Deleting pod "simpletest.rc-4hgv8" in namespace "gc-3760"
  May 11 12:32:05.464: INFO: Deleting pod "simpletest.rc-56zmk" in namespace "gc-3760"
  May 11 12:32:05.473: INFO: Deleting pod "simpletest.rc-587r8" in namespace "gc-3760"
  May 11 12:32:05.487: INFO: Deleting pod "simpletest.rc-5x7dp" in namespace "gc-3760"
  May 11 12:32:05.496: INFO: Deleting pod "simpletest.rc-6sfq6" in namespace "gc-3760"
  May 11 12:32:05.507: INFO: Deleting pod "simpletest.rc-7krkc" in namespace "gc-3760"
  May 11 12:32:05.517: INFO: Deleting pod "simpletest.rc-82kgz" in namespace "gc-3760"
  May 11 12:32:05.529: INFO: Deleting pod "simpletest.rc-852h4" in namespace "gc-3760"
  May 11 12:32:05.552: INFO: Deleting pod "simpletest.rc-8bz2p" in namespace "gc-3760"
  May 11 12:32:05.568: INFO: Deleting pod "simpletest.rc-8dw8t" in namespace "gc-3760"
  May 11 12:32:05.582: INFO: Deleting pod "simpletest.rc-8smwn" in namespace "gc-3760"
  May 11 12:32:05.602: INFO: Deleting pod "simpletest.rc-8thl5" in namespace "gc-3760"
  May 11 12:32:05.616: INFO: Deleting pod "simpletest.rc-8v9gc" in namespace "gc-3760"
  May 11 12:32:05.631: INFO: Deleting pod "simpletest.rc-9vqzl" in namespace "gc-3760"
  May 11 12:32:05.648: INFO: Deleting pod "simpletest.rc-b4cdj" in namespace "gc-3760"
  May 11 12:32:05.671: INFO: Deleting pod "simpletest.rc-b6fr6" in namespace "gc-3760"
  May 11 12:32:05.684: INFO: Deleting pod "simpletest.rc-bswzw" in namespace "gc-3760"
  May 11 12:32:05.694: INFO: Deleting pod "simpletest.rc-c84g9" in namespace "gc-3760"
  May 11 12:32:05.707: INFO: Deleting pod "simpletest.rc-cbb92" in namespace "gc-3760"
  May 11 12:32:05.719: INFO: Deleting pod "simpletest.rc-cnhgd" in namespace "gc-3760"
  May 11 12:32:05.735: INFO: Deleting pod "simpletest.rc-dgwkr" in namespace "gc-3760"
  May 11 12:32:05.747: INFO: Deleting pod "simpletest.rc-djqgt" in namespace "gc-3760"
  May 11 12:32:05.759: INFO: Deleting pod "simpletest.rc-dnhqk" in namespace "gc-3760"
  May 11 12:32:05.771: INFO: Deleting pod "simpletest.rc-drp5w" in namespace "gc-3760"
  May 11 12:32:05.784: INFO: Deleting pod "simpletest.rc-dz68z" in namespace "gc-3760"
  May 11 12:32:05.796: INFO: Deleting pod "simpletest.rc-f9g7v" in namespace "gc-3760"
  May 11 12:32:05.810: INFO: Deleting pod "simpletest.rc-fdv64" in namespace "gc-3760"
  May 11 12:32:05.822: INFO: Deleting pod "simpletest.rc-fh5sc" in namespace "gc-3760"
  May 11 12:32:05.835: INFO: Deleting pod "simpletest.rc-fn24v" in namespace "gc-3760"
  May 11 12:32:05.845: INFO: Deleting pod "simpletest.rc-g6zn2" in namespace "gc-3760"
  May 11 12:32:05.856: INFO: Deleting pod "simpletest.rc-gg72m" in namespace "gc-3760"
  May 11 12:32:05.868: INFO: Deleting pod "simpletest.rc-gndh9" in namespace "gc-3760"
  May 11 12:32:05.884: INFO: Deleting pod "simpletest.rc-gvjqm" in namespace "gc-3760"
  May 11 12:32:05.899: INFO: Deleting pod "simpletest.rc-gzfh5" in namespace "gc-3760"
  May 11 12:32:05.912: INFO: Deleting pod "simpletest.rc-gzmjf" in namespace "gc-3760"
  May 11 12:32:05.921: INFO: Deleting pod "simpletest.rc-h258q" in namespace "gc-3760"
  May 11 12:32:05.931: INFO: Deleting pod "simpletest.rc-h64xj" in namespace "gc-3760"
  May 11 12:32:05.942: INFO: Deleting pod "simpletest.rc-h9k8w" in namespace "gc-3760"
  May 11 12:32:05.955: INFO: Deleting pod "simpletest.rc-hgz9p" in namespace "gc-3760"
  May 11 12:32:05.964: INFO: Deleting pod "simpletest.rc-hnvg7" in namespace "gc-3760"
  May 11 12:32:05.983: INFO: Deleting pod "simpletest.rc-hz69x" in namespace "gc-3760"
  May 11 12:32:05.992: INFO: Deleting pod "simpletest.rc-j6gcf" in namespace "gc-3760"
  May 11 12:32:06.003: INFO: Deleting pod "simpletest.rc-jcqzz" in namespace "gc-3760"
  May 11 12:32:06.014: INFO: Deleting pod "simpletest.rc-l25x6" in namespace "gc-3760"
  May 11 12:32:06.026: INFO: Deleting pod "simpletest.rc-lbhx4" in namespace "gc-3760"
  May 11 12:32:06.036: INFO: Deleting pod "simpletest.rc-ln7gq" in namespace "gc-3760"
  May 11 12:32:06.048: INFO: Deleting pod "simpletest.rc-lxn8c" in namespace "gc-3760"
  May 11 12:32:06.059: INFO: Deleting pod "simpletest.rc-mb77q" in namespace "gc-3760"
  May 11 12:32:06.073: INFO: Deleting pod "simpletest.rc-mrrgr" in namespace "gc-3760"
  May 11 12:32:06.083: INFO: Deleting pod "simpletest.rc-mts7w" in namespace "gc-3760"
  May 11 12:32:06.095: INFO: Deleting pod "simpletest.rc-nk64x" in namespace "gc-3760"
  May 11 12:32:06.106: INFO: Deleting pod "simpletest.rc-nkblj" in namespace "gc-3760"
  May 11 12:32:06.115: INFO: Deleting pod "simpletest.rc-nqc8t" in namespace "gc-3760"
  May 11 12:32:06.126: INFO: Deleting pod "simpletest.rc-ntw4s" in namespace "gc-3760"
  May 11 12:32:06.136: INFO: Deleting pod "simpletest.rc-pnltw" in namespace "gc-3760"
  May 11 12:32:06.149: INFO: Deleting pod "simpletest.rc-q9865" in namespace "gc-3760"
  May 11 12:32:06.159: INFO: Deleting pod "simpletest.rc-qc74m" in namespace "gc-3760"
  May 11 12:32:06.176: INFO: Deleting pod "simpletest.rc-qhhxj" in namespace "gc-3760"
  May 11 12:32:06.225: INFO: Deleting pod "simpletest.rc-qrrcs" in namespace "gc-3760"
  May 11 12:32:06.281: INFO: Deleting pod "simpletest.rc-qsdxp" in namespace "gc-3760"
  May 11 12:32:06.327: INFO: Deleting pod "simpletest.rc-qt4nm" in namespace "gc-3760"
  May 11 12:32:06.378: INFO: Deleting pod "simpletest.rc-rj6sm" in namespace "gc-3760"
  May 11 12:32:06.428: INFO: Deleting pod "simpletest.rc-rph5f" in namespace "gc-3760"
  May 11 12:32:06.476: INFO: Deleting pod "simpletest.rc-rphwk" in namespace "gc-3760"
  May 11 12:32:06.525: INFO: Deleting pod "simpletest.rc-rqkrv" in namespace "gc-3760"
  May 11 12:32:06.579: INFO: Deleting pod "simpletest.rc-rt7vj" in namespace "gc-3760"
  May 11 12:32:06.627: INFO: Deleting pod "simpletest.rc-rwvfp" in namespace "gc-3760"
  May 11 12:32:06.675: INFO: Deleting pod "simpletest.rc-scflk" in namespace "gc-3760"
  May 11 12:32:06.729: INFO: Deleting pod "simpletest.rc-sfc5k" in namespace "gc-3760"
  May 11 12:32:06.786: INFO: Deleting pod "simpletest.rc-t4xh4" in namespace "gc-3760"
  May 11 12:32:06.837: INFO: Deleting pod "simpletest.rc-tm654" in namespace "gc-3760"
  May 11 12:32:06.878: INFO: Deleting pod "simpletest.rc-tzmf7" in namespace "gc-3760"
  May 11 12:32:06.930: INFO: Deleting pod "simpletest.rc-v66c5" in namespace "gc-3760"
  May 11 12:32:06.985: INFO: Deleting pod "simpletest.rc-vd9t7" in namespace "gc-3760"
  May 11 12:32:07.026: INFO: Deleting pod "simpletest.rc-vhmbp" in namespace "gc-3760"
  May 11 12:32:07.086: INFO: Deleting pod "simpletest.rc-vs2jr" in namespace "gc-3760"
  May 11 12:32:07.129: INFO: Deleting pod "simpletest.rc-vzq7m" in namespace "gc-3760"
  May 11 12:32:07.174: INFO: Deleting pod "simpletest.rc-w2nm2" in namespace "gc-3760"
  May 11 12:32:07.234: INFO: Deleting pod "simpletest.rc-w95gn" in namespace "gc-3760"
  May 11 12:32:07.277: INFO: Deleting pod "simpletest.rc-wcxb9" in namespace "gc-3760"
  May 11 12:32:07.329: INFO: Deleting pod "simpletest.rc-whb5h" in namespace "gc-3760"
  May 11 12:32:07.378: INFO: Deleting pod "simpletest.rc-wj92p" in namespace "gc-3760"
  May 11 12:32:07.426: INFO: Deleting pod "simpletest.rc-wpcmw" in namespace "gc-3760"
  May 11 12:32:07.480: INFO: Deleting pod "simpletest.rc-wq69x" in namespace "gc-3760"
  May 11 12:32:07.538: INFO: Deleting pod "simpletest.rc-wq8wv" in namespace "gc-3760"
  May 11 12:32:07.577: INFO: Deleting pod "simpletest.rc-wqnw9" in namespace "gc-3760"
  May 11 12:32:07.630: INFO: Deleting pod "simpletest.rc-wtf8q" in namespace "gc-3760"
  May 11 12:32:07.681: INFO: Deleting pod "simpletest.rc-xc5ms" in namespace "gc-3760"
  May 11 12:32:07.731: INFO: Deleting pod "simpletest.rc-xpsxz" in namespace "gc-3760"
  May 11 12:32:07.775: INFO: Deleting pod "simpletest.rc-xx5xq" in namespace "gc-3760"
  May 11 12:32:07.831: INFO: Deleting pod "simpletest.rc-z5f4n" in namespace "gc-3760"
  May 11 12:32:07.876: INFO: Deleting pod "simpletest.rc-zkh6x" in namespace "gc-3760"
  May 11 12:32:07.934: INFO: Deleting pod "simpletest.rc-zmv84" in namespace "gc-3760"
  May 11 12:32:07.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3760" for this suite. @ 05/11/24 12:32:08.022
• [43.769 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 05/11/24 12:32:08.082
  May 11 12:32:08.082: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename gc @ 05/11/24 12:32:08.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:32:08.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:32:08.113
  STEP: create the rc @ 05/11/24 12:32:08.125
  W0511 12:32:08.131355      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/11/24 12:32:14.137
  STEP: wait for the rc to be deleted @ 05/11/24 12:32:14.152
  May 11 12:32:15.165: INFO: 80 pods remaining
  May 11 12:32:15.165: INFO: 80 pods has nil DeletionTimestamp
  May 11 12:32:15.165: INFO: 
  May 11 12:32:16.192: INFO: 70 pods remaining
  May 11 12:32:16.202: INFO: 70 pods has nil DeletionTimestamp
  May 11 12:32:16.202: INFO: 
  May 11 12:32:17.160: INFO: 60 pods remaining
  May 11 12:32:17.160: INFO: 60 pods has nil DeletionTimestamp
  May 11 12:32:17.160: INFO: 
  May 11 12:32:18.174: INFO: 40 pods remaining
  May 11 12:32:18.174: INFO: 40 pods has nil DeletionTimestamp
  May 11 12:32:18.175: INFO: 
  May 11 12:32:19.160: INFO: 31 pods remaining
  May 11 12:32:19.161: INFO: 30 pods has nil DeletionTimestamp
  May 11 12:32:19.161: INFO: 
  May 11 12:32:20.172: INFO: 20 pods remaining
  May 11 12:32:20.177: INFO: 20 pods has nil DeletionTimestamp
  May 11 12:32:20.177: INFO: 
  STEP: Gathering metrics @ 05/11/24 12:32:21.158
  W0511 12:32:21.163650      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May 11 12:32:21.163: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 11 12:32:21.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5306" for this suite. @ 05/11/24 12:32:21.168
• [13.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 05/11/24 12:32:21.176
  May 11 12:32:21.176: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename deployment @ 05/11/24 12:32:21.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:32:21.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:32:21.199
  May 11 12:32:21.226: INFO: Pod name rollover-pod: Found 0 pods out of 1
  May 11 12:32:26.230: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/11/24 12:32:26.23
  May 11 12:32:26.230: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  May 11 12:32:28.234: INFO: Creating deployment "test-rollover-deployment"
  May 11 12:32:28.242: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  May 11 12:32:30.250: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  May 11 12:32:30.257: INFO: Ensure that both replica sets have 1 created replica
  May 11 12:32:30.263: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  May 11 12:32:30.271: INFO: Updating deployment test-rollover-deployment
  May 11 12:32:30.271: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  May 11 12:32:32.279: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  May 11 12:32:32.285: INFO: Make sure deployment "test-rollover-deployment" is complete
  May 11 12:32:32.292: INFO: all replica sets need to contain the pod-template-hash label
  May 11 12:32:32.292: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 12, 32, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 12, 32, 28, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 12, 32, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 12, 32, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 11 12:32:34.300: INFO: all replica sets need to contain the pod-template-hash label
  May 11 12:32:34.300: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 12, 32, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 12, 32, 28, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 12, 32, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 12, 32, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 11 12:32:36.301: INFO: all replica sets need to contain the pod-template-hash label
  May 11 12:32:36.301: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 12, 32, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 12, 32, 28, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 12, 32, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 12, 32, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 11 12:32:38.300: INFO: all replica sets need to contain the pod-template-hash label
  May 11 12:32:38.300: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 12, 32, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 12, 32, 28, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 12, 32, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 12, 32, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 11 12:32:40.301: INFO: all replica sets need to contain the pod-template-hash label
  May 11 12:32:40.301: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 12, 32, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 12, 32, 28, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 12, 32, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 12, 32, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May 11 12:32:42.303: INFO: 
  May 11 12:32:42.303: INFO: Ensure that both old replica sets have no replicas
  May 11 12:32:42.312: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2686",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b930615e-d310-4680-94f2-a16a16818b97",
      ResourceVersion: (string) (len=5) "14964",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027548,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 11 12:32:42.316: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2686",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e2a07a64-9da6-4862-a09f-916459a403f4",
      ResourceVersion: (string) (len=5) "14954",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027550,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "b930615e-d310-4680-94f2-a16a16818b97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 39 33 30 36 31  35 65 2d 64 33 31 30 2d  |\"b930615e-d310-|
              00000120  34 36 38 30 2d 39 34 66  32 2d 61 31 36 61 31 36  |4680-94f2-a16a16|
              00000130  38 31 38 62 39 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |818b97\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 11 12:32:42.317: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  May 11 12:32:42.317: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2686",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b37cf89-0508-496d-9ef5-911ce64185ab",
      ResourceVersion: (string) (len=5) "14963",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027541,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "b930615e-d310-4680-94f2-a16a16818b97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027541,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  62 39 33 30 36 31 35 65  2d 64 33 31 30 2d 34 36  |b930615e-d310-46|
              000000c0  38 30 2d 39 34 66 32 2d  61 31 36 61 31 36 38 31  |80-94f2-a16a1681|
              000000d0  38 62 39 37 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |8b97\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 11 12:32:42.318: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2686",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d45f2c6-dbd3-4275-90f7-4f3bb8d1705b",
      ResourceVersion: (string) (len=5) "14911",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027548,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "b930615e-d310-4680-94f2-a16a16818b97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 39 33 30 36 31  35 65 2d 64 33 31 30 2d  |\"b930615e-d310-|
              00000120  34 36 38 30 2d 39 34 66  32 2d 61 31 36 61 31 36  |4680-94f2-a16a16|
              00000130  38 31 38 62 39 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |818b97\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 11 12:32:42.322: INFO: Pod "test-rollover-deployment-68774655d5-zt94g" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-zt94g",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-2686",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2fa151c5-3f4c-4761-99fa-029160d308f4",
      ResourceVersion: (string) (len=5) "14933",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027550,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "e2a07a64-9da6-4862-a09f-916459a403f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  61 30 37 61 36 34 2d 39  |d\":\"e2a07a64-9|
              00000090  64 61 36 2d 34 38 36 32  2d 61 30 39 66 2d 39 31  |da6-4862-a09f-91|
              000000a0  36 34 35 39 61 34 30 33  66 34 5c 22 7d 22 3a 7b  |6459a403f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  35 2e 31 39 37 5c 22 7d  |2.168.105.197\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c578p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c578p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-73-54",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851027550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.73.54",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.73.54"
        }
      },
      PodIP: (string) (len=15) "192.168.105.197",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.105.197"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851027550,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851027550,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://c91a85eff994d94a660c0250de86a7c97e68a087965f8ead653083afd7e90d09",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:32:42.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2686" for this suite. @ 05/11/24 12:32:42.329
• [21.163 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 05/11/24 12:32:42.339
  May 11 12:32:42.340: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename field-validation @ 05/11/24 12:32:42.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:32:42.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:32:42.365
  STEP: apply creating a deployment @ 05/11/24 12:32:42.367
  May 11 12:32:42.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-527" for this suite. @ 05/11/24 12:32:42.382
• [0.048 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 05/11/24 12:32:42.388
  May 11 12:32:42.388: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-runtime @ 05/11/24 12:32:42.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:32:42.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:32:42.406
  STEP: create the container @ 05/11/24 12:32:42.408
  W0511 12:32:42.416658      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/11/24 12:32:42.416
  STEP: get the container status @ 05/11/24 12:32:45.433
  STEP: the container should be terminated @ 05/11/24 12:32:45.436
  STEP: the termination message should be set @ 05/11/24 12:32:45.436
  May 11 12:32:45.436: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/11/24 12:32:45.436
  May 11 12:32:45.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1143" for this suite. @ 05/11/24 12:32:45.453
• [3.070 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 05/11/24 12:32:45.458
  May 11 12:32:45.458: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename field-validation @ 05/11/24 12:32:45.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:32:45.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:32:45.475
  May 11 12:32:45.478: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 12:32:48.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5801" for this suite. @ 05/11/24 12:32:48.555
• [3.103 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 05/11/24 12:32:48.561
  May 11 12:32:48.561: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 12:32:48.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:32:48.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:32:48.578
  STEP: creating an Endpoint @ 05/11/24 12:32:48.584
  STEP: waiting for available Endpoint @ 05/11/24 12:32:48.588
  STEP: listing all Endpoints @ 05/11/24 12:32:48.589
  STEP: updating the Endpoint @ 05/11/24 12:32:48.591
  STEP: fetching the Endpoint @ 05/11/24 12:32:48.599
  STEP: patching the Endpoint @ 05/11/24 12:32:48.602
  STEP: fetching the Endpoint @ 05/11/24 12:32:48.607
  STEP: deleting the Endpoint by Collection @ 05/11/24 12:32:48.61
  STEP: waiting for Endpoint deletion @ 05/11/24 12:32:48.617
  STEP: fetching the Endpoint @ 05/11/24 12:32:48.618
  May 11 12:32:48.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3707" for this suite. @ 05/11/24 12:32:48.624
• [0.068 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 05/11/24 12:32:48.629
  May 11 12:32:48.629: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename controllerrevisions @ 05/11/24 12:32:48.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:32:48.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:32:48.648
  STEP: Creating DaemonSet "e2e-x69bs-daemon-set" @ 05/11/24 12:32:48.665
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/11/24 12:32:48.671
  May 11 12:32:48.676: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:32:48.676: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:32:48.679: INFO: Number of nodes with available pods controlled by daemonset e2e-x69bs-daemon-set: 0
  May 11 12:32:48.679: INFO: Node ip-172-31-16-37 is running 0 daemon pod, expected 1
  May 11 12:32:49.675: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:32:49.675: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:32:49.678: INFO: Number of nodes with available pods controlled by daemonset e2e-x69bs-daemon-set: 2
  May 11 12:32:49.678: INFO: Node ip-172-31-35-147 is running 0 daemon pod, expected 1
  May 11 12:32:50.675: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:32:50.675: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:32:50.677: INFO: Number of nodes with available pods controlled by daemonset e2e-x69bs-daemon-set: 3
  May 11 12:32:50.677: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-x69bs-daemon-set
  STEP: Confirm DaemonSet "e2e-x69bs-daemon-set" successfully created with "daemonset-name=e2e-x69bs-daemon-set" label @ 05/11/24 12:32:50.679
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-x69bs-daemon-set" @ 05/11/24 12:32:50.686
  May 11 12:32:50.690: INFO: Located ControllerRevision: "e2e-x69bs-daemon-set-b6758494f"
  STEP: Patching ControllerRevision "e2e-x69bs-daemon-set-b6758494f" @ 05/11/24 12:32:50.693
  May 11 12:32:50.697: INFO: e2e-x69bs-daemon-set-b6758494f has been patched
  STEP: Create a new ControllerRevision @ 05/11/24 12:32:50.697
  May 11 12:32:50.702: INFO: Created ControllerRevision: e2e-x69bs-daemon-set-789b944d49
  STEP: Confirm that there are two ControllerRevisions @ 05/11/24 12:32:50.703
  May 11 12:32:50.703: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 11 12:32:50.706: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-x69bs-daemon-set-b6758494f" @ 05/11/24 12:32:50.706
  STEP: Confirm that there is only one ControllerRevision @ 05/11/24 12:32:50.711
  May 11 12:32:50.711: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 11 12:32:50.714: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-x69bs-daemon-set-789b944d49" @ 05/11/24 12:32:50.716
  May 11 12:32:50.724: INFO: e2e-x69bs-daemon-set-789b944d49 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/11/24 12:32:50.724
  W0511 12:32:50.732539      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 05/11/24 12:32:50.732
  May 11 12:32:50.732: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 11 12:32:51.732: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 11 12:32:51.737: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-x69bs-daemon-set-789b944d49=updated" @ 05/11/24 12:32:51.737
  STEP: Confirm that there is only one ControllerRevision @ 05/11/24 12:32:51.745
  May 11 12:32:51.745: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 11 12:32:51.748: INFO: Found 1 ControllerRevisions
  May 11 12:32:51.750: INFO: ControllerRevision "e2e-x69bs-daemon-set-8c5d894b4" has revision 3
  STEP: Deleting DaemonSet "e2e-x69bs-daemon-set" @ 05/11/24 12:32:51.753
  STEP: deleting DaemonSet.extensions e2e-x69bs-daemon-set in namespace controllerrevisions-1245, will wait for the garbage collector to delete the pods @ 05/11/24 12:32:51.753
  May 11 12:32:51.813: INFO: Deleting DaemonSet.extensions e2e-x69bs-daemon-set took: 6.383737ms
  May 11 12:32:51.914: INFO: Terminating DaemonSet.extensions e2e-x69bs-daemon-set pods took: 100.846361ms
  May 11 12:32:53.418: INFO: Number of nodes with available pods controlled by daemonset e2e-x69bs-daemon-set: 0
  May 11 12:32:53.418: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-x69bs-daemon-set
  May 11 12:32:53.422: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15218"},"items":null}

  May 11 12:32:53.426: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15218"},"items":null}

  May 11 12:32:53.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-1245" for this suite. @ 05/11/24 12:32:53.442
• [4.820 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 05/11/24 12:32:53.45
  May 11 12:32:53.450: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 12:32:53.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:32:53.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:32:53.467
  STEP: creating service multi-endpoint-test in namespace services-8462 @ 05/11/24 12:32:53.47
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8462 to expose endpoints map[] @ 05/11/24 12:32:53.479
  May 11 12:32:53.482: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  May 11 12:32:54.492: INFO: successfully validated that service multi-endpoint-test in namespace services-8462 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8462 @ 05/11/24 12:32:54.492
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8462 to expose endpoints map[pod1:[100]] @ 05/11/24 12:32:56.51
  May 11 12:32:56.519: INFO: successfully validated that service multi-endpoint-test in namespace services-8462 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-8462 @ 05/11/24 12:32:56.519
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8462 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/11/24 12:32:58.536
  May 11 12:32:58.549: INFO: successfully validated that service multi-endpoint-test in namespace services-8462 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/11/24 12:32:58.549
  May 11 12:32:58.549: INFO: Creating new exec pod
  May 11 12:33:01.564: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-8462 exec execpodx4nsf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  May 11 12:33:01.642: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  May 11 12:33:01.642: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 12:33:01.642: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-8462 exec execpodx4nsf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.144 80'
  May 11 12:33:01.733: INFO: stderr: "+ nc -v -t -w 2 10.152.183.144 80\n+ echo hostName\nConnection to 10.152.183.144 80 port [tcp/http] succeeded!\n"
  May 11 12:33:01.733: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 12:33:01.733: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-8462 exec execpodx4nsf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  May 11 12:33:01.815: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  May 11 12:33:01.815: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 12:33:01.815: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-8462 exec execpodx4nsf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.144 81'
  May 11 12:33:01.906: INFO: stderr: "+ nc -v -t -w 2 10.152.183.144 81\n+ echo hostName\nConnection to 10.152.183.144 81 port [tcp/*] succeeded!\n"
  May 11 12:33:01.906: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8462 @ 05/11/24 12:33:01.906
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8462 to expose endpoints map[pod2:[101]] @ 05/11/24 12:33:01.919
  May 11 12:33:01.930: INFO: successfully validated that service multi-endpoint-test in namespace services-8462 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-8462 @ 05/11/24 12:33:01.93
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8462 to expose endpoints map[] @ 05/11/24 12:33:01.943
  May 11 12:33:02.959: INFO: successfully validated that service multi-endpoint-test in namespace services-8462 exposes endpoints map[]
  May 11 12:33:02.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8462" for this suite. @ 05/11/24 12:33:02.981
• [9.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 05/11/24 12:33:02.988
  May 11 12:33:02.988: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl @ 05/11/24 12:33:02.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:33:03.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:33:03.008
  May 11 12:33:03.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-5292 create -f -'
  May 11 12:33:03.096: INFO: stderr: ""
  May 11 12:33:03.096: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  May 11 12:33:03.096: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-5292 create -f -'
  May 11 12:33:03.192: INFO: stderr: ""
  May 11 12:33:03.192: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/11/24 12:33:03.192
  May 11 12:33:04.198: INFO: Selector matched 1 pods for map[app:agnhost]
  May 11 12:33:04.198: INFO: Found 0 / 1
  May 11 12:33:05.196: INFO: Selector matched 1 pods for map[app:agnhost]
  May 11 12:33:05.196: INFO: Found 1 / 1
  May 11 12:33:05.196: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  May 11 12:33:05.199: INFO: Selector matched 1 pods for map[app:agnhost]
  May 11 12:33:05.199: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 11 12:33:05.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-5292 describe pod agnhost-primary-lmmjr'
  May 11 12:33:05.246: INFO: stderr: ""
  May 11 12:33:05.246: INFO: stdout: "Name:             agnhost-primary-lmmjr\nNamespace:        kubectl-5292\nPriority:         0\nService Account:  default\nNode:             ip-172-31-16-37/172.31.16.37\nStart Time:       Sat, 11 May 2024 12:33:03 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.204.146\nIPs:\n  IP:           192.168.204.146\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://1ac977be2d637feea7b1e83daeaea52f6d915264a10d576e47dd1b30696778db\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 11 May 2024 12:33:03 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-cngqv (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-cngqv:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-5292/agnhost-primary-lmmjr to ip-172-31-16-37\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  May 11 12:33:05.246: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-5292 describe rc agnhost-primary'
  May 11 12:33:05.296: INFO: stderr: ""
  May 11 12:33:05.296: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-5292\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-lmmjr\n"
  May 11 12:33:05.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-5292 describe service agnhost-primary'
  May 11 12:33:05.342: INFO: stderr: ""
  May 11 12:33:05.342: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-5292\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.109\nIPs:               10.152.183.109\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.204.146:6379\nSession Affinity:  None\nEvents:            <none>\n"
  May 11 12:33:05.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-5292 describe node ip-172-31-16-37'
  May 11 12:33:05.427: INFO: stderr: ""
  May 11 12:33:05.427: INFO: stdout: "Name:               ip-172-31-16-37\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-16-37\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 11 May 2024 12:06:12 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-16-37\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 11 May 2024 12:33:05 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 11 May 2024 12:07:16 +0000   Sat, 11 May 2024 12:07:16 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 11 May 2024 12:32:01 +0000   Sat, 11 May 2024 12:06:12 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 11 May 2024 12:32:01 +0000   Sat, 11 May 2024 12:06:12 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 11 May 2024 12:32:01 +0000   Sat, 11 May 2024 12:06:12 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 11 May 2024 12:32:01 +0000   Sat, 11 May 2024 12:06:42 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.16.37\n  Hostname:    ip-172-31-16-37\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      16069568Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7958136Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    2\n  ephemeral-storage:      14809713845\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7855736Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                      ec2e638bb32ae78fad23f66386dc9724\n  System UUID:                     ec2e638b-b32a-e78f-ad23-f66386dc9724\n  Boot ID:                         7d5c90c1-73e8-41c1-b5df-d6244bc1fec7\n  Kernel Version:                  6.5.0-1018-aws\n  OS Image:                        Ubuntu 22.04.4 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.29.4\n  Kube-Proxy Version:              v1.29.4\nNon-terminated Pods:               (6 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-v466k           0 (0%)        0 (0%)      0 (0%)           0 (0%)         26m\n  kube-system                      calico-node-t46qx                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         26m\n  kubectl-5292                     agnhost-primary-lmmjr                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n  sonobuoy                         sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         20m\n  sonobuoy                         sonobuoy-e2e-job-7e280b976dab4535                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         19m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-49c1eec6cf1a48c7-8n44k    0 (0%)        0 (0%)      0 (0%)           0 (0%)         19m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests    Limits\n  --------               --------    ------\n  cpu                    250m (12%)  0 (0%)\n  memory                 0 (0%)      0 (0%)\n  ephemeral-storage      0 (0%)      0 (0%)\n  hugepages-1Gi          0 (0%)      0 (0%)\n  hugepages-2Mi          0 (0%)      0 (0%)\n  scheduling.k8s.io/foo  0           0\nEvents:\n  Type     Reason                   Age   From             Message\n  ----     ------                   ----  ----             -------\n  Normal   Starting                 27m   kube-proxy       \n  Normal   Starting                 26m   kube-proxy       \n  Normal   RegisteredNode           26m   node-controller  Node ip-172-31-16-37 event: Registered Node ip-172-31-16-37 in Controller\n  Normal   Starting                 26m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      26m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  26m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  26m   kubelet          Node ip-172-31-16-37 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    26m   kubelet          Node ip-172-31-16-37 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     26m   kubelet          Node ip-172-31-16-37 status is now: NodeHasSufficientPID\n  Normal   NodeReady                26m   kubelet          Node ip-172-31-16-37 status is now: NodeReady\n"
  May 11 12:33:05.427: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-5292 describe namespace kubectl-5292'
  May 11 12:33:05.474: INFO: stderr: ""
  May 11 12:33:05.474: INFO: stdout: "Name:         kubectl-5292\nLabels:       e2e-framework=kubectl\n              e2e-run=9ba88339-bf51-4bfb-8588-41c64075f6d1\n              kubernetes.io/metadata.name=kubectl-5292\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  May 11 12:33:05.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5292" for this suite. @ 05/11/24 12:33:05.477
• [2.496 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 05/11/24 12:33:05.484
  May 11 12:33:05.484: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 12:33:05.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:33:05.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:33:05.508
  STEP: creating service in namespace services-3871 @ 05/11/24 12:33:05.51
  STEP: creating service affinity-clusterip-transition in namespace services-3871 @ 05/11/24 12:33:05.51
  STEP: creating replication controller affinity-clusterip-transition in namespace services-3871 @ 05/11/24 12:33:05.519
  I0511 12:33:05.525915      19 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-3871, replica count: 3
  I0511 12:33:08.576434      19 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 11 12:33:08.583: INFO: Creating new exec pod
  May 11 12:33:11.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-3871 exec execpod-affinitykbb9j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  May 11 12:33:11.691: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  May 11 12:33:11.691: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 12:33:11.692: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-3871 exec execpod-affinitykbb9j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.86 80'
  May 11 12:33:11.778: INFO: stderr: "+ nc -v -t -w 2 10.152.183.86 80\n+ echo hostName\nConnection to 10.152.183.86 80 port [tcp/http] succeeded!\n"
  May 11 12:33:11.778: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 12:33:11.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-3871 exec execpod-affinitykbb9j -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.86:80/ ; done'
  May 11 12:33:11.921: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n"
  May 11 12:33:11.921: INFO: stdout: "\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-zbvjb\naffinity-clusterip-transition-b5svr\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-b5svr\naffinity-clusterip-transition-zbvjb\naffinity-clusterip-transition-b5svr\naffinity-clusterip-transition-zbvjb\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-zbvjb\naffinity-clusterip-transition-b5svr\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-zbvjb\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2"
  May 11 12:33:11.921: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:11.921: INFO: Received response from host: affinity-clusterip-transition-zbvjb
  May 11 12:33:11.921: INFO: Received response from host: affinity-clusterip-transition-b5svr
  May 11 12:33:11.921: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:11.921: INFO: Received response from host: affinity-clusterip-transition-b5svr
  May 11 12:33:11.921: INFO: Received response from host: affinity-clusterip-transition-zbvjb
  May 11 12:33:11.921: INFO: Received response from host: affinity-clusterip-transition-b5svr
  May 11 12:33:11.921: INFO: Received response from host: affinity-clusterip-transition-zbvjb
  May 11 12:33:11.921: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:11.921: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:11.921: INFO: Received response from host: affinity-clusterip-transition-zbvjb
  May 11 12:33:11.921: INFO: Received response from host: affinity-clusterip-transition-b5svr
  May 11 12:33:11.921: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:11.921: INFO: Received response from host: affinity-clusterip-transition-zbvjb
  May 11 12:33:11.921: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:11.921: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:11.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-3871 exec execpod-affinitykbb9j -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.86:80/ ; done'
  May 11 12:33:12.064: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n"
  May 11 12:33:12.064: INFO: stdout: "\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-b5svr\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-b5svr\naffinity-clusterip-transition-b5svr\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-zbvjb\naffinity-clusterip-transition-zbvjb\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-b5svr\naffinity-clusterip-transition-b5svr\naffinity-clusterip-transition-zbvjb"
  May 11 12:33:12.064: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:12.064: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:12.064: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:12.064: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:12.064: INFO: Received response from host: affinity-clusterip-transition-b5svr
  May 11 12:33:12.064: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:12.064: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:12.064: INFO: Received response from host: affinity-clusterip-transition-b5svr
  May 11 12:33:12.064: INFO: Received response from host: affinity-clusterip-transition-b5svr
  May 11 12:33:12.064: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:12.064: INFO: Received response from host: affinity-clusterip-transition-zbvjb
  May 11 12:33:12.064: INFO: Received response from host: affinity-clusterip-transition-zbvjb
  May 11 12:33:12.064: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:12.064: INFO: Received response from host: affinity-clusterip-transition-b5svr
  May 11 12:33:12.064: INFO: Received response from host: affinity-clusterip-transition-b5svr
  May 11 12:33:12.064: INFO: Received response from host: affinity-clusterip-transition-zbvjb
  May 11 12:33:42.064: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-3871 exec execpod-affinitykbb9j -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.86:80/ ; done'
  May 11 12:33:42.212: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.86:80/\n"
  May 11 12:33:42.212: INFO: stdout: "\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2\naffinity-clusterip-transition-76jj2"
  May 11 12:33:42.212: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:42.212: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:42.212: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:42.212: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:42.212: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:42.212: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:42.212: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:42.212: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:42.212: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:42.212: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:42.212: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:42.212: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:42.212: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:42.212: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:42.212: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:42.212: INFO: Received response from host: affinity-clusterip-transition-76jj2
  May 11 12:33:42.213: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-3871, will wait for the garbage collector to delete the pods @ 05/11/24 12:33:42.225
  May 11 12:33:42.288: INFO: Deleting ReplicationController affinity-clusterip-transition took: 10.204052ms
  May 11 12:33:42.389: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.998882ms
  May 11 12:33:45.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3871" for this suite. @ 05/11/24 12:33:45.506
• [40.029 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 05/11/24 12:33:45.515
  May 11 12:33:45.515: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/11/24 12:33:45.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:33:45.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:33:45.536
  STEP: getting /apis @ 05/11/24 12:33:45.537
  STEP: getting /apis/storage.k8s.io @ 05/11/24 12:33:45.54
  STEP: getting /apis/storage.k8s.io/v1 @ 05/11/24 12:33:45.541
  STEP: creating @ 05/11/24 12:33:45.542
  STEP: watching @ 05/11/24 12:33:45.559
  May 11 12:33:45.559: INFO: starting watch
  STEP: getting @ 05/11/24 12:33:45.565
  STEP: listing in namespace @ 05/11/24 12:33:45.567
  STEP: listing across namespaces @ 05/11/24 12:33:45.571
  STEP: patching @ 05/11/24 12:33:45.574
  STEP: updating @ 05/11/24 12:33:45.579
  May 11 12:33:45.585: INFO: waiting for watch events with expected annotations in namespace
  May 11 12:33:45.585: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/11/24 12:33:45.585
  STEP: deleting a collection @ 05/11/24 12:33:45.604
  May 11 12:33:45.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-3436" for this suite. @ 05/11/24 12:33:45.625
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 05/11/24 12:33:45.632
  May 11 12:33:45.632: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename downward-api @ 05/11/24 12:33:45.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:33:45.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:33:45.65
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 12:33:45.652
  STEP: Saw pod success @ 05/11/24 12:33:47.671
  May 11 12:33:47.674: INFO: Trying to get logs from node ip-172-31-73-54 pod downwardapi-volume-1d2100e2-097f-411c-afbc-03690e5c6523 container client-container: <nil>
  STEP: delete the pod @ 05/11/24 12:33:47.685
  May 11 12:33:47.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2871" for this suite. @ 05/11/24 12:33:47.703
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 05/11/24 12:33:47.709
  May 11 12:33:47.709: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir @ 05/11/24 12:33:47.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:33:47.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:33:47.73
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/11/24 12:33:47.732
  STEP: Saw pod success @ 05/11/24 12:33:49.749
  May 11 12:33:49.752: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-697c49fc-2013-46a2-9717-70d250dbca04 container test-container: <nil>
  STEP: delete the pod @ 05/11/24 12:33:49.758
  May 11 12:33:49.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9550" for this suite. @ 05/11/24 12:33:49.775
• [2.072 seconds]
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 05/11/24 12:33:49.781
  May 11 12:33:49.781: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubelet-test @ 05/11/24 12:33:49.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:33:49.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:33:49.799
  STEP: Waiting for pod completion @ 05/11/24 12:33:49.812
  May 11 12:33:51.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7393" for this suite. @ 05/11/24 12:33:51.829
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 05/11/24 12:33:51.835
  May 11 12:33:51.835: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pv @ 05/11/24 12:33:51.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:33:51.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:33:51.853
  STEP: Creating initial PV and PVC @ 05/11/24 12:33:51.854
  May 11 12:33:51.854: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9003" @ 05/11/24 12:33:51.867
  STEP: Listing PVCs in namespace "pv-9003" @ 05/11/24 12:33:51.87
  STEP: Reading "pvc-dnntk" Status @ 05/11/24 12:33:51.874
  STEP: Reading "pv-9003-l9ccl" Status @ 05/11/24 12:33:51.878
  STEP: Patching "pvc-dnntk" Status @ 05/11/24 12:33:51.881
  STEP: Patching "pv-9003-l9ccl" Status @ 05/11/24 12:33:51.887
  STEP: Updating "pvc-dnntk" Status @ 05/11/24 12:33:51.9
  STEP: Updating "pv-9003-l9ccl" Status @ 05/11/24 12:33:51.924
  May 11 12:33:51.933: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  May 11 12:33:51.933: INFO: Deleting PersistentVolumeClaim "pvc-dnntk"
  May 11 12:33:51.941: INFO: Deleting PersistentVolume "pv-9003-l9ccl"
  May 11 12:33:51.946: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9003" for this suite. @ 05/11/24 12:33:51.949
• [0.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 05/11/24 12:33:51.957
  May 11 12:33:51.957: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename daemonsets @ 05/11/24 12:33:51.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:33:51.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:33:51.979
  May 11 12:33:51.996: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/11/24 12:33:52.001
  May 11 12:33:52.003: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 12:33:52.003: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/11/24 12:33:52.003
  May 11 12:33:52.020: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 12:33:52.020: INFO: Node ip-172-31-35-147 is running 0 daemon pod, expected 1
  May 11 12:33:53.022: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 12:33:53.022: INFO: Node ip-172-31-35-147 is running 0 daemon pod, expected 1
  May 11 12:33:54.021: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 11 12:33:54.021: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/11/24 12:33:54.025
  May 11 12:33:54.039: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 11 12:33:54.039: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  May 11 12:33:55.040: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 12:33:55.040: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/11/24 12:33:55.04
  May 11 12:33:55.048: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 12:33:55.048: INFO: Node ip-172-31-35-147 is running 0 daemon pod, expected 1
  May 11 12:33:56.050: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 12:33:56.050: INFO: Node ip-172-31-35-147 is running 0 daemon pod, expected 1
  May 11 12:33:57.047: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 11 12:33:57.047: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/11/24 12:33:57.053
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-19, will wait for the garbage collector to delete the pods @ 05/11/24 12:33:57.054
  May 11 12:33:57.113: INFO: Deleting DaemonSet.extensions daemon-set took: 6.574877ms
  May 11 12:33:57.214: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.903569ms
  May 11 12:33:58.317: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 12:33:58.317: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 11 12:33:58.319: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15898"},"items":null}

  May 11 12:33:58.323: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15898"},"items":null}

  May 11 12:33:58.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-19" for this suite. @ 05/11/24 12:33:58.347
• [6.397 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 05/11/24 12:33:58.354
  May 11 12:33:58.354: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/11/24 12:33:58.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:33:58.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:33:58.375
  May 11 12:33:58.377: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/11/24 12:33:59.582
  May 11 12:33:59.582: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4302 --namespace=crd-publish-openapi-4302 create -f -'
  May 11 12:34:01.645: INFO: stderr: ""
  May 11 12:34:01.645: INFO: stdout: "e2e-test-crd-publish-openapi-9546-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  May 11 12:34:01.645: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4302 --namespace=crd-publish-openapi-4302 delete e2e-test-crd-publish-openapi-9546-crds test-cr'
  May 11 12:34:01.691: INFO: stderr: ""
  May 11 12:34:01.691: INFO: stdout: "e2e-test-crd-publish-openapi-9546-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  May 11 12:34:01.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4302 --namespace=crd-publish-openapi-4302 apply -f -'
  May 11 12:34:01.740: INFO: stderr: ""
  May 11 12:34:01.740: INFO: stdout: "e2e-test-crd-publish-openapi-9546-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  May 11 12:34:01.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4302 --namespace=crd-publish-openapi-4302 delete e2e-test-crd-publish-openapi-9546-crds test-cr'
  May 11 12:34:01.792: INFO: stderr: ""
  May 11 12:34:01.792: INFO: stdout: "e2e-test-crd-publish-openapi-9546-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/11/24 12:34:01.793
  May 11 12:34:01.793: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4302 explain e2e-test-crd-publish-openapi-9546-crds'
  May 11 12:34:01.829: INFO: stderr: ""
  May 11 12:34:01.829: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-9546-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  May 11 12:34:03.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4302" for this suite. @ 05/11/24 12:34:03.107
• [4.761 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 05/11/24 12:34:03.115
  May 11 12:34:03.115: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename init-container @ 05/11/24 12:34:03.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:34:03.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:34:03.136
  STEP: creating the pod @ 05/11/24 12:34:03.138
  May 11 12:34:03.138: INFO: PodSpec: initContainers in spec.initContainers
  May 11 12:34:07.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8721" for this suite. @ 05/11/24 12:34:07.634
• [4.524 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 05/11/24 12:34:07.64
  May 11 12:34:07.640: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename job @ 05/11/24 12:34:07.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:34:07.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:34:07.662
  STEP: Creating a job @ 05/11/24 12:34:07.664
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/11/24 12:34:07.672
  STEP: patching /status @ 05/11/24 12:34:09.677
  STEP: updating /status @ 05/11/24 12:34:09.684
  STEP: get /status @ 05/11/24 12:34:09.691
  May 11 12:34:09.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2322" for this suite. @ 05/11/24 12:34:09.697
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 05/11/24 12:34:09.706
  May 11 12:34:09.706: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl @ 05/11/24 12:34:09.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:34:09.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:34:09.722
  STEP: creating a replication controller @ 05/11/24 12:34:09.724
  May 11 12:34:09.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3565 create -f -'
  May 11 12:34:09.802: INFO: stderr: ""
  May 11 12:34:09.802: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/11/24 12:34:09.802
  May 11 12:34:09.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3565 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 11 12:34:09.845: INFO: stderr: ""
  May 11 12:34:09.845: INFO: stdout: "update-demo-nautilus-57ftb update-demo-nautilus-6qwk6 "
  May 11 12:34:09.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3565 get pods update-demo-nautilus-57ftb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 11 12:34:09.887: INFO: stderr: ""
  May 11 12:34:09.887: INFO: stdout: ""
  May 11 12:34:09.887: INFO: update-demo-nautilus-57ftb is created but not running
  May 11 12:34:14.890: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3565 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 11 12:34:14.931: INFO: stderr: ""
  May 11 12:34:14.931: INFO: stdout: "update-demo-nautilus-57ftb update-demo-nautilus-6qwk6 "
  May 11 12:34:14.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3565 get pods update-demo-nautilus-57ftb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 11 12:34:14.970: INFO: stderr: ""
  May 11 12:34:14.970: INFO: stdout: "true"
  May 11 12:34:14.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3565 get pods update-demo-nautilus-57ftb -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 11 12:34:15.009: INFO: stderr: ""
  May 11 12:34:15.009: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 11 12:34:15.009: INFO: validating pod update-demo-nautilus-57ftb
  May 11 12:34:15.014: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 11 12:34:15.014: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 11 12:34:15.014: INFO: update-demo-nautilus-57ftb is verified up and running
  May 11 12:34:15.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3565 get pods update-demo-nautilus-6qwk6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 11 12:34:15.057: INFO: stderr: ""
  May 11 12:34:15.057: INFO: stdout: "true"
  May 11 12:34:15.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3565 get pods update-demo-nautilus-6qwk6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 11 12:34:15.096: INFO: stderr: ""
  May 11 12:34:15.096: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 11 12:34:15.096: INFO: validating pod update-demo-nautilus-6qwk6
  May 11 12:34:15.101: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 11 12:34:15.101: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 11 12:34:15.101: INFO: update-demo-nautilus-6qwk6 is verified up and running
  STEP: using delete to clean up resources @ 05/11/24 12:34:15.101
  May 11 12:34:15.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3565 delete --grace-period=0 --force -f -'
  May 11 12:34:15.144: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 11 12:34:15.144: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  May 11 12:34:15.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3565 get rc,svc -l name=update-demo --no-headers'
  May 11 12:34:15.190: INFO: stderr: "No resources found in kubectl-3565 namespace.\n"
  May 11 12:34:15.190: INFO: stdout: ""
  May 11 12:34:15.190: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3565 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May 11 12:34:15.229: INFO: stderr: ""
  May 11 12:34:15.229: INFO: stdout: ""
  May 11 12:34:15.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3565" for this suite. @ 05/11/24 12:34:15.234
• [5.534 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 05/11/24 12:34:15.24
  May 11 12:34:15.240: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename runtimeclass @ 05/11/24 12:34:15.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:34:15.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:34:15.26
  May 11 12:34:17.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9998" for this suite. @ 05/11/24 12:34:17.29
• [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 05/11/24 12:34:17.298
  May 11 12:34:17.298: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename configmap @ 05/11/24 12:34:17.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:34:17.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:34:17.318
  STEP: Creating configMap configmap-3081/configmap-test-80e91b3f-feb5-4116-86d9-7d2112d1b9dc @ 05/11/24 12:34:17.32
  STEP: Creating a pod to test consume configMaps @ 05/11/24 12:34:17.324
  STEP: Saw pod success @ 05/11/24 12:34:21.344
  May 11 12:34:21.347: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-configmaps-b5220975-1f64-4049-abf3-9fee47eef356 container env-test: <nil>
  STEP: delete the pod @ 05/11/24 12:34:21.354
  May 11 12:34:21.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3081" for this suite. @ 05/11/24 12:34:21.373
• [4.080 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 05/11/24 12:34:21.379
  May 11 12:34:21.379: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename svcaccounts @ 05/11/24 12:34:21.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:34:21.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:34:21.396
  STEP: Creating a pod to test service account token:  @ 05/11/24 12:34:21.398
  STEP: Saw pod success @ 05/11/24 12:34:25.42
  May 11 12:34:25.423: INFO: Trying to get logs from node ip-172-31-73-54 pod test-pod-e3afd320-e99a-407c-ab82-e692a700abf8 container agnhost-container: <nil>
  STEP: delete the pod @ 05/11/24 12:34:25.429
  May 11 12:34:25.446: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4886" for this suite. @ 05/11/24 12:34:25.449
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 05/11/24 12:34:25.46
  May 11 12:34:25.460: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename namespaces @ 05/11/24 12:34:25.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:34:25.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:34:25.478
  STEP: Creating a test namespace @ 05/11/24 12:34:25.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:34:25.496
  STEP: Creating a pod in the namespace @ 05/11/24 12:34:25.498
  STEP: Waiting for the pod to have running status @ 05/11/24 12:34:25.507
  STEP: Deleting the namespace @ 05/11/24 12:34:27.516
  STEP: Waiting for the namespace to be removed. @ 05/11/24 12:34:27.523
  STEP: Recreating the namespace @ 05/11/24 12:34:38.527
  STEP: Verifying there are no pods in the namespace @ 05/11/24 12:34:38.546
  May 11 12:34:38.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2557" for this suite. @ 05/11/24 12:34:38.555
  STEP: Destroying namespace "nsdeletetest-6783" for this suite. @ 05/11/24 12:34:38.561
  May 11 12:34:38.566: INFO: Namespace nsdeletetest-6783 was already deleted
  STEP: Destroying namespace "nsdeletetest-3269" for this suite. @ 05/11/24 12:34:38.566
• [13.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 05/11/24 12:34:38.574
  May 11 12:34:38.574: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename statefulset @ 05/11/24 12:34:38.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:34:38.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:34:38.593
  STEP: Creating service test in namespace statefulset-5652 @ 05/11/24 12:34:38.595
  STEP: Looking for a node to schedule stateful set and pod @ 05/11/24 12:34:38.6
  STEP: Creating pod with conflicting port in namespace statefulset-5652 @ 05/11/24 12:34:38.603
  STEP: Waiting until pod test-pod will start running in namespace statefulset-5652 @ 05/11/24 12:34:38.61
  STEP: Creating statefulset with conflicting port in namespace statefulset-5652 @ 05/11/24 12:34:40.618
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-5652 @ 05/11/24 12:34:40.623
  May 11 12:34:40.636: INFO: Observed stateful pod in namespace: statefulset-5652, name: ss-0, uid: 86624e33-4fcc-46ea-bab8-78f691f19244, status phase: Pending. Waiting for statefulset controller to delete.
  May 11 12:34:40.656: INFO: Observed stateful pod in namespace: statefulset-5652, name: ss-0, uid: 86624e33-4fcc-46ea-bab8-78f691f19244, status phase: Failed. Waiting for statefulset controller to delete.
  May 11 12:34:40.665: INFO: Observed stateful pod in namespace: statefulset-5652, name: ss-0, uid: 86624e33-4fcc-46ea-bab8-78f691f19244, status phase: Failed. Waiting for statefulset controller to delete.
  May 11 12:34:40.668: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-5652
  STEP: Removing pod with conflicting port in namespace statefulset-5652 @ 05/11/24 12:34:40.668
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-5652 and will be in running state @ 05/11/24 12:34:40.684
  May 11 12:34:42.691: INFO: Deleting all statefulset in ns statefulset-5652
  May 11 12:34:42.695: INFO: Scaling statefulset ss to 0
  May 11 12:34:52.708: INFO: Waiting for statefulset status.replicas updated to 0
  May 11 12:34:52.712: INFO: Deleting statefulset ss
  May 11 12:34:52.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5652" for this suite. @ 05/11/24 12:34:52.726
• [14.159 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 05/11/24 12:34:52.733
  May 11 12:34:52.733: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 12:34:52.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:34:52.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:34:52.75
  STEP: Setting up server cert @ 05/11/24 12:34:52.777
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 12:34:53.063
  STEP: Deploying the webhook pod @ 05/11/24 12:34:53.073
  STEP: Wait for the deployment to be ready @ 05/11/24 12:34:53.086
  May 11 12:34:53.092: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/11/24 12:34:55.105
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 12:34:55.115
  May 11 12:34:56.116: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/11/24 12:34:56.124
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/11/24 12:34:56.124
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/11/24 12:34:56.138
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/11/24 12:34:57.149
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/11/24 12:34:57.149
  STEP: Having no error when timeout is longer than webhook latency @ 05/11/24 12:34:58.177
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/11/24 12:34:58.177
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/11/24 12:35:03.208
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/11/24 12:35:03.208
  May 11 12:35:08.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-903" for this suite. @ 05/11/24 12:35:08.282
  STEP: Destroying namespace "webhook-markers-2999" for this suite. @ 05/11/24 12:35:08.296
• [15.567 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 05/11/24 12:35:08.301
  May 11 12:35:08.301: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename resourcequota @ 05/11/24 12:35:08.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:35:08.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:35:08.32
  STEP: Counting existing ResourceQuota @ 05/11/24 12:35:25.327
  STEP: Creating a ResourceQuota @ 05/11/24 12:35:30.331
  STEP: Ensuring resource quota status is calculated @ 05/11/24 12:35:30.335
  STEP: Creating a ConfigMap @ 05/11/24 12:35:32.34
  STEP: Ensuring resource quota status captures configMap creation @ 05/11/24 12:35:32.353
  STEP: Deleting a ConfigMap @ 05/11/24 12:35:34.357
  STEP: Ensuring resource quota status released usage @ 05/11/24 12:35:34.363
  May 11 12:35:36.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3646" for this suite. @ 05/11/24 12:35:36.372
• [28.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 05/11/24 12:35:36.378
  May 11 12:35:36.378: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename replicaset @ 05/11/24 12:35:36.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:35:36.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:35:36.398
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/11/24 12:35:36.399
  May 11 12:35:36.407: INFO: Pod name sample-pod: Found 0 pods out of 1
  May 11 12:35:41.413: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/11/24 12:35:41.413
  STEP: getting scale subresource @ 05/11/24 12:35:41.413
  STEP: updating a scale subresource @ 05/11/24 12:35:41.416
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/11/24 12:35:41.422
  STEP: Patch a scale subresource @ 05/11/24 12:35:41.425
  May 11 12:35:41.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7965" for this suite. @ 05/11/24 12:35:41.439
• [5.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 05/11/24 12:35:41.447
  May 11 12:35:41.447: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/11/24 12:35:41.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:35:41.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:35:41.469
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/11/24 12:35:41.471
  May 11 12:35:41.471: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 12:35:42.670: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 12:35:47.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7349" for this suite. @ 05/11/24 12:35:47.568
• [6.131 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 05/11/24 12:35:47.579
  May 11 12:35:47.579: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 12:35:47.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:35:47.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:35:47.599
  STEP: Setting up server cert @ 05/11/24 12:35:47.62
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 12:35:47.904
  STEP: Deploying the webhook pod @ 05/11/24 12:35:47.913
  STEP: Wait for the deployment to be ready @ 05/11/24 12:35:47.923
  May 11 12:35:47.931: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/11/24 12:35:49.948
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 12:35:49.964
  May 11 12:35:50.965: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 11 12:35:50.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6606-crds.webhook.example.com via the AdmissionRegistration API @ 05/11/24 12:35:51.485
  STEP: Creating a custom resource while v1 is storage version @ 05/11/24 12:35:51.499
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/11/24 12:35:53.53
  STEP: Patching the custom resource while v2 is storage version @ 05/11/24 12:35:53.548
  May 11 12:35:54.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3378" for this suite. @ 05/11/24 12:35:54.142
  STEP: Destroying namespace "webhook-markers-7551" for this suite. @ 05/11/24 12:35:54.148
• [6.577 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 05/11/24 12:35:54.156
  May 11 12:35:54.156: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir @ 05/11/24 12:35:54.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:35:54.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:35:54.175
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/11/24 12:35:54.177
  STEP: Saw pod success @ 05/11/24 12:35:58.199
  May 11 12:35:58.202: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-3f9a9962-1b05-4f2f-ac96-9814f2471810 container test-container: <nil>
  STEP: delete the pod @ 05/11/24 12:35:58.224
  May 11 12:35:58.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3939" for this suite. @ 05/11/24 12:35:58.243
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 05/11/24 12:35:58.25
  May 11 12:35:58.251: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename proxy @ 05/11/24 12:35:58.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:35:58.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:35:58.271
  STEP: starting an echo server on multiple ports @ 05/11/24 12:35:58.28
  STEP: creating replication controller proxy-service-7s8lj in namespace proxy-5451 @ 05/11/24 12:35:58.28
  I0511 12:35:58.290631      19 runners.go:197] Created replication controller with name: proxy-service-7s8lj, namespace: proxy-5451, replica count: 1
  I0511 12:35:59.341867      19 runners.go:197] proxy-service-7s8lj Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0511 12:36:00.342094      19 runners.go:197] proxy-service-7s8lj Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 11 12:36:00.346: INFO: setup took 2.073865609s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/11/24 12:36:00.346
  May 11 12:36:00.351: INFO: (0) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 4.213522ms)
  May 11 12:36:00.351: INFO: (0) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 4.392971ms)
  May 11 12:36:00.351: INFO: (0) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 4.510853ms)
  May 11 12:36:00.353: INFO: (0) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 6.018245ms)
  May 11 12:36:00.353: INFO: (0) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 6.207085ms)
  May 11 12:36:00.353: INFO: (0) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 6.191044ms)
  May 11 12:36:00.353: INFO: (0) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 6.588495ms)
  May 11 12:36:00.354: INFO: (0) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 7.600173ms)
  May 11 12:36:00.355: INFO: (0) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 8.37708ms)
  May 11 12:36:00.355: INFO: (0) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 8.638384ms)
  May 11 12:36:00.355: INFO: (0) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 8.617381ms)
  May 11 12:36:00.355: INFO: (0) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 8.786005ms)
  May 11 12:36:00.357: INFO: (0) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 9.918855ms)
  May 11 12:36:00.357: INFO: (0) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 10.167664ms)
  May 11 12:36:00.357: INFO: (0) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 10.396443ms)
  May 11 12:36:00.357: INFO: (0) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 10.7645ms)
  May 11 12:36:00.361: INFO: (1) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 3.319645ms)
  May 11 12:36:00.361: INFO: (1) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 3.544112ms)
  May 11 12:36:00.361: INFO: (1) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 3.539331ms)
  May 11 12:36:00.361: INFO: (1) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 3.761694ms)
  May 11 12:36:00.362: INFO: (1) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 4.059435ms)
  May 11 12:36:00.362: INFO: (1) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 4.851364ms)
  May 11 12:36:00.362: INFO: (1) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 4.994963ms)
  May 11 12:36:00.363: INFO: (1) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 5.50689ms)
  May 11 12:36:00.363: INFO: (1) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 5.707304ms)
  May 11 12:36:00.363: INFO: (1) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 5.754714ms)
  May 11 12:36:00.364: INFO: (1) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 6.301433ms)
  May 11 12:36:00.364: INFO: (1) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 6.315925ms)
  May 11 12:36:00.364: INFO: (1) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 6.560729ms)
  May 11 12:36:00.364: INFO: (1) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 6.970973ms)
  May 11 12:36:00.365: INFO: (1) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 6.977916ms)
  May 11 12:36:00.365: INFO: (1) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 7.332198ms)
  May 11 12:36:00.370: INFO: (2) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 4.411311ms)
  May 11 12:36:00.370: INFO: (2) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 4.662704ms)
  May 11 12:36:00.370: INFO: (2) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 5.167284ms)
  May 11 12:36:00.371: INFO: (2) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 6.101962ms)
  May 11 12:36:00.371: INFO: (2) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 5.782079ms)
  May 11 12:36:00.371: INFO: (2) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 5.972275ms)
  May 11 12:36:00.372: INFO: (2) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 6.730928ms)
  May 11 12:36:00.372: INFO: (2) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 6.949384ms)
  May 11 12:36:00.372: INFO: (2) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 7.025736ms)
  May 11 12:36:00.373: INFO: (2) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 7.307222ms)
  May 11 12:36:00.373: INFO: (2) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 7.872362ms)
  May 11 12:36:00.373: INFO: (2) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 7.910918ms)
  May 11 12:36:00.373: INFO: (2) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 7.793837ms)
  May 11 12:36:00.374: INFO: (2) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 8.679227ms)
  May 11 12:36:00.374: INFO: (2) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 9.116982ms)
  May 11 12:36:00.375: INFO: (2) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 9.403983ms)
  May 11 12:36:00.378: INFO: (3) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 3.587287ms)
  May 11 12:36:00.379: INFO: (3) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 4.409825ms)
  May 11 12:36:00.379: INFO: (3) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 4.48616ms)
  May 11 12:36:00.379: INFO: (3) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 4.362497ms)
  May 11 12:36:00.381: INFO: (3) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 5.557779ms)
  May 11 12:36:00.381: INFO: (3) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 6.05309ms)
  May 11 12:36:00.381: INFO: (3) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 6.106865ms)
  May 11 12:36:00.381: INFO: (3) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 6.016189ms)
  May 11 12:36:00.382: INFO: (3) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 6.68031ms)
  May 11 12:36:00.382: INFO: (3) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 6.498013ms)
  May 11 12:36:00.382: INFO: (3) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 6.695264ms)
  May 11 12:36:00.382: INFO: (3) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 6.924662ms)
  May 11 12:36:00.383: INFO: (3) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 7.933815ms)
  May 11 12:36:00.383: INFO: (3) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 7.871636ms)
  May 11 12:36:00.383: INFO: (3) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 8.103994ms)
  May 11 12:36:00.383: INFO: (3) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 8.52176ms)
  May 11 12:36:00.387: INFO: (4) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 3.228467ms)
  May 11 12:36:00.387: INFO: (4) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 3.130562ms)
  May 11 12:36:00.388: INFO: (4) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 4.356265ms)
  May 11 12:36:00.388: INFO: (4) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 4.387957ms)
  May 11 12:36:00.389: INFO: (4) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 5.472116ms)
  May 11 12:36:00.389: INFO: (4) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 5.61353ms)
  May 11 12:36:00.389: INFO: (4) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 5.554175ms)
  May 11 12:36:00.390: INFO: (4) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 6.009999ms)
  May 11 12:36:00.390: INFO: (4) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 6.425708ms)
  May 11 12:36:00.390: INFO: (4) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 6.839633ms)
  May 11 12:36:00.390: INFO: (4) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 6.711272ms)
  May 11 12:36:00.390: INFO: (4) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 6.775949ms)
  May 11 12:36:00.391: INFO: (4) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 7.0098ms)
  May 11 12:36:00.391: INFO: (4) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 6.993107ms)
  May 11 12:36:00.391: INFO: (4) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 7.475083ms)
  May 11 12:36:00.391: INFO: (4) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 7.655328ms)
  May 11 12:36:00.395: INFO: (5) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 3.138056ms)
  May 11 12:36:00.396: INFO: (5) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 3.886883ms)
  May 11 12:36:00.396: INFO: (5) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 4.390335ms)
  May 11 12:36:00.396: INFO: (5) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 4.387321ms)
  May 11 12:36:00.396: INFO: (5) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 4.326123ms)
  May 11 12:36:00.397: INFO: (5) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 5.03358ms)
  May 11 12:36:00.398: INFO: (5) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 5.717196ms)
  May 11 12:36:00.398: INFO: (5) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 5.734736ms)
  May 11 12:36:00.398: INFO: (5) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 6.057325ms)
  May 11 12:36:00.398: INFO: (5) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 5.962256ms)
  May 11 12:36:00.398: INFO: (5) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 6.642502ms)
  May 11 12:36:00.398: INFO: (5) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 6.773778ms)
  May 11 12:36:00.399: INFO: (5) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 6.882475ms)
  May 11 12:36:00.399: INFO: (5) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 7.012975ms)
  May 11 12:36:00.399: INFO: (5) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 7.339138ms)
  May 11 12:36:00.399: INFO: (5) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 7.709879ms)
  May 11 12:36:00.403: INFO: (6) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 3.398574ms)
  May 11 12:36:00.406: INFO: (6) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 6.204813ms)
  May 11 12:36:00.406: INFO: (6) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 6.509906ms)
  May 11 12:36:00.406: INFO: (6) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 6.483969ms)
  May 11 12:36:00.406: INFO: (6) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 6.536161ms)
  May 11 12:36:00.406: INFO: (6) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 6.72006ms)
  May 11 12:36:00.407: INFO: (6) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 6.909873ms)
  May 11 12:36:00.407: INFO: (6) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 7.073616ms)
  May 11 12:36:00.407: INFO: (6) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 6.921737ms)
  May 11 12:36:00.407: INFO: (6) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 7.652873ms)
  May 11 12:36:00.407: INFO: (6) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 7.58858ms)
  May 11 12:36:00.408: INFO: (6) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 7.862912ms)
  May 11 12:36:00.408: INFO: (6) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 8.113793ms)
  May 11 12:36:00.408: INFO: (6) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 8.44651ms)
  May 11 12:36:00.408: INFO: (6) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 8.49761ms)
  May 11 12:36:00.409: INFO: (6) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 9.487978ms)
  May 11 12:36:00.412: INFO: (7) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 3.092896ms)
  May 11 12:36:00.413: INFO: (7) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 3.405223ms)
  May 11 12:36:00.413: INFO: (7) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 3.729112ms)
  May 11 12:36:00.414: INFO: (7) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 4.100683ms)
  May 11 12:36:00.414: INFO: (7) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 4.496811ms)
  May 11 12:36:00.414: INFO: (7) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 4.335477ms)
  May 11 12:36:00.415: INFO: (7) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 5.611395ms)
  May 11 12:36:00.415: INFO: (7) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 5.517924ms)
  May 11 12:36:00.415: INFO: (7) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 5.807296ms)
  May 11 12:36:00.416: INFO: (7) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 6.017149ms)
  May 11 12:36:00.416: INFO: (7) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 6.118889ms)
  May 11 12:36:00.416: INFO: (7) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 6.269523ms)
  May 11 12:36:00.416: INFO: (7) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 6.683216ms)
  May 11 12:36:00.417: INFO: (7) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 7.133128ms)
  May 11 12:36:00.417: INFO: (7) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 7.382455ms)
  May 11 12:36:00.417: INFO: (7) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 7.593696ms)
  May 11 12:36:00.420: INFO: (8) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 3.195338ms)
  May 11 12:36:00.421: INFO: (8) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 3.924701ms)
  May 11 12:36:00.421: INFO: (8) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 3.985236ms)
  May 11 12:36:00.422: INFO: (8) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 4.994377ms)
  May 11 12:36:00.422: INFO: (8) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 5.178961ms)
  May 11 12:36:00.423: INFO: (8) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 5.542426ms)
  May 11 12:36:00.423: INFO: (8) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 5.846387ms)
  May 11 12:36:00.423: INFO: (8) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 6.031634ms)
  May 11 12:36:00.423: INFO: (8) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 6.17869ms)
  May 11 12:36:00.423: INFO: (8) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 6.285422ms)
  May 11 12:36:00.424: INFO: (8) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 6.212111ms)
  May 11 12:36:00.424: INFO: (8) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 6.370374ms)
  May 11 12:36:00.425: INFO: (8) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 7.148633ms)
  May 11 12:36:00.425: INFO: (8) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 7.250166ms)
  May 11 12:36:00.425: INFO: (8) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 7.590823ms)
  May 11 12:36:00.426: INFO: (8) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 8.037638ms)
  May 11 12:36:00.429: INFO: (9) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 2.961333ms)
  May 11 12:36:00.430: INFO: (9) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 4.083278ms)
  May 11 12:36:00.430: INFO: (9) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 4.0317ms)
  May 11 12:36:00.431: INFO: (9) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 4.810439ms)
  May 11 12:36:00.431: INFO: (9) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 4.983105ms)
  May 11 12:36:00.431: INFO: (9) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 5.491135ms)
  May 11 12:36:00.431: INFO: (9) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 5.528013ms)
  May 11 12:36:00.431: INFO: (9) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 5.640672ms)
  May 11 12:36:00.432: INFO: (9) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 6.475835ms)
  May 11 12:36:00.433: INFO: (9) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 7.007661ms)
  May 11 12:36:00.433: INFO: (9) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 7.229745ms)
  May 11 12:36:00.433: INFO: (9) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 7.292404ms)
  May 11 12:36:00.433: INFO: (9) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 7.223358ms)
  May 11 12:36:00.435: INFO: (9) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 8.635802ms)
  May 11 12:36:00.435: INFO: (9) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 8.875373ms)
  May 11 12:36:00.435: INFO: (9) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 9.12951ms)
  May 11 12:36:00.441: INFO: (10) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 5.580139ms)
  May 11 12:36:00.441: INFO: (10) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 5.621692ms)
  May 11 12:36:00.441: INFO: (10) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 5.587586ms)
  May 11 12:36:00.441: INFO: (10) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 5.581422ms)
  May 11 12:36:00.441: INFO: (10) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 5.901206ms)
  May 11 12:36:00.441: INFO: (10) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 5.872615ms)
  May 11 12:36:00.441: INFO: (10) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 5.734104ms)
  May 11 12:36:00.442: INFO: (10) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 7.163122ms)
  May 11 12:36:00.442: INFO: (10) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 7.085714ms)
  May 11 12:36:00.442: INFO: (10) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 7.239113ms)
  May 11 12:36:00.442: INFO: (10) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 7.435935ms)
  May 11 12:36:00.443: INFO: (10) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 7.548215ms)
  May 11 12:36:00.443: INFO: (10) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 7.53272ms)
  May 11 12:36:00.443: INFO: (10) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 7.801568ms)
  May 11 12:36:00.443: INFO: (10) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 8.025491ms)
  May 11 12:36:00.443: INFO: (10) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 8.210694ms)
  May 11 12:36:00.447: INFO: (11) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 3.0556ms)
  May 11 12:36:00.447: INFO: (11) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 3.776591ms)
  May 11 12:36:00.448: INFO: (11) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 3.99991ms)
  May 11 12:36:00.448: INFO: (11) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 4.794553ms)
  May 11 12:36:00.448: INFO: (11) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 4.707495ms)
  May 11 12:36:00.448: INFO: (11) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 4.684847ms)
  May 11 12:36:00.449: INFO: (11) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 5.187336ms)
  May 11 12:36:00.449: INFO: (11) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 5.845945ms)
  May 11 12:36:00.450: INFO: (11) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 6.143081ms)
  May 11 12:36:00.450: INFO: (11) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 6.869908ms)
  May 11 12:36:00.450: INFO: (11) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 6.580547ms)
  May 11 12:36:00.451: INFO: (11) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 6.77507ms)
  May 11 12:36:00.451: INFO: (11) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 7.393171ms)
  May 11 12:36:00.451: INFO: (11) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 7.742217ms)
  May 11 12:36:00.451: INFO: (11) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 7.879913ms)
  May 11 12:36:00.452: INFO: (11) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 8.866437ms)
  May 11 12:36:00.455: INFO: (12) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 2.567627ms)
  May 11 12:36:00.457: INFO: (12) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 3.969925ms)
  May 11 12:36:00.457: INFO: (12) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 4.215959ms)
  May 11 12:36:00.457: INFO: (12) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 4.500255ms)
  May 11 12:36:00.457: INFO: (12) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 4.388228ms)
  May 11 12:36:00.457: INFO: (12) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 4.645421ms)
  May 11 12:36:00.458: INFO: (12) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 5.121583ms)
  May 11 12:36:00.458: INFO: (12) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 5.41138ms)
  May 11 12:36:00.459: INFO: (12) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 5.7559ms)
  May 11 12:36:00.459: INFO: (12) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 5.964573ms)
  May 11 12:36:00.459: INFO: (12) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 6.041462ms)
  May 11 12:36:00.459: INFO: (12) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 6.357463ms)
  May 11 12:36:00.460: INFO: (12) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 7.02556ms)
  May 11 12:36:00.460: INFO: (12) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 7.090382ms)
  May 11 12:36:00.460: INFO: (12) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 7.226399ms)
  May 11 12:36:00.460: INFO: (12) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 7.59556ms)
  May 11 12:36:00.463: INFO: (13) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 3.117824ms)
  May 11 12:36:00.465: INFO: (13) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 4.132583ms)
  May 11 12:36:00.465: INFO: (13) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 4.639001ms)
  May 11 12:36:00.465: INFO: (13) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 4.558769ms)
  May 11 12:36:00.466: INFO: (13) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 5.613536ms)
  May 11 12:36:00.466: INFO: (13) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 5.530396ms)
  May 11 12:36:00.466: INFO: (13) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 5.69544ms)
  May 11 12:36:00.467: INFO: (13) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 6.109778ms)
  May 11 12:36:00.467: INFO: (13) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 6.739247ms)
  May 11 12:36:00.467: INFO: (13) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 6.71108ms)
  May 11 12:36:00.468: INFO: (13) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 7.042096ms)
  May 11 12:36:00.468: INFO: (13) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 7.026833ms)
  May 11 12:36:00.468: INFO: (13) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 7.275539ms)
  May 11 12:36:00.468: INFO: (13) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 7.554886ms)
  May 11 12:36:00.468: INFO: (13) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 7.715993ms)
  May 11 12:36:00.469: INFO: (13) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 8.376047ms)
  May 11 12:36:00.474: INFO: (14) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 5.070801ms)
  May 11 12:36:00.480: INFO: (14) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 10.893242ms)
  May 11 12:36:00.481: INFO: (14) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 12.280025ms)
  May 11 12:36:00.482: INFO: (14) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 13.469202ms)
  May 11 12:36:00.482: INFO: (14) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 13.259829ms)
  May 11 12:36:00.483: INFO: (14) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 13.663857ms)
  May 11 12:36:00.483: INFO: (14) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 13.483408ms)
  May 11 12:36:00.483: INFO: (14) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 13.706719ms)
  May 11 12:36:00.483: INFO: (14) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 13.81974ms)
  May 11 12:36:00.483: INFO: (14) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 13.879545ms)
  May 11 12:36:00.483: INFO: (14) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 14.36778ms)
  May 11 12:36:00.483: INFO: (14) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 14.230205ms)
  May 11 12:36:00.484: INFO: (14) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 14.605924ms)
  May 11 12:36:00.484: INFO: (14) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 14.687054ms)
  May 11 12:36:00.484: INFO: (14) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 15.39304ms)
  May 11 12:36:00.486: INFO: (14) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 16.973499ms)
  May 11 12:36:00.491: INFO: (15) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 4.54428ms)
  May 11 12:36:00.492: INFO: (15) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 5.556402ms)
  May 11 12:36:00.493: INFO: (15) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 6.394506ms)
  May 11 12:36:00.493: INFO: (15) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 6.789312ms)
  May 11 12:36:00.493: INFO: (15) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 6.859556ms)
  May 11 12:36:00.494: INFO: (15) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 7.455886ms)
  May 11 12:36:00.494: INFO: (15) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 7.932492ms)
  May 11 12:36:00.496: INFO: (15) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 10.066579ms)
  May 11 12:36:00.496: INFO: (15) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 10.206822ms)
  May 11 12:36:00.499: INFO: (15) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 12.427005ms)
  May 11 12:36:00.499: INFO: (15) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 12.593551ms)
  May 11 12:36:00.499: INFO: (15) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 12.506979ms)
  May 11 12:36:00.499: INFO: (15) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 12.496883ms)
  May 11 12:36:00.499: INFO: (15) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 12.737463ms)
  May 11 12:36:00.499: INFO: (15) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 12.663898ms)
  May 11 12:36:00.504: INFO: (15) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 17.603303ms)
  May 11 12:36:00.512: INFO: (16) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 7.098181ms)
  May 11 12:36:00.512: INFO: (16) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 7.841432ms)
  May 11 12:36:00.512: INFO: (16) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 8.144409ms)
  May 11 12:36:00.514: INFO: (16) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 9.095246ms)
  May 11 12:36:00.514: INFO: (16) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 9.328242ms)
  May 11 12:36:00.514: INFO: (16) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 10.082015ms)
  May 11 12:36:00.514: INFO: (16) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 9.932871ms)
  May 11 12:36:00.515: INFO: (16) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 10.509329ms)
  May 11 12:36:00.516: INFO: (16) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 11.377876ms)
  May 11 12:36:00.516: INFO: (16) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 10.909697ms)
  May 11 12:36:00.516: INFO: (16) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 12.137593ms)
  May 11 12:36:00.517: INFO: (16) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 12.046839ms)
  May 11 12:36:00.517: INFO: (16) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 12.287384ms)
  May 11 12:36:00.517: INFO: (16) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 12.480733ms)
  May 11 12:36:00.517: INFO: (16) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 12.962373ms)
  May 11 12:36:00.518: INFO: (16) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 13.442714ms)
  May 11 12:36:00.522: INFO: (17) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 3.653572ms)
  May 11 12:36:00.522: INFO: (17) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 3.696844ms)
  May 11 12:36:00.524: INFO: (17) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 6.425889ms)
  May 11 12:36:00.524: INFO: (17) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 6.346828ms)
  May 11 12:36:00.525: INFO: (17) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 7.073354ms)
  May 11 12:36:00.526: INFO: (17) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 7.215595ms)
  May 11 12:36:00.526: INFO: (17) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 7.601857ms)
  May 11 12:36:00.526: INFO: (17) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 7.776612ms)
  May 11 12:36:00.526: INFO: (17) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 8.243311ms)
  May 11 12:36:00.526: INFO: (17) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 8.295389ms)
  May 11 12:36:00.526: INFO: (17) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 7.804825ms)
  May 11 12:36:00.527: INFO: (17) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 9.040322ms)
  May 11 12:36:00.528: INFO: (17) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 9.115242ms)
  May 11 12:36:00.528: INFO: (17) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 9.138297ms)
  May 11 12:36:00.528: INFO: (17) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 9.279632ms)
  May 11 12:36:00.528: INFO: (17) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 9.703055ms)
  May 11 12:36:00.532: INFO: (18) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 4.026175ms)
  May 11 12:36:00.533: INFO: (18) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 4.679299ms)
  May 11 12:36:00.534: INFO: (18) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 5.327218ms)
  May 11 12:36:00.534: INFO: (18) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 5.169494ms)
  May 11 12:36:00.535: INFO: (18) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 6.472005ms)
  May 11 12:36:00.536: INFO: (18) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 7.003817ms)
  May 11 12:36:00.536: INFO: (18) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 7.046905ms)
  May 11 12:36:00.536: INFO: (18) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 7.504614ms)
  May 11 12:36:00.536: INFO: (18) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 7.336321ms)
  May 11 12:36:00.537: INFO: (18) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 7.825808ms)
  May 11 12:36:00.537: INFO: (18) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 8.643867ms)
  May 11 12:36:00.537: INFO: (18) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 8.68232ms)
  May 11 12:36:00.538: INFO: (18) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 9.671644ms)
  May 11 12:36:00.538: INFO: (18) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 9.661183ms)
  May 11 12:36:00.539: INFO: (18) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 9.732327ms)
  May 11 12:36:00.540: INFO: (18) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 11.257725ms)
  May 11 12:36:00.545: INFO: (19) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">test<... (200; 5.081347ms)
  May 11 12:36:00.547: INFO: (19) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h/proxy/rewriteme">test</a> (200; 6.073884ms)
  May 11 12:36:00.547: INFO: (19) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:1080/proxy/rewriteme">... (200; 6.297839ms)
  May 11 12:36:00.547: INFO: (19) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 6.360809ms)
  May 11 12:36:00.547: INFO: (19) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/: <a href="/api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:443/proxy/tlsrewritem... (200; 6.848697ms)
  May 11 12:36:00.548: INFO: (19) /api/v1/namespaces/proxy-5451/pods/http:proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 7.776305ms)
  May 11 12:36:00.549: INFO: (19) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname2/proxy/: bar (200; 8.235014ms)
  May 11 12:36:00.549: INFO: (19) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname2/proxy/: bar (200; 8.216682ms)
  May 11 12:36:00.549: INFO: (19) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:162/proxy/: bar (200; 8.558969ms)
  May 11 12:36:00.550: INFO: (19) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:460/proxy/: tls baz (200; 9.602056ms)
  May 11 12:36:00.550: INFO: (19) /api/v1/namespaces/proxy-5451/pods/proxy-service-7s8lj-zvq7h:160/proxy/: foo (200; 9.902881ms)
  May 11 12:36:00.551: INFO: (19) /api/v1/namespaces/proxy-5451/pods/https:proxy-service-7s8lj-zvq7h:462/proxy/: tls qux (200; 10.095224ms)
  May 11 12:36:00.551: INFO: (19) /api/v1/namespaces/proxy-5451/services/http:proxy-service-7s8lj:portname1/proxy/: foo (200; 10.077428ms)
  May 11 12:36:00.550: INFO: (19) /api/v1/namespaces/proxy-5451/services/proxy-service-7s8lj:portname1/proxy/: foo (200; 9.945493ms)
  May 11 12:36:00.552: INFO: (19) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname2/proxy/: tls qux (200; 11.146716ms)
  May 11 12:36:00.552: INFO: (19) /api/v1/namespaces/proxy-5451/services/https:proxy-service-7s8lj:tlsportname1/proxy/: tls baz (200; 11.611015ms)
  STEP: deleting ReplicationController proxy-service-7s8lj in namespace proxy-5451, will wait for the garbage collector to delete the pods @ 05/11/24 12:36:00.552
  May 11 12:36:00.616: INFO: Deleting ReplicationController proxy-service-7s8lj took: 7.960221ms
  May 11 12:36:00.717: INFO: Terminating ReplicationController proxy-service-7s8lj pods took: 101.089365ms
  May 11 12:36:02.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5451" for this suite. @ 05/11/24 12:36:02.823
• [4.580 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 05/11/24 12:36:02.831
  May 11 12:36:02.831: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 12:36:02.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:36:02.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:36:02.847
  STEP: Creating configMap with name cm-test-opt-del-f1cddf81-b9d6-4fc5-868c-727d9341b72d @ 05/11/24 12:36:02.854
  STEP: Creating configMap with name cm-test-opt-upd-1a20d9e5-58c4-41e1-b33b-1cc4e4d654fe @ 05/11/24 12:36:02.86
  STEP: Creating the pod @ 05/11/24 12:36:02.863
  STEP: Deleting configmap cm-test-opt-del-f1cddf81-b9d6-4fc5-868c-727d9341b72d @ 05/11/24 12:36:04.906
  STEP: Updating configmap cm-test-opt-upd-1a20d9e5-58c4-41e1-b33b-1cc4e4d654fe @ 05/11/24 12:36:04.912
  STEP: Creating configMap with name cm-test-opt-create-9322fc1e-838a-49a8-ab3a-f247ec864aa2 @ 05/11/24 12:36:04.916
  STEP: waiting to observe update in volume @ 05/11/24 12:36:04.922
  May 11 12:37:31.313: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3828" for this suite. @ 05/11/24 12:37:31.317
• [88.494 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 05/11/24 12:37:31.325
  May 11 12:37:31.326: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 12:37:31.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:37:31.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:37:31.353
  STEP: Creating secret with name projected-secret-test-29827613-336a-49ae-be6f-dc0cec5d34e6 @ 05/11/24 12:37:31.356
  STEP: Creating a pod to test consume secrets @ 05/11/24 12:37:31.36
  STEP: Saw pod success @ 05/11/24 12:37:33.38
  May 11 12:37:33.383: INFO: Trying to get logs from node ip-172-31-16-37 pod pod-projected-secrets-f45c74cc-8105-45df-ae0f-bb0e1a30d6ae container secret-volume-test: <nil>
  STEP: delete the pod @ 05/11/24 12:37:33.397
  May 11 12:37:33.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4237" for this suite. @ 05/11/24 12:37:33.418
• [2.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 05/11/24 12:37:33.426
  May 11 12:37:33.426: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pods @ 05/11/24 12:37:33.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:37:33.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:37:33.446
  STEP: Saw pod success @ 05/11/24 12:37:39.5
  May 11 12:37:39.504: INFO: Trying to get logs from node ip-172-31-35-147 pod client-envvars-1924d931-47a7-4afe-8e94-d3402eef5890 container env3cont: <nil>
  STEP: delete the pod @ 05/11/24 12:37:39.52
  May 11 12:37:39.535: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2763" for this suite. @ 05/11/24 12:37:39.539
• [6.119 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 05/11/24 12:37:39.545
  May 11 12:37:39.545: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 12:37:39.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:37:39.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:37:39.563
  STEP: creating a Service @ 05/11/24 12:37:39.568
  STEP: watching for the Service to be added @ 05/11/24 12:37:39.582
  May 11 12:37:39.584: INFO: Found Service test-service-jqmwm in namespace services-2629 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31216}]
  May 11 12:37:39.584: INFO: Service test-service-jqmwm created
  STEP: Getting /status @ 05/11/24 12:37:39.584
  May 11 12:37:39.588: INFO: Service test-service-jqmwm has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/11/24 12:37:39.588
  STEP: watching for the Service to be patched @ 05/11/24 12:37:39.594
  May 11 12:37:39.595: INFO: observed Service test-service-jqmwm in namespace services-2629 with annotations: map[] & LoadBalancer: {[]}
  May 11 12:37:39.595: INFO: Found Service test-service-jqmwm in namespace services-2629 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  May 11 12:37:39.595: INFO: Service test-service-jqmwm has service status patched
  STEP: updating the ServiceStatus @ 05/11/24 12:37:39.595
  May 11 12:37:39.603: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/11/24 12:37:39.603
  May 11 12:37:39.604: INFO: Observed Service test-service-jqmwm in namespace services-2629 with annotations: map[] & Conditions: {[]}
  May 11 12:37:39.604: INFO: Observed event: &Service{ObjectMeta:{test-service-jqmwm  services-2629  834a85fb-2e12-4bc1-8850-1daa7f45dce7 17326 0 2024-05-11 12:37:39 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-05-11 12:37:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-05-11 12:37:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31216,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.196,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.196],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  May 11 12:37:39.604: INFO: Found Service test-service-jqmwm in namespace services-2629 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 11 12:37:39.604: INFO: Service test-service-jqmwm has service status updated
  STEP: patching the service @ 05/11/24 12:37:39.604
  STEP: watching for the Service to be patched @ 05/11/24 12:37:39.616
  May 11 12:37:39.617: INFO: observed Service test-service-jqmwm in namespace services-2629 with labels: map[test-service-static:true]
  May 11 12:37:39.617: INFO: observed Service test-service-jqmwm in namespace services-2629 with labels: map[test-service-static:true]
  May 11 12:37:39.617: INFO: observed Service test-service-jqmwm in namespace services-2629 with labels: map[test-service-static:true]
  May 11 12:37:39.617: INFO: Found Service test-service-jqmwm in namespace services-2629 with labels: map[test-service:patched test-service-static:true]
  May 11 12:37:39.617: INFO: Service test-service-jqmwm patched
  STEP: deleting the service @ 05/11/24 12:37:39.617
  STEP: watching for the Service to be deleted @ 05/11/24 12:37:39.633
  May 11 12:37:39.634: INFO: Observed event: ADDED
  May 11 12:37:39.634: INFO: Observed event: MODIFIED
  May 11 12:37:39.634: INFO: Observed event: MODIFIED
  May 11 12:37:39.634: INFO: Observed event: MODIFIED
  May 11 12:37:39.634: INFO: Found Service test-service-jqmwm in namespace services-2629 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  May 11 12:37:39.634: INFO: Service test-service-jqmwm deleted
  May 11 12:37:39.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2629" for this suite. @ 05/11/24 12:37:39.637
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 05/11/24 12:37:39.643
  May 11 12:37:39.643: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename subpath @ 05/11/24 12:37:39.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:37:39.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:37:39.658
  STEP: Setting up data @ 05/11/24 12:37:39.661
  STEP: Creating pod pod-subpath-test-secret-fvdb @ 05/11/24 12:37:39.669
  STEP: Creating a pod to test atomic-volume-subpath @ 05/11/24 12:37:39.669
  STEP: Saw pod success @ 05/11/24 12:38:03.741
  May 11 12:38:03.744: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-subpath-test-secret-fvdb container test-container-subpath-secret-fvdb: <nil>
  STEP: delete the pod @ 05/11/24 12:38:03.754
  STEP: Deleting pod pod-subpath-test-secret-fvdb @ 05/11/24 12:38:03.772
  May 11 12:38:03.772: INFO: Deleting pod "pod-subpath-test-secret-fvdb" in namespace "subpath-7375"
  May 11 12:38:03.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7375" for this suite. @ 05/11/24 12:38:03.778
• [24.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 05/11/24 12:38:03.785
  May 11 12:38:03.785: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename secrets @ 05/11/24 12:38:03.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:38:03.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:38:03.802
  STEP: Creating secret with name secret-test-88adf3f9-be24-481c-a5be-3c7e8a3456ed @ 05/11/24 12:38:03.804
  STEP: Creating a pod to test consume secrets @ 05/11/24 12:38:03.81
  STEP: Saw pod success @ 05/11/24 12:38:07.832
  May 11 12:38:07.835: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-secrets-135900b3-1e0e-44af-bc6c-82a1f48abde1 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/11/24 12:38:07.843
  May 11 12:38:07.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9541" for this suite. @ 05/11/24 12:38:07.862
• [4.084 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 05/11/24 12:38:07.869
  May 11 12:38:07.869: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename runtimeclass @ 05/11/24 12:38:07.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:38:07.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:38:07.884
  STEP: Deleting RuntimeClass runtimeclass-6388-delete-me @ 05/11/24 12:38:07.891
  STEP: Waiting for the RuntimeClass to disappear @ 05/11/24 12:38:07.897
  May 11 12:38:07.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6388" for this suite. @ 05/11/24 12:38:07.907
• [0.046 seconds]
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 05/11/24 12:38:07.915
  May 11 12:38:07.915: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename discovery @ 05/11/24 12:38:07.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:38:07.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:38:07.932
  STEP: Setting up server cert @ 05/11/24 12:38:07.936
  STEP: Requesting APIResourceList from "/api/v1" @ 05/11/24 12:38:08.031
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/11/24 12:38:08.032
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/11/24 12:38:08.033
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/11/24 12:38:08.034
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/11/24 12:38:08.035
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/11/24 12:38:08.035
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/11/24 12:38:08.036
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/11/24 12:38:08.037
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/11/24 12:38:08.037
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/11/24 12:38:08.038
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/11/24 12:38:08.038
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/11/24 12:38:08.039
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/11/24 12:38:08.04
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/11/24 12:38:08.04
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/11/24 12:38:08.041
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/11/24 12:38:08.041
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/11/24 12:38:08.042
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/11/24 12:38:08.043
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/11/24 12:38:08.043
  May 11 12:38:08.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3408" for this suite. @ 05/11/24 12:38:08.048
• [0.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 05/11/24 12:38:08.058
  May 11 12:38:08.058: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename limitrange @ 05/11/24 12:38:08.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:38:08.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:38:08.077
  STEP: Creating a LimitRange @ 05/11/24 12:38:08.079
  STEP: Setting up watch @ 05/11/24 12:38:08.079
  STEP: Submitting a LimitRange @ 05/11/24 12:38:08.183
  STEP: Verifying LimitRange creation was observed @ 05/11/24 12:38:08.189
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/11/24 12:38:08.189
  May 11 12:38:08.191: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  May 11 12:38:08.191: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/11/24 12:38:08.191
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/11/24 12:38:08.198
  May 11 12:38:08.201: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  May 11 12:38:08.202: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/11/24 12:38:08.202
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/11/24 12:38:08.21
  May 11 12:38:08.214: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  May 11 12:38:08.215: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/11/24 12:38:08.215
  STEP: Failing to create a Pod with more than max resources @ 05/11/24 12:38:08.216
  STEP: Updating a LimitRange @ 05/11/24 12:38:08.219
  STEP: Verifying LimitRange updating is effective @ 05/11/24 12:38:08.223
  STEP: Creating a Pod with less than former min resources @ 05/11/24 12:38:10.228
  STEP: Failing to create a Pod with more than max resources @ 05/11/24 12:38:10.235
  STEP: Deleting a LimitRange @ 05/11/24 12:38:10.236
  STEP: Verifying the LimitRange was deleted @ 05/11/24 12:38:10.246
  May 11 12:38:15.250: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/11/24 12:38:15.25
  May 11 12:38:15.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6514" for this suite. @ 05/11/24 12:38:15.263
• [7.214 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 05/11/24 12:38:15.272
  May 11 12:38:15.272: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename cronjob @ 05/11/24 12:38:15.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:38:15.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:38:15.287
  STEP: Creating a ReplaceConcurrent cronjob @ 05/11/24 12:38:15.291
  STEP: Ensuring a job is scheduled @ 05/11/24 12:38:15.294
  STEP: Ensuring exactly one is scheduled @ 05/11/24 12:39:01.298
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/11/24 12:39:01.301
  STEP: Ensuring the job is replaced with a new one @ 05/11/24 12:39:01.304
  STEP: Removing cronjob @ 05/11/24 12:40:01.309
  May 11 12:40:01.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9089" for this suite. @ 05/11/24 12:40:01.321
• [106.056 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 05/11/24 12:40:01.328
  May 11 12:40:01.328: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename replication-controller @ 05/11/24 12:40:01.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:40:01.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:40:01.354
  STEP: creating a ReplicationController @ 05/11/24 12:40:01.36
  STEP: waiting for RC to be added @ 05/11/24 12:40:01.363
  STEP: waiting for available Replicas @ 05/11/24 12:40:01.366
  STEP: patching ReplicationController @ 05/11/24 12:40:02.243
  STEP: waiting for RC to be modified @ 05/11/24 12:40:02.25
  STEP: patching ReplicationController status @ 05/11/24 12:40:02.251
  STEP: waiting for RC to be modified @ 05/11/24 12:40:02.256
  STEP: waiting for available Replicas @ 05/11/24 12:40:02.256
  STEP: fetching ReplicationController status @ 05/11/24 12:40:02.261
  STEP: patching ReplicationController scale @ 05/11/24 12:40:02.263
  STEP: waiting for RC to be modified @ 05/11/24 12:40:02.27
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/11/24 12:40:02.27
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/11/24 12:40:02.905
  STEP: updating ReplicationController status @ 05/11/24 12:40:02.909
  STEP: waiting for RC to be modified @ 05/11/24 12:40:02.913
  STEP: listing all ReplicationControllers @ 05/11/24 12:40:02.913
  STEP: checking that ReplicationController has expected values @ 05/11/24 12:40:02.916
  STEP: deleting ReplicationControllers by collection @ 05/11/24 12:40:02.916
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/11/24 12:40:02.927
  May 11 12:40:02.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0511 12:40:02.971572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-8005" for this suite. @ 05/11/24 12:40:02.975
• [1.653 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 05/11/24 12:40:02.982
  May 11 12:40:02.982: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename cronjob @ 05/11/24 12:40:02.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:40:02.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:40:03.001
  STEP: Creating a cronjob @ 05/11/24 12:40:03.003
  STEP: creating @ 05/11/24 12:40:03.003
  STEP: getting @ 05/11/24 12:40:03.008
  STEP: listing @ 05/11/24 12:40:03.011
  STEP: watching @ 05/11/24 12:40:03.014
  May 11 12:40:03.014: INFO: starting watch
  STEP: cluster-wide listing @ 05/11/24 12:40:03.014
  STEP: cluster-wide watching @ 05/11/24 12:40:03.017
  May 11 12:40:03.017: INFO: starting watch
  STEP: patching @ 05/11/24 12:40:03.018
  STEP: updating @ 05/11/24 12:40:03.025
  May 11 12:40:03.035: INFO: waiting for watch events with expected annotations
  May 11 12:40:03.035: INFO: saw patched and updated annotations
  STEP: patching /status @ 05/11/24 12:40:03.035
  STEP: updating /status @ 05/11/24 12:40:03.042
  STEP: get /status @ 05/11/24 12:40:03.047
  STEP: deleting @ 05/11/24 12:40:03.051
  STEP: deleting a collection @ 05/11/24 12:40:03.066
  May 11 12:40:03.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-426" for this suite. @ 05/11/24 12:40:03.08
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 05/11/24 12:40:03.088
  May 11 12:40:03.088: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename init-container @ 05/11/24 12:40:03.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:40:03.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:40:03.103
  STEP: creating the pod @ 05/11/24 12:40:03.106
  May 11 12:40:03.106: INFO: PodSpec: initContainers in spec.initContainers
  E0511 12:40:03.971689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:04.971928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:05.972025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:40:06.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8154" for this suite. @ 05/11/24 12:40:06.129
• [3.046 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 05/11/24 12:40:06.134
  May 11 12:40:06.134: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename daemonsets @ 05/11/24 12:40:06.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:40:06.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:40:06.153
  May 11 12:40:06.174: INFO: Create a RollingUpdate DaemonSet
  May 11 12:40:06.180: INFO: Check that daemon pods launch on every node of the cluster
  May 11 12:40:06.184: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:40:06.184: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:40:06.186: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 12:40:06.186: INFO: Node ip-172-31-16-37 is running 0 daemon pod, expected 1
  E0511 12:40:06.972974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:40:07.183: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:40:07.183: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:40:07.187: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 11 12:40:07.187: INFO: Node ip-172-31-16-37 is running 0 daemon pod, expected 1
  E0511 12:40:07.973066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:40:08.184: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:40:08.184: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:40:08.187: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 11 12:40:08.187: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  May 11 12:40:08.187: INFO: Update the DaemonSet to trigger a rollout
  May 11 12:40:08.202: INFO: Updating DaemonSet daemon-set
  E0511 12:40:08.974056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:40:09.212: INFO: Roll back the DaemonSet before rollout is complete
  May 11 12:40:09.220: INFO: Updating DaemonSet daemon-set
  May 11 12:40:09.220: INFO: Make sure DaemonSet rollback is complete
  May 11 12:40:09.224: INFO: Wrong image for pod: daemon-set-jw4s7. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  May 11 12:40:09.224: INFO: Pod daemon-set-jw4s7 is not available
  May 11 12:40:09.229: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:40:09.229: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0511 12:40:09.974334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:40:10.230: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:40:10.230: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0511 12:40:10.975155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:40:11.225: INFO: Pod daemon-set-mrj7m is not available
  May 11 12:40:11.230: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:40:11.230: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 05/11/24 12:40:11.235
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8570, will wait for the garbage collector to delete the pods @ 05/11/24 12:40:11.235
  May 11 12:40:11.300: INFO: Deleting DaemonSet.extensions daemon-set took: 6.953203ms
  May 11 12:40:11.400: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.37834ms
  E0511 12:40:11.975401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:12.976454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:40:13.006: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 12:40:13.006: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 11 12:40:13.010: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18133"},"items":null}

  May 11 12:40:13.012: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18133"},"items":null}

  May 11 12:40:13.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8570" for this suite. @ 05/11/24 12:40:13.029
• [6.902 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 05/11/24 12:40:13.037
  May 11 12:40:13.037: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 12:40:13.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:40:13.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:40:13.053
  STEP: creating service nodeport-test with type=NodePort in namespace services-4537 @ 05/11/24 12:40:13.055
  STEP: creating replication controller nodeport-test in namespace services-4537 @ 05/11/24 12:40:13.069
  I0511 12:40:13.079705      19 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-4537, replica count: 2
  E0511 12:40:13.976811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:14.977695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:15.977804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0511 12:40:16.132255      19 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 11 12:40:16.132: INFO: Creating new exec pod
  E0511 12:40:16.977899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:17.978112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:18.978195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:40:19.149: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-4537 exec execpodmbvb2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  May 11 12:40:19.247: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  May 11 12:40:19.247: INFO: stdout: "nodeport-test-xl2qs"
  May 11 12:40:19.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-4537 exec execpodmbvb2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.112 80'
  May 11 12:40:19.342: INFO: stderr: "+ nc -v -t -w 2 10.152.183.112 80\n+ echo hostName\nConnection to 10.152.183.112 80 port [tcp/http] succeeded!\n"
  May 11 12:40:19.342: INFO: stdout: "nodeport-test-xl2qs"
  May 11 12:40:19.342: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-4537 exec execpodmbvb2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.37 30551'
  May 11 12:40:19.424: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.16.37 30551\nConnection to 172.31.16.37 30551 port [tcp/*] succeeded!\n"
  May 11 12:40:19.424: INFO: stdout: "nodeport-test-jlpd2"
  May 11 12:40:19.424: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-4537 exec execpodmbvb2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.35.147 30551'
  May 11 12:40:19.510: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.35.147 30551\nConnection to 172.31.35.147 30551 port [tcp/*] succeeded!\n"
  May 11 12:40:19.510: INFO: stdout: "nodeport-test-jlpd2"
  May 11 12:40:19.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4537" for this suite. @ 05/11/24 12:40:19.515
• [6.484 seconds]
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 05/11/24 12:40:19.521
  May 11 12:40:19.521: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename cronjob @ 05/11/24 12:40:19.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:40:19.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:40:19.541
  STEP: Creating a ForbidConcurrent cronjob @ 05/11/24 12:40:19.545
  STEP: Ensuring a job is scheduled @ 05/11/24 12:40:19.551
  E0511 12:40:19.978295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:20.978389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:21.979159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:22.979250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:23.979822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:24.979927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:25.980096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:26.980417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:27.980941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:28.981043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:29.981164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:30.981252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:31.981647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:32.981736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:33.982214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:34.982396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:35.982484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:36.982559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:37.982661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:38.982772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:39.982868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:40.982981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:41.983111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:42.983195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:43.983967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:44.984061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:45.984121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:46.985104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:47.985870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:48.986641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:49.987088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:50.987257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:51.988040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:52.988152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:53.988253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:54.988636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:55.989186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:56.989304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:57.989406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:58.989972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:40:59.990029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:00.990115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/11/24 12:41:01.556
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/11/24 12:41:01.56
  STEP: Ensuring no more jobs are scheduled @ 05/11/24 12:41:01.562
  E0511 12:41:01.991169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:02.991464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:03.992457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:04.992537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:05.992593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:06.992661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:07.992772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:08.992867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:09.992910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:10.993014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:11.993106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:12.993346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:13.994111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:14.994203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:15.994244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:16.994308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:17.995163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:18.995317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:19.996341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:20.996531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:21.997426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:22.998254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:23.998349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:24.998432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:25.998531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:26.998605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:27.998716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:28.999143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:29.999826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:31.000056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:32.000171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:33.000262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:34.000348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:35.000540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:36.000643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:37.000741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:38.001735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:39.001836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:40.002900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:41.003582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:42.004617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:43.004708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:44.004806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:45.004888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:46.005505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:47.005608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:48.005738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:49.005830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:50.006166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:51.006163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:52.007150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:53.007345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:54.008175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:55.008560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:56.008831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:57.008941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:58.009849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:41:59.010921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:00.011843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:01.011934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:02.012047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:03.012341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:04.012447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:05.012735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:06.013487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:07.013591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:08.013984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:09.014076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:10.014169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:11.015132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:12.015439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:13.015614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:14.016469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:15.016547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:16.017149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:17.017509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:18.017667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:19.017783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:20.018406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:21.018507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:22.018601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:23.019171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:24.019762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:25.019964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:26.020095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:27.020195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:28.020665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:29.020858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:30.021540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:31.021742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:32.022596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:33.022691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:34.022951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:35.023054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:36.023266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:37.023386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:38.023453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:39.023548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:40.024081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:41.024582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:42.024681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:43.024765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:44.025396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:45.025491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:46.026447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:47.026541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:48.026644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:49.026743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:50.026834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:51.026924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:52.027048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:53.027137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:54.027220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:55.027338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:56.028152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:57.028411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:58.028601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:42:59.028683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:00.028784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:01.028873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:02.028971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:03.029090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:04.029998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:05.030078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:06.030244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:07.030334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:08.030433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:09.030517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:10.031145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:11.031227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:12.031330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:13.032284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:14.032983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:15.033167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:16.033443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:17.033526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:18.034381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:19.034476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:20.035374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:21.035491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:22.036542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:23.036628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:24.036736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:25.036853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:26.037126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:27.037231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:28.037322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:29.037514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:30.038427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:31.038382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:32.039143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:33.039321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:34.039427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:35.040311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:36.040572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:37.040671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:38.040741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:39.040819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:40.040941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:41.041131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:42.041846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:43.042061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:44.042997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:45.043070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:46.043414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:47.043591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:48.043629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:49.043748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:50.044089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:51.043991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:52.044024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:53.044112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:54.044322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:55.044587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:56.045395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:57.045493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:58.045586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:43:59.045747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:00.046679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:01.046774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:02.046877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:03.047118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:04.047289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:05.047387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:06.047987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:07.048282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:08.049068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:09.049360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:10.049748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:11.049956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:12.050946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:13.051047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:14.051860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:15.052845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:16.053213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:17.053499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:18.053535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:19.054376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:20.054635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:21.055526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:22.056321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:23.056557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:24.057313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:25.057542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:26.058383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:27.058485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:28.058980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:29.059192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:30.059948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:31.060144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:32.060227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:33.060404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:34.060494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:35.060688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:36.061369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:37.061469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:38.062057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:39.063130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:40.064153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:41.064243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:42.064944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:43.065098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:44.065358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:45.065531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:46.066228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:47.066471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:48.067148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:49.067240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:50.067717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:51.067943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:52.068343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:53.068527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:54.068605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:55.068702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:56.069202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:57.069290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:58.069975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:44:59.070072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:00.070170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:01.071124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:02.071981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:03.072085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:04.072150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:05.072326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:06.072384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:07.072471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:08.073276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:09.073367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:10.073462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:11.074402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:12.074753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:13.075131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:14.075440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:15.075535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:16.076567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:17.076673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:18.076764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:19.076856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:20.076948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:21.077132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:22.077225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:23.078204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:24.078285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:25.079155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:26.079646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:27.079736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:28.080656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:29.080834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:30.081603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:31.081783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:32.082531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:33.082622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:34.083537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:35.083682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:36.084415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:37.084516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:38.085398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:39.085634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:40.085746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:41.085950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:42.086064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:43.087128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:44.088149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:45.089230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:46.090024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:47.090069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:48.090160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:49.090235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:50.090435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:51.090536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:52.090597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:53.091129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:54.091224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:55.091374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:56.091396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:57.091512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:58.091608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:45:59.092207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:00.092565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:01.093201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 05/11/24 12:46:01.571
  May 11 12:46:01.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8339" for this suite. @ 05/11/24 12:46:01.581
• [342.068 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 05/11/24 12:46:01.589
  May 11 12:46:01.589: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir @ 05/11/24 12:46:01.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:46:01.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:46:01.606
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/11/24 12:46:01.608
  E0511 12:46:02.093774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:03.094064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:04.094591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:05.095151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 12:46:05.633
  May 11 12:46:05.636: INFO: Trying to get logs from node ip-172-31-16-37 pod pod-50879f4c-0a4b-45f1-9db8-dc09b8db59e7 container test-container: <nil>
  STEP: delete the pod @ 05/11/24 12:46:05.649
  May 11 12:46:05.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9479" for this suite. @ 05/11/24 12:46:05.669
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 05/11/24 12:46:05.676
  May 11 12:46:05.676: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename secrets @ 05/11/24 12:46:05.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:46:05.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:46:05.696
  STEP: Creating secret with name secret-test-map-b3558d72-99a1-4810-be84-7affdf183ac4 @ 05/11/24 12:46:05.698
  STEP: Creating a pod to test consume secrets @ 05/11/24 12:46:05.702
  E0511 12:46:06.095432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:07.095672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:08.095776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:09.095858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 12:46:09.723
  May 11 12:46:09.727: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-secrets-41a625cd-e7cf-42d3-a62f-f8fa2a92f7ec container secret-volume-test: <nil>
  STEP: delete the pod @ 05/11/24 12:46:09.74
  May 11 12:46:09.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-976" for this suite. @ 05/11/24 12:46:09.761
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 05/11/24 12:46:09.767
  May 11 12:46:09.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename sched-preemption @ 05/11/24 12:46:09.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:46:09.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:46:09.787
  May 11 12:46:09.803: INFO: Waiting up to 1m0s for all nodes to be ready
  E0511 12:46:10.096531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:11.096649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:12.097407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:13.097501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:14.097591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:15.097776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:16.098137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:17.098326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:18.099127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:19.099195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:20.099311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:21.099386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:22.099506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:23.099577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:24.099665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:25.099973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:26.100078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:27.100152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:28.100949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:29.101072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:30.101998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:31.102101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:32.102203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:33.102309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:34.102552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:35.103231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:36.104152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:37.104825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:38.105270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:39.105518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:40.105719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:41.105967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:42.106116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:43.107162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:44.107790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:45.108336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:46.108391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:47.108605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:48.108665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:49.108772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:50.109275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:51.109361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:52.109452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:53.109558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:54.109563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:55.110154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:56.110574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:57.110680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:58.110694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:46:59.111436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:00.111530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:01.111703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:02.111881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:03.111978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:04.112832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:05.113825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:06.114058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:07.114140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:08.114436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:09.115127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:47:09.808: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/11/24 12:47:09.811
  May 11 12:47:09.811: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/11/24 12:47:09.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:09.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:09.829
  May 11 12:47:09.847: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  May 11 12:47:09.850: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  May 11 12:47:09.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1871" for this suite. @ 05/11/24 12:47:09.924
  May 11 12:47:09.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8099" for this suite. @ 05/11/24 12:47:09.934
• [60.174 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 05/11/24 12:47:09.941
  May 11 12:47:09.941: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl @ 05/11/24 12:47:09.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:09.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:09.957
  STEP: creating the pod @ 05/11/24 12:47:09.961
  May 11 12:47:09.961: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3884 create -f -'
  May 11 12:47:10.042: INFO: stderr: ""
  May 11 12:47:10.042: INFO: stdout: "pod/pause created\n"
  E0511 12:47:10.116069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:11.116191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/11/24 12:47:12.056
  May 11 12:47:12.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3884 label pods pause testing-label=testing-label-value'
  May 11 12:47:12.102: INFO: stderr: ""
  May 11 12:47:12.102: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/11/24 12:47:12.102
  May 11 12:47:12.102: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3884 get pod pause -L testing-label'
  E0511 12:47:12.117183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:47:12.144: INFO: stderr: ""
  May 11 12:47:12.144: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/11/24 12:47:12.144
  May 11 12:47:12.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3884 label pods pause testing-label-'
  May 11 12:47:12.188: INFO: stderr: ""
  May 11 12:47:12.188: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/11/24 12:47:12.188
  May 11 12:47:12.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3884 get pod pause -L testing-label'
  May 11 12:47:12.227: INFO: stderr: ""
  May 11 12:47:12.227: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 05/11/24 12:47:12.227
  May 11 12:47:12.227: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3884 delete --grace-period=0 --force -f -'
  May 11 12:47:12.278: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 11 12:47:12.278: INFO: stdout: "pod \"pause\" force deleted\n"
  May 11 12:47:12.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3884 get rc,svc -l name=pause --no-headers'
  May 11 12:47:12.320: INFO: stderr: "No resources found in kubectl-3884 namespace.\n"
  May 11 12:47:12.320: INFO: stdout: ""
  May 11 12:47:12.320: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-3884 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May 11 12:47:12.359: INFO: stderr: ""
  May 11 12:47:12.359: INFO: stdout: ""
  May 11 12:47:12.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3884" for this suite. @ 05/11/24 12:47:12.362
• [2.428 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 05/11/24 12:47:12.369
  May 11 12:47:12.369: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename deployment @ 05/11/24 12:47:12.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:12.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:12.384
  May 11 12:47:12.387: INFO: Creating deployment "test-recreate-deployment"
  May 11 12:47:12.393: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  May 11 12:47:12.398: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0511 12:47:13.117578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:14.117750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:47:14.405: INFO: Waiting deployment "test-recreate-deployment" to complete
  May 11 12:47:14.408: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  May 11 12:47:14.417: INFO: Updating deployment test-recreate-deployment
  May 11 12:47:14.417: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  May 11 12:47:14.489: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4771",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66434a38-5f0b-42a7-9690-af86ebb1f932",
      ResourceVersion: (string) (len=5) "19325",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028432,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 11 12:47:14.494: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4771",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "21fbc9e9-4650-4b0e-b1e8-770839c027f2",
      ResourceVersion: (string) (len=5) "19324",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "66434a38-5f0b-42a7-9690-af86ebb1f932",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 36 34 33 34 61  33 38 2d 35 66 30 62 2d  |\"66434a38-5f0b-|
              00000120  34 32 61 37 2d 39 36 39  30 2d 61 66 38 36 65 62  |42a7-9690-af86eb|
              00000130  62 31 66 39 33 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b1f932\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 11 12:47:14.495: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  May 11 12:47:14.495: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4771",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b593c8b6-f56c-4ff7-901e-74825ca2e997",
      ResourceVersion: (string) (len=5) "19314",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028432,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "66434a38-5f0b-42a7-9690-af86ebb1f932",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 36 34 33 34 61  33 38 2d 35 66 30 62 2d  |\"66434a38-5f0b-|
              00000120  34 32 61 37 2d 39 36 39  30 2d 61 66 38 36 65 62  |42a7-9690-af86eb|
              00000130  62 31 66 39 33 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b1f932\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 11 12:47:14.499: INFO: Pod "test-recreate-deployment-76fb77d45-57z2q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-57z2q",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-4771",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92f1572d-cba6-456b-b1d9-38b9b7b5773e",
      ResourceVersion: (string) (len=5) "19326",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "21fbc9e9-4650-4b0e-b1e8-770839c027f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  66 62 63 39 65 39 2d 34  |d\":\"21fbc9e9-4|
              00000090  36 35 30 2d 34 62 30 65  2d 62 31 65 38 2d 37 37  |650-4b0e-b1e8-77|
              000000a0  30 38 33 39 63 30 32 37  66 32 5c 22 7d 22 3a 7b  |0839c027f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mqg5v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mqg5v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-73-54",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.73.54",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.73.54"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:47:14.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4771" for this suite. @ 05/11/24 12:47:14.505
• [2.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 05/11/24 12:47:14.51
  May 11 12:47:14.510: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename csi-storageclass @ 05/11/24 12:47:14.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:14.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:14.534
  STEP: Creating a StorageClass @ 05/11/24 12:47:14.536
  STEP: Get StorageClass "e2e-625tz" @ 05/11/24 12:47:14.54
  STEP: Patching the StorageClass "e2e-625tz" @ 05/11/24 12:47:14.544
  STEP: Delete StorageClass "e2e-625tz" @ 05/11/24 12:47:14.548
  STEP: Confirm deletion of StorageClass "e2e-625tz" @ 05/11/24 12:47:14.554
  STEP: Create a replacement StorageClass @ 05/11/24 12:47:14.556
  STEP: Updating StorageClass "e2e-v2-kvhpj" @ 05/11/24 12:47:14.56
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-kvhpj=updated" @ 05/11/24 12:47:14.567
  STEP: Deleting StorageClass "e2e-v2-kvhpj" via DeleteCollection @ 05/11/24 12:47:14.57
  STEP: Confirm deletion of StorageClass "e2e-v2-kvhpj" @ 05/11/24 12:47:14.578
  May 11 12:47:14.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-3171" for this suite. @ 05/11/24 12:47:14.584
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 05/11/24 12:47:14.59
  May 11 12:47:14.590: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename configmap @ 05/11/24 12:47:14.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:14.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:14.61
  May 11 12:47:14.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5026" for this suite. @ 05/11/24 12:47:14.652
• [0.067 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 05/11/24 12:47:14.658
  May 11 12:47:14.658: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/11/24 12:47:14.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:14.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:14.676
  E0511 12:47:15.118565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:16.119463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 05/11/24 12:47:16.711
  STEP: Cleaning up the configmap @ 05/11/24 12:47:16.717
  STEP: Cleaning up the pod @ 05/11/24 12:47:16.724
  May 11 12:47:16.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-81" for this suite. @ 05/11/24 12:47:16.738
• [2.089 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 05/11/24 12:47:16.747
  May 11 12:47:16.747: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename var-expansion @ 05/11/24 12:47:16.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:16.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:16.762
  STEP: Creating a pod to test substitution in volume subpath @ 05/11/24 12:47:16.764
  E0511 12:47:17.120085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:18.120305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:19.120777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:20.120862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 12:47:20.786
  May 11 12:47:20.790: INFO: Trying to get logs from node ip-172-31-73-54 pod var-expansion-3feca71e-9ac9-4452-86a2-05fd83869b19 container dapi-container: <nil>
  STEP: delete the pod @ 05/11/24 12:47:20.796
  May 11 12:47:20.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7623" for this suite. @ 05/11/24 12:47:20.816
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 05/11/24 12:47:20.824
  May 11 12:47:20.824: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 12:47:20.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:20.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:20.892
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 12:47:20.894
  E0511 12:47:21.121453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:22.121675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:23.122584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:24.122694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 12:47:24.913
  May 11 12:47:24.916: INFO: Trying to get logs from node ip-172-31-73-54 pod downwardapi-volume-db76bd4a-a067-4792-838b-d0291f241c99 container client-container: <nil>
  STEP: delete the pod @ 05/11/24 12:47:24.923
  May 11 12:47:24.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5468" for this suite. @ 05/11/24 12:47:24.946
• [4.127 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 05/11/24 12:47:24.951
  May 11 12:47:24.951: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/11/24 12:47:24.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:24.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:24.968
  May 11 12:47:24.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 12:47:25.122771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:26.122861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:27.123387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:28.124378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:29.125055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:30.125460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:31.125890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:47:31.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1218" for this suite. @ 05/11/24 12:47:31.148
• [6.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 05/11/24 12:47:31.157
  May 11 12:47:31.157: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename endpointslice @ 05/11/24 12:47:31.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:31.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:31.172
  May 11 12:47:31.183: INFO: Endpoints addresses: [172.31.23.198 172.31.91.191] , ports: [6443]
  May 11 12:47:31.183: INFO: EndpointSlices addresses: [172.31.23.198 172.31.91.191] , ports: [6443]
  May 11 12:47:31.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6291" for this suite. @ 05/11/24 12:47:31.186
• [0.034 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 05/11/24 12:47:31.191
  May 11 12:47:31.191: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 12:47:31.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:31.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:31.209
  STEP: Setting up server cert @ 05/11/24 12:47:31.227
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 12:47:31.469
  STEP: Deploying the webhook pod @ 05/11/24 12:47:31.478
  STEP: Wait for the deployment to be ready @ 05/11/24 12:47:31.491
  May 11 12:47:31.497: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0511 12:47:32.126104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:33.126188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/11/24 12:47:33.508
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 12:47:33.519
  E0511 12:47:34.127179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:47:34.519: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/11/24 12:47:34.525
  STEP: create a pod that should be updated by the webhook @ 05/11/24 12:47:34.538
  May 11 12:47:34.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-630" for this suite. @ 05/11/24 12:47:34.61
  STEP: Destroying namespace "webhook-markers-1234" for this suite. @ 05/11/24 12:47:34.617
• [3.434 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 05/11/24 12:47:34.625
  May 11 12:47:34.625: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename daemonsets @ 05/11/24 12:47:34.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:34.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:34.643
  STEP: Creating simple DaemonSet "daemon-set" @ 05/11/24 12:47:34.664
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/11/24 12:47:34.667
  May 11 12:47:34.670: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:47:34.670: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:47:34.674: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 12:47:34.674: INFO: Node ip-172-31-16-37 is running 0 daemon pod, expected 1
  E0511 12:47:35.128190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:47:35.673: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:47:35.673: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:47:35.676: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 11 12:47:35.676: INFO: Node ip-172-31-16-37 is running 0 daemon pod, expected 1
  E0511 12:47:36.128944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:47:36.673: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:47:36.673: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:47:36.676: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 11 12:47:36.676: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 05/11/24 12:47:36.678
  May 11 12:47:36.681: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/11/24 12:47:36.681
  May 11 12:47:36.691: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/11/24 12:47:36.691
  May 11 12:47:36.693: INFO: Observed &DaemonSet event: ADDED
  May 11 12:47:36.693: INFO: Observed &DaemonSet event: MODIFIED
  May 11 12:47:36.693: INFO: Observed &DaemonSet event: MODIFIED
  May 11 12:47:36.693: INFO: Observed &DaemonSet event: MODIFIED
  May 11 12:47:36.694: INFO: Observed &DaemonSet event: MODIFIED
  May 11 12:47:36.694: INFO: Found daemon set daemon-set in namespace daemonsets-2337 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 11 12:47:36.694: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/11/24 12:47:36.694
  STEP: watching for the daemon set status to be patched @ 05/11/24 12:47:36.699
  May 11 12:47:36.700: INFO: Observed &DaemonSet event: ADDED
  May 11 12:47:36.701: INFO: Observed &DaemonSet event: MODIFIED
  May 11 12:47:36.701: INFO: Observed &DaemonSet event: MODIFIED
  May 11 12:47:36.701: INFO: Observed &DaemonSet event: MODIFIED
  May 11 12:47:36.701: INFO: Observed &DaemonSet event: MODIFIED
  May 11 12:47:36.701: INFO: Observed daemon set daemon-set in namespace daemonsets-2337 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 11 12:47:36.701: INFO: Observed &DaemonSet event: MODIFIED
  May 11 12:47:36.701: INFO: Found daemon set daemon-set in namespace daemonsets-2337 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  May 11 12:47:36.701: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/11/24 12:47:36.706
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2337, will wait for the garbage collector to delete the pods @ 05/11/24 12:47:36.706
  May 11 12:47:36.766: INFO: Deleting DaemonSet.extensions daemon-set took: 6.753497ms
  May 11 12:47:36.866: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.125596ms
  E0511 12:47:37.130919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:47:37.970: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 12:47:37.970: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 11 12:47:37.973: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19773"},"items":null}

  May 11 12:47:37.976: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19773"},"items":null}

  May 11 12:47:37.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2337" for this suite. @ 05/11/24 12:47:37.992
• [3.376 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 05/11/24 12:47:38.001
  May 11 12:47:38.001: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl @ 05/11/24 12:47:38.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:38.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:38.017
  STEP: validating api versions @ 05/11/24 12:47:38.019
  May 11 12:47:38.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-8695 api-versions'
  May 11 12:47:38.057: INFO: stderr: ""
  May 11 12:47:38.057: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  May 11 12:47:38.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8695" for this suite. @ 05/11/24 12:47:38.062
• [0.068 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 05/11/24 12:47:38.069
  May 11 12:47:38.069: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/11/24 12:47:38.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:38.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:38.089
  STEP: create the container to handle the HTTPGet hook request. @ 05/11/24 12:47:38.095
  E0511 12:47:38.131706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:39.131910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/11/24 12:47:40.119
  E0511 12:47:40.131890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:41.132040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:42.132245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 05/11/24 12:47:42.133
  E0511 12:47:43.132641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:44.132740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 05/11/24 12:47:44.149
  May 11 12:47:44.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5710" for this suite. @ 05/11/24 12:47:44.162
• [6.099 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 05/11/24 12:47:44.168
  May 11 12:47:44.168: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 12:47:44.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:44.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:44.185
  STEP: creating service in namespace services-1208 @ 05/11/24 12:47:44.304
  STEP: creating service affinity-nodeport in namespace services-1208 @ 05/11/24 12:47:44.304
  STEP: creating replication controller affinity-nodeport in namespace services-1208 @ 05/11/24 12:47:44.321
  I0511 12:47:44.328284      19 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-1208, replica count: 3
  E0511 12:47:45.133489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:46.134153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:47.135146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0511 12:47:47.379575      19 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 11 12:47:47.389: INFO: Creating new exec pod
  E0511 12:47:48.135243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:49.135342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:50.135419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:47:50.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-1208 exec execpod-affinity6fkhs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  May 11 12:47:50.510: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  May 11 12:47:50.510: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 12:47:50.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-1208 exec execpod-affinity6fkhs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.251 80'
  May 11 12:47:50.615: INFO: stderr: "+ + nc -vecho -t -w hostName 2\n 10.152.183.251 80\nConnection to 10.152.183.251 80 port [tcp/http] succeeded!\n"
  May 11 12:47:50.615: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 12:47:50.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-1208 exec execpod-affinity6fkhs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.37 32107'
  May 11 12:47:50.703: INFO: stderr: "+ nc -v -t -w 2 172.31.16.37 32107\n+ echo hostName\nConnection to 172.31.16.37 32107 port [tcp/*] succeeded!\n"
  May 11 12:47:50.703: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 12:47:50.703: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-1208 exec execpod-affinity6fkhs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.35.147 32107'
  May 11 12:47:50.790: INFO: stderr: "+ nc -v -t -w 2 172.31.35.147 32107\n+ echo hostName\nConnection to 172.31.35.147 32107 port [tcp/*] succeeded!\n"
  May 11 12:47:50.790: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 12:47:50.790: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-1208 exec execpod-affinity6fkhs -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.16.37:32107/ ; done'
  May 11 12:47:50.952: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32107/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32107/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32107/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32107/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32107/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32107/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32107/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32107/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32107/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32107/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32107/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32107/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32107/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32107/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32107/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32107/\n"
  May 11 12:47:50.952: INFO: stdout: "\naffinity-nodeport-8gb5c\naffinity-nodeport-8gb5c\naffinity-nodeport-8gb5c\naffinity-nodeport-8gb5c\naffinity-nodeport-8gb5c\naffinity-nodeport-8gb5c\naffinity-nodeport-8gb5c\naffinity-nodeport-8gb5c\naffinity-nodeport-8gb5c\naffinity-nodeport-8gb5c\naffinity-nodeport-8gb5c\naffinity-nodeport-8gb5c\naffinity-nodeport-8gb5c\naffinity-nodeport-8gb5c\naffinity-nodeport-8gb5c\naffinity-nodeport-8gb5c"
  May 11 12:47:50.952: INFO: Received response from host: affinity-nodeport-8gb5c
  May 11 12:47:50.952: INFO: Received response from host: affinity-nodeport-8gb5c
  May 11 12:47:50.952: INFO: Received response from host: affinity-nodeport-8gb5c
  May 11 12:47:50.952: INFO: Received response from host: affinity-nodeport-8gb5c
  May 11 12:47:50.952: INFO: Received response from host: affinity-nodeport-8gb5c
  May 11 12:47:50.952: INFO: Received response from host: affinity-nodeport-8gb5c
  May 11 12:47:50.952: INFO: Received response from host: affinity-nodeport-8gb5c
  May 11 12:47:50.952: INFO: Received response from host: affinity-nodeport-8gb5c
  May 11 12:47:50.952: INFO: Received response from host: affinity-nodeport-8gb5c
  May 11 12:47:50.952: INFO: Received response from host: affinity-nodeport-8gb5c
  May 11 12:47:50.952: INFO: Received response from host: affinity-nodeport-8gb5c
  May 11 12:47:50.952: INFO: Received response from host: affinity-nodeport-8gb5c
  May 11 12:47:50.952: INFO: Received response from host: affinity-nodeport-8gb5c
  May 11 12:47:50.952: INFO: Received response from host: affinity-nodeport-8gb5c
  May 11 12:47:50.952: INFO: Received response from host: affinity-nodeport-8gb5c
  May 11 12:47:50.952: INFO: Received response from host: affinity-nodeport-8gb5c
  May 11 12:47:50.952: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-1208, will wait for the garbage collector to delete the pods @ 05/11/24 12:47:50.967
  May 11 12:47:51.030: INFO: Deleting ReplicationController affinity-nodeport took: 7.584348ms
  May 11 12:47:51.130: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.482201ms
  E0511 12:47:51.135875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:52.136972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:53.137184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:47:54.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1208" for this suite. @ 05/11/24 12:47:54.063
• [9.900 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 05/11/24 12:47:54.068
  May 11 12:47:54.068: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename deployment @ 05/11/24 12:47:54.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:54.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:54.085
  May 11 12:47:54.094: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0511 12:47:54.137877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:55.138258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:56.138643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:57.138744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:47:58.139173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:47:59.100: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/11/24 12:47:59.1
  May 11 12:47:59.100: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/11/24 12:47:59.107
  May 11 12:47:59.116: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5488",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0a7f0af-e15c-4f6b-b41a-6da64db63317",
      ResourceVersion: (string) (len=5) "20075",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 11 12:47:59.120: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  May 11 12:47:59.120: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  May 11 12:47:59.120: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5488",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ce80fd3d-b8ab-4b59-810a-966213a76b4f",
      ResourceVersion: (string) (len=5) "20076",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "f0a7f0af-e15c-4f6b-b41a-6da64db63317",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 66 30 61 37 66 30 61  |"uid\":\"f0a7f0a|
              00000040  66 2d 65 31 35 63 2d 34  66 36 62 2d 62 34 31 61  |f-e15c-4f6b-b41a|
              00000050  2d 36 64 61 36 34 64 62  36 33 33 31 37 5c 22 7d  |-6da64db63317\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 11 12:47:59.125: INFO: Pod "test-cleanup-controller-q898t" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-q898t",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-5488",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0278d5f6-d12d-4c12-ab90-769dba013bb1",
      ResourceVersion: (string) (len=5) "20062",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "ce80fd3d-b8ab-4b59-810a-966213a76b4f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  63 65 38 30 66 64 33 64  |uid\":\"ce80fd3d|
              00000080  2d 62 38 61 62 2d 34 62  35 39 2d 38 31 30 61 2d  |-b8ab-4b59-810a-|
              00000090  39 36 36 32 31 33 61 37  36 62 34 66 5c 22 7d 22  |966213a76b4f\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  35 2e 32 31 33 5c 22 7d  |2.168.105.213\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7lxv8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7lxv8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-73-54",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.73.54",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.73.54"
        }
      },
      PodIP: (string) (len=15) "192.168.105.213",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.105.213"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851028474,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6df29ce8914dde799ec5579c1b56cb7d36424efaccddb5078a09cd4bc9c29a3f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:47:59.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5488" for this suite. @ 05/11/24 12:47:59.135
  E0511 12:47:59.139368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [5.085 seconds]
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 05/11/24 12:47:59.153
  May 11 12:47:59.153: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename crd-webhook @ 05/11/24 12:47:59.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:47:59.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:47:59.191
  STEP: Setting up server cert @ 05/11/24 12:47:59.195
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/11/24 12:47:59.434
  STEP: Deploying the custom resource conversion webhook pod @ 05/11/24 12:47:59.458
  STEP: Wait for the deployment to be ready @ 05/11/24 12:47:59.471
  May 11 12:47:59.479: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0511 12:48:00.140208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:01.140305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/11/24 12:48:01.49
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 12:48:01.502
  E0511 12:48:02.140402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:48:02.502: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  May 11 12:48:02.510: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 12:48:03.140606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:04.141031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/11/24 12:48:05.065
  STEP: v2 custom resource should be converted @ 05/11/24 12:48:05.071
  E0511 12:48:05.142025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:48:05.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-208" for this suite. @ 05/11/24 12:48:05.632
• [6.486 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 05/11/24 12:48:05.639
  May 11 12:48:05.639: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename resourcequota @ 05/11/24 12:48:05.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:48:05.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:48:05.661
  STEP: Creating resourceQuota "e2e-rq-status-c8sfc" @ 05/11/24 12:48:05.666
  May 11 12:48:05.672: INFO: Resource quota "e2e-rq-status-c8sfc" reports spec: hard cpu limit of 500m
  May 11 12:48:05.672: INFO: Resource quota "e2e-rq-status-c8sfc" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-c8sfc" /status @ 05/11/24 12:48:05.672
  STEP: Confirm /status for "e2e-rq-status-c8sfc" resourceQuota via watch @ 05/11/24 12:48:05.681
  May 11 12:48:05.682: INFO: observed resourceQuota "e2e-rq-status-c8sfc" in namespace "resourcequota-6114" with hard status: v1.ResourceList(nil)
  May 11 12:48:05.682: INFO: Found resourceQuota "e2e-rq-status-c8sfc" in namespace "resourcequota-6114" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  May 11 12:48:05.682: INFO: ResourceQuota "e2e-rq-status-c8sfc" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/11/24 12:48:05.685
  May 11 12:48:05.690: INFO: Resource quota "e2e-rq-status-c8sfc" reports spec: hard cpu limit of 1
  May 11 12:48:05.690: INFO: Resource quota "e2e-rq-status-c8sfc" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-c8sfc" /status @ 05/11/24 12:48:05.69
  STEP: Confirm /status for "e2e-rq-status-c8sfc" resourceQuota via watch @ 05/11/24 12:48:05.697
  May 11 12:48:05.698: INFO: observed resourceQuota "e2e-rq-status-c8sfc" in namespace "resourcequota-6114" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  May 11 12:48:05.698: INFO: Found resourceQuota "e2e-rq-status-c8sfc" in namespace "resourcequota-6114" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  May 11 12:48:05.698: INFO: ResourceQuota "e2e-rq-status-c8sfc" /status was patched
  STEP: Get "e2e-rq-status-c8sfc" /status @ 05/11/24 12:48:05.698
  May 11 12:48:05.701: INFO: Resourcequota "e2e-rq-status-c8sfc" reports status: hard cpu of 1
  May 11 12:48:05.701: INFO: Resourcequota "e2e-rq-status-c8sfc" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-c8sfc" /status before checking Spec is unchanged @ 05/11/24 12:48:05.703
  May 11 12:48:05.709: INFO: Resourcequota "e2e-rq-status-c8sfc" reports status: hard cpu of 2
  May 11 12:48:05.709: INFO: Resourcequota "e2e-rq-status-c8sfc" reports status: hard memory of 2Gi
  May 11 12:48:05.710: INFO: Found resourceQuota "e2e-rq-status-c8sfc" in namespace "resourcequota-6114" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  May 11 12:48:05.712: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c68330), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c68390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c683c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:48:06.143062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:07.143151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:08.143322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:09.143519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:10.143617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:48:10.715: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c68690), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c686f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c68720), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:48:11.143852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:12.143944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:13.144379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:14.144481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:15.144783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:48:15.715: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef0dc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef0df8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef0e58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:48:16.145625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:17.145804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:18.146009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:19.146086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:20.147132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:48:20.713: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef1218), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef1278), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef1308), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:48:21.147917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:22.147979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:23.148730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:24.148968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:25.149072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:48:25.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef1680), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef16c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef1710), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:48:26.149690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:27.149776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:28.149961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:29.150130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:30.150235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:48:30.715: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef1ad0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef1b18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef1b78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:48:31.151134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:32.151231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:33.151321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:34.151398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:35.151493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:48:35.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c68ff0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c690b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c69110), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:48:36.151570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:37.151668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:38.151760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:39.151833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:40.151930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:48:40.713: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c693f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c69440), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c69488), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:48:41.152476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:42.152602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:43.152765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:44.152864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:45.152971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:48:45.716: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c69950), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c699e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c69a10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:48:46.153543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:47.153698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:48.153795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:49.153859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:50.153990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:48:50.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0000122a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000012630), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000012660), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:48:51.154609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:52.154704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:53.155139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:54.156036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:55.156135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:48:55.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000012900), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0000129a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0000129d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:48:56.156212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:57.156320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:58.156376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:48:59.156472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:00.156578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:49:00.716: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000012cd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000012d08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000013098), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:49:01.156676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:02.156757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:03.156882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:04.156939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:05.157067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:49:05.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000013428), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000013458), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0000134a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:49:06.157887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:07.158070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:08.158221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:09.158290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:10.159036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:49:10.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000013788), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0000137e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000013818), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:49:11.159108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:12.159212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:13.159377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:14.159591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:15.159700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:49:15.716: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000013ae8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000013b18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000013b48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:49:16.160604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:17.160809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:18.160980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:19.161091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:20.162013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:49:20.713: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000013f68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000013f98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000013fc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:49:21.162083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:22.163121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:23.163254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:24.163451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:25.163535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:49:25.715: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe0660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe06d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe0720), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:49:26.164215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:27.164307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:28.164402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:29.164529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:30.164618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:49:30.715: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f2480), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f24b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f2510), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:49:31.165027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:32.165125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:33.165280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:34.165392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:35.166379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:49:35.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe0c78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe0cf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe0d20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:49:36.166426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:37.167157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:38.167520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:39.167367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:40.167374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:49:40.716: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe0198), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe01e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe0240), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:49:41.167456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:42.167583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:43.167678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:44.167826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:45.167985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:49:45.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f2360), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f23a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f23f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:49:46.168555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:47.168655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:48.169119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:49.169225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:50.169403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:49:50.715: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe0750), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe0780), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe07f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:49:51.170111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:52.171185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:53.171345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:54.171588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:55.171763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:49:55.715: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe0c30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe0c60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe0cd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:49:56.172565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:57.172676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:58.172873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:49:59.173089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:00.173142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:50:00.713: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe10e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe1110), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe11a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:50:01.173430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:02.173529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:03.174581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:04.174695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:05.174781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:50:05.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe14a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe14e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe1530), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:50:06.175393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:07.175483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:08.175582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:09.175818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:10.176413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:50:10.715: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f2a68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f2ab0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f2ae0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:50:11.176502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:12.177127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:13.177607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:14.177713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:15.177906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:50:15.713: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe1b18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe1b60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe1ba8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:50:16.178424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:17.179212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:18.179309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:19.180019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:20.180140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:50:20.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe1e00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe1e78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fe1ec0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:50:21.180213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:22.180586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:23.181304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:24.181408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:25.181539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:50:25.716: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f3008), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f3050), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f3098), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:50:26.182567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:27.182790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:28.182886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:29.182987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:30.183655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:50:30.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f3440), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f3488), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f34d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:50:31.184080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:32.184922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:33.185022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:34.185103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:35.185279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:50:35.715: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001282390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012823d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001282408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:50:36.185817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:37.186055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:38.186163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:39.187132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:40.187289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:50:40.715: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f3aa0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f3ae8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f3b18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:50:41.187814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:42.188225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:43.188316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:44.188519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:45.188749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:50:45.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f3ed8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f3f20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040f3fb0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:50:46.188830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:47.189142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:48.189225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:49.189386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:50.189743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:50:50.715: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000550468), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000550510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000550648), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:50:51.190766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:52.191011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:53.191160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:54.191348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:55.191520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:50:55.715: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001282a38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001282a98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001282af8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:50:56.192545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:57.192650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:58.192751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:50:59.193802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:00.193904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:51:00.713: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000550ea0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000550ed0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000550f48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:51:01.194077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:02.194202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:03.195123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:04.195289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:05.196012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:51:05.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001283068), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012830b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012830e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:51:06.196488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:07.196651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:08.196830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:09.196924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:10.197102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:51:10.715: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005514d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000551518), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000551578), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:51:11.197910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:12.198102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:13.198176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:14.199135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:15.199558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:51:15.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000551968), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005519b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005519f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:51:16.199932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:17.200052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:18.200831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:19.200936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:20.201038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:51:20.713: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000551d28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000551da0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000551dd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:51:21.201177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:22.201382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:23.201481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:24.201595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:25.201828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:51:25.716: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012836b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001283758), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001283890), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:51:26.201966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:27.202068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:28.203143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:29.203333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:30.203562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:51:30.713: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001510498), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015104c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001510528), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:51:31.204474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:32.204770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:33.204940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:34.205030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:35.205135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:51:35.715: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001283cf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001283d58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001283dd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:51:36.205224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:37.205310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:38.205525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:39.205721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:40.206050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:51:40.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001282198), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012821e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001282210), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:51:41.206919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:42.207008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:43.207192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:44.207371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:45.208155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:51:45.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001282618), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001282648), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012826a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:51:46.209081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:47.209210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:48.209596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:49.209715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:50.209877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:51:50.716: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015103d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001510438), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015104b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:51:51.210800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:52.210885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:53.211139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:54.211333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:55.211425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:51:55.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001282bb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001282c18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001282c48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:51:56.211522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:57.211609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:58.211776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:51:59.211880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:00.212037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:52:00.718: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001283080), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012830c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012830f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:52:01.212128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:02.212222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:03.212373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:04.212542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:05.212716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:52:05.716: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001510b70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001510be8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001510c78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:52:06.212805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:07.212897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:08.213050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:09.213224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:10.213309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:52:10.714: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-c8sfc", GenerateName:"", Namespace:"resourcequota-6114", SelfLink:"", UID:"43bf7973-1a27-4174-a45d-92d799eda263", ResourceVersion:"20223", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-c8sfc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001283680), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012836f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 12, 48, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001283788), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0511 12:52:11.213615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:12.213713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:13.213884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:14.214793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:15.214886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:52:15.716: INFO: ResourceQuota "e2e-rq-status-c8sfc" Spec was unchanged and /status reset
  May 11 12:52:15.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6114" for this suite. @ 05/11/24 12:52:15.72
• [250.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 05/11/24 12:52:15.727
  May 11 12:52:15.727: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename secrets @ 05/11/24 12:52:15.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:52:15.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:52:15.745
  STEP: creating secret secrets-8268/secret-test-fa4b8aef-08b2-4769-8f32-1bbe583eb850 @ 05/11/24 12:52:15.747
  STEP: Creating a pod to test consume secrets @ 05/11/24 12:52:15.75
  E0511 12:52:16.215594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:17.215649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:18.215753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:19.215847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 12:52:19.771
  May 11 12:52:19.774: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-configmaps-4d92d25a-d6cb-4e08-975c-2ac200b87c1e container env-test: <nil>
  STEP: delete the pod @ 05/11/24 12:52:19.789
  May 11 12:52:19.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8268" for this suite. @ 05/11/24 12:52:19.808
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 05/11/24 12:52:19.814
  May 11 12:52:19.814: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 12:52:19.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:52:19.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:52:19.832
  STEP: Setting up server cert @ 05/11/24 12:52:19.852
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 12:52:20.146
  STEP: Deploying the webhook pod @ 05/11/24 12:52:20.153
  STEP: Wait for the deployment to be ready @ 05/11/24 12:52:20.164
  May 11 12:52:20.170: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0511 12:52:20.215942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:21.216227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/11/24 12:52:22.182
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 12:52:22.194
  E0511 12:52:22.216814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:52:23.195: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/11/24 12:52:23.2
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/11/24 12:52:23.212
  May 11 12:52:23.212: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 12:52:23.217842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:52:23.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3434" for this suite. @ 05/11/24 12:52:23.272
  STEP: Destroying namespace "webhook-markers-9705" for this suite. @ 05/11/24 12:52:23.278
• [3.471 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 05/11/24 12:52:23.286
  May 11 12:52:23.286: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename events @ 05/11/24 12:52:23.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:52:23.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:52:23.307
  STEP: Create set of events @ 05/11/24 12:52:23.309
  STEP: get a list of Events with a label in the current namespace @ 05/11/24 12:52:23.322
  STEP: delete a list of events @ 05/11/24 12:52:23.325
  May 11 12:52:23.325: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/11/24 12:52:23.347
  May 11 12:52:23.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4357" for this suite. @ 05/11/24 12:52:23.353
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 05/11/24 12:52:23.362
  May 11 12:52:23.362: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir @ 05/11/24 12:52:23.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:52:23.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:52:23.379
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/11/24 12:52:23.381
  E0511 12:52:24.218090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:25.218189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:26.218653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:27.218736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 12:52:27.402
  May 11 12:52:27.405: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-4a98893d-9391-44a3-9779-4bb4dd1831de container test-container: <nil>
  STEP: delete the pod @ 05/11/24 12:52:27.411
  May 11 12:52:27.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8921" for this suite. @ 05/11/24 12:52:27.43
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 05/11/24 12:52:27.436
  May 11 12:52:27.436: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pods @ 05/11/24 12:52:27.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:52:27.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:52:27.453
  STEP: creating the pod @ 05/11/24 12:52:27.455
  STEP: submitting the pod to kubernetes @ 05/11/24 12:52:27.455
  STEP: verifying QOS class is set on the pod @ 05/11/24 12:52:27.463
  May 11 12:52:27.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9039" for this suite. @ 05/11/24 12:52:27.478
• [0.048 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 05/11/24 12:52:27.484
  May 11 12:52:27.484: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename var-expansion @ 05/11/24 12:52:27.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:52:27.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:52:27.508
  E0511 12:52:28.218836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:29.218938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:52:29.528: INFO: Deleting pod "var-expansion-54fe07ce-9d73-4f2c-a753-0e3bcc5ae63c" in namespace "var-expansion-3219"
  May 11 12:52:29.538: INFO: Wait up to 5m0s for pod "var-expansion-54fe07ce-9d73-4f2c-a753-0e3bcc5ae63c" to be fully deleted
  E0511 12:52:30.219188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:31.219350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:52:31.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3219" for this suite. @ 05/11/24 12:52:31.552
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 05/11/24 12:52:31.559
  May 11 12:52:31.559: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename daemonsets @ 05/11/24 12:52:31.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:52:31.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:52:31.579
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/11/24 12:52:31.599
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/11/24 12:52:31.604
  May 11 12:52:31.607: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:52:31.607: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:52:31.609: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 12:52:31.609: INFO: Node ip-172-31-16-37 is running 0 daemon pod, expected 1
  E0511 12:52:32.219469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:52:32.608: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:52:32.608: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:52:32.612: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May 11 12:52:32.612: INFO: Node ip-172-31-35-147 is running 0 daemon pod, expected 1
  E0511 12:52:33.220190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:52:33.608: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:52:33.608: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:52:33.612: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 11 12:52:33.612: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/11/24 12:52:33.614
  May 11 12:52:33.628: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:52:33.628: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 12:52:33.630: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 11 12:52:33.630: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/11/24 12:52:33.631
  E0511 12:52:34.220330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 05/11/24 12:52:34.639
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1449, will wait for the garbage collector to delete the pods @ 05/11/24 12:52:34.639
  May 11 12:52:34.700: INFO: Deleting DaemonSet.extensions daemon-set took: 6.750297ms
  May 11 12:52:34.801: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.207761ms
  E0511 12:52:35.220533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:36.221062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:52:36.406: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 12:52:36.406: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 11 12:52:36.410: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21076"},"items":null}

  May 11 12:52:36.413: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21076"},"items":null}

  May 11 12:52:36.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1449" for this suite. @ 05/11/24 12:52:36.428
• [4.878 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 05/11/24 12:52:36.437
  May 11 12:52:36.437: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename endpointslice @ 05/11/24 12:52:36.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:52:36.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:52:36.452
  E0511 12:52:37.221143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:38.221225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:39.221345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:40.221441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:41.221484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 05/11/24 12:52:41.529
  E0511 12:52:42.221624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:43.221694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:44.221772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:45.221862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:46.222634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 05/11/24 12:52:46.537
  E0511 12:52:47.222739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:48.222856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:49.222889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:50.223009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:51.223189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/11/24 12:52:51.545
  E0511 12:52:52.223303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:53.223395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:54.223471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:55.223625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:56.224605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 05/11/24 12:52:56.552
  May 11 12:52:56.573: INFO: EndpointSlice for Service endpointslice-9559/example-named-port not found
  E0511 12:52:57.224782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:58.224916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:52:59.225135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:00.225221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:01.225309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:02.225401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:03.225476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:04.225587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:05.225677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:06.226615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:53:06.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9559" for this suite. @ 05/11/24 12:53:06.584
• [30.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 05/11/24 12:53:06.59
  May 11 12:53:06.590: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename deployment @ 05/11/24 12:53:06.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:53:06.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:53:06.606
  May 11 12:53:06.608: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  May 11 12:53:06.614: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0511 12:53:07.227176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:08.227287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:09.227351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:10.227458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:11.227587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:53:11.619: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/11/24 12:53:11.619
  May 11 12:53:11.619: INFO: Creating deployment "test-rolling-update-deployment"
  May 11 12:53:11.625: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  May 11 12:53:11.631: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0511 12:53:12.227641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:13.227844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:53:13.639: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  May 11 12:53:13.642: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  May 11 12:53:13.652: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6644",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2cf72690-791f-4d2f-98df-3bc52d0b8c9f",
      ResourceVersion: (string) (len=5) "21333",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028791,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 11 12:53:13.655: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6644",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd3fcb78-a2be-481e-80d7-28d6d70fd12a",
      ResourceVersion: (string) (len=5) "21323",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028791,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "2cf72690-791f-4d2f-98df-3bc52d0b8c9f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 63 66 37 32 36  39 30 2d 37 39 31 66 2d  |\"2cf72690-791f-|
              00000120  34 64 32 66 2d 39 38 64  66 2d 33 62 63 35 32 64  |4d2f-98df-3bc52d|
              00000130  30 62 38 63 39 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0b8c9f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 11 12:53:13.656: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  May 11 12:53:13.657: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6644",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93d3ecfe-8a82-43e3-83c9-06585bcbd703",
      ResourceVersion: (string) (len=5) "21332",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "2cf72690-791f-4d2f-98df-3bc52d0b8c9f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 32 63 66 37 32 36 39  |"uid\":\"2cf7269|
              000000b0  30 2d 37 39 31 66 2d 34  64 32 66 2d 39 38 64 66  |0-791f-4d2f-98df|
              000000c0  2d 33 62 63 35 32 64 30  62 38 63 39 66 5c 22 7d  |-3bc52d0b8c9f\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 11 12:53:13.660: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-67fxr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-67fxr",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-6644",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b3f1343-d453-43d2-b090-6ab45d16658b",
      ResourceVersion: (string) (len=5) "21322",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028791,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "bd3fcb78-a2be-481e-80d7-28d6d70fd12a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 64  33 66 63 62 37 38 2d 61  |d\":\"bd3fcb78-a|
              00000090  32 62 65 2d 34 38 31 65  2d 38 30 64 37 2d 32 38  |2be-481e-80d7-28|
              000000a0  64 36 64 37 30 66 64 31  32 61 5c 22 7d 22 3a 7b  |d6d70fd12a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 35  2e 31 36 39 5c 22 7d 22  |2.168.55.169\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gtmfs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gtmfs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-35-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.35.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.35.147"
        }
      },
      PodIP: (string) (len=14) "192.168.55.169",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.55.169"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028791,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851028792,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://4b4310509f054741d773ae1faddee7cbdf598cc0053ba1629bce94f31177f878",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:53:13.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6644" for this suite. @ 05/11/24 12:53:13.665
• [7.083 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 05/11/24 12:53:13.673
  May 11 12:53:13.673: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 12:53:13.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:53:13.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:53:13.688
  STEP: Setting up server cert @ 05/11/24 12:53:13.708
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 12:53:13.932
  STEP: Deploying the webhook pod @ 05/11/24 12:53:13.941
  STEP: Wait for the deployment to be ready @ 05/11/24 12:53:13.952
  May 11 12:53:13.963: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0511 12:53:14.228662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:15.228748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/11/24 12:53:15.974
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 12:53:15.984
  E0511 12:53:16.229475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:53:16.984: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 11 12:53:16.990: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 12:53:17.230167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/11/24 12:53:17.5
  STEP: Creating a custom resource that should be denied by the webhook @ 05/11/24 12:53:17.513
  E0511 12:53:18.231166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:19.231257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/11/24 12:53:19.529
  STEP: Updating the custom resource with disallowed data should be denied @ 05/11/24 12:53:19.536
  STEP: Deleting the custom resource should be denied @ 05/11/24 12:53:19.544
  STEP: Remove the offending key and value from the custom resource data @ 05/11/24 12:53:19.551
  STEP: Deleting the updated custom resource should be successful @ 05/11/24 12:53:19.562
  May 11 12:53:20.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7441" for this suite. @ 05/11/24 12:53:20.133
  STEP: Destroying namespace "webhook-markers-498" for this suite. @ 05/11/24 12:53:20.141
• [6.479 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 05/11/24 12:53:20.152
  May 11 12:53:20.152: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename svcaccounts @ 05/11/24 12:53:20.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:53:20.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:53:20.172
  STEP: creating a ServiceAccount @ 05/11/24 12:53:20.174
  STEP: watching for the ServiceAccount to be added @ 05/11/24 12:53:20.181
  STEP: patching the ServiceAccount @ 05/11/24 12:53:20.182
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/11/24 12:53:20.187
  STEP: deleting the ServiceAccount @ 05/11/24 12:53:20.19
  May 11 12:53:20.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3058" for this suite. @ 05/11/24 12:53:20.208
• [0.061 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 05/11/24 12:53:20.214
  May 11 12:53:20.214: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename secrets @ 05/11/24 12:53:20.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:53:20.228
  E0511 12:53:20.231267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:53:20.232
  STEP: Creating secret with name secret-test-a8834731-8173-480d-9790-9ebd84877438 @ 05/11/24 12:53:20.234
  STEP: Creating a pod to test consume secrets @ 05/11/24 12:53:20.238
  E0511 12:53:21.231417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:22.231652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:23.231759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:24.231821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 12:53:24.26
  May 11 12:53:24.263: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-secrets-45ac7fa0-d063-4782-a3f3-4f5cd6bf6921 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/11/24 12:53:24.271
  May 11 12:53:24.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9801" for this suite. @ 05/11/24 12:53:24.292
• [4.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 05/11/24 12:53:24.302
  May 11 12:53:24.302: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename replicaset @ 05/11/24 12:53:24.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:53:24.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:53:24.316
  May 11 12:53:24.319: INFO: Creating ReplicaSet my-hostname-basic-956df253-91ab-46a3-9cc7-300e0509af2e
  May 11 12:53:24.327: INFO: Pod name my-hostname-basic-956df253-91ab-46a3-9cc7-300e0509af2e: Found 0 pods out of 1
  E0511 12:53:25.232671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:26.233097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:27.233179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:28.233272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:29.233407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:53:29.331: INFO: Pod name my-hostname-basic-956df253-91ab-46a3-9cc7-300e0509af2e: Found 1 pods out of 1
  May 11 12:53:29.331: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-956df253-91ab-46a3-9cc7-300e0509af2e" is running
  May 11 12:53:29.335: INFO: Pod "my-hostname-basic-956df253-91ab-46a3-9cc7-300e0509af2e-trwzp" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-11 12:53:25 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-11 12:53:24 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-11 12:53:25 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-11 12:53:25 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-11 12:53:24 +0000 UTC Reason: Message:}])
  May 11 12:53:29.335: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/11/24 12:53:29.335
  May 11 12:53:29.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3713" for this suite. @ 05/11/24 12:53:29.35
• [5.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 05/11/24 12:53:29.362
  May 11 12:53:29.362: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename sysctl @ 05/11/24 12:53:29.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:53:29.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:53:29.379
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/11/24 12:53:29.382
  May 11 12:53:29.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7200" for this suite. @ 05/11/24 12:53:29.389
• [0.032 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 05/11/24 12:53:29.394
  May 11 12:53:29.394: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename dns @ 05/11/24 12:53:29.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:53:29.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:53:29.416
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/11/24 12:53:29.418
  May 11 12:53:29.427: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9329  27388571-bd28-448e-869f-c1c67b7622e4 21578 0 2024-05-11 12:53:29 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-05-11 12:53:29 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-fqm6w,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-fqm6w,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0511 12:53:30.234116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:31.234176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/11/24 12:53:31.436
  May 11 12:53:31.436: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9329 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 12:53:31.436: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 12:53:31.437: INFO: ExecWithOptions: Clientset creation
  May 11 12:53:31.437: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-9329/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 05/11/24 12:53:31.491
  May 11 12:53:31.491: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9329 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 12:53:31.491: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 12:53:31.491: INFO: ExecWithOptions: Clientset creation
  May 11 12:53:31.491: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-9329/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 11 12:53:31.538: INFO: Deleting pod test-dns-nameservers...
  May 11 12:53:31.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9329" for this suite. @ 05/11/24 12:53:31.558
• [2.170 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 05/11/24 12:53:31.565
  May 11 12:53:31.565: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename prestop @ 05/11/24 12:53:31.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:53:31.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:53:31.584
  STEP: Creating server pod server in namespace prestop-4425 @ 05/11/24 12:53:31.586
  STEP: Waiting for pods to come up. @ 05/11/24 12:53:31.592
  E0511 12:53:32.234588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:33.234659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-4425 @ 05/11/24 12:53:33.602
  E0511 12:53:34.234769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:35.234852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 05/11/24 12:53:35.618
  E0511 12:53:36.235607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:37.235684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:38.235783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:39.235879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:40.235975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:53:40.631: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 05/11/24 12:53:40.632
  May 11 12:53:40.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-4425" for this suite. @ 05/11/24 12:53:40.649
• [9.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 05/11/24 12:53:40.657
  May 11 12:53:40.657: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 12:53:40.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:53:40.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:53:40.674
  STEP: Setting up server cert @ 05/11/24 12:53:40.698
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 12:53:40.924
  STEP: Deploying the webhook pod @ 05/11/24 12:53:40.93
  STEP: Wait for the deployment to be ready @ 05/11/24 12:53:40.939
  May 11 12:53:40.946: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0511 12:53:41.236188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:42.236349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/11/24 12:53:42.957
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 12:53:42.968
  E0511 12:53:43.236999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:53:43.968: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/11/24 12:53:43.975
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/11/24 12:53:43.995
  STEP: Creating a configMap that should not be mutated @ 05/11/24 12:53:44.003
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/11/24 12:53:44.017
  STEP: Creating a configMap that should be mutated @ 05/11/24 12:53:44.029
  May 11 12:53:44.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2979" for this suite. @ 05/11/24 12:53:44.088
  STEP: Destroying namespace "webhook-markers-3766" for this suite. @ 05/11/24 12:53:44.098
• [3.447 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 05/11/24 12:53:44.104
  May 11 12:53:44.104: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename subpath @ 05/11/24 12:53:44.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:53:44.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:53:44.122
  STEP: Setting up data @ 05/11/24 12:53:44.124
  STEP: Creating pod pod-subpath-test-projected-xpfn @ 05/11/24 12:53:44.132
  STEP: Creating a pod to test atomic-volume-subpath @ 05/11/24 12:53:44.132
  E0511 12:53:44.237748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:45.237871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:46.238767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:47.238867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:48.239676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:49.239786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:50.239839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:51.240040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:52.240709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:53.240838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:54.241701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:55.241862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:56.242887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:57.242991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:58.243245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:53:59.243377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:00.243405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:01.243619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:02.243707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:03.243850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:04.244744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:05.244865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:06.245509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:07.245631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 12:54:08.205
  May 11 12:54:08.208: INFO: Trying to get logs from node ip-172-31-16-37 pod pod-subpath-test-projected-xpfn container test-container-subpath-projected-xpfn: <nil>
  STEP: delete the pod @ 05/11/24 12:54:08.225
  STEP: Deleting pod pod-subpath-test-projected-xpfn @ 05/11/24 12:54:08.242
  May 11 12:54:08.242: INFO: Deleting pod "pod-subpath-test-projected-xpfn" in namespace "subpath-3024"
  E0511 12:54:08.246039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:54:08.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3024" for this suite. @ 05/11/24 12:54:08.249
• [24.154 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 05/11/24 12:54:08.258
  May 11 12:54:08.258: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 12:54:08.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:54:08.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:54:08.272
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-a90b9b6a-e8c6-4e7f-bfb8-ad95395b8545 @ 05/11/24 12:54:08.277
  STEP: Creating the pod @ 05/11/24 12:54:08.282
  E0511 12:54:09.246094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:10.246112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-a90b9b6a-e8c6-4e7f-bfb8-ad95395b8545 @ 05/11/24 12:54:10.306
  STEP: waiting to observe update in volume @ 05/11/24 12:54:10.311
  E0511 12:54:11.247142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:12.247261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:13.247515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:14.247618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:15.248277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:16.248601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:17.248662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:18.248756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:19.249051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:20.249244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:21.249418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:22.249520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:23.250098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:24.250200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:25.250261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:26.250373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:27.250451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:28.251155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:29.251418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:30.251540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:31.251612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:32.251710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:33.251790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:34.251902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:35.252147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:36.252233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:37.252321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:38.252537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:39.252644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:40.252746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:41.252849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:42.253042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:43.253149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:44.253362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:45.253465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:46.253648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:47.253758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:48.253836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:49.254121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:50.254181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:51.254266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:52.254363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:53.254460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:54.254545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:55.254628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:56.255624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:57.255736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:58.256503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:54:59.256622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:00.256882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:01.256980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:02.257075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:03.258027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:04.258105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:05.259137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:06.259234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:07.260214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:08.260312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:09.260402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:10.260560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:11.260670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:12.260759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:13.261565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:14.261670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:15.262087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:16.262466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:17.263200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:18.263373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:19.263467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:20.263508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:21.263592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:22.263649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:23.263959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:24.264814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:25.264901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:26.264978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:27.265100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:28.265370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:29.265393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:30.265597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:31.266556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:32.266629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:55:32.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5435" for this suite. @ 05/11/24 12:55:32.664
• [84.414 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 05/11/24 12:55:32.672
  May 11 12:55:32.672: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/11/24 12:55:32.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:55:32.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:55:32.688
  STEP: mirroring a new custom Endpoint @ 05/11/24 12:55:32.699
  May 11 12:55:32.708: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0511 12:55:33.267074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:34.267240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 05/11/24 12:55:34.712
  May 11 12:55:34.720: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0511 12:55:35.267595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:36.267705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 05/11/24 12:55:36.724
  May 11 12:55:36.737: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0511 12:55:37.267777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:38.267936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:55:38.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-3618" for this suite. @ 05/11/24 12:55:38.747
• [6.085 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 05/11/24 12:55:38.757
  May 11 12:55:38.757: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 12:55:38.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:55:38.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:55:38.773
  STEP: Setting up server cert @ 05/11/24 12:55:38.797
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 12:55:38.916
  STEP: Deploying the webhook pod @ 05/11/24 12:55:38.925
  STEP: Wait for the deployment to be ready @ 05/11/24 12:55:38.937
  May 11 12:55:38.943: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0511 12:55:39.268035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:40.268151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/11/24 12:55:40.956
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 12:55:40.969
  E0511 12:55:41.268175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:55:41.970: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/11/24 12:55:41.977
  STEP: create a namespace for the webhook @ 05/11/24 12:55:41.989
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/11/24 12:55:42.016
  May 11 12:55:42.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1347" for this suite. @ 05/11/24 12:55:42.092
  STEP: Destroying namespace "webhook-markers-6849" for this suite. @ 05/11/24 12:55:42.101
  STEP: Destroying namespace "fail-closed-namespace-5758" for this suite. @ 05/11/24 12:55:42.107
• [3.356 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 05/11/24 12:55:42.113
  May 11 12:55:42.113: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pods @ 05/11/24 12:55:42.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:55:42.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:55:42.134
  STEP: creating the pod @ 05/11/24 12:55:42.136
  STEP: submitting the pod to kubernetes @ 05/11/24 12:55:42.136
  E0511 12:55:42.268906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:43.269053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 05/11/24 12:55:44.156
  STEP: updating the pod @ 05/11/24 12:55:44.159
  E0511 12:55:44.269068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:55:44.673: INFO: Successfully updated pod "pod-update-96db679c-b99f-4ddd-a02d-fa5f23ceed79"
  STEP: verifying the updated pod is in kubernetes @ 05/11/24 12:55:44.676
  May 11 12:55:44.680: INFO: Pod update OK
  May 11 12:55:44.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4317" for this suite. @ 05/11/24 12:55:44.684
• [2.577 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 05/11/24 12:55:44.69
  May 11 12:55:44.690: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 12:55:44.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:55:44.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:55:44.703
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-2226 @ 05/11/24 12:55:44.706
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/11/24 12:55:44.717
  STEP: creating service externalsvc in namespace services-2226 @ 05/11/24 12:55:44.717
  STEP: creating replication controller externalsvc in namespace services-2226 @ 05/11/24 12:55:44.728
  I0511 12:55:44.737357      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-2226, replica count: 2
  E0511 12:55:45.270097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:46.271028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:47.271120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0511 12:55:47.787719      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 05/11/24 12:55:47.792
  May 11 12:55:47.805: INFO: Creating new exec pod
  E0511 12:55:48.271215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:49.271322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:55:49.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2226 exec execpodf5cwj -- /bin/sh -x -c nslookup clusterip-service.services-2226.svc.cluster.local'
  May 11 12:55:49.936: INFO: stderr: "+ nslookup clusterip-service.services-2226.svc.cluster.local\n"
  May 11 12:55:49.936: INFO: stdout: "Server:\t\t10.152.183.226\nAddress:\t10.152.183.226#53\n\nclusterip-service.services-2226.svc.cluster.local\tcanonical name = externalsvc.services-2226.svc.cluster.local.\nName:\texternalsvc.services-2226.svc.cluster.local\nAddress: 10.152.183.37\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-2226, will wait for the garbage collector to delete the pods @ 05/11/24 12:55:49.937
  May 11 12:55:50.000: INFO: Deleting ReplicationController externalsvc took: 7.113268ms
  May 11 12:55:50.101: INFO: Terminating ReplicationController externalsvc pods took: 100.690586ms
  E0511 12:55:50.271410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:51.271577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:52.271656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:55:52.821: INFO: Cleaning up the ClusterIP to ExternalName test service
  May 11 12:55:52.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2226" for this suite. @ 05/11/24 12:55:52.834
• [8.150 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 05/11/24 12:55:52.84
  May 11 12:55:52.840: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir @ 05/11/24 12:55:52.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:55:52.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:55:52.858
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/11/24 12:55:52.859
  E0511 12:55:53.272584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:54.272806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 12:55:54.88
  May 11 12:55:54.882: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-56f00b5e-14e1-42b4-aa39-4729b9b6b816 container test-container: <nil>
  STEP: delete the pod @ 05/11/24 12:55:54.888
  May 11 12:55:54.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-427" for this suite. @ 05/11/24 12:55:54.907
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 05/11/24 12:55:54.919
  May 11 12:55:54.919: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename deployment @ 05/11/24 12:55:54.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:55:54.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:55:54.937
  May 11 12:55:54.941: INFO: Creating deployment "webserver-deployment"
  May 11 12:55:54.945: INFO: Waiting for observed generation 1
  E0511 12:55:55.273545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:56.274510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:55:56.951: INFO: Waiting for all required pods to come up
  May 11 12:55:56.954: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/11/24 12:55:56.954
  May 11 12:55:56.954: INFO: Waiting for deployment "webserver-deployment" to complete
  May 11 12:55:56.960: INFO: Updating deployment "webserver-deployment" with a non-existent image
  May 11 12:55:56.969: INFO: Updating deployment webserver-deployment
  May 11 12:55:56.969: INFO: Waiting for observed generation 2
  E0511 12:55:57.274887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:55:58.275071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:55:58.976: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  May 11 12:55:58.980: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  May 11 12:55:58.982: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  May 11 12:55:58.990: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  May 11 12:55:58.990: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  May 11 12:55:58.993: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  May 11 12:55:58.998: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  May 11 12:55:58.998: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  May 11 12:55:59.006: INFO: Updating deployment webserver-deployment
  May 11 12:55:59.006: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  May 11 12:55:59.013: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  May 11 12:55:59.015: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  May 11 12:55:59.034: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "387f9605-a2d5-4450-a873-3decb1b8b2b1",
      ResourceVersion: (string) (len=5) "22679",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 11 12:55:59.056: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a0ef4e6b-9150-48da-9bc6-1adfc2e95f32",
      ResourceVersion: (string) (len=5) "22683",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "387f9605-a2d5-4450-a873-3decb1b8b2b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 38 37 66 39 36  30 35 2d 61 32 64 35 2d  |\"387f9605-a2d5-|
              00000120  34 34 35 30 2d 61 38 37  33 2d 33 64 65 63 62 31  |4450-a873-3decb1|
              00000130  62 38 62 32 62 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b8b2b1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 11 12:55:59.056: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  May 11 12:55:59.056: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
      ResourceVersion: (string) (len=5) "22680",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "387f9605-a2d5-4450-a873-3decb1b8b2b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 38 37 66 39 36  30 35 2d 61 32 64 35 2d  |\"387f9605-a2d5-|
              00000120  34 34 35 30 2d 61 38 37  33 2d 33 64 65 63 62 31  |4450-a873-3decb1|
              00000130  62 38 62 32 62 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b8b2b1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 11 12:55:59.091: INFO: Pod "webserver-deployment-557759b7c7-29vdq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-29vdq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3cc32b7-d169-421f-a715-72414ab26031",
      ResourceVersion: (string) (len=5) "22530",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  34 2e 31 37 38 5c 22 7d  |2.168.204.178\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c6j5b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c6j5b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-16-37",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.37"
        }
      },
      PodIP: (string) (len=15) "192.168.204.178",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.204.178"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851028955,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://295ecab6149b69c196fa8336a3250bd93874f379095cc54738d29927078963ca",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.092: INFO: Pod "webserver-deployment-557759b7c7-2m69c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2m69c",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f1fb9bf-30e9-49c5-b552-fa4bf559c6ae",
      ResourceVersion: (string) (len=5) "22709",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jd7vf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jd7vf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.097: INFO: Pod "webserver-deployment-557759b7c7-4fwn5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4fwn5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d0f780e8-f589-4ae2-91fe-32e88db1886f",
      ResourceVersion: (string) (len=5) "22539",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  35 2e 31 39 37 5c 22 7d  |2.168.105.197\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-572c9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-572c9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-73-54",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.73.54",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.73.54"
        }
      },
      PodIP: (string) (len=15) "192.168.105.197",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.105.197"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028955,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851028955,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d77adbe08e56c62e1671477cedec720806d7ad1614ab66c09d98067b74c627bd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.098: INFO: Pod "webserver-deployment-557759b7c7-5d9vr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5d9vr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9408757b-68f9-43b7-ac85-0fb76c58b22f",
      ResourceVersion: (string) (len=5) "22518",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 35  2e 31 37 30 5c 22 7d 22  |2.168.55.170\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d5rkb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d5rkb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-35-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.35.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.35.147"
        }
      },
      PodIP: (string) (len=14) "192.168.55.170",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.55.170"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851028955,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3b4e8cd716a95553cfd37df1c8ded2480ba3e2de8772253c7e93d9b50f65e05e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.099: INFO: Pod "webserver-deployment-557759b7c7-62g5g" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-62g5g",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c2669e34-dc5c-4b82-b61a-170ecf85c331",
      ResourceVersion: (string) (len=5) "22542",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  35 2e 32 34 39 5c 22 7d  |2.168.105.249\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2pqb6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2pqb6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-73-54",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.73.54",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.73.54"
        }
      },
      PodIP: (string) (len=15) "192.168.105.249",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.105.249"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851028955,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ce1705ea1d213d4f30f8848d531a68b356ed82941fc437e2e35a027a95b42f6a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.100: INFO: Pod "webserver-deployment-557759b7c7-7mxw4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7mxw4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a543a06e-ef14-41b4-9ed0-3230a3802440",
      ResourceVersion: (string) (len=5) "22702",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-skj2h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-skj2h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-16-37",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.37"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.101: INFO: Pod "webserver-deployment-557759b7c7-b9b8z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-b9b8z",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "555f9ed4-37c5-410c-ab3a-12dd4a720662",
      ResourceVersion: (string) (len=5) "22521",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 35  2e 31 35 38 5c 22 7d 22  |2.168.55.158\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-thzdn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-thzdn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-35-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.35.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.35.147"
        }
      },
      PodIP: (string) (len=14) "192.168.55.158",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.55.158"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028955,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851028955,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cbf278e0b1ce99d285f42a8ddb9638d98567f74d238acbe22bdd736ff77c1dab",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.108: INFO: Pod "webserver-deployment-557759b7c7-cqp9j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cqp9j",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68b448ca-051e-446c-8dbe-c97dea08b642",
      ResourceVersion: (string) (len=5) "22692",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-54cnf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-54cnf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-16-37",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.108: INFO: Pod "webserver-deployment-557759b7c7-f8nsj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-f8nsj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8dea6547-c3ec-4e1d-bb14-0b2e20e18ec8",
      ResourceVersion: (string) (len=5) "22706",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rmvp5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rmvp5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.109: INFO: Pod "webserver-deployment-557759b7c7-fflkw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fflkw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e55ce4e-9687-4a85-b303-b6c736215e5f",
      ResourceVersion: (string) (len=5) "22533",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  35 2e 32 30 30 5c 22 7d  |2.168.105.200\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zvrzx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zvrzx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-73-54",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.73.54",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.73.54"
        }
      },
      PodIP: (string) (len=15) "192.168.105.200",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.105.200"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028955,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851028955,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://af614813933e4ae405b29cf0eb95bdfdad560ccd492fb5c627c8b4d9d0b3ea59",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.111: INFO: Pod "webserver-deployment-557759b7c7-fl92p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fl92p",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fac97e22-0784-48e3-8c49-8124d86ab81a",
      ResourceVersion: (string) (len=5) "22703",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hvrmw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hvrmw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-16-37",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.111: INFO: Pod "webserver-deployment-557759b7c7-fs5nj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fs5nj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84ac6f17-2555-41a3-817b-adb0b7a0b4e9",
      ResourceVersion: (string) (len=5) "22708",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h9bjh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h9bjh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.112: INFO: Pod "webserver-deployment-557759b7c7-h7ntd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-h7ntd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "580cf759-4ff1-444d-bc0a-40c979ccfd62",
      ResourceVersion: (string) (len=5) "22515",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 35 35  2e 31 36 35 5c 22 7d 22  |2.168.55.165\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lsgdn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lsgdn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-35-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.35.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.35.147"
        }
      },
      PodIP: (string) (len=14) "192.168.55.165",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.55.165"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028955,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851028955,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://df98c16475c85cf708f64aa390f3f4f6ccc6001d818b55409bdd1a87b8d86c4f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.113: INFO: Pod "webserver-deployment-557759b7c7-hlhfw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hlhfw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8ea538d3-51fe-4ad0-9857-bb9fc8fe4271",
      ResourceVersion: (string) (len=5) "22714",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hl59c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hl59c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-35-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.114: INFO: Pod "webserver-deployment-557759b7c7-m9552" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-m9552",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23057f05-ac6d-4683-9444-33a04e7d7ff3",
      ResourceVersion: (string) (len=5) "22713",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xcs5m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xcs5m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-16-37",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.115: INFO: Pod "webserver-deployment-557759b7c7-mpvjj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mpvjj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c219ad8a-2e89-43c3-87d6-680595b952bc",
      ResourceVersion: (string) (len=5) "22701",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zqbpp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zqbpp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-73-54",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.115: INFO: Pod "webserver-deployment-557759b7c7-sw7kr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-sw7kr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99cb4ce3-e992-4db8-a85c-5f18f5095e9e",
      ResourceVersion: (string) (len=5) "22711",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wb787",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wb787",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.116: INFO: Pod "webserver-deployment-557759b7c7-x7ldf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-x7ldf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee21d0db-d14f-4747-8bb5-fbb2bb7691d1",
      ResourceVersion: (string) (len=5) "22693",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8nnln",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8nnln",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-35-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.122: INFO: Pod "webserver-deployment-557759b7c7-xdtbs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xdtbs",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4536916f-6380-468e-aa83-72bbd36ffb6e",
      ResourceVersion: (string) (len=5) "22536",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  35 2e 32 34 34 5c 22 7d  |2.168.105.244\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dtx7q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dtx7q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-73-54",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.73.54",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.73.54"
        }
      },
      PodIP: (string) (len=15) "192.168.105.244",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.105.244"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851028955,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://63a34ed5d42773228fa43962babdac6477d06269cf0fd8a86d3f2e0bc7a3e954",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.123: INFO: Pod "webserver-deployment-557759b7c7-z49m9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-z49m9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5821d203-ce3b-45c5-b178-a7bc5002e49c",
      ResourceVersion: (string) (len=5) "22710",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9c054970-ea06-435a-b7b0-fdfde5a8e91b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 35 34 39 37 30 2d 65  |d\":\"9c054970-e|
              00000090  61 30 36 2d 34 33 35 61  2d 62 37 62 30 2d 66 64  |a06-435a-b7b0-fd|
              000000a0  66 64 65 35 61 38 65 39  31 62 5c 22 7d 22 3a 7b  |fde5a8e91b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r8z7n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r8z7n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.124: INFO: Pod "webserver-deployment-9b4f5bf69-5gkw4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-5gkw4",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "040ad2c9-e17b-46ed-8688-fbd9888aabed",
      ResourceVersion: (string) (len=5) "22715",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a0ef4e6b-9150-48da-9bc6-1adfc2e95f32",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  65 66 34 65 36 62 2d 39  |d\":\"a0ef4e6b-9|
              00000090  31 35 30 2d 34 38 64 61  2d 39 62 63 36 2d 31 61  |150-48da-9bc6-1a|
              000000a0  64 66 63 32 65 39 35 66  33 32 5c 22 7d 22 3a 7b  |dfc2e95f32\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j6dld",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j6dld",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-16-37",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.124: INFO: Pod "webserver-deployment-9b4f5bf69-cblqd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-cblqd",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7016b291-54e9-4764-9171-9b0a5424ca64",
      ResourceVersion: (string) (len=5) "22624",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a0ef4e6b-9150-48da-9bc6-1adfc2e95f32",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  65 66 34 65 36 62 2d 39  |d\":\"a0ef4e6b-9|
              00000090  31 35 30 2d 34 38 64 61  2d 39 62 63 36 2d 31 61  |150-48da-9bc6-1a|
              000000a0  64 66 63 32 65 39 35 66  33 32 5c 22 7d 22 3a 7b  |dfc2e95f32\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 30 34 2e 31  38 39 5c 22 7d 22 3a 7b  |68.204.189\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nvhqd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nvhqd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-16-37",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.37"
        }
      },
      PodIP: (string) (len=15) "192.168.204.189",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.204.189"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.128: INFO: Pod "webserver-deployment-9b4f5bf69-cnctl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-cnctl",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61d890db-7ae2-457b-bfdd-0a35a79e9884",
      ResourceVersion: (string) (len=5) "22633",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a0ef4e6b-9150-48da-9bc6-1adfc2e95f32",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  65 66 34 65 36 62 2d 39  |d\":\"a0ef4e6b-9|
              00000090  31 35 30 2d 34 38 64 61  2d 39 62 63 36 2d 31 61  |150-48da-9bc6-1a|
              000000a0  64 66 63 32 65 39 35 66  33 32 5c 22 7d 22 3a 7b  |dfc2e95f32\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 30 35 2e 32  33 39 5c 22 7d 22 3a 7b  |68.105.239\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kpsqm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kpsqm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-73-54",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.73.54",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.73.54"
        }
      },
      PodIP: (string) (len=15) "192.168.105.239",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.105.239"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028957,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.129: INFO: Pod "webserver-deployment-9b4f5bf69-fp2nh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fp2nh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cbd84db9-bb8c-4b90-aac8-7a60d1504907",
      ResourceVersion: (string) (len=5) "22698",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a0ef4e6b-9150-48da-9bc6-1adfc2e95f32",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  65 66 34 65 36 62 2d 39  |d\":\"a0ef4e6b-9|
              00000090  31 35 30 2d 34 38 64 61  2d 39 62 63 36 2d 31 61  |150-48da-9bc6-1a|
              000000a0  64 66 63 32 65 39 35 66  33 32 5c 22 7d 22 3a 7b  |dfc2e95f32\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mz4qh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mz4qh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-35-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.130: INFO: Pod "webserver-deployment-9b4f5bf69-j7wtz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-j7wtz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "86a19a2b-7203-4ccf-a351-d2d480f2a883",
      ResourceVersion: (string) (len=5) "22716",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a0ef4e6b-9150-48da-9bc6-1adfc2e95f32",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  65 66 34 65 36 62 2d 39  |d\":\"a0ef4e6b-9|
              00000090  31 35 30 2d 34 38 64 61  2d 39 62 63 36 2d 31 61  |150-48da-9bc6-1a|
              000000a0  64 66 63 32 65 39 35 66  33 32 5c 22 7d 22 3a 7b  |dfc2e95f32\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7jlth",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7jlth",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-73-54",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.131: INFO: Pod "webserver-deployment-9b4f5bf69-j9q5s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-j9q5s",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9bd3e74f-a976-4ac4-8990-314a90bd09f9",
      ResourceVersion: (string) (len=5) "22674",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028957,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a0ef4e6b-9150-48da-9bc6-1adfc2e95f32",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  65 66 34 65 36 62 2d 39  |d\":\"a0ef4e6b-9|
              00000090  31 35 30 2d 34 38 64 61  2d 39 62 63 36 2d 31 61  |150-48da-9bc6-1a|
              000000a0  64 66 63 32 65 39 35 66  33 32 5c 22 7d 22 3a 7b  |dfc2e95f32\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 30 34 2e 31  38 30 5c 22 7d 22 3a 7b  |68.204.180\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pkzh9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pkzh9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-16-37",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.16.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.16.37"
        }
      },
      PodIP: (string) (len=15) "192.168.204.180",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.204.180"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028957,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.140: INFO: Pod "webserver-deployment-9b4f5bf69-kknsn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kknsn",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28414833-10b7-4e55-b44c-e980e503d215",
      ResourceVersion: (string) (len=5) "22630",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028957,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a0ef4e6b-9150-48da-9bc6-1adfc2e95f32",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  65 66 34 65 36 62 2d 39  |d\":\"a0ef4e6b-9|
              00000090  31 35 30 2d 34 38 64 61  2d 39 62 63 36 2d 31 61  |150-48da-9bc6-1a|
              000000a0  64 66 63 32 65 39 35 66  33 32 5c 22 7d 22 3a 7b  |dfc2e95f32\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 30 35 2e 32  33 34 5c 22 7d 22 3a 7b  |68.105.234\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ds2gw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ds2gw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-73-54",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.73.54",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.73.54"
        }
      },
      PodIP: (string) (len=15) "192.168.105.234",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.105.234"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028957,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.143: INFO: Pod "webserver-deployment-9b4f5bf69-lcz86" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lcz86",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1013",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25aefa1e-9aa0-4291-9dae-606ad573cf5d",
      ResourceVersion: (string) (len=5) "22671",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a0ef4e6b-9150-48da-9bc6-1adfc2e95f32",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  65 66 34 65 36 62 2d 39  |d\":\"a0ef4e6b-9|
              00000090  31 35 30 2d 34 38 64 61  2d 39 62 63 36 2d 31 61  |150-48da-9bc6-1a|
              000000a0  64 66 63 32 65 39 35 66  33 32 5c 22 7d 22 3a 7b  |dfc2e95f32\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 35 35 2e 31 35  34 5c 22 7d 22 3a 7b 22  |68.55.154\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ntw47",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ntw47",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-35-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851028957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.35.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.35.147"
        }
      },
      PodIP: (string) (len=14) "192.168.55.154",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.55.154"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851028957,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 12:55:59.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1013" for this suite. @ 05/11/24 12:55:59.155
• [4.248 seconds]
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 05/11/24 12:55:59.167
  May 11 12:55:59.167: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename disruption @ 05/11/24 12:55:59.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:55:59.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:55:59.195
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/11/24 12:55:59.197
  STEP: Waiting for the pdb to be processed @ 05/11/24 12:55:59.205
  E0511 12:55:59.275872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:00.276044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/11/24 12:56:01.217
  STEP: Waiting for all pods to be running @ 05/11/24 12:56:01.217
  May 11 12:56:01.221: INFO: pods: 0 < 3
  E0511 12:56:01.276410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:02.276516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 05/11/24 12:56:03.222
  STEP: Updating the pdb to allow a pod to be evicted @ 05/11/24 12:56:03.231
  STEP: Waiting for the pdb to be processed @ 05/11/24 12:56:03.239
  E0511 12:56:03.277458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:04.277588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:05.277916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/11/24 12:56:05.317
  STEP: Waiting for all pods to be running @ 05/11/24 12:56:05.317
  STEP: Waiting for the pdb to observed all healthy pods @ 05/11/24 12:56:05.326
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/11/24 12:56:05.374
  STEP: Waiting for the pdb to be processed @ 05/11/24 12:56:05.403
  E0511 12:56:06.278686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:07.278797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 05/11/24 12:56:07.407
  STEP: locating a running pod @ 05/11/24 12:56:07.409
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/11/24 12:56:07.419
  STEP: Waiting for the pdb to be deleted @ 05/11/24 12:56:07.425
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/11/24 12:56:07.428
  STEP: Waiting for all pods to be running @ 05/11/24 12:56:07.428
  May 11 12:56:07.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2510" for this suite. @ 05/11/24 12:56:07.451
• [8.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 05/11/24 12:56:07.459
  May 11 12:56:07.459: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pods @ 05/11/24 12:56:07.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:56:07.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:56:07.478
  May 11 12:56:07.480: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: creating the pod @ 05/11/24 12:56:07.48
  STEP: submitting the pod to kubernetes @ 05/11/24 12:56:07.48
  E0511 12:56:08.279151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:09.279313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:56:09.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1785" for this suite. @ 05/11/24 12:56:09.553
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 05/11/24 12:56:09.56
  May 11 12:56:09.560: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename sched-pred @ 05/11/24 12:56:09.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:56:09.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:56:09.577
  May 11 12:56:09.579: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 11 12:56:09.586: INFO: Waiting for terminating namespaces to be deleted...
  May 11 12:56:09.589: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-16-37 before test
  May 11 12:56:09.593: INFO: rs-lm5md from disruption-2510 started at 2024-05-11 12:56:05 +0000 UTC (1 container statuses recorded)
  May 11 12:56:09.594: INFO: 	Container donothing ready: true, restart count 0
  May 11 12:56:09.594: INFO: nginx-ingress-controller-kubernetes-worker-v466k from ingress-nginx-kubernetes-worker started at 2024-05-11 12:06:42 +0000 UTC (1 container statuses recorded)
  May 11 12:56:09.594: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 11 12:56:09.594: INFO: calico-node-t46qx from kube-system started at 2024-05-11 12:06:15 +0000 UTC (1 container statuses recorded)
  May 11 12:56:09.594: INFO: 	Container calico-node ready: true, restart count 0
  May 11 12:56:09.594: INFO: sonobuoy from sonobuoy started at 2024-05-11 12:13:03 +0000 UTC (1 container statuses recorded)
  May 11 12:56:09.594: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May 11 12:56:09.594: INFO: sonobuoy-e2e-job-7e280b976dab4535 from sonobuoy started at 2024-05-11 12:13:06 +0000 UTC (2 container statuses recorded)
  May 11 12:56:09.594: INFO: 	Container e2e ready: true, restart count 0
  May 11 12:56:09.594: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 11 12:56:09.594: INFO: sonobuoy-systemd-logs-daemon-set-49c1eec6cf1a48c7-8n44k from sonobuoy started at 2024-05-11 12:13:06 +0000 UTC (2 container statuses recorded)
  May 11 12:56:09.594: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 11 12:56:09.594: INFO: 	Container systemd-logs ready: true, restart count 0
  May 11 12:56:09.594: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-35-147 before test
  May 11 12:56:09.599: INFO: rs-xc69j from disruption-2510 started at 2024-05-11 12:56:01 +0000 UTC (1 container statuses recorded)
  May 11 12:56:09.599: INFO: 	Container donothing ready: true, restart count 0
  May 11 12:56:09.599: INFO: nginx-ingress-controller-kubernetes-worker-68vzz from ingress-nginx-kubernetes-worker started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 12:56:09.599: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 11 12:56:09.599: INFO: calico-node-v7fn9 from kube-system started at 2024-05-11 12:07:44 +0000 UTC (1 container statuses recorded)
  May 11 12:56:09.599: INFO: 	Container calico-node ready: true, restart count 0
  May 11 12:56:09.599: INFO: coredns-bddfd76d7-pk78z from kube-system started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 12:56:09.599: INFO: 	Container coredns ready: true, restart count 0
  May 11 12:56:09.599: INFO: kube-state-metrics-6f48cdd76-mpr6f from kube-system started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 12:56:09.599: INFO: 	Container kube-state-metrics ready: true, restart count 0
  May 11 12:56:09.599: INFO: kubernetes-dashboard-7b899cb9d9-j9w54 from kubernetes-dashboard started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 12:56:09.599: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  May 11 12:56:09.599: INFO: sonobuoy-systemd-logs-daemon-set-49c1eec6cf1a48c7-8xp5v from sonobuoy started at 2024-05-11 12:13:06 +0000 UTC (2 container statuses recorded)
  May 11 12:56:09.599: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 11 12:56:09.599: INFO: 	Container systemd-logs ready: true, restart count 0
  May 11 12:56:09.599: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-73-54 before test
  May 11 12:56:09.603: INFO: nginx-ingress-controller-kubernetes-worker-vp8qm from ingress-nginx-kubernetes-worker started at 2024-05-11 12:00:10 +0000 UTC (1 container statuses recorded)
  May 11 12:56:09.603: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 2
  May 11 12:56:09.603: INFO: calico-node-l6qmg from kube-system started at 2024-05-11 12:06:15 +0000 UTC (1 container statuses recorded)
  May 11 12:56:09.603: INFO: 	Container calico-node ready: true, restart count 0
  May 11 12:56:09.603: INFO: metrics-server-v0.6.3-69d7fbfdf8-wfld4 from kube-system started at 2024-05-11 12:02:16 +0000 UTC (2 container statuses recorded)
  May 11 12:56:09.603: INFO: 	Container metrics-server ready: true, restart count 0
  May 11 12:56:09.603: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  May 11 12:56:09.603: INFO: dashboard-metrics-scraper-5dd7cb5fc-cs26p from kubernetes-dashboard started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 12:56:09.603: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  May 11 12:56:09.603: INFO: pod-exec-websocket-894ef222-6be0-4264-afd5-34df649cf988 from pods-1785 started at 2024-05-11 12:56:07 +0000 UTC (1 container statuses recorded)
  May 11 12:56:09.603: INFO: 	Container main ready: true, restart count 0
  May 11 12:56:09.603: INFO: sonobuoy-systemd-logs-daemon-set-49c1eec6cf1a48c7-vdbk7 from sonobuoy started at 2024-05-11 12:13:06 +0000 UTC (2 container statuses recorded)
  May 11 12:56:09.603: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 11 12:56:09.603: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/11/24 12:56:09.603
  E0511 12:56:10.279438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:11.279515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:12.279593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:13.279693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17ce707922035611], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 05/11/24 12:56:13.646
  E0511 12:56:14.279839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:56:14.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1539" for this suite. @ 05/11/24 12:56:14.646
• [5.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 05/11/24 12:56:14.654
  May 11 12:56:14.654: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename gc @ 05/11/24 12:56:14.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:56:14.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:56:14.673
  STEP: create the deployment @ 05/11/24 12:56:14.68
  W0511 12:56:14.695753      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/11/24 12:56:14.695
  STEP: delete the deployment @ 05/11/24 12:56:14.705
  STEP: wait for all rs to be garbage collected @ 05/11/24 12:56:14.717
  STEP: expected 0 rs, got 1 rs @ 05/11/24 12:56:14.737
  STEP: expected 0 pods, got 2 pods @ 05/11/24 12:56:14.762
  STEP: Gathering metrics @ 05/11/24 12:56:15.227
  W0511 12:56:15.230876      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May 11 12:56:15.230: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 11 12:56:15.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1608" for this suite. @ 05/11/24 12:56:15.234
• [0.587 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 05/11/24 12:56:15.241
  May 11 12:56:15.241: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename resourcequota @ 05/11/24 12:56:15.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:56:15.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:56:15.26
  STEP: Creating a ResourceQuota @ 05/11/24 12:56:15.261
  STEP: Getting a ResourceQuota @ 05/11/24 12:56:15.27
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/11/24 12:56:15.273
  STEP: Patching the ResourceQuota @ 05/11/24 12:56:15.276
  STEP: Deleting a Collection of ResourceQuotas @ 05/11/24 12:56:15.28
  E0511 12:56:15.280349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying the deleted ResourceQuota @ 05/11/24 12:56:15.288
  May 11 12:56:15.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9871" for this suite. @ 05/11/24 12:56:15.295
• [0.061 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 05/11/24 12:56:15.303
  May 11 12:56:15.303: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename dns @ 05/11/24 12:56:15.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:56:15.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:56:15.319
  STEP: Creating a test externalName service @ 05/11/24 12:56:15.321
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6951.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6951.svc.cluster.local; sleep 1; done
   @ 05/11/24 12:56:15.324
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6951.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6951.svc.cluster.local; sleep 1; done
   @ 05/11/24 12:56:15.324
  STEP: creating a pod to probe DNS @ 05/11/24 12:56:15.324
  STEP: submitting the pod to kubernetes @ 05/11/24 12:56:15.324
  E0511 12:56:16.280515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:17.280601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/11/24 12:56:17.345
  STEP: looking for the results for each expected name from probers @ 05/11/24 12:56:17.347
  May 11 12:56:17.355: INFO: DNS probes using dns-test-9f6ca91a-4992-4d12-a377-17915801c2ef succeeded

  STEP: changing the externalName to bar.example.com @ 05/11/24 12:56:17.355
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6951.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6951.svc.cluster.local; sleep 1; done
   @ 05/11/24 12:56:17.364
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6951.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6951.svc.cluster.local; sleep 1; done
   @ 05/11/24 12:56:17.364
  STEP: creating a second pod to probe DNS @ 05/11/24 12:56:17.364
  STEP: submitting the pod to kubernetes @ 05/11/24 12:56:17.364
  E0511 12:56:18.280688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:19.280837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/11/24 12:56:19.377
  STEP: looking for the results for each expected name from probers @ 05/11/24 12:56:19.38
  May 11 12:56:19.384: INFO: File wheezy_udp@dns-test-service-3.dns-6951.svc.cluster.local from pod  dns-6951/dns-test-83311afa-dd6d-48e7-ae8e-61ef0bc19076 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May 11 12:56:19.388: INFO: File jessie_udp@dns-test-service-3.dns-6951.svc.cluster.local from pod  dns-6951/dns-test-83311afa-dd6d-48e7-ae8e-61ef0bc19076 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May 11 12:56:19.388: INFO: Lookups using dns-6951/dns-test-83311afa-dd6d-48e7-ae8e-61ef0bc19076 failed for: [wheezy_udp@dns-test-service-3.dns-6951.svc.cluster.local jessie_udp@dns-test-service-3.dns-6951.svc.cluster.local]

  May 11 12:56:19.393: INFO: Pod client logs for webserver: 
  May 11 12:56:19.399: INFO: Pod client logs for querier: 
  May 11 12:56:19.407: INFO: Pod client logs for jessie-querier: 
  E0511 12:56:20.280920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:21.281039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:22.281110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:23.281187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:24.281465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:56:24.390: INFO: DNS probes using dns-test-83311afa-dd6d-48e7-ae8e-61ef0bc19076 succeeded

  STEP: changing the service to type=ClusterIP @ 05/11/24 12:56:24.39
  W0511 12:56:24.402655      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6951.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-6951.svc.cluster.local; sleep 1; done
   @ 05/11/24 12:56:24.402
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6951.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-6951.svc.cluster.local; sleep 1; done
   @ 05/11/24 12:56:24.402
  STEP: creating a third pod to probe DNS @ 05/11/24 12:56:24.402
  STEP: submitting the pod to kubernetes @ 05/11/24 12:56:24.406
  E0511 12:56:25.282271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:26.282640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:27.282733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:28.282837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:29.283523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:30.283726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/11/24 12:56:30.43
  STEP: looking for the results for each expected name from probers @ 05/11/24 12:56:30.432
  May 11 12:56:30.443: INFO: DNS probes using dns-test-23cabdf2-c32c-488c-ae62-a42fcf9a1001 succeeded

  STEP: deleting the pod @ 05/11/24 12:56:30.443
  STEP: deleting the pod @ 05/11/24 12:56:30.456
  STEP: deleting the pod @ 05/11/24 12:56:30.468
  STEP: deleting the test externalName service @ 05/11/24 12:56:30.483
  May 11 12:56:30.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6951" for this suite. @ 05/11/24 12:56:30.506
• [15.216 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 05/11/24 12:56:30.519
  May 11 12:56:30.519: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir @ 05/11/24 12:56:30.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:56:30.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:56:30.537
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/11/24 12:56:30.54
  E0511 12:56:31.283806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:32.283893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:33.283994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:34.284080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 12:56:34.56
  May 11 12:56:34.565: INFO: Trying to get logs from node ip-172-31-16-37 pod pod-5bd1923b-618e-48ce-ada2-9cc90f34e134 container test-container: <nil>
  STEP: delete the pod @ 05/11/24 12:56:34.574
  May 11 12:56:34.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9406" for this suite. @ 05/11/24 12:56:34.59
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 05/11/24 12:56:34.599
  May 11 12:56:34.599: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl-logs @ 05/11/24 12:56:34.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:56:34.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:56:34.615
  STEP: creating an pod @ 05/11/24 12:56:34.618
  May 11 12:56:34.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-logs-3772 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  May 11 12:56:34.665: INFO: stderr: ""
  May 11 12:56:34.665: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/11/24 12:56:34.665
  May 11 12:56:34.665: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0511 12:56:35.284391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:36.284465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:56:36.675: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/11/24 12:56:36.675
  May 11 12:56:36.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-logs-3772 logs logs-generator logs-generator'
  May 11 12:56:36.749: INFO: stderr: ""
  May 11 12:56:36.749: INFO: stdout: "I0511 12:56:35.224153       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/mlb 493\nI0511 12:56:35.424507       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/9jd 464\nI0511 12:56:35.624775       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/dll 283\nI0511 12:56:35.825093       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/xwh4 447\nI0511 12:56:36.024328       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/mrpk 402\nI0511 12:56:36.224632       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/s94 508\nI0511 12:56:36.424730       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/xxfc 332\nI0511 12:56:36.624992       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/28k 352\n"
  STEP: limiting log lines @ 05/11/24 12:56:36.75
  May 11 12:56:36.750: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-logs-3772 logs logs-generator logs-generator --tail=1'
  May 11 12:56:36.817: INFO: stderr: ""
  May 11 12:56:36.817: INFO: stdout: "I0511 12:56:36.624992       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/28k 352\n"
  May 11 12:56:36.817: INFO: got output "I0511 12:56:36.624992       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/28k 352\n"
  STEP: limiting log bytes @ 05/11/24 12:56:36.817
  May 11 12:56:36.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-logs-3772 logs logs-generator logs-generator --limit-bytes=1'
  May 11 12:56:36.861: INFO: stderr: ""
  May 11 12:56:36.861: INFO: stdout: "I"
  May 11 12:56:36.861: INFO: got output "I"
  STEP: exposing timestamps @ 05/11/24 12:56:36.861
  May 11 12:56:36.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-logs-3772 logs logs-generator logs-generator --tail=1 --timestamps'
  May 11 12:56:36.905: INFO: stderr: ""
  May 11 12:56:36.905: INFO: stdout: "2024-05-11T12:56:36.824365344Z I0511 12:56:36.824246       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/n9d 371\n"
  May 11 12:56:36.905: INFO: got output "2024-05-11T12:56:36.824365344Z I0511 12:56:36.824246       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/n9d 371\n"
  STEP: restricting to a time range @ 05/11/24 12:56:36.905
  E0511 12:56:37.284952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:38.285043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:39.285155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:56:39.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-logs-3772 logs logs-generator logs-generator --since=1s'
  May 11 12:56:39.457: INFO: stderr: ""
  May 11 12:56:39.457: INFO: stdout: "I0511 12:56:38.624619       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/lvf 506\nI0511 12:56:38.824788       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/g7v2 484\nI0511 12:56:39.025096       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/k4fv 210\nI0511 12:56:39.224315       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/j6tk 403\nI0511 12:56:39.424625       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/w47 513\n"
  May 11 12:56:39.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-logs-3772 logs logs-generator logs-generator --since=24h'
  May 11 12:56:39.502: INFO: stderr: ""
  May 11 12:56:39.502: INFO: stdout: "I0511 12:56:35.224153       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/mlb 493\nI0511 12:56:35.424507       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/9jd 464\nI0511 12:56:35.624775       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/dll 283\nI0511 12:56:35.825093       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/xwh4 447\nI0511 12:56:36.024328       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/mrpk 402\nI0511 12:56:36.224632       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/s94 508\nI0511 12:56:36.424730       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/xxfc 332\nI0511 12:56:36.624992       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/28k 352\nI0511 12:56:36.824246       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/n9d 371\nI0511 12:56:37.024597       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/6zvx 345\nI0511 12:56:37.224784       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/prc 302\nI0511 12:56:37.425081       1 logs_generator.go:76] 11 GET /api/v1/namespaces/default/pods/fq5 440\nI0511 12:56:37.624315       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/8vqk 412\nI0511 12:56:37.824621       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/tmm 381\nI0511 12:56:38.024765       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/nwc9 398\nI0511 12:56:38.225061       1 logs_generator.go:76] 15 POST /api/v1/namespaces/default/pods/jpxh 534\nI0511 12:56:38.424287       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/dpv9 530\nI0511 12:56:38.624619       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/lvf 506\nI0511 12:56:38.824788       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/g7v2 484\nI0511 12:56:39.025096       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/k4fv 210\nI0511 12:56:39.224315       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/j6tk 403\nI0511 12:56:39.424625       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/default/pods/w47 513\n"
  May 11 12:56:39.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-logs-3772 delete pod logs-generator'
  May 11 12:56:40.188: INFO: stderr: ""
  May 11 12:56:40.188: INFO: stdout: "pod \"logs-generator\" deleted\n"
  May 11 12:56:40.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-3772" for this suite. @ 05/11/24 12:56:40.192
• [5.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 05/11/24 12:56:40.199
  May 11 12:56:40.199: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename secrets @ 05/11/24 12:56:40.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:56:40.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:56:40.218
  STEP: Creating secret with name s-test-opt-del-6e334633-1299-4264-a219-ae0c5152bef7 @ 05/11/24 12:56:40.222
  STEP: Creating secret with name s-test-opt-upd-d638d4e5-f69f-4b5a-8ff2-9d58feb244aa @ 05/11/24 12:56:40.227
  STEP: Creating the pod @ 05/11/24 12:56:40.231
  E0511 12:56:40.285322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:41.285485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-6e334633-1299-4264-a219-ae0c5152bef7 @ 05/11/24 12:56:42.27
  STEP: Updating secret s-test-opt-upd-d638d4e5-f69f-4b5a-8ff2-9d58feb244aa @ 05/11/24 12:56:42.276
  STEP: Creating secret with name s-test-opt-create-5931440d-b6a6-4727-ac97-c858708e00c6 @ 05/11/24 12:56:42.281
  STEP: waiting to observe update in volume @ 05/11/24 12:56:42.285
  E0511 12:56:42.286208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:43.286363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:44.286463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:45.287166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:46.287349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:56:46.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7678" for this suite. @ 05/11/24 12:56:46.32
• [6.127 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 05/11/24 12:56:46.327
  May 11 12:56:46.327: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-probe @ 05/11/24 12:56:46.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:56:46.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:56:46.348
  STEP: Creating pod liveness-2dd71817-8f66-4536-966c-dc21bc564874 in namespace container-probe-9101 @ 05/11/24 12:56:46.35
  E0511 12:56:47.287464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:48.287543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/11/24 12:56:48.372
  May 11 12:56:48.375: INFO: Initial restart count of pod liveness-2dd71817-8f66-4536-966c-dc21bc564874 is 0
  May 11 12:56:48.378: INFO: Get pod liveness-2dd71817-8f66-4536-966c-dc21bc564874 in namespace container-probe-9101
  E0511 12:56:49.287643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:50.287773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:56:50.383: INFO: Get pod liveness-2dd71817-8f66-4536-966c-dc21bc564874 in namespace container-probe-9101
  E0511 12:56:51.288352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:52.288640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:56:52.387: INFO: Get pod liveness-2dd71817-8f66-4536-966c-dc21bc564874 in namespace container-probe-9101
  E0511 12:56:53.289010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:54.289095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:56:54.391: INFO: Get pod liveness-2dd71817-8f66-4536-966c-dc21bc564874 in namespace container-probe-9101
  E0511 12:56:55.289353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:56.289468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:56:56.396: INFO: Get pod liveness-2dd71817-8f66-4536-966c-dc21bc564874 in namespace container-probe-9101
  E0511 12:56:57.289568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:56:58.289963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:56:58.402: INFO: Get pod liveness-2dd71817-8f66-4536-966c-dc21bc564874 in namespace container-probe-9101
  E0511 12:56:59.290124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:00.290143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:57:00.406: INFO: Get pod liveness-2dd71817-8f66-4536-966c-dc21bc564874 in namespace container-probe-9101
  E0511 12:57:01.290246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:02.290373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:57:02.411: INFO: Get pod liveness-2dd71817-8f66-4536-966c-dc21bc564874 in namespace container-probe-9101
  E0511 12:57:03.291199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:04.291284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:57:04.415: INFO: Get pod liveness-2dd71817-8f66-4536-966c-dc21bc564874 in namespace container-probe-9101
  E0511 12:57:05.291431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:06.291685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:57:06.420: INFO: Get pod liveness-2dd71817-8f66-4536-966c-dc21bc564874 in namespace container-probe-9101
  E0511 12:57:07.291936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:08.292285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:57:08.425: INFO: Get pod liveness-2dd71817-8f66-4536-966c-dc21bc564874 in namespace container-probe-9101
  May 11 12:57:08.425: INFO: Restart count of pod container-probe-9101/liveness-2dd71817-8f66-4536-966c-dc21bc564874 is now 1 (20.050647358s elapsed)
  STEP: deleting the pod @ 05/11/24 12:57:08.425
  May 11 12:57:08.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9101" for this suite. @ 05/11/24 12:57:08.444
• [22.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 05/11/24 12:57:08.449
  May 11 12:57:08.449: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir @ 05/11/24 12:57:08.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:57:08.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:57:08.467
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/11/24 12:57:08.469
  E0511 12:57:09.292367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:10.292438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:11.292922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:12.293054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 12:57:12.489
  May 11 12:57:12.493: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-42725f29-b3ac-4fa5-945f-154c7a7286d8 container test-container: <nil>
  STEP: delete the pod @ 05/11/24 12:57:12.499
  May 11 12:57:12.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8857" for this suite. @ 05/11/24 12:57:12.519
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 05/11/24 12:57:12.525
  May 11 12:57:12.525: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 12:57:12.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:57:12.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:57:12.544
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-7539 @ 05/11/24 12:57:12.546
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/11/24 12:57:12.563
  STEP: creating service externalsvc in namespace services-7539 @ 05/11/24 12:57:12.563
  STEP: creating replication controller externalsvc in namespace services-7539 @ 05/11/24 12:57:12.575
  I0511 12:57:12.583517      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-7539, replica count: 2
  E0511 12:57:13.293196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:14.293334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:15.293420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0511 12:57:15.634943      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 05/11/24 12:57:15.64
  May 11 12:57:15.662: INFO: Creating new exec pod
  E0511 12:57:16.294072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:17.294125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:57:17.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-7539 exec execpodz4wld -- /bin/sh -x -c nslookup nodeport-service.services-7539.svc.cluster.local'
  May 11 12:57:17.797: INFO: stderr: "+ nslookup nodeport-service.services-7539.svc.cluster.local\n"
  May 11 12:57:17.797: INFO: stdout: "Server:\t\t10.152.183.226\nAddress:\t10.152.183.226#53\n\nnodeport-service.services-7539.svc.cluster.local\tcanonical name = externalsvc.services-7539.svc.cluster.local.\nName:\texternalsvc.services-7539.svc.cluster.local\nAddress: 10.152.183.64\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-7539, will wait for the garbage collector to delete the pods @ 05/11/24 12:57:17.797
  May 11 12:57:17.860: INFO: Deleting ReplicationController externalsvc took: 7.585432ms
  May 11 12:57:17.960: INFO: Terminating ReplicationController externalsvc pods took: 100.269416ms
  E0511 12:57:18.294370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:19.295466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:20.296196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:57:21.080: INFO: Cleaning up the NodePort to ExternalName test service
  May 11 12:57:21.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7539" for this suite. @ 05/11/24 12:57:21.096
• [8.577 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 05/11/24 12:57:21.101
  May 11 12:57:21.101: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename subpath @ 05/11/24 12:57:21.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:57:21.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:57:21.119
  STEP: Setting up data @ 05/11/24 12:57:21.12
  STEP: Creating pod pod-subpath-test-downwardapi-kkbk @ 05/11/24 12:57:21.13
  STEP: Creating a pod to test atomic-volume-subpath @ 05/11/24 12:57:21.13
  E0511 12:57:21.296222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:22.296375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:23.297402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:24.297468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:25.297553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:26.297607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:27.298078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:28.298182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:29.298935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:30.299203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:31.299878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:32.299959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:33.300530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:34.300721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:35.301447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:36.301596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:37.302189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:38.303135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:39.303827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:40.303912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:41.304597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:42.304862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 12:57:43.189
  May 11 12:57:43.193: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-subpath-test-downwardapi-kkbk container test-container-subpath-downwardapi-kkbk: <nil>
  STEP: delete the pod @ 05/11/24 12:57:43.203
  STEP: Deleting pod pod-subpath-test-downwardapi-kkbk @ 05/11/24 12:57:43.217
  May 11 12:57:43.217: INFO: Deleting pod "pod-subpath-test-downwardapi-kkbk" in namespace "subpath-1660"
  May 11 12:57:43.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1660" for this suite. @ 05/11/24 12:57:43.222
• [22.127 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 05/11/24 12:57:43.229
  May 11 12:57:43.229: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename runtimeclass @ 05/11/24 12:57:43.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:57:43.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:57:43.247
  E0511 12:57:43.305295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:44.305452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:57:45.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8422" for this suite. @ 05/11/24 12:57:45.281
• [2.058 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 05/11/24 12:57:45.287
  May 11 12:57:45.287: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename statefulset @ 05/11/24 12:57:45.288
  E0511 12:57:45.305562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:57:45.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:57:45.307
  STEP: Creating service test in namespace statefulset-8272 @ 05/11/24 12:57:45.309
  STEP: Creating a new StatefulSet @ 05/11/24 12:57:45.315
  May 11 12:57:45.325: INFO: Found 0 stateful pods, waiting for 3
  E0511 12:57:46.306679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:47.307008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:48.307136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:49.307217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:50.307319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:51.307395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:52.307480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:53.307562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:54.307759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:55.308277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:57:55.328: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May 11 12:57:55.328: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May 11 12:57:55.328: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  May 11 12:57:55.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-8272 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 11 12:57:55.425: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 11 12:57:55.425: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 11 12:57:55.425: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0511 12:57:56.308382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:57.308459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:58.308596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:57:59.308686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:00.308882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:01.308976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:02.309878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:03.310230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:04.310323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:05.311139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/11/24 12:58:05.434
  May 11 12:58:05.453: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 05/11/24 12:58:05.453
  E0511 12:58:06.311229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:07.311343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:08.311518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:09.311637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:10.311895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:11.312518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:12.312606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:13.312732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:14.313352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:15.313458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 05/11/24 12:58:15.461
  May 11 12:58:15.465: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-8272 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 11 12:58:15.554: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 11 12:58:15.554: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 11 12:58:15.554: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0511 12:58:16.313556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:17.313722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:18.313818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:19.313884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:20.314797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:21.314902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:22.314987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:23.315082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:24.315245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:25.315383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:58:25.568: INFO: Waiting for StatefulSet statefulset-8272/ss2 to complete update
  E0511 12:58:26.315773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:27.316605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:28.316704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:29.316776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:30.317132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:31.317316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:32.317407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:33.317583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:34.317808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:35.318060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 05/11/24 12:58:35.573
  May 11 12:58:35.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-8272 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 11 12:58:35.661: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 11 12:58:35.661: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 11 12:58:35.661: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0511 12:58:36.318623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:37.318717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:38.319130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:39.319225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:40.319342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:41.319435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:42.319519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:43.319704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:44.320653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:45.320740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:58:45.690: INFO: Updating stateful set ss2
  E0511 12:58:46.321671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:47.321803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:48.321879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:49.322109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:50.323172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:51.323339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:52.323547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:53.323696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:54.323922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:55.324017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 05/11/24 12:58:55.698
  May 11 12:58:55.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-8272 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 11 12:58:55.799: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 11 12:58:55.799: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 11 12:58:55.799: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0511 12:58:56.324350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:57.324421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:58.324708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:58:59.324948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:00.325545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:01.325717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:02.325801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:03.326234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:04.327257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:05.327346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:05.812: INFO: Waiting for StatefulSet statefulset-8272/ss2 to complete update
  E0511 12:59:06.328039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:07.328273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:08.328536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:09.329232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:10.329483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:11.329657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:12.329753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:13.330005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:14.330059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:15.331117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:15.816: INFO: Deleting all statefulset in ns statefulset-8272
  May 11 12:59:15.820: INFO: Scaling statefulset ss2 to 0
  E0511 12:59:16.331787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:17.331858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:18.331953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:19.332041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:20.332146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:21.332327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:22.332433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:23.332633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:24.333593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:25.334638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:25.837: INFO: Waiting for statefulset status.replicas updated to 0
  May 11 12:59:25.840: INFO: Deleting statefulset ss2
  May 11 12:59:25.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8272" for this suite. @ 05/11/24 12:59:25.856
• [100.577 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 05/11/24 12:59:25.865
  May 11 12:59:25.865: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/11/24 12:59:25.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:59:25.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:59:25.878
  STEP: set up a multi version CRD @ 05/11/24 12:59:25.881
  May 11 12:59:25.881: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 12:59:26.335397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:27.335817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:28.336308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 05/11/24 12:59:28.913
  STEP: check the unserved version gets removed @ 05/11/24 12:59:28.926
  E0511 12:59:29.337269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 05/11/24 12:59:29.719
  E0511 12:59:30.337858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:31.338982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:32.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1505" for this suite. @ 05/11/24 12:59:32.159
• [6.300 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 05/11/24 12:59:32.165
  May 11 12:59:32.165: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl @ 05/11/24 12:59:32.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:59:32.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:59:32.184
  STEP: create deployment with httpd image @ 05/11/24 12:59:32.186
  May 11 12:59:32.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-8963 create -f -'
  May 11 12:59:32.248: INFO: stderr: ""
  May 11 12:59:32.248: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/11/24 12:59:32.248
  May 11 12:59:32.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-8963 diff -f -'
  May 11 12:59:32.324: INFO: rc: 1
  May 11 12:59:32.324: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-8963 delete -f -'
  E0511 12:59:32.339588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:32.366: INFO: stderr: ""
  May 11 12:59:32.366: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  May 11 12:59:32.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8963" for this suite. @ 05/11/24 12:59:32.37
• [0.211 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 05/11/24 12:59:32.376
  May 11 12:59:32.376: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename ingressclass @ 05/11/24 12:59:32.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:59:32.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:59:32.397
  STEP: getting /apis @ 05/11/24 12:59:32.399
  STEP: getting /apis/networking.k8s.io @ 05/11/24 12:59:32.402
  STEP: getting /apis/networking.k8s.iov1 @ 05/11/24 12:59:32.402
  STEP: creating @ 05/11/24 12:59:32.403
  STEP: getting @ 05/11/24 12:59:32.416
  STEP: listing @ 05/11/24 12:59:32.419
  STEP: watching @ 05/11/24 12:59:32.422
  May 11 12:59:32.422: INFO: starting watch
  STEP: patching @ 05/11/24 12:59:32.423
  STEP: updating @ 05/11/24 12:59:32.427
  May 11 12:59:32.431: INFO: waiting for watch events with expected annotations
  May 11 12:59:32.431: INFO: saw patched and updated annotations
  STEP: deleting @ 05/11/24 12:59:32.431
  STEP: deleting a collection @ 05/11/24 12:59:32.442
  May 11 12:59:32.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-580" for this suite. @ 05/11/24 12:59:32.46
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 05/11/24 12:59:32.466
  May 11 12:59:32.466: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-probe @ 05/11/24 12:59:32.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 12:59:32.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 12:59:32.492
  STEP: Creating pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539 @ 05/11/24 12:59:32.494
  E0511 12:59:33.339694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:34.339798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/11/24 12:59:34.51
  May 11 12:59:34.514: INFO: Initial restart count of pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 is 0
  May 11 12:59:34.516: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 12:59:35.340400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:36.340481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:36.521: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 12:59:37.341383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:38.341563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:38.527: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 12:59:39.341655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:40.341857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:40.531: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 12:59:41.342067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:42.342184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:42.535: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 12:59:43.342421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:44.342522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:44.540: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 12:59:45.343154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:46.343360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:46.545: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 12:59:47.343849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:48.344033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:48.550: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 12:59:49.344193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:50.344330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:50.554: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 12:59:51.344802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:52.344887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:52.559: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 12:59:53.345488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:54.345621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:54.562: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 12:59:55.345720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:56.346710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:56.567: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 12:59:57.347732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 12:59:58.348253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 12:59:58.573: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 12:59:59.348863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:00.349739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:00.577: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:01.350067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:02.351037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:02.582: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:03.351125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:04.351226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:04.585: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:05.351325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:06.351601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:06.590: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:07.351738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:08.351810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:08.596: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:09.352585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:10.352770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:10.600: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:11.352869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:12.353179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:12.605: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:13.353539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:14.353635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:14.610: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:15.353725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:16.353842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:16.614: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:17.354229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:18.355164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:18.620: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:19.355483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:20.355802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:20.626: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:21.355898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:22.355993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:22.630: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:23.356353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:24.356438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:24.635: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:25.357407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:26.357653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:26.639: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:27.358060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:28.358155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:28.645: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:29.358255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:30.359180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:30.650: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:31.359620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:32.359725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:32.654: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:33.360305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:34.360489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:34.659: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:35.360858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:36.361046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:36.664: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:37.361196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:38.361531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:38.668: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:39.362065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:40.362161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:40.673: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:41.362471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:42.363227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:42.679: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:43.363333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:44.363447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:44.683: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:45.363540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:46.364210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:46.689: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:47.364591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:48.365466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:48.693: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:49.365505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:50.365671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:50.698: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:51.365760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:52.365852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:52.703: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:53.366657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:54.367140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:54.708: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:55.367658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:56.367922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:56.712: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:57.368046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:00:58.368130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:00:58.718: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:00:59.368773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:00.369340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:00.722: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:01.370036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:02.370080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:02.727: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:03.370829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:04.370924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:04.731: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:05.371141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:06.371228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:06.735: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:07.371706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:08.371977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:08.740: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:09.372224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:10.372399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:10.745: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:11.373126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:12.373570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:12.750: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:13.374535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:14.375134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:14.755: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:15.375226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:16.375478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:16.759: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:17.375807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:18.375981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:18.764: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:19.376209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:20.376537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:20.768: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:21.377159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:22.378108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:22.774: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:23.378208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:24.379159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:24.778: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:25.379258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:26.379539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:26.782: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:27.379863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:28.379964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:28.787: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:29.380112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:30.380348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:30.790: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:31.380533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:32.380921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:32.795: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:33.381130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:34.381171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:34.800: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:35.381250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:36.381545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:36.804: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:37.382429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:38.382517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:38.810: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:39.383168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:40.383276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:40.814: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:41.384289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:42.384378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:42.819: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:43.385150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:44.385240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:44.824: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:45.386154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:46.386556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:46.829: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:47.386638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:48.386734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:48.833: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:49.387228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:50.387442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:50.838: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:51.387847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:52.388167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:52.841: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:53.388299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:54.388391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:54.847: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:55.389004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:56.389137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:56.852: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:57.389519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:01:58.390388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:01:58.856: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:01:59.390651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:00.391131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:00.861: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:01.392031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:02.392150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:02.866: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:03.392475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:04.392956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:04.872: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:05.393052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:06.393381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:06.875: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:07.393836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:08.393924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:08.879: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:09.394068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:10.394154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:10.884: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:11.395145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:12.395581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:12.888: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:13.396042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:14.396131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:14.893: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:15.397120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:16.397563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:16.897: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:17.398054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:18.398104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:18.902: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:19.398446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:20.399316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:20.907: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:21.399531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:22.399647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:22.912: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:23.399738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:24.399953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:24.918: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:25.400057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:26.400539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:26.922: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:27.400641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:28.401492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:28.927: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:29.402035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:30.402125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:30.932: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:31.403149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:32.403241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:32.936: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:33.404212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:34.404458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:34.941: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:35.404555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:36.404708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:36.946: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:37.404798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:38.405356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:38.950: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:39.405461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:40.406272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:40.955: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:41.406376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:42.406476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:42.961: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:43.406716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:44.407170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:44.966: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:45.407750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:46.407855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:46.970: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:47.408593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:48.408684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:48.974: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:49.408781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:50.409638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:50.978: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:51.410692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:52.410790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:52.985: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:53.411678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:54.411773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:54.989: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:55.412581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:56.412711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:56.993: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:57.413589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:02:58.413754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:02:58.998: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:02:59.414800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:00.415123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:01.001: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:01.416109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:02.416382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:03.006: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:03.417356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:04.417425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:05.010: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:05.417525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:06.417763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:07.014: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:07.418485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:08.418562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:09.020: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:09.419607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:10.419719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:11.023: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:11.420465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:12.420764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:13.028: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:13.421436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:14.421533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:15.033: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:15.422412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:16.422490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:17.037: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:17.423149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:18.424206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:19.042: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:19.424799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:20.425060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:21.046: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:21.425454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:22.425546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:23.051: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:23.426274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:24.426356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:25.055: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:25.427088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:26.427390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:27.060: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:27.427995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:28.428108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:29.065: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:29.428252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:30.428426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:31.069: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:31.429018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:32.429380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:33.074: INFO: Get pod busybox-1b02e071-5405-42f2-9c9b-5bfea1ff8d09 in namespace container-probe-5539
  E0511 13:03:33.430314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:34.430329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/11/24 13:03:35.075
  May 11 13:03:35.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5539" for this suite. @ 05/11/24 13:03:35.091
• [242.640 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 05/11/24 13:03:35.105
  May 11 13:03:35.105: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename downward-api @ 05/11/24 13:03:35.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:03:35.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:03:35.129
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 13:03:35.131
  E0511 13:03:35.431162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:36.431264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:37.432100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:38.432348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:03:39.153
  May 11 13:03:39.156: INFO: Trying to get logs from node ip-172-31-73-54 pod downwardapi-volume-653d0f6a-c226-4e03-9193-d1bed631b115 container client-container: <nil>
  STEP: delete the pod @ 05/11/24 13:03:39.171
  May 11 13:03:39.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8012" for this suite. @ 05/11/24 13:03:39.19
• [4.090 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 05/11/24 13:03:39.196
  May 11 13:03:39.196: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename configmap @ 05/11/24 13:03:39.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:03:39.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:03:39.213
  STEP: creating a ConfigMap @ 05/11/24 13:03:39.215
  STEP: fetching the ConfigMap @ 05/11/24 13:03:39.219
  STEP: patching the ConfigMap @ 05/11/24 13:03:39.222
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/11/24 13:03:39.227
  STEP: deleting the ConfigMap by collection with a label selector @ 05/11/24 13:03:39.229
  STEP: listing all ConfigMaps in test namespace @ 05/11/24 13:03:39.236
  May 11 13:03:39.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-925" for this suite. @ 05/11/24 13:03:39.241
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 05/11/24 13:03:39.249
  May 11 13:03:39.249: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename secrets @ 05/11/24 13:03:39.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:03:39.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:03:39.27
  STEP: creating a secret @ 05/11/24 13:03:39.272
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/11/24 13:03:39.277
  STEP: patching the secret @ 05/11/24 13:03:39.28
  STEP: deleting the secret using a LabelSelector @ 05/11/24 13:03:39.288
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/11/24 13:03:39.294
  May 11 13:03:39.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9588" for this suite. @ 05/11/24 13:03:39.301
• [0.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 05/11/24 13:03:39.307
  May 11 13:03:39.307: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename resourcequota @ 05/11/24 13:03:39.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:03:39.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:03:39.322
  STEP: Counting existing ResourceQuota @ 05/11/24 13:03:39.325
  E0511 13:03:39.433114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:40.433742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:41.434042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:42.434730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:43.434982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/11/24 13:03:44.331
  STEP: Ensuring resource quota status is calculated @ 05/11/24 13:03:44.335
  E0511 13:03:44.435823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:45.435923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 05/11/24 13:03:46.34
  STEP: Ensuring resource quota status captures replication controller creation @ 05/11/24 13:03:46.352
  E0511 13:03:46.436258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:47.436343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 05/11/24 13:03:48.356
  STEP: Ensuring resource quota status released usage @ 05/11/24 13:03:48.362
  E0511 13:03:48.436923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:49.437051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:03:50.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6243" for this suite. @ 05/11/24 13:03:50.371
• [11.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 05/11/24 13:03:50.378
  May 11 13:03:50.378: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pod-network-test @ 05/11/24 13:03:50.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:03:50.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:03:50.399
  STEP: Performing setup for networking test in namespace pod-network-test-3111 @ 05/11/24 13:03:50.401
  STEP: creating a selector @ 05/11/24 13:03:50.401
  STEP: Creating the service pods in kubernetes @ 05/11/24 13:03:50.401
  May 11 13:03:50.401: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0511 13:03:50.437880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:51.438144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:52.438774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:53.439390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:54.439621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:55.439762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:56.439778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:57.439928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:58.440097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:03:59.440117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:00.440308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:01.440747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:02.441104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:03.441889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:04.442100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:05.442211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:06.442266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:07.442366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:08.442446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:09.442552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:10.443177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:11.443367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:12.443542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/11/24 13:04:12.494
  E0511 13:04:13.443621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:14.443818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:04:14.524: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  May 11 13:04:14.524: INFO: Going to poll 192.168.204.176 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  May 11 13:04:14.526: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.204.176 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3111 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:04:14.526: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:04:14.526: INFO: ExecWithOptions: Clientset creation
  May 11 13:04:14.526: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3111/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.204.176+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0511 13:04:15.443903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:04:15.580: INFO: Found all 1 expected endpoints: [netserver-0]
  May 11 13:04:15.580: INFO: Going to poll 192.168.55.162 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  May 11 13:04:15.584: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.55.162 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3111 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:04:15.584: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:04:15.585: INFO: ExecWithOptions: Clientset creation
  May 11 13:04:15.585: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3111/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.55.162+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0511 13:04:16.444807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:04:16.631: INFO: Found all 1 expected endpoints: [netserver-1]
  May 11 13:04:16.631: INFO: Going to poll 192.168.105.196 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  May 11 13:04:16.635: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.105.196 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3111 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:04:16.635: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:04:16.635: INFO: ExecWithOptions: Clientset creation
  May 11 13:04:16.635: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3111/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.105.196+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0511 13:04:17.444894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:04:17.680: INFO: Found all 1 expected endpoints: [netserver-2]
  May 11 13:04:17.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3111" for this suite. @ 05/11/24 13:04:17.684
• [27.313 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 05/11/24 13:04:17.691
  May 11 13:04:17.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename configmap @ 05/11/24 13:04:17.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:04:17.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:04:17.711
  STEP: Creating configMap with name configmap-test-volume-map-5217044f-c2e2-4664-a699-ed418def32c5 @ 05/11/24 13:04:17.713
  STEP: Creating a pod to test consume configMaps @ 05/11/24 13:04:17.718
  E0511 13:04:18.445020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:19.445135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:20.445226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:21.445326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:04:21.739
  May 11 13:04:21.742: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-configmaps-174eca20-e336-4cb1-a585-474149cc0526 container agnhost-container: <nil>
  STEP: delete the pod @ 05/11/24 13:04:21.749
  May 11 13:04:21.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-318" for this suite. @ 05/11/24 13:04:21.768
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 05/11/24 13:04:21.774
  May 11 13:04:21.774: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pods @ 05/11/24 13:04:21.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:04:21.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:04:21.794
  STEP: creating a Pod with a static label @ 05/11/24 13:04:21.8
  STEP: watching for Pod to be ready @ 05/11/24 13:04:21.808
  May 11 13:04:21.809: INFO: observed Pod pod-test in namespace pods-8166 in phase Pending with labels: map[test-pod-static:true] & conditions []
  May 11 13:04:21.812: INFO: observed Pod pod-test in namespace pods-8166 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:04:21 +0000 UTC  }]
  May 11 13:04:21.829: INFO: observed Pod pod-test in namespace pods-8166 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:04:21 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:04:21 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:04:21 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:04:21 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:04:21 +0000 UTC  }]
  E0511 13:04:22.445421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:04:22.666: INFO: Found Pod pod-test in namespace pods-8166 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:04:22 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:04:21 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:04:22 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:04:22 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:04:21 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/11/24 13:04:22.669
  STEP: getting the Pod and ensuring that it's patched @ 05/11/24 13:04:22.676
  STEP: replacing the Pod's status Ready condition to False @ 05/11/24 13:04:22.679
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/11/24 13:04:22.689
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/11/24 13:04:22.689
  STEP: watching for the Pod to be deleted @ 05/11/24 13:04:22.697
  May 11 13:04:22.698: INFO: observed event type MODIFIED
  E0511 13:04:23.445559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:24.445859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:04:24.677: INFO: observed event type MODIFIED
  May 11 13:04:24.855: INFO: observed event type MODIFIED
  E0511 13:04:25.445966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:04:25.684: INFO: observed event type MODIFIED
  May 11 13:04:25.706: INFO: observed event type MODIFIED
  May 11 13:04:25.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8166" for this suite. @ 05/11/24 13:04:25.72
• [3.951 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 05/11/24 13:04:25.725
  May 11 13:04:25.725: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename configmap @ 05/11/24 13:04:25.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:04:25.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:04:25.744
  STEP: Creating configMap with name configmap-test-upd-efa7b312-33e0-4b63-9b31-1832f6beb05c @ 05/11/24 13:04:25.75
  STEP: Creating the pod @ 05/11/24 13:04:25.754
  E0511 13:04:26.446714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:27.447110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 05/11/24 13:04:27.766
  STEP: Waiting for pod with binary data @ 05/11/24 13:04:27.773
  May 11 13:04:27.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4464" for this suite. @ 05/11/24 13:04:27.783
• [2.066 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 05/11/24 13:04:27.791
  May 11 13:04:27.792: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 13:04:27.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:04:27.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:04:27.81
  STEP: Setting up server cert @ 05/11/24 13:04:27.834
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 13:04:28.106
  STEP: Deploying the webhook pod @ 05/11/24 13:04:28.115
  STEP: Wait for the deployment to be ready @ 05/11/24 13:04:28.123
  May 11 13:04:28.132: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0511 13:04:28.447206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:29.447325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/11/24 13:04:30.144
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 13:04:30.154
  E0511 13:04:30.447988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:04:31.154: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/11/24 13:04:31.163
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/11/24 13:04:31.175
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/11/24 13:04:31.18
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/11/24 13:04:31.189
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/11/24 13:04:31.199
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/11/24 13:04:31.206
  May 11 13:04:31.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9137" for this suite. @ 05/11/24 13:04:31.25
  STEP: Destroying namespace "webhook-markers-9262" for this suite. @ 05/11/24 13:04:31.258
• [3.474 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 05/11/24 13:04:31.265
  May 11 13:04:31.265: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename daemonsets @ 05/11/24 13:04:31.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:04:31.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:04:31.287
  STEP: Creating simple DaemonSet "daemon-set" @ 05/11/24 13:04:31.307
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/11/24 13:04:31.311
  May 11 13:04:31.314: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:04:31.314: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:04:31.319: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 13:04:31.319: INFO: Node ip-172-31-16-37 is running 0 daemon pod, expected 1
  E0511 13:04:31.448808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:04:32.315: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:04:32.315: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:04:32.319: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 13:04:32.319: INFO: Node ip-172-31-16-37 is running 0 daemon pod, expected 1
  E0511 13:04:32.449135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:04:33.317: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:04:33.317: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:04:33.320: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 11 13:04:33.320: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/11/24 13:04:33.323
  STEP: DeleteCollection of the DaemonSets @ 05/11/24 13:04:33.327
  STEP: Verify that ReplicaSets have been deleted @ 05/11/24 13:04:33.335
  May 11 13:04:33.343: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"25859"},"items":null}

  May 11 13:04:33.348: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"25859"},"items":[{"metadata":{"name":"daemon-set-4bkkt","generateName":"daemon-set-","namespace":"daemonsets-714","uid":"93316fdc-c13f-468c-adeb-5c485e5f2a92","resourceVersion":"25829","creationTimestamp":"2024-05-11T13:04:31Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e94c34ef-a216-4622-abf6-a35431c723ca","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-11T13:04:31Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e94c34ef-a216-4622-abf6-a35431c723ca\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-11T13:04:32Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.55.159\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-j8mg8","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-j8mg8","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-35-147","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-35-147"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-11T13:04:32Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-11T13:04:31Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-11T13:04:32Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-11T13:04:32Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-11T13:04:31Z"}],"hostIP":"172.31.35.147","hostIPs":[{"ip":"172.31.35.147"}],"podIP":"192.168.55.159","podIPs":[{"ip":"192.168.55.159"}],"startTime":"2024-05-11T13:04:31Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-11T13:04:31Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://167fca9a99623605ddf40957053346938e0ab8b89fb8067f8712718be5ffdd74","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-nxp6t","generateName":"daemon-set-","namespace":"daemonsets-714","uid":"12af4ddc-4483-4cd6-9757-89002cac4e7a","resourceVersion":"25832","creationTimestamp":"2024-05-11T13:04:31Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e94c34ef-a216-4622-abf6-a35431c723ca","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-11T13:04:31Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e94c34ef-a216-4622-abf6-a35431c723ca\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-11T13:04:32Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.204.191\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-7pb8b","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-7pb8b","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-16-37","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-16-37"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-11T13:04:32Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-11T13:04:31Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-11T13:04:32Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-11T13:04:32Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-11T13:04:31Z"}],"hostIP":"172.31.16.37","hostIPs":[{"ip":"172.31.16.37"}],"podIP":"192.168.204.191","podIPs":[{"ip":"192.168.204.191"}],"startTime":"2024-05-11T13:04:31Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-11T13:04:31Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://8138849b418ce217fe78cd06fc572e4dd0a457baf662ea51cc0a2f8e364a7018","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qkg62","generateName":"daemon-set-","namespace":"daemonsets-714","uid":"a579f901-9f4d-478c-8155-33114a440cc3","resourceVersion":"25837","creationTimestamp":"2024-05-11T13:04:31Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e94c34ef-a216-4622-abf6-a35431c723ca","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-11T13:04:31Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e94c34ef-a216-4622-abf6-a35431c723ca\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-11T13:04:32Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.105.237\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-j5w5c","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-j5w5c","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-73-54","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-73-54"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-11T13:04:32Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-11T13:04:31Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-11T13:04:32Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-11T13:04:32Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-11T13:04:31Z"}],"hostIP":"172.31.73.54","hostIPs":[{"ip":"172.31.73.54"}],"podIP":"192.168.105.237","podIPs":[{"ip":"192.168.105.237"}],"startTime":"2024-05-11T13:04:31Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-11T13:04:31Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://2b258231cdef1543e93f41a3abd64ca21eb4ea01f7deacb3bb8fa6c4f5f8cd9a","started":true}],"qosClass":"BestEffort"}}]}

  May 11 13:04:33.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-714" for this suite. @ 05/11/24 13:04:33.362
• [2.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 05/11/24 13:04:33.367
  May 11 13:04:33.367: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-probe @ 05/11/24 13:04:33.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:04:33.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:04:33.386
  E0511 13:04:33.449704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:34.450190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:35.450432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:36.450491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:37.451396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:38.451847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:39.452400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:40.452589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:41.453176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:42.453629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:43.454083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:44.454351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:45.455099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:46.456022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:47.456123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:48.456266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:49.456332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:50.456434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:51.456513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:52.456878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:53.456995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:54.457101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:55.457186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:56.457401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:57.457506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:58.457727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:04:59.458083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:00.458174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:01.459176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:02.459791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:03.462146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:04.462328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:05.462457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:06.462816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:07.462925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:08.463018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:09.463512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:10.463569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:11.464063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:12.464741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:13.465817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:14.466083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:15.467127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:16.467611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:17.468450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:18.468918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:19.470066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:20.470161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:21.470183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:22.470272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:23.471098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:24.471209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:25.472127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:26.472901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:27.472999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:28.473528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:29.473711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:30.474646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:31.474680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:32.474859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:05:33.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2927" for this suite. @ 05/11/24 13:05:33.411
• [60.050 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 05/11/24 13:05:33.417
  May 11 13:05:33.418: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename resourcequota @ 05/11/24 13:05:33.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:05:33.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:05:33.438
  STEP: Counting existing ResourceQuota @ 05/11/24 13:05:33.441
  E0511 13:05:33.475613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:34.475854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:35.476190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:36.476556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:37.477331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/11/24 13:05:38.445
  STEP: Ensuring resource quota status is calculated @ 05/11/24 13:05:38.449
  E0511 13:05:38.478370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:39.478521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 05/11/24 13:05:40.453
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/11/24 13:05:40.465
  E0511 13:05:40.479056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:41.479240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/11/24 13:05:42.47
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/11/24 13:05:42.472
  STEP: Ensuring a pod cannot update its resource requirements @ 05/11/24 13:05:42.474
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/11/24 13:05:42.478
  E0511 13:05:42.479914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:43.480073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:44.480305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/11/24 13:05:44.483
  STEP: Ensuring resource quota status released the pod usage @ 05/11/24 13:05:44.494
  E0511 13:05:45.480444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:46.480889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:05:46.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5364" for this suite. @ 05/11/24 13:05:46.502
• [13.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 05/11/24 13:05:46.508
  May 11 13:05:46.508: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename replicaset @ 05/11/24 13:05:46.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:05:46.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:05:46.527
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/11/24 13:05:46.529
  E0511 13:05:47.481500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:48.481649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 05/11/24 13:05:48.546
  STEP: Then the orphan pod is adopted @ 05/11/24 13:05:48.552
  E0511 13:05:49.481753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 05/11/24 13:05:49.56
  May 11 13:05:49.564: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/11/24 13:05:49.573
  E0511 13:05:50.481793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:05:50.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6350" for this suite. @ 05/11/24 13:05:50.584
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 05/11/24 13:05:50.59
  May 11 13:05:50.590: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 13:05:50.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:05:50.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:05:50.61
  STEP: Setting up server cert @ 05/11/24 13:05:50.633
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 13:05:50.8
  STEP: Deploying the webhook pod @ 05/11/24 13:05:50.808
  STEP: Wait for the deployment to be ready @ 05/11/24 13:05:50.819
  May 11 13:05:50.826: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0511 13:05:51.482238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:52.483186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/11/24 13:05:52.836
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 13:05:52.847
  E0511 13:05:53.483270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:05:53.848: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/11/24 13:05:53.917
  STEP: Creating a configMap that should be mutated @ 05/11/24 13:05:53.925
  STEP: Deleting the collection of validation webhooks @ 05/11/24 13:05:53.947
  STEP: Creating a configMap that should not be mutated @ 05/11/24 13:05:53.993
  May 11 13:05:54.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1452" for this suite. @ 05/11/24 13:05:54.039
  STEP: Destroying namespace "webhook-markers-9575" for this suite. @ 05/11/24 13:05:54.046
• [3.463 seconds]
------------------------------
SSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 05/11/24 13:05:54.053
  May 11 13:05:54.053: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/11/24 13:05:54.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:05:54.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:05:54.074
  STEP: Setting up the test @ 05/11/24 13:05:54.077
  STEP: Creating hostNetwork=false pod @ 05/11/24 13:05:54.077
  E0511 13:05:54.483407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:55.483625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 05/11/24 13:05:56.101
  E0511 13:05:56.483987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:05:57.484195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 05/11/24 13:05:58.118
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/11/24 13:05:58.118
  May 11 13:05:58.118: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6841 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:05:58.118: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:05:58.119: INFO: ExecWithOptions: Clientset creation
  May 11 13:05:58.119: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6841/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 11 13:05:58.169: INFO: Exec stderr: ""
  May 11 13:05:58.169: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6841 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:05:58.169: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:05:58.170: INFO: ExecWithOptions: Clientset creation
  May 11 13:05:58.170: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6841/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 11 13:05:58.205: INFO: Exec stderr: ""
  May 11 13:05:58.205: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6841 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:05:58.205: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:05:58.205: INFO: ExecWithOptions: Clientset creation
  May 11 13:05:58.205: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6841/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 11 13:05:58.250: INFO: Exec stderr: ""
  May 11 13:05:58.250: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6841 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:05:58.250: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:05:58.250: INFO: ExecWithOptions: Clientset creation
  May 11 13:05:58.250: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6841/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 11 13:05:58.285: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/11/24 13:05:58.285
  May 11 13:05:58.285: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6841 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:05:58.285: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:05:58.285: INFO: ExecWithOptions: Clientset creation
  May 11 13:05:58.285: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6841/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  May 11 13:05:58.321: INFO: Exec stderr: ""
  May 11 13:05:58.321: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6841 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:05:58.321: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:05:58.321: INFO: ExecWithOptions: Clientset creation
  May 11 13:05:58.321: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6841/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  May 11 13:05:58.357: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/11/24 13:05:58.357
  May 11 13:05:58.357: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6841 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:05:58.357: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:05:58.357: INFO: ExecWithOptions: Clientset creation
  May 11 13:05:58.357: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6841/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 11 13:05:58.411: INFO: Exec stderr: ""
  May 11 13:05:58.411: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6841 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:05:58.411: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:05:58.412: INFO: ExecWithOptions: Clientset creation
  May 11 13:05:58.412: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6841/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 11 13:05:58.455: INFO: Exec stderr: ""
  May 11 13:05:58.455: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6841 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:05:58.455: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:05:58.455: INFO: ExecWithOptions: Clientset creation
  May 11 13:05:58.455: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6841/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  E0511 13:05:58.484502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:05:58.503: INFO: Exec stderr: ""
  May 11 13:05:58.503: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6841 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:05:58.503: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:05:58.503: INFO: ExecWithOptions: Clientset creation
  May 11 13:05:58.503: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6841/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 11 13:05:58.539: INFO: Exec stderr: ""
  May 11 13:05:58.539: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6841" for this suite. @ 05/11/24 13:05:58.544
• [4.497 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 05/11/24 13:05:58.55
  May 11 13:05:58.550: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename crd-watch @ 05/11/24 13:05:58.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:05:58.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:05:58.571
  May 11 13:05:58.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 13:05:59.484843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:00.485110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 05/11/24 13:06:01.104
  May 11 13:06:01.110: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-11T13:06:01Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-11T13:06:01Z]] name:name1 resourceVersion:26378 uid:c1f890be-fe8d-4337-9f36-6f840496d555] num:map[num1:9223372036854775807 num2:1000000]]}
  E0511 13:06:01.486053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:02.486105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:03.486179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:04.487165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:05.487233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:06.487856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:07.487965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:08.488125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:09.489120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:10.489220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 05/11/24 13:06:11.11
  May 11 13:06:11.116: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-11T13:06:11Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-11T13:06:11Z]] name:name2 resourceVersion:26436 uid:750323e2-a9d7-4d97-b167-7e02621339ca] num:map[num1:9223372036854775807 num2:1000000]]}
  E0511 13:06:11.490237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:12.491147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:13.491372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:14.491479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:15.491705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:16.492019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:17.492146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:18.492350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:19.493122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:20.493224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 05/11/24 13:06:21.116
  May 11 13:06:21.123: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-11T13:06:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-11T13:06:21Z]] name:name1 resourceVersion:26456 uid:c1f890be-fe8d-4337-9f36-6f840496d555] num:map[num1:9223372036854775807 num2:1000000]]}
  E0511 13:06:21.494269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:22.495342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:23.495437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:24.495542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:25.495717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:26.496049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:27.496192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:28.497004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:29.497384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:30.497698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 05/11/24 13:06:31.124
  May 11 13:06:31.130: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-11T13:06:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-11T13:06:31Z]] name:name2 resourceVersion:26477 uid:750323e2-a9d7-4d97-b167-7e02621339ca] num:map[num1:9223372036854775807 num2:1000000]]}
  E0511 13:06:31.498437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:32.498534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:33.499149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:34.499246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:35.499434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:36.500205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:37.500299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:38.500482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:39.500554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:40.500657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 05/11/24 13:06:41.131
  May 11 13:06:41.139: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-11T13:06:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-11T13:06:21Z]] name:name1 resourceVersion:26497 uid:c1f890be-fe8d-4337-9f36-6f840496d555] num:map[num1:9223372036854775807 num2:1000000]]}
  E0511 13:06:41.501640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:42.501799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:43.501898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:44.502087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:45.502255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:46.502685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:47.502789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:48.503235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:49.503298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:50.503475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 05/11/24 13:06:51.14
  May 11 13:06:51.148: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-11T13:06:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-11T13:06:31Z]] name:name2 resourceVersion:26517 uid:750323e2-a9d7-4d97-b167-7e02621339ca] num:map[num1:9223372036854775807 num2:1000000]]}
  E0511 13:06:51.503471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:52.504455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:53.504537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:54.504638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:55.504830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:56.505214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:57.505302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:58.505513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:06:59.505632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:00.505907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:01.506040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:07:01.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-6392" for this suite. @ 05/11/24 13:07:01.669
• [63.125 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 05/11/24 13:07:01.676
  May 11 13:07:01.676: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/11/24 13:07:01.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:07:01.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:07:01.696
  STEP: creating @ 05/11/24 13:07:01.698
  STEP: getting @ 05/11/24 13:07:01.713
  STEP: listing in namespace @ 05/11/24 13:07:01.715
  STEP: patching @ 05/11/24 13:07:01.718
  STEP: deleting @ 05/11/24 13:07:01.725
  May 11 13:07:01.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1523" for this suite. @ 05/11/24 13:07:01.744
• [0.074 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 05/11/24 13:07:01.749
  May 11 13:07:01.749: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/11/24 13:07:01.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:07:01.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:07:01.767
  STEP: Creating 50 configmaps @ 05/11/24 13:07:01.773
  STEP: Creating RC which spawns configmap-volume pods @ 05/11/24 13:07:02.005
  May 11 13:07:02.118: INFO: Pod name wrapped-volume-race-8020e685-af5e-4f8e-9cd5-019673462584: Found 3 pods out of 5
  E0511 13:07:02.506113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:03.506219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:04.507144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:05.507221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:06.507626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:07:07.124: INFO: Pod name wrapped-volume-race-8020e685-af5e-4f8e-9cd5-019673462584: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/11/24 13:07:07.124
  STEP: Creating RC which spawns configmap-volume pods @ 05/11/24 13:07:07.143
  May 11 13:07:07.155: INFO: Pod name wrapped-volume-race-af591bc3-1fd4-453a-8453-93ce28120af9: Found 0 pods out of 5
  E0511 13:07:07.508448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:08.508643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:09.509407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:10.509436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:11.510224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:07:12.162: INFO: Pod name wrapped-volume-race-af591bc3-1fd4-453a-8453-93ce28120af9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/11/24 13:07:12.162
  STEP: Creating RC which spawns configmap-volume pods @ 05/11/24 13:07:12.181
  May 11 13:07:12.193: INFO: Pod name wrapped-volume-race-b54ff4a1-2b75-48ed-94bb-64c074cd921a: Found 0 pods out of 5
  E0511 13:07:12.511167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:13.511251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:14.511338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:15.511695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:16.511931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:07:17.202: INFO: Pod name wrapped-volume-race-b54ff4a1-2b75-48ed-94bb-64c074cd921a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/11/24 13:07:17.202
  STEP: deleting ReplicationController wrapped-volume-race-b54ff4a1-2b75-48ed-94bb-64c074cd921a in namespace emptydir-wrapper-5369, will wait for the garbage collector to delete the pods @ 05/11/24 13:07:17.219
  May 11 13:07:17.281: INFO: Deleting ReplicationController wrapped-volume-race-b54ff4a1-2b75-48ed-94bb-64c074cd921a took: 9.025086ms
  May 11 13:07:17.381: INFO: Terminating ReplicationController wrapped-volume-race-b54ff4a1-2b75-48ed-94bb-64c074cd921a pods took: 100.336443ms
  E0511 13:07:17.512192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-af591bc3-1fd4-453a-8453-93ce28120af9 in namespace emptydir-wrapper-5369, will wait for the garbage collector to delete the pods @ 05/11/24 13:07:18.282
  May 11 13:07:18.345: INFO: Deleting ReplicationController wrapped-volume-race-af591bc3-1fd4-453a-8453-93ce28120af9 took: 8.611986ms
  May 11 13:07:18.446: INFO: Terminating ReplicationController wrapped-volume-race-af591bc3-1fd4-453a-8453-93ce28120af9 pods took: 100.764746ms
  E0511 13:07:18.512603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:19.513067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-8020e685-af5e-4f8e-9cd5-019673462584 in namespace emptydir-wrapper-5369, will wait for the garbage collector to delete the pods @ 05/11/24 13:07:20.047
  May 11 13:07:20.109: INFO: Deleting ReplicationController wrapped-volume-race-8020e685-af5e-4f8e-9cd5-019673462584 took: 7.806895ms
  May 11 13:07:20.209: INFO: Terminating ReplicationController wrapped-volume-race-8020e685-af5e-4f8e-9cd5-019673462584 pods took: 100.446203ms
  E0511 13:07:20.513450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:21.513780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 05/11/24 13:07:21.91
  May 11 13:07:22.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5369" for this suite. @ 05/11/24 13:07:22.177
• [20.434 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 05/11/24 13:07:22.184
  May 11 13:07:22.184: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename configmap @ 05/11/24 13:07:22.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:07:22.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:07:22.204
  STEP: Creating configMap with name cm-test-opt-del-94d9d31d-0a90-43ca-b23c-ec991f3020b4 @ 05/11/24 13:07:22.209
  STEP: Creating configMap with name cm-test-opt-upd-23218f8b-01c3-428f-825f-14c9cbdf5478 @ 05/11/24 13:07:22.212
  STEP: Creating the pod @ 05/11/24 13:07:22.216
  E0511 13:07:22.514750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:23.515130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-94d9d31d-0a90-43ca-b23c-ec991f3020b4 @ 05/11/24 13:07:24.258
  STEP: Updating configmap cm-test-opt-upd-23218f8b-01c3-428f-825f-14c9cbdf5478 @ 05/11/24 13:07:24.264
  STEP: Creating configMap with name cm-test-opt-create-35708ef6-e9f7-4721-b73d-aa5174b1d21e @ 05/11/24 13:07:24.269
  STEP: waiting to observe update in volume @ 05/11/24 13:07:24.273
  E0511 13:07:24.515568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:25.515727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:26.516397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:27.516499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:28.517121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:29.517319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:30.517849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:31.518243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:32.518881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:33.519151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:34.519296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:35.519426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:36.520112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:37.520311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:38.520694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:39.520903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:40.521765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:41.522233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:42.522418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:43.522507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:44.522820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:45.523760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:46.524751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:47.524934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:48.525009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:49.525202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:50.525571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:51.526225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:52.526905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:53.527005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:54.527681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:55.527770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:56.528141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:57.528828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:58.529809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:07:59.529918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:00.530301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:01.531232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:02.531687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:03.531864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:04.532234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:05.532347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:06.532845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:07.533053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:08.534064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:09.534098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:10.535484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:11.536247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:12.537208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:13.537428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:14.537597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:15.537654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:16.537966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:17.538152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:18.538178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:19.539166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:20.539583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:21.540243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:22.541277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:23.541491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:24.542194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:25.542298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:26.542745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:27.543170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:28.543147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:29.543294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:30.543430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:31.544440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:32.544486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:33.544622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:34.545149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:35.546194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:36.546601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:37.547561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:38.547840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:39.547940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:40.548045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:41.548164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:42.548356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:43.548538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:44.548833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:45.548932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:46.549012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:47.549095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:48.549299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:49.549649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:50.549915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:51.550243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:52.550329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:08:52.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3479" for this suite. @ 05/11/24 13:08:52.65
• [90.473 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 05/11/24 13:08:52.657
  May 11 13:08:52.657: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename job @ 05/11/24 13:08:52.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:08:52.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:08:52.679
  STEP: Creating a job @ 05/11/24 13:08:52.681
  STEP: Ensuring job reaches completions @ 05/11/24 13:08:52.686
  E0511 13:08:53.550435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:54.550527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:55.550616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:56.551271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:57.551618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:58.551999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:08:59.551972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:00.552037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:01.552115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:02.552589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:02.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3154" for this suite. @ 05/11/24 13:09:02.692
• [10.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 05/11/24 13:09:02.699
  May 11 13:09:02.699: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 13:09:02.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:09:02.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:09:02.719
  STEP: creating service in namespace services-2746 @ 05/11/24 13:09:02.72
  STEP: creating service affinity-nodeport-transition in namespace services-2746 @ 05/11/24 13:09:02.721
  STEP: creating replication controller affinity-nodeport-transition in namespace services-2746 @ 05/11/24 13:09:02.74
  I0511 13:09:02.747326      19 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-2746, replica count: 3
  E0511 13:09:03.553016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:04.553118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:05.553222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0511 13:09:05.798691      19 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 11 13:09:05.809: INFO: Creating new exec pod
  E0511 13:09:06.554080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:07.554097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:08.555147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:08.828: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2746 exec execpod-affinity6696m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  May 11 13:09:08.916: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  May 11 13:09:08.916: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 13:09:08.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2746 exec execpod-affinity6696m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.184 80'
  May 11 13:09:09.007: INFO: stderr: "+ nc -v -t -w 2 10.152.183.184 80\n+ echo hostName\nConnection to 10.152.183.184 80 port [tcp/http] succeeded!\n"
  May 11 13:09:09.008: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 13:09:09.008: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2746 exec execpod-affinity6696m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.73.54 32703'
  May 11 13:09:09.099: INFO: stderr: "+ nc -v -t -w 2 172.31.73.54 32703\n+ echo hostName\nConnection to 172.31.73.54 32703 port [tcp/*] succeeded!\n"
  May 11 13:09:09.099: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 13:09:09.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2746 exec execpod-affinity6696m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.37 32703'
  May 11 13:09:09.191: INFO: stderr: "+ nc -v -t -w 2 172.31.16.37 32703\n+ echo hostName\nConnection to 172.31.16.37 32703 port [tcp/*] succeeded!\n"
  May 11 13:09:09.191: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 13:09:09.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2746 exec execpod-affinity6696m -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.16.37:32703/ ; done'
  May 11 13:09:09.345: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n"
  May 11 13:09:09.345: INFO: stdout: "\naffinity-nodeport-transition-ghp7n\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-xw9b5\naffinity-nodeport-transition-ghp7n\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-ghp7n\naffinity-nodeport-transition-ghp7n\naffinity-nodeport-transition-ghp7n\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-ghp7n\naffinity-nodeport-transition-ghp7n\naffinity-nodeport-transition-xw9b5\naffinity-nodeport-transition-xw9b5\naffinity-nodeport-transition-ghp7n\naffinity-nodeport-transition-ghp7n"
  May 11 13:09:09.345: INFO: Received response from host: affinity-nodeport-transition-ghp7n
  May 11 13:09:09.345: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.345: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.345: INFO: Received response from host: affinity-nodeport-transition-xw9b5
  May 11 13:09:09.345: INFO: Received response from host: affinity-nodeport-transition-ghp7n
  May 11 13:09:09.345: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.345: INFO: Received response from host: affinity-nodeport-transition-ghp7n
  May 11 13:09:09.345: INFO: Received response from host: affinity-nodeport-transition-ghp7n
  May 11 13:09:09.345: INFO: Received response from host: affinity-nodeport-transition-ghp7n
  May 11 13:09:09.345: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.345: INFO: Received response from host: affinity-nodeport-transition-ghp7n
  May 11 13:09:09.345: INFO: Received response from host: affinity-nodeport-transition-ghp7n
  May 11 13:09:09.345: INFO: Received response from host: affinity-nodeport-transition-xw9b5
  May 11 13:09:09.345: INFO: Received response from host: affinity-nodeport-transition-xw9b5
  May 11 13:09:09.345: INFO: Received response from host: affinity-nodeport-transition-ghp7n
  May 11 13:09:09.345: INFO: Received response from host: affinity-nodeport-transition-ghp7n
  May 11 13:09:09.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2746 exec execpod-affinity6696m -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.16.37:32703/ ; done'
  May 11 13:09:09.505: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.16.37:32703/\n"
  May 11 13:09:09.505: INFO: stdout: "\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-p9xpp\naffinity-nodeport-transition-p9xpp"
  May 11 13:09:09.506: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.506: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.506: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.506: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.506: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.506: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.506: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.506: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.506: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.506: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.506: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.506: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.506: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.506: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.506: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.506: INFO: Received response from host: affinity-nodeport-transition-p9xpp
  May 11 13:09:09.506: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-2746, will wait for the garbage collector to delete the pods @ 05/11/24 13:09:09.518
  E0511 13:09:09.555927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:09.578: INFO: Deleting ReplicationController affinity-nodeport-transition took: 5.644304ms
  May 11 13:09:09.679: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.570557ms
  E0511 13:09:10.556973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:11.557132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:12.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2746" for this suite. @ 05/11/24 13:09:12.307
• [9.614 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 05/11/24 13:09:12.314
  May 11 13:09:12.314: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename aggregator @ 05/11/24 13:09:12.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:09:12.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:09:12.333
  May 11 13:09:12.335: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Registering the sample API server. @ 05/11/24 13:09:12.335
  May 11 13:09:12.530: INFO: Found ClusterRoles; assuming RBAC is enabled.
  E0511 13:09:12.557195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:12.557: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0511 13:09:13.557620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:14.557767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:14.600: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0511 13:09:15.558098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:16.558272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:16.604: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0511 13:09:17.558367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:18.558450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:18.603: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0511 13:09:19.558560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:20.559138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:20.605: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0511 13:09:21.560084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:22.560163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:22.605: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0511 13:09:23.560458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:24.560554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:24.604: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0511 13:09:25.561481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:26.561783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:26.604: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0511 13:09:27.562092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:28.562186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:28.605: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0511 13:09:29.562268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:30.562365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:30.604: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0511 13:09:31.563136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:32.563226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:32.604: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0511 13:09:33.564209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:34.564291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:34.605: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0511 13:09:35.564385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:36.564756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:36.604: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0511 13:09:37.565511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:38.565585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:38.605: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0511 13:09:39.566115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:40.566195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:40.722: INFO: Waited 111.263392ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/11/24 13:09:40.752
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/11/24 13:09:40.755
  STEP: List APIServices @ 05/11/24 13:09:40.764
  May 11 13:09:40.769: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/11/24 13:09:40.769
  May 11 13:09:40.779: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/11/24 13:09:40.78
  May 11 13:09:40.788: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.May, 11, 13, 9, 40, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/11/24 13:09:40.788
  May 11 13:09:40.792: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-05-11 13:09:40 +0000 UTC Passed all checks passed}
  May 11 13:09:40.792: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 11 13:09:40.792: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/11/24 13:09:40.792
  May 11 13:09:40.801: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-658661162" @ 05/11/24 13:09:40.801
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/11/24 13:09:40.814
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/11/24 13:09:40.819
  STEP: Patch APIService Status @ 05/11/24 13:09:40.823
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/11/24 13:09:40.83
  May 11 13:09:40.832: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-05-11 13:09:40 +0000 UTC Passed all checks passed}
  May 11 13:09:40.832: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 11 13:09:40.832: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  May 11 13:09:40.832: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 05/11/24 13:09:40.832
  STEP: Confirm that the generated APIService has been deleted @ 05/11/24 13:09:40.84
  May 11 13:09:40.840: INFO: Requesting list of APIServices to confirm quantity
  May 11 13:09:40.844: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  May 11 13:09:40.844: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  May 11 13:09:40.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-550" for this suite. @ 05/11/24 13:09:40.943
• [28.637 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 05/11/24 13:09:40.951
  May 11 13:09:40.951: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename downward-api @ 05/11/24 13:09:40.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:09:40.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:09:40.97
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 13:09:40.972
  E0511 13:09:41.567139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:42.567286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:43.567415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:44.567604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:09:44.99
  May 11 13:09:44.993: INFO: Trying to get logs from node ip-172-31-73-54 pod downwardapi-volume-2fabc37c-fef5-4b50-a21f-dca9fea8f96f container client-container: <nil>
  STEP: delete the pod @ 05/11/24 13:09:45
  May 11 13:09:45.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4310" for this suite. @ 05/11/24 13:09:45.014
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 05/11/24 13:09:45.02
  May 11 13:09:45.020: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename namespaces @ 05/11/24 13:09:45.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:09:45.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:09:45.042
  STEP: Read namespace status @ 05/11/24 13:09:45.044
  May 11 13:09:45.047: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/11/24 13:09:45.047
  May 11 13:09:45.051: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/11/24 13:09:45.051
  May 11 13:09:45.059: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  May 11 13:09:45.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1874" for this suite. @ 05/11/24 13:09:45.063
• [0.050 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 05/11/24 13:09:45.07
  May 11 13:09:45.070: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename downward-api @ 05/11/24 13:09:45.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:09:45.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:09:45.092
  STEP: Creating the pod @ 05/11/24 13:09:45.094
  E0511 13:09:45.568275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:46.569276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:47.570217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:47.632: INFO: Successfully updated pod "labelsupdate59c15843-9dd1-4940-be8e-ece5c98b5b0d"
  E0511 13:09:48.570521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:49.571469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:49.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3008" for this suite. @ 05/11/24 13:09:49.651
• [4.587 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 05/11/24 13:09:49.657
  May 11 13:09:49.657: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename var-expansion @ 05/11/24 13:09:49.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:09:49.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:09:49.681
  E0511 13:09:50.572172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:51.572329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:51.698: INFO: Deleting pod "var-expansion-93fece7e-a8f8-4cbb-93ed-cc59ebfbdf12" in namespace "var-expansion-44"
  May 11 13:09:51.707: INFO: Wait up to 5m0s for pod "var-expansion-93fece7e-a8f8-4cbb-93ed-cc59ebfbdf12" to be fully deleted
  E0511 13:09:52.572346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:53.572446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:09:53.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-44" for this suite. @ 05/11/24 13:09:53.72
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 05/11/24 13:09:53.728
  May 11 13:09:53.728: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename security-context @ 05/11/24 13:09:53.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:09:53.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:09:53.747
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/11/24 13:09:53.749
  E0511 13:09:54.572887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:55.572995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:56.573278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:57.573415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:09:57.77
  May 11 13:09:57.773: INFO: Trying to get logs from node ip-172-31-73-54 pod security-context-8a2ab342-5486-477b-9486-f3c3958fc3a4 container test-container: <nil>
  STEP: delete the pod @ 05/11/24 13:09:57.778
  May 11 13:09:57.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6592" for this suite. @ 05/11/24 13:09:57.798
• [4.075 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 05/11/24 13:09:57.803
  May 11 13:09:57.803: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/11/24 13:09:57.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:09:57.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:09:57.824
  May 11 13:09:57.826: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 13:09:58.573804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:09:59.574074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:00.574772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:00.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1613" for this suite. @ 05/11/24 13:10:00.943
• [3.147 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 05/11/24 13:10:00.95
  May 11 13:10:00.950: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename field-validation @ 05/11/24 13:10:00.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:10:00.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:10:00.97
  May 11 13:10:00.972: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 13:10:01.575627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:02.575714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0511 13:10:03.504914      19 warnings.go:70] unknown field "alpha"
  W0511 13:10:03.504932      19 warnings.go:70] unknown field "beta"
  W0511 13:10:03.504935      19 warnings.go:70] unknown field "delta"
  W0511 13:10:03.504938      19 warnings.go:70] unknown field "epsilon"
  W0511 13:10:03.504940      19 warnings.go:70] unknown field "gamma"
  E0511 13:10:03.575986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:04.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-577" for this suite. @ 05/11/24 13:10:04.048
• [3.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 05/11/24 13:10:04.058
  May 11 13:10:04.058: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename security-context @ 05/11/24 13:10:04.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:10:04.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:10:04.08
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/11/24 13:10:04.082
  E0511 13:10:04.576101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:05.576223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:06.576980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:07.577174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:10:08.098
  May 11 13:10:08.101: INFO: Trying to get logs from node ip-172-31-73-54 pod security-context-bcbf5755-3120-48af-ad40-c532eba47c98 container test-container: <nil>
  STEP: delete the pod @ 05/11/24 13:10:08.108
  May 11 13:10:08.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5656" for this suite. @ 05/11/24 13:10:08.124
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 05/11/24 13:10:08.131
  May 11 13:10:08.131: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-probe @ 05/11/24 13:10:08.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:10:08.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:10:08.149
  STEP: Creating pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456 @ 05/11/24 13:10:08.151
  E0511 13:10:08.577236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:09.577360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/11/24 13:10:10.168
  May 11 13:10:10.172: INFO: Initial restart count of pod liveness-54794a86-d226-46b7-8efc-474750d614c8 is 0
  May 11 13:10:10.174: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:10.578081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:11.578304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:12.178: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:12.578676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:13.579359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:14.183: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:14.580333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:15.580417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:16.187: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:16.581185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:17.581379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:18.192: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:18.582314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:19.582406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:20.196: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:20.582700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:21.583057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:22.200: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:22.583166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:23.583256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:24.204: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:24.583336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:25.583463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:26.208: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:26.584156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:27.584243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:28.214: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:28.584356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:29.584455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:30.218: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:30.585466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:31.586278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:32.223: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:32.587079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:33.587156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:34.229: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:34.587497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:35.588128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:36.233: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:36.588515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:37.588713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:38.238: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:38.589556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:39.589661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:40.243: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:40.589746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:41.590071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:42.247: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:42.591138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:43.592189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:44.251: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:44.592761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:45.592803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:46.255: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:46.593254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:47.593449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:48.261: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:48.593505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:49.593591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:50.264: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:50.594177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:51.594270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:52.269: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:52.594886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:53.595288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:54.274: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:54.596170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:55.596272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:56.278: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:56.596875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:57.597086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:10:58.282: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:10:58.597279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:10:59.597615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:00.288: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:00.598352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:01.599207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:02.292: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:02.599756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:03.599928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:04.297: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:04.600848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:05.600947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:06.300: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:06.601635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:07.602197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:08.305: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:08.603143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:09.603358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:10.310: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:10.604264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:11.605310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:12.314: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:12.605594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:13.606387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:14.319: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:14.606947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:15.607825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:16.324: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:16.608305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:17.608397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:18.328: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:18.609310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:19.609429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:20.333: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:20.609888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:21.610164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:22.338: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:22.610263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:23.611194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:24.344: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:24.611826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:25.612004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:26.348: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:26.612753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:27.612973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:28.352: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:28.613057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:29.613273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:30.358: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:30.613688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:31.614043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:32.361: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:32.614073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:33.615117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:34.366: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:34.615192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:35.615370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:36.371: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:36.616402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:37.616532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:38.375: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:38.617288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:39.617829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:40.380: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:40.618338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:41.619354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:42.385: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:42.619988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:43.620080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:44.390: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:44.620566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:45.620827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:46.395: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:46.621143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:47.621348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:48.400: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:48.621457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:49.621562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:50.405: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:50.622471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:51.623354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:52.409: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:52.624059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:53.624331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:54.413: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:54.624544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:55.624632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:56.417: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:56.625033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:57.625153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:11:58.422: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:11:58.626076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:11:59.626100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:00.426: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:00.626471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:01.627361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:02.431: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:02.627401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:03.627480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:04.435: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:04.627946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:05.628136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:06.440: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:06.628748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:07.629729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:08.443: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:08.630662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:09.630759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:10.448: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:10.631622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:11.632348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:12.453: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:12.633209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:13.634066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:14.457: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:14.634540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:15.635128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:16.461: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:16.635179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:17.636007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:18.468: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:18.636381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:19.636656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:20.472: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:20.637496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:21.638325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:22.476: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:22.638361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:23.639142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:24.479: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:24.639918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:25.640011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:26.484: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:26.640602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:27.640881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:28.490: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:28.641246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:29.641448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:30.493: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:30.641661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:31.642357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:32.498: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:32.643121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:33.643300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:34.502: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:34.644007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:35.644106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:36.506: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:36.644907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:37.645033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:38.510: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:38.645089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:39.645466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:40.515: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:40.646118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:41.646213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:42.519: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:42.647054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:43.647149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:44.523: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:44.647425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:45.647534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:46.528: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:46.648522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:47.648846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:48.533: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:48.648966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:49.649138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:50.537: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:50.649824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:51.650163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:52.542: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:52.650859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:53.650963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:54.547: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:54.651704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:55.651808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:56.551: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:56.652533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:57.652802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:12:58.556: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:12:58.652996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:12:59.653897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:00.561: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:00.653677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:01.654397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:02.565: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:02.654529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:03.654649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:04.570: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:04.654708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:05.655393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:06.575: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:06.655425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:07.655591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:08.580: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:08.656295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:09.657221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:10.584: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:10.658066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:11.658182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:12.588: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:12.658946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:13.659044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:14.593: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:14.659461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:15.659582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:16.598: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:16.660050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:17.660220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:18.603: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:18.661233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:19.661318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:20.608: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:20.661385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:21.662390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:22.613: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:22.663028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:23.663145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:24.618: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:24.663906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:25.664019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:26.623: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:26.664898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:27.666030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:28.627: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:28.666823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:29.667144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:30.632: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:30.667551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:31.668402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:32.637: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:32.668711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:33.668847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:34.641: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:34.669870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:35.670044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:36.646: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:36.670396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:37.671154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:38.651: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:38.671978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:39.672090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:40.655: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:40.672634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:41.673253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:42.659: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:42.674033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:43.674083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:44.663: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:44.674636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:45.675128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:46.668: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:46.675805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:47.675955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:48.673: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:48.676047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:49.676221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:50.677165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:50.677: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:51.677282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:52.677527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:52.680: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:53.677819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:54.678022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:54.684: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:55.678223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:56.678727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:56.689: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:57.678874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:13:58.678948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:13:58.694: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:13:59.679974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:00.680177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:14:00.699: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:14:01.680243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:02.680503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:14:02.703: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:14:03.680586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:04.681357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:14:04.707: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:14:05.682286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:06.682848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:14:06.711: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:14:07.683164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:08.684201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:14:08.717: INFO: Get pod liveness-54794a86-d226-46b7-8efc-474750d614c8 in namespace container-probe-1456
  E0511 13:14:09.684455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:10.684542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/11/24 13:14:10.717
  May 11 13:14:10.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1456" for this suite. @ 05/11/24 13:14:10.732
• [242.608 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 05/11/24 13:14:10.74
  May 11 13:14:10.740: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename var-expansion @ 05/11/24 13:14:10.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:14:10.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:14:10.76
  STEP: Creating a pod to test env composition @ 05/11/24 13:14:10.762
  E0511 13:14:11.685368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:12.685478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:13.685558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:14.685693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:14:14.782
  May 11 13:14:14.785: INFO: Trying to get logs from node ip-172-31-73-54 pod var-expansion-da886b1b-b33e-439b-95eb-31c2680205c6 container dapi-container: <nil>
  STEP: delete the pod @ 05/11/24 13:14:14.799
  May 11 13:14:14.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9810" for this suite. @ 05/11/24 13:14:14.82
• [4.088 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 05/11/24 13:14:14.828
  May 11 13:14:14.828: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename secrets @ 05/11/24 13:14:14.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:14:14.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:14:14.848
  STEP: Creating secret with name secret-test-map-a20f1206-0709-4b78-b0e6-4dd043c10d19 @ 05/11/24 13:14:14.85
  STEP: Creating a pod to test consume secrets @ 05/11/24 13:14:14.854
  E0511 13:14:15.686105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:16.686476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:17.687256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:18.687295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:14:18.876
  May 11 13:14:18.879: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-secrets-7fa69f6a-d765-4795-9bcf-f14d3e23a974 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/11/24 13:14:18.885
  May 11 13:14:18.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-447" for this suite. @ 05/11/24 13:14:18.903
• [4.082 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 05/11/24 13:14:18.91
  May 11 13:14:18.910: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl @ 05/11/24 13:14:18.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:14:18.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:14:18.933
  STEP: creating all guestbook components @ 05/11/24 13:14:18.935
  May 11 13:14:18.935: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  May 11 13:14:18.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-1645 create -f -'
  May 11 13:14:19.021: INFO: stderr: ""
  May 11 13:14:19.021: INFO: stdout: "service/agnhost-replica created\n"
  May 11 13:14:19.021: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  May 11 13:14:19.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-1645 create -f -'
  May 11 13:14:19.107: INFO: stderr: ""
  May 11 13:14:19.107: INFO: stdout: "service/agnhost-primary created\n"
  May 11 13:14:19.107: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  May 11 13:14:19.107: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-1645 create -f -'
  May 11 13:14:19.192: INFO: stderr: ""
  May 11 13:14:19.192: INFO: stdout: "service/frontend created\n"
  May 11 13:14:19.192: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  May 11 13:14:19.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-1645 create -f -'
  May 11 13:14:19.247: INFO: stderr: ""
  May 11 13:14:19.247: INFO: stdout: "deployment.apps/frontend created\n"
  May 11 13:14:19.247: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  May 11 13:14:19.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-1645 create -f -'
  May 11 13:14:19.306: INFO: stderr: ""
  May 11 13:14:19.306: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  May 11 13:14:19.306: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  May 11 13:14:19.306: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-1645 create -f -'
  May 11 13:14:19.362: INFO: stderr: ""
  May 11 13:14:19.362: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/11/24 13:14:19.362
  May 11 13:14:19.362: INFO: Waiting for all frontend pods to be Running.
  E0511 13:14:19.687806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:20.688676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:21.689582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:22.689679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:23.689784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:14:24.413: INFO: Waiting for frontend to serve content.
  May 11 13:14:24.425: INFO: Trying to add a new entry to the guestbook.
  May 11 13:14:24.437: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 05/11/24 13:14:24.446
  May 11 13:14:24.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-1645 delete --grace-period=0 --force -f -'
  May 11 13:14:24.514: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 11 13:14:24.514: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/11/24 13:14:24.514
  May 11 13:14:24.514: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-1645 delete --grace-period=0 --force -f -'
  May 11 13:14:24.569: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 11 13:14:24.569: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/11/24 13:14:24.569
  May 11 13:14:24.569: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-1645 delete --grace-period=0 --force -f -'
  May 11 13:14:24.622: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 11 13:14:24.622: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/11/24 13:14:24.622
  May 11 13:14:24.622: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-1645 delete --grace-period=0 --force -f -'
  May 11 13:14:24.665: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 11 13:14:24.665: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/11/24 13:14:24.665
  May 11 13:14:24.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-1645 delete --grace-period=0 --force -f -'
  E0511 13:14:24.695815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:14:24.714: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 11 13:14:24.714: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/11/24 13:14:24.714
  May 11 13:14:24.714: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-1645 delete --grace-period=0 --force -f -'
  May 11 13:14:24.765: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 11 13:14:24.765: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  May 11 13:14:24.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1645" for this suite. @ 05/11/24 13:14:24.771
• [5.866 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 05/11/24 13:14:24.776
  May 11 13:14:24.776: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 13:14:24.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:14:24.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:14:24.806
  STEP: Creating configMap with name projected-configmap-test-volume-7c85c807-da37-4a9c-8444-d205f0153ceb @ 05/11/24 13:14:24.808
  STEP: Creating a pod to test consume configMaps @ 05/11/24 13:14:24.814
  E0511 13:14:25.691435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:26.692404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:27.693033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:28.693112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:14:28.837
  May 11 13:14:28.840: INFO: Trying to get logs from node ip-172-31-35-147 pod pod-projected-configmaps-668fd3f8-b5b2-4d3a-b111-9c2a8ae09bd1 container agnhost-container: <nil>
  STEP: delete the pod @ 05/11/24 13:14:28.859
  May 11 13:14:28.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8478" for this suite. @ 05/11/24 13:14:28.875
• [4.103 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 05/11/24 13:14:28.88
  May 11 13:14:28.880: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 13:14:28.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:14:28.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:14:28.899
  STEP: creating a collection of services @ 05/11/24 13:14:28.901
  May 11 13:14:28.901: INFO: Creating e2e-svc-a-7mdn6
  May 11 13:14:28.911: INFO: Creating e2e-svc-b-c6bwh
  May 11 13:14:28.922: INFO: Creating e2e-svc-c-wcj2k
  STEP: deleting service collection @ 05/11/24 13:14:28.934
  May 11 13:14:28.959: INFO: Collection of services has been deleted
  May 11 13:14:28.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5795" for this suite. @ 05/11/24 13:14:28.963
• [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 05/11/24 13:14:28.97
  May 11 13:14:28.970: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir @ 05/11/24 13:14:28.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:14:28.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:14:28.991
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/11/24 13:14:28.993
  E0511 13:14:29.693912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:30.694155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:14:31.007
  May 11 13:14:31.010: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-7a9c138d-422f-405b-a342-add0a6716f07 container test-container: <nil>
  STEP: delete the pod @ 05/11/24 13:14:31.014
  May 11 13:14:31.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8837" for this suite. @ 05/11/24 13:14:31.029
• [2.064 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 05/11/24 13:14:31.034
  May 11 13:14:31.034: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename ingress @ 05/11/24 13:14:31.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:14:31.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:14:31.054
  STEP: getting /apis @ 05/11/24 13:14:31.056
  STEP: getting /apis/networking.k8s.io @ 05/11/24 13:14:31.059
  STEP: getting /apis/networking.k8s.iov1 @ 05/11/24 13:14:31.06
  STEP: creating @ 05/11/24 13:14:31.061
  STEP: getting @ 05/11/24 13:14:31.075
  STEP: listing @ 05/11/24 13:14:31.079
  STEP: watching @ 05/11/24 13:14:31.082
  May 11 13:14:31.082: INFO: starting watch
  STEP: cluster-wide listing @ 05/11/24 13:14:31.083
  STEP: cluster-wide watching @ 05/11/24 13:14:31.087
  May 11 13:14:31.087: INFO: starting watch
  STEP: patching @ 05/11/24 13:14:31.088
  STEP: updating @ 05/11/24 13:14:31.092
  May 11 13:14:31.101: INFO: waiting for watch events with expected annotations
  May 11 13:14:31.101: INFO: saw patched and updated annotations
  STEP: patching /status @ 05/11/24 13:14:31.101
  STEP: updating /status @ 05/11/24 13:14:31.105
  STEP: get /status @ 05/11/24 13:14:31.117
  STEP: deleting @ 05/11/24 13:14:31.121
  STEP: deleting a collection @ 05/11/24 13:14:31.134
  May 11 13:14:31.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3279" for this suite. @ 05/11/24 13:14:31.153
• [0.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 05/11/24 13:14:31.16
  May 11 13:14:31.160: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename sched-pred @ 05/11/24 13:14:31.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:14:31.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:14:31.18
  May 11 13:14:31.183: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 11 13:14:31.188: INFO: Waiting for terminating namespaces to be deleted...
  May 11 13:14:31.190: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-16-37 before test
  May 11 13:14:31.195: INFO: nginx-ingress-controller-kubernetes-worker-v466k from ingress-nginx-kubernetes-worker started at 2024-05-11 12:06:42 +0000 UTC (1 container statuses recorded)
  May 11 13:14:31.195: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 11 13:14:31.195: INFO: calico-node-t46qx from kube-system started at 2024-05-11 12:06:15 +0000 UTC (1 container statuses recorded)
  May 11 13:14:31.195: INFO: 	Container calico-node ready: true, restart count 0
  May 11 13:14:31.195: INFO: sonobuoy from sonobuoy started at 2024-05-11 12:13:03 +0000 UTC (1 container statuses recorded)
  May 11 13:14:31.195: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May 11 13:14:31.195: INFO: sonobuoy-e2e-job-7e280b976dab4535 from sonobuoy started at 2024-05-11 12:13:06 +0000 UTC (2 container statuses recorded)
  May 11 13:14:31.195: INFO: 	Container e2e ready: true, restart count 0
  May 11 13:14:31.195: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 11 13:14:31.195: INFO: sonobuoy-systemd-logs-daemon-set-49c1eec6cf1a48c7-8n44k from sonobuoy started at 2024-05-11 12:13:06 +0000 UTC (2 container statuses recorded)
  May 11 13:14:31.195: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 11 13:14:31.195: INFO: 	Container systemd-logs ready: true, restart count 0
  May 11 13:14:31.195: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-35-147 before test
  May 11 13:14:31.199: INFO: nginx-ingress-controller-kubernetes-worker-68vzz from ingress-nginx-kubernetes-worker started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 13:14:31.199: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 11 13:14:31.199: INFO: calico-node-v7fn9 from kube-system started at 2024-05-11 12:07:44 +0000 UTC (1 container statuses recorded)
  May 11 13:14:31.199: INFO: 	Container calico-node ready: true, restart count 0
  May 11 13:14:31.199: INFO: coredns-bddfd76d7-pk78z from kube-system started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 13:14:31.199: INFO: 	Container coredns ready: true, restart count 0
  May 11 13:14:31.199: INFO: kube-state-metrics-6f48cdd76-mpr6f from kube-system started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 13:14:31.199: INFO: 	Container kube-state-metrics ready: true, restart count 0
  May 11 13:14:31.199: INFO: kubernetes-dashboard-7b899cb9d9-j9w54 from kubernetes-dashboard started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 13:14:31.199: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  May 11 13:14:31.199: INFO: sonobuoy-systemd-logs-daemon-set-49c1eec6cf1a48c7-8xp5v from sonobuoy started at 2024-05-11 12:13:06 +0000 UTC (2 container statuses recorded)
  May 11 13:14:31.199: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 11 13:14:31.199: INFO: 	Container systemd-logs ready: true, restart count 0
  May 11 13:14:31.199: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-73-54 before test
  May 11 13:14:31.203: INFO: nginx-ingress-controller-kubernetes-worker-vp8qm from ingress-nginx-kubernetes-worker started at 2024-05-11 12:00:10 +0000 UTC (1 container statuses recorded)
  May 11 13:14:31.203: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 2
  May 11 13:14:31.203: INFO: calico-node-l6qmg from kube-system started at 2024-05-11 12:06:15 +0000 UTC (1 container statuses recorded)
  May 11 13:14:31.203: INFO: 	Container calico-node ready: true, restart count 0
  May 11 13:14:31.203: INFO: metrics-server-v0.6.3-69d7fbfdf8-wfld4 from kube-system started at 2024-05-11 12:02:16 +0000 UTC (2 container statuses recorded)
  May 11 13:14:31.203: INFO: 	Container metrics-server ready: true, restart count 0
  May 11 13:14:31.203: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  May 11 13:14:31.203: INFO: dashboard-metrics-scraper-5dd7cb5fc-cs26p from kubernetes-dashboard started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 13:14:31.203: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  May 11 13:14:31.203: INFO: sonobuoy-systemd-logs-daemon-set-49c1eec6cf1a48c7-vdbk7 from sonobuoy started at 2024-05-11 12:13:06 +0000 UTC (2 container statuses recorded)
  May 11 13:14:31.203: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 11 13:14:31.203: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/11/24 13:14:31.203
  E0511 13:14:31.695133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:32.695230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/11/24 13:14:33.221
  STEP: Trying to apply a random label on the found node. @ 05/11/24 13:14:33.234
  STEP: verifying the node has the label kubernetes.io/e2e-04ff2b4f-2c03-4414-ae1a-183fd5d51907 95 @ 05/11/24 13:14:33.241
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/11/24 13:14:33.244
  E0511 13:14:33.696275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:34.696472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.73.54 on the node which pod4 resides and expect not scheduled @ 05/11/24 13:14:35.257
  E0511 13:14:35.696499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:36.696953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:37.697763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:38.698016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:39.698116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:40.698197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:41.699192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:42.700086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:43.700444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:44.700487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:45.701259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:46.701341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:47.701475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:48.701555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:49.701646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:50.701755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:51.702149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:52.703155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:53.703209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:54.703495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:55.703570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:56.704093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:57.704203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:58.704443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:14:59.704382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:00.704529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:01.704887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:02.705053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:03.705717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:04.706026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:05.706084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:06.706421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:07.706518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:08.706564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:09.707520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:10.707642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:11.708009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:12.708257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:13.708975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:14.709169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:15.709419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:16.709871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:17.710642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:18.710731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:19.711220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:20.711403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:21.711801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:22.711893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:23.712537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:24.712807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:25.713315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:26.713779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:27.714513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:28.715253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:29.715652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:30.715717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:31.716281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:32.716429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:33.717138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:34.717372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:35.717706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:36.717743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:37.718583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:38.718678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:39.719072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:40.719153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:41.720016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:42.720123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:43.720301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:44.720391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:45.720945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:46.721152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:47.721387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:48.721589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:49.722510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:50.723147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:51.724062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:52.724240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:53.724275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:54.724582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:55.724764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:56.724853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:57.725224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:58.725295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:15:59.725892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:00.726066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:01.726157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:02.727173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:03.727664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:04.727842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:05.727935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:06.728027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:07.728117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:08.728289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:09.729030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:10.729236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:11.730054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:12.730087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:13.731113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:14.731208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:15.731900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:16.731988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:17.732500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:18.732641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:19.733136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:20.733226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:21.733486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:22.734234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:23.734720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:24.735122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:25.735531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:26.735994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:27.736930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:28.737111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:29.737751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:30.737932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:31.738484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:32.739280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:33.739827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:34.740022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:35.740390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:36.740905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:37.741905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:38.742068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:39.742830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:40.742918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:41.743063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:42.743282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:43.743882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:44.744042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:45.744110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:46.744213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:47.744404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:48.744494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:49.745518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:50.745620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:51.746653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:52.746749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:53.747409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:54.747579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:55.748148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:56.748262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:57.748514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:58.748866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:16:59.748789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:00.748979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:01.749675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:02.749860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:03.750722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:04.750825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:05.751386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:06.751828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:07.752321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:08.752487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:09.752587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:10.752684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:11.753646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:12.753763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:13.754389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:14.754486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:15.754637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:16.754898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:17.754979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:18.755077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:19.755522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:20.755630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:21.756376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:22.756517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:23.756546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:24.756777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:25.757264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:26.757771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:27.758050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:28.758163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:29.758418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:30.759156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:31.759244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:32.760064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:33.760142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:34.760310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:35.760644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:36.761367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:37.761452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:38.762017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:39.763063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:40.763300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:41.764161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:42.764264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:43.764946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:44.765102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:45.765201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:46.765295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:47.766241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:48.766353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:49.767161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:50.767268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:51.767631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:52.767737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:53.768588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:54.768759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:55.769299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:56.769419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:57.769539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:58.770126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:17:59.770714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:00.770828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:01.771337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:02.771454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:03.771846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:04.771969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:05.772359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:06.772861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:07.772934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:08.773874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:09.774227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:10.774350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:11.774481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:12.774603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:13.774859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:14.775068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:15.775823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:16.775869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:17.776054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:18.776579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:19.776824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:20.776925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:21.777046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:22.777156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:23.777243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:24.777337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:25.777443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:26.777582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:27.777667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:28.777753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:29.777851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:30.778445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:31.779559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:32.779981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:33.780361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:34.780446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:35.780723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:36.781421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:37.781491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:38.781671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:39.781763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:40.781873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:41.782319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:42.782511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:43.782607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:44.783099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:45.784092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:46.784479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:47.784550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:48.784665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:49.784911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:50.785017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:51.785298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:52.785400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:53.785595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:54.785668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:55.785723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:56.786247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:57.786329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:58.786688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:18:59.786508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:00.786583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:01.787505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:02.787600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:03.787774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:04.788604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:05.788724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:06.789333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:07.789547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:08.789621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:09.789816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:10.790480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:11.791494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:12.792151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:13.792304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:14.793237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:15.793281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:16.794023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:17.794068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:18.794183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:19.794401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:20.794501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:21.795516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:22.795613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:23.795792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:24.795882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:25.796157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:26.796240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:27.797007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:28.797417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:29.797678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:30.797763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:31.798061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:32.799085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:33.799223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:34.799540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-04ff2b4f-2c03-4414-ae1a-183fd5d51907 off the node ip-172-31-73-54 @ 05/11/24 13:19:35.265
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-04ff2b4f-2c03-4414-ae1a-183fd5d51907 @ 05/11/24 13:19:35.276
  May 11 13:19:35.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5525" for this suite. @ 05/11/24 13:19:35.282
• [304.128 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 05/11/24 13:19:35.287
  May 11 13:19:35.287: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl @ 05/11/24 13:19:35.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:19:35.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:19:35.308
  STEP: creating Agnhost RC @ 05/11/24 13:19:35.31
  May 11 13:19:35.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-6063 create -f -'
  May 11 13:19:35.385: INFO: stderr: ""
  May 11 13:19:35.385: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/11/24 13:19:35.385
  E0511 13:19:35.800472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:19:36.391: INFO: Selector matched 1 pods for map[app:agnhost]
  May 11 13:19:36.391: INFO: Found 0 / 1
  E0511 13:19:36.800560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:19:37.390: INFO: Selector matched 1 pods for map[app:agnhost]
  May 11 13:19:37.390: INFO: Found 1 / 1
  May 11 13:19:37.390: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/11/24 13:19:37.39
  May 11 13:19:37.394: INFO: Selector matched 1 pods for map[app:agnhost]
  May 11 13:19:37.394: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 11 13:19:37.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-6063 patch pod agnhost-primary-wk8rh -p {"metadata":{"annotations":{"x":"y"}}}'
  May 11 13:19:37.441: INFO: stderr: ""
  May 11 13:19:37.441: INFO: stdout: "pod/agnhost-primary-wk8rh patched\n"
  STEP: checking annotations @ 05/11/24 13:19:37.441
  May 11 13:19:37.445: INFO: Selector matched 1 pods for map[app:agnhost]
  May 11 13:19:37.445: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 11 13:19:37.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6063" for this suite. @ 05/11/24 13:19:37.449
• [2.167 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 05/11/24 13:19:37.454
  May 11 13:19:37.454: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename dns @ 05/11/24 13:19:37.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:19:37.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:19:37.472
  STEP: Creating a test headless service @ 05/11/24 13:19:37.475
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5141.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-5141.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 05/11/24 13:19:37.479
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5141.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-5141.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/11/24 13:19:37.479
  STEP: creating a pod to probe DNS @ 05/11/24 13:19:37.479
  STEP: submitting the pod to kubernetes @ 05/11/24 13:19:37.479
  E0511 13:19:37.800992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:38.801073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/11/24 13:19:39.497
  STEP: looking for the results for each expected name from probers @ 05/11/24 13:19:39.5
  May 11 13:19:39.516: INFO: DNS probes using dns-5141/dns-test-4a2f8f82-c9b8-4c1d-b551-3244bfc84509 succeeded

  STEP: deleting the pod @ 05/11/24 13:19:39.516
  STEP: deleting the test headless service @ 05/11/24 13:19:39.534
  May 11 13:19:39.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5141" for this suite. @ 05/11/24 13:19:39.556
• [2.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 05/11/24 13:19:39.563
  May 11 13:19:39.563: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/11/24 13:19:39.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:19:39.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:19:39.631
  STEP: Creating two CSIDrivers @ 05/11/24 13:19:39.633
  STEP: Getting "inline-driver-46bde73e-9c95-4e9c-b9e6-356972b894a8" & "inline-driver-c4908073-fd88-4ce9-9aae-066afa9f4fb2" @ 05/11/24 13:19:39.646
  STEP: Patching the CSIDriver "inline-driver-c4908073-fd88-4ce9-9aae-066afa9f4fb2" @ 05/11/24 13:19:39.651
  STEP: Updating the CSIDriver "inline-driver-c4908073-fd88-4ce9-9aae-066afa9f4fb2" @ 05/11/24 13:19:39.656
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-7246" @ 05/11/24 13:19:39.665
  STEP: Deleting CSIDriver "inline-driver-46bde73e-9c95-4e9c-b9e6-356972b894a8" @ 05/11/24 13:19:39.667
  STEP: Confirm deletion of CSIDriver "inline-driver-46bde73e-9c95-4e9c-b9e6-356972b894a8" @ 05/11/24 13:19:39.673
  STEP: Deleting CSIDriver "inline-driver-c4908073-fd88-4ce9-9aae-066afa9f4fb2" via DeleteCollection @ 05/11/24 13:19:39.674
  STEP: Confirm deletion of CSIDriver "inline-driver-c4908073-fd88-4ce9-9aae-066afa9f4fb2" @ 05/11/24 13:19:39.681
  May 11 13:19:39.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7246" for this suite. @ 05/11/24 13:19:39.686
• [0.131 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 05/11/24 13:19:39.694
  May 11 13:19:39.694: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/11/24 13:19:39.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:19:39.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:19:39.714
  STEP: create the container to handle the HTTPGet hook request. @ 05/11/24 13:19:39.719
  E0511 13:19:39.802130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:40.802237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/11/24 13:19:41.738
  E0511 13:19:41.803109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:42.803223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 05/11/24 13:19:43.752
  E0511 13:19:43.803376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:44.803555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:45.803964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:46.804187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 05/11/24 13:19:47.768
  May 11 13:19:47.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7244" for this suite. @ 05/11/24 13:19:47.79
• [8.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 05/11/24 13:19:47.798
  May 11 13:19:47.798: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl @ 05/11/24 13:19:47.798
  E0511 13:19:47.804618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:19:47.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:19:47.819
  STEP: creating Agnhost RC @ 05/11/24 13:19:47.821
  May 11 13:19:47.821: INFO: namespace kubectl-5704
  May 11 13:19:47.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-5704 create -f -'
  May 11 13:19:47.900: INFO: stderr: ""
  May 11 13:19:47.900: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/11/24 13:19:47.9
  E0511 13:19:48.805202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:19:48.906: INFO: Selector matched 1 pods for map[app:agnhost]
  May 11 13:19:48.906: INFO: Found 0 / 1
  E0511 13:19:49.805302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:19:49.905: INFO: Selector matched 1 pods for map[app:agnhost]
  May 11 13:19:49.905: INFO: Found 1 / 1
  May 11 13:19:49.905: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  May 11 13:19:49.909: INFO: Selector matched 1 pods for map[app:agnhost]
  May 11 13:19:49.909: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 11 13:19:49.909: INFO: wait on agnhost-primary startup in kubectl-5704 
  May 11 13:19:49.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-5704 logs agnhost-primary-rp7jj agnhost-primary'
  May 11 13:19:49.968: INFO: stderr: ""
  May 11 13:19:49.968: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 05/11/24 13:19:49.968
  May 11 13:19:49.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-5704 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  May 11 13:19:50.019: INFO: stderr: ""
  May 11 13:19:50.019: INFO: stdout: "service/rm2 exposed\n"
  May 11 13:19:50.023: INFO: Service rm2 in namespace kubectl-5704 found.
  E0511 13:19:50.805562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:51.806531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 05/11/24 13:19:52.03
  May 11 13:19:52.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-5704 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  May 11 13:19:52.081: INFO: stderr: ""
  May 11 13:19:52.081: INFO: stdout: "service/rm3 exposed\n"
  May 11 13:19:52.087: INFO: Service rm3 in namespace kubectl-5704 found.
  E0511 13:19:52.807164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:53.807266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:19:54.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5704" for this suite. @ 05/11/24 13:19:54.1
• [6.308 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 05/11/24 13:19:54.106
  May 11 13:19:54.106: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename namespaces @ 05/11/24 13:19:54.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:19:54.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:19:54.128
  STEP: Creating namespace "e2e-ns-kzc7p" @ 05/11/24 13:19:54.13
  May 11 13:19:54.144: INFO: Namespace "e2e-ns-kzc7p-9918" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-kzc7p-9918" @ 05/11/24 13:19:54.144
  May 11 13:19:54.152: INFO: Namespace "e2e-ns-kzc7p-9918" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-kzc7p-9918" @ 05/11/24 13:19:54.152
  May 11 13:19:54.158: INFO: Namespace "e2e-ns-kzc7p-9918" has []v1.FinalizerName{"kubernetes"}
  May 11 13:19:54.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4512" for this suite. @ 05/11/24 13:19:54.161
  STEP: Destroying namespace "e2e-ns-kzc7p-9918" for this suite. @ 05/11/24 13:19:54.168
• [0.070 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 05/11/24 13:19:54.176
  May 11 13:19:54.176: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename podtemplate @ 05/11/24 13:19:54.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:19:54.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:19:54.28
  STEP: Create set of pod templates @ 05/11/24 13:19:54.282
  May 11 13:19:54.288: INFO: created test-podtemplate-1
  May 11 13:19:54.292: INFO: created test-podtemplate-2
  May 11 13:19:54.299: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/11/24 13:19:54.299
  STEP: delete collection of pod templates @ 05/11/24 13:19:54.302
  May 11 13:19:54.302: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/11/24 13:19:54.317
  May 11 13:19:54.317: INFO: requesting list of pod templates to confirm quantity
  May 11 13:19:54.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1890" for this suite. @ 05/11/24 13:19:54.323
• [0.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 05/11/24 13:19:54.33
  May 11 13:19:54.330: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename sched-preemption @ 05/11/24 13:19:54.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:19:54.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:19:54.353
  May 11 13:19:54.367: INFO: Waiting up to 1m0s for all nodes to be ready
  E0511 13:19:54.808168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:55.808629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:56.809527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:57.809633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:58.809707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:19:59.809763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:00.810524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:01.811480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:02.812189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:03.812282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:04.812388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:05.812465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:06.813034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:07.813134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:08.813759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:09.813846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:10.814082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:11.814173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:12.814679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:13.814764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:14.814803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:15.815160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:16.816131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:17.816391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:18.816458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:19.816669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:20.816756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:21.817703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:22.817789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:23.817869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:24.818676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:25.819168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:26.819246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:27.819319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:28.820062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:29.820183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:30.820924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:31.821035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:32.821055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:33.821164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:34.821245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:35.821418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:36.822191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:37.822277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:38.823061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:39.823160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:40.823718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:41.823802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:42.824241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:43.824356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:44.824959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:45.825954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:46.825996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:47.826069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:48.827139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:49.827356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:50.828142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:51.828248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:52.829011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:53.829263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:20:54.371: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/11/24 13:20:54.376
  May 11 13:20:54.392: INFO: Created pod: pod0-0-sched-preemption-low-priority
  May 11 13:20:54.398: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  May 11 13:20:54.417: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  May 11 13:20:54.424: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  May 11 13:20:54.441: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  May 11 13:20:54.446: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/11/24 13:20:54.446
  E0511 13:20:54.829393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:55.829480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/11/24 13:20:56.469
  E0511 13:20:56.829602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:57.829699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:58.829797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:20:59.829902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:21:00.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3906" for this suite. @ 05/11/24 13:21:00.549
• [66.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 05/11/24 13:21:00.555
  May 11 13:21:00.555: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 13:21:00.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:21:00.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:21:00.573
  STEP: Creating projection with secret that has name projected-secret-test-09d25d22-9207-4293-a34b-6d5d95f88af2 @ 05/11/24 13:21:00.576
  STEP: Creating a pod to test consume secrets @ 05/11/24 13:21:00.581
  E0511 13:21:00.830218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:01.830302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:21:02.596
  May 11 13:21:02.599: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-projected-secrets-db2016d6-b67c-42d6-901d-5860332883b7 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/11/24 13:21:02.61
  May 11 13:21:02.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3135" for this suite. @ 05/11/24 13:21:02.627
• [2.078 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 05/11/24 13:21:02.634
  May 11 13:21:02.634: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 13:21:02.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:21:02.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:21:02.652
  STEP: Creating configMap with name projected-configmap-test-volume-306067ca-9c06-406f-bd37-6b6c56aa0836 @ 05/11/24 13:21:02.654
  STEP: Creating a pod to test consume configMaps @ 05/11/24 13:21:02.66
  E0511 13:21:02.831333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:03.831439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:21:04.678
  May 11 13:21:04.682: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-projected-configmaps-b0beae43-e658-4178-9dc5-cb7d0e716464 container agnhost-container: <nil>
  STEP: delete the pod @ 05/11/24 13:21:04.688
  May 11 13:21:04.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6198" for this suite. @ 05/11/24 13:21:04.705
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 05/11/24 13:21:04.71
  May 11 13:21:04.710: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename podtemplate @ 05/11/24 13:21:04.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:21:04.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:21:04.731
  STEP: Create a pod template @ 05/11/24 13:21:04.734
  STEP: Replace a pod template @ 05/11/24 13:21:04.738
  May 11 13:21:04.745: INFO: Found updated podtemplate annotation: "true"

  May 11 13:21:04.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6406" for this suite. @ 05/11/24 13:21:04.748
• [0.045 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 05/11/24 13:21:04.756
  May 11 13:21:04.756: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl @ 05/11/24 13:21:04.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:21:04.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:21:04.775
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/11/24 13:21:04.777
  May 11 13:21:04.777: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-6447 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  May 11 13:21:04.823: INFO: stderr: ""
  May 11 13:21:04.823: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/11/24 13:21:04.823
  May 11 13:21:04.823: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-6447 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  E0511 13:21:04.832354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:21:04.867: INFO: stderr: ""
  May 11 13:21:04.867: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/11/24 13:21:04.867
  May 11 13:21:04.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-6447 delete pods e2e-test-httpd-pod'
  E0511 13:21:05.832490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:21:06.568: INFO: stderr: ""
  May 11 13:21:06.568: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May 11 13:21:06.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6447" for this suite. @ 05/11/24 13:21:06.571
• [1.823 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 05/11/24 13:21:06.579
  May 11 13:21:06.579: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename var-expansion @ 05/11/24 13:21:06.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:21:06.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:21:06.6
  STEP: Creating a pod to test substitution in container's args @ 05/11/24 13:21:06.602
  E0511 13:21:06.833032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:07.833121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:08.833190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:09.833210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:21:10.618
  May 11 13:21:10.621: INFO: Trying to get logs from node ip-172-31-73-54 pod var-expansion-e21fef8c-130e-4711-86bc-145322358262 container dapi-container: <nil>
  STEP: delete the pod @ 05/11/24 13:21:10.629
  May 11 13:21:10.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3385" for this suite. @ 05/11/24 13:21:10.644
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 05/11/24 13:21:10.651
  May 11 13:21:10.651: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename disruption @ 05/11/24 13:21:10.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:21:10.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:21:10.672
  STEP: Waiting for the pdb to be processed @ 05/11/24 13:21:10.678
  E0511 13:21:10.833853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:11.834284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 05/11/24 13:21:12.681
  STEP: Waiting for all pods to be running @ 05/11/24 13:21:12.69
  May 11 13:21:12.693: INFO: running pods: 0 < 1
  E0511 13:21:12.834793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:13.834907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 05/11/24 13:21:14.695
  STEP: Waiting for the pdb to be processed @ 05/11/24 13:21:14.708
  STEP: Patching PodDisruptionBudget status @ 05/11/24 13:21:14.714
  STEP: Waiting for the pdb to be processed @ 05/11/24 13:21:14.721
  May 11 13:21:14.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6873" for this suite. @ 05/11/24 13:21:14.73
• [4.085 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 05/11/24 13:21:14.736
  May 11 13:21:14.736: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename downward-api @ 05/11/24 13:21:14.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:21:14.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:21:14.757
  STEP: Creating the pod @ 05/11/24 13:21:14.759
  E0511 13:21:14.835151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:15.835336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:16.835589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:21:17.306: INFO: Successfully updated pod "annotationupdated40b1dca-0338-4856-8f42-d791e7a60faf"
  E0511 13:21:17.836400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:18.836583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:19.836625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:20.836726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:21:21.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4734" for this suite. @ 05/11/24 13:21:21.333
• [6.602 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 05/11/24 13:21:21.338
  May 11 13:21:21.338: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename resourcequota @ 05/11/24 13:21:21.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:21:21.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:21:21.359
  STEP: Counting existing ResourceQuota @ 05/11/24 13:21:21.361
  E0511 13:21:21.837096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:22.837202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:23.837296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:24.837386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:25.837485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/11/24 13:21:26.367
  STEP: Ensuring resource quota status is calculated @ 05/11/24 13:21:26.37
  E0511 13:21:26.837583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:27.838010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 05/11/24 13:21:28.375
  STEP: Creating a NodePort Service @ 05/11/24 13:21:28.393
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/11/24 13:21:28.414
  STEP: Ensuring resource quota status captures service creation @ 05/11/24 13:21:28.431
  E0511 13:21:28.838125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:29.838195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 05/11/24 13:21:30.436
  STEP: Ensuring resource quota status released usage @ 05/11/24 13:21:30.47
  E0511 13:21:30.838285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:31.838386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:21:32.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9807" for this suite. @ 05/11/24 13:21:32.479
• [11.147 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 05/11/24 13:21:32.486
  May 11 13:21:32.486: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/11/24 13:21:32.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:21:32.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:21:32.507
  May 11 13:21:32.509: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 13:21:32.838463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/11/24 13:21:33.792
  May 11 13:21:33.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-5297 --namespace=crd-publish-openapi-5297 create -f -'
  E0511 13:21:33.838680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:34.839148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:35.839276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:21:35.854: INFO: stderr: ""
  May 11 13:21:35.854: INFO: stdout: "e2e-test-crd-publish-openapi-3730-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  May 11 13:21:35.854: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-5297 --namespace=crd-publish-openapi-5297 delete e2e-test-crd-publish-openapi-3730-crds test-cr'
  May 11 13:21:35.902: INFO: stderr: ""
  May 11 13:21:35.902: INFO: stdout: "e2e-test-crd-publish-openapi-3730-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  May 11 13:21:35.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-5297 --namespace=crd-publish-openapi-5297 apply -f -'
  May 11 13:21:35.950: INFO: stderr: ""
  May 11 13:21:35.950: INFO: stdout: "e2e-test-crd-publish-openapi-3730-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  May 11 13:21:35.950: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-5297 --namespace=crd-publish-openapi-5297 delete e2e-test-crd-publish-openapi-3730-crds test-cr'
  May 11 13:21:36.005: INFO: stderr: ""
  May 11 13:21:36.005: INFO: stdout: "e2e-test-crd-publish-openapi-3730-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/11/24 13:21:36.005
  May 11 13:21:36.005: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-5297 explain e2e-test-crd-publish-openapi-3730-crds'
  May 11 13:21:36.043: INFO: stderr: ""
  May 11 13:21:36.043: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3730-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0511 13:21:36.840068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:21:37.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5297" for this suite. @ 05/11/24 13:21:37.259
• [4.781 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 05/11/24 13:21:37.267
  May 11 13:21:37.267: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename downward-api @ 05/11/24 13:21:37.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:21:37.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:21:37.287
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 13:21:37.289
  E0511 13:21:37.840164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:38.840423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:39.840595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:40.840816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:21:41.312
  May 11 13:21:41.315: INFO: Trying to get logs from node ip-172-31-73-54 pod downwardapi-volume-4a4bfcb8-e2b1-463b-8f76-c284dd05019b container client-container: <nil>
  STEP: delete the pod @ 05/11/24 13:21:41.321
  May 11 13:21:41.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6139" for this suite. @ 05/11/24 13:21:41.34
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 05/11/24 13:21:41.348
  May 11 13:21:41.348: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-probe @ 05/11/24 13:21:41.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:21:41.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:21:41.367
  STEP: Creating pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371 @ 05/11/24 13:21:41.369
  E0511 13:21:41.841413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:42.841598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/11/24 13:21:43.384
  May 11 13:21:43.388: INFO: Initial restart count of pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d is 0
  May 11 13:21:43.391: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:21:43.842044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:44.842107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:21:45.396: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:21:45.842662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:46.842764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:21:47.402: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:21:47.842805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:48.842898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:21:49.405: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:21:49.842967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:50.843088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:21:51.409: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:21:51.843187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:52.843383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:21:53.412: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:21:53.844273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:54.844369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:21:55.418: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:21:55.845271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:56.845372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:21:57.423: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:21:57.846159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:21:58.846241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:21:59.427: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:21:59.847152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:00.847242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:01.432: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:01.847935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:02.848117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:03.437: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:03.848976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:04.849221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:05.442: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:05.849914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:06.850091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:07.448: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:07.850742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:08.850847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:09.451: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:09.851123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:10.851214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:11.456: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:11.851930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:12.852277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:13.462: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:13.852478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:14.852571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:15.466: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:15.852731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:16.852817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:17.471: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:17.853828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:18.854297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:19.476: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:19.854697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:20.855149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:21.480: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:21.855771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:22.855860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:23.484: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:23.856465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:24.856658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:25.488: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:25.856821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:26.857343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:27.493: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:27.858032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:28.858116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:29.498: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:29.858732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:30.858841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:31.502: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:31.859508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:32.859597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:33.507: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:33.859667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:34.860207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:35.512: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:35.861083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:36.861575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:37.519: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:37.861762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:38.862064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:39.523: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:39.862817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:40.863432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:41.529: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:41.863597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:42.864142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:43.532: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:43.864258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:44.864736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:45.538: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:45.865603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:46.865759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:47.542: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:47.865850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:48.866825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:49.547: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:49.866975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:50.867153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:51.552: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:51.867335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:52.867502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:53.557: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:53.867973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:54.868056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:55.562: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:55.868352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:56.868892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:57.567: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:57.869517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:22:58.869809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:22:59.571: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:22:59.870378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:00.870470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:01.577: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:01.871141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:02.871999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:03.580: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:03.872098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:04.872180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:05.586: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:05.873027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:06.873231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:07.591: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:07.873491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:08.873841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:09.596: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:09.874641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:10.874736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:11.601: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:11.875664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:12.875754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:13.604: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:13.876279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:14.876495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:15.609: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:15.877549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:16.877660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:17.614: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:17.877741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:18.877973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:19.618: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:19.878559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:20.878649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:21.624: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:21.878765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:22.879128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:23.630: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:23.879323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:24.879945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:25.635: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:25.880630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:26.880720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:27.640: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:27.881172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:28.881266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:29.644: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:29.882342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:30.882509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:31.649: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:31.883007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:32.883217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:33.654: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:33.884084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:34.884313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:35.658: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:35.884399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:36.884921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:37.664: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:37.885004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:38.885061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:39.669: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:39.886055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:40.886079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:41.673: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:41.886599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:42.886680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:43.677: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:43.887102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:44.887209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:45.680: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:45.887304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:46.887395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:47.685: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:47.887641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:48.887787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:49.690: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:49.888049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:50.889120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:51.694: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:51.889954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:52.890226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:53.698: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:53.891125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:54.891279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:55.705: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:55.891365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:56.891465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:57.710: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:57.891786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:23:58.891890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:23:59.715: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:23:59.892451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:00.892637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:01.719: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:01.893491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:02.894207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:03.724: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:03.894902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:04.895603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:05.727: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:05.896194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:06.897239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:07.732: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:07.897983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:08.898062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:09.737: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:09.899111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:10.899360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:11.741: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:11.899896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:12.900006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:13.746: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:13.900563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:14.900675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:15.752: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:15.901382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:16.901441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:17.756: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:17.902423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:18.902528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:19.760: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:19.902973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:20.903080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:21.765: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:21.904066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:22.904159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:23.769: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:23.904906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:24.905000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:25.774: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:25.905576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:26.905688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:27.778: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:27.905884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:28.906112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:29.782: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:29.906829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:30.906931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:31.787: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:31.907919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:32.908104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:33.791: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:33.908613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:34.908729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:35.795: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:35.909295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:36.909570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:37.799: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:37.910187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:38.911148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:39.804: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:39.911216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:40.911825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:41.810: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:41.912308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:42.912411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:43.815: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:43.912470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:44.912643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:45.820: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:45.913398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:46.913503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:47.826: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:47.914207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:48.914303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:49.830: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:49.914802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:50.915124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:51.835: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:51.915672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:52.915776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:53.840: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:53.916729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:54.916840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:55.845: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:55.917747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:56.918728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:57.851: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:57.918768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:24:58.919149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:24:59.855: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:24:59.919358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:00.919519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:01.859: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:01.920538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:02.921313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:03.864: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:03.921667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:04.921895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:05.868: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:05.922778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:06.922898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:07.874: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:07.923292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:08.923405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:09.877: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:09.924075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:10.924243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:11.881: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:11.925044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:12.925172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:13.886: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:13.925662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:14.925861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:15.890: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:15.926384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:16.926500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:17.895: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:17.927313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:18.927423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:19.900: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:19.928157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:20.928777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:21.904: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:21.929435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:22.930052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:23.908: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:23.931007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:24.931131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:25.912: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:25.931843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:26.932943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:27.917: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:27.933227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:28.933423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:29.922: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:29.933491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:30.933689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:31.926: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:31.934208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:32.935176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:33.931: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:33.935697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:34.935798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:35.936062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:35.936: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:36.936918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:37.937202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:37.942: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:38.937473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:39.937467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:39.946: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:40.937811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:41.938050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:41.952: INFO: Get pod test-grpc-ad048f25-eb36-485f-a44a-f2de6330870d in namespace container-probe-7371
  E0511 13:25:42.938113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:43.938214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/11/24 13:25:43.952
  May 11 13:25:43.964: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7371" for this suite. @ 05/11/24 13:25:43.968
• [242.626 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 05/11/24 13:25:43.974
  May 11 13:25:43.974: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 13:25:43.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:25:43.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:25:44.001
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7625 @ 05/11/24 13:25:44.003
  STEP: changing the ExternalName service to type=NodePort @ 05/11/24 13:25:44.01
  STEP: creating replication controller externalname-service in namespace services-7625 @ 05/11/24 13:25:44.026
  I0511 13:25:44.032762      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-7625, replica count: 2
  E0511 13:25:44.938309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:45.938394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:46.938581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0511 13:25:47.083949      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 11 13:25:47.083: INFO: Creating new exec pod
  E0511 13:25:47.938692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:48.939148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:49.939230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:50.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-7625 exec execpodcbklc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 11 13:25:50.195: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 11 13:25:50.195: INFO: stdout: ""
  E0511 13:25:50.939341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:51.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-7625 exec execpodcbklc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 11 13:25:51.191: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 11 13:25:51.191: INFO: stdout: ""
  E0511 13:25:51.940338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:52.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-7625 exec execpodcbklc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 11 13:25:52.200: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 11 13:25:52.200: INFO: stdout: ""
  E0511 13:25:52.940442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:53.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-7625 exec execpodcbklc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 11 13:25:53.191: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 11 13:25:53.191: INFO: stdout: ""
  E0511 13:25:53.940634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:54.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-7625 exec execpodcbklc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 11 13:25:54.206: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 11 13:25:54.206: INFO: stdout: ""
  E0511 13:25:54.940656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:55.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-7625 exec execpodcbklc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 11 13:25:55.191: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 11 13:25:55.191: INFO: stdout: ""
  E0511 13:25:55.940739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:56.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-7625 exec execpodcbklc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 11 13:25:56.191: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 11 13:25:56.191: INFO: stdout: ""
  E0511 13:25:56.940931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:25:57.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-7625 exec execpodcbklc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 11 13:25:57.195: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 11 13:25:57.195: INFO: stdout: "externalname-service-ggz56"
  May 11 13:25:57.195: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-7625 exec execpodcbklc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.18 80'
  May 11 13:25:57.282: INFO: stderr: "+ nc -v -t -w 2 10.152.183.18 80\n+ echo hostName\nConnection to 10.152.183.18 80 port [tcp/http] succeeded!\n"
  May 11 13:25:57.282: INFO: stdout: "externalname-service-ggz56"
  May 11 13:25:57.282: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-7625 exec execpodcbklc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.35.147 32649'
  May 11 13:25:57.373: INFO: stderr: "+ nc -v -t -w 2 172.31.35.147 32649\n+ echo hostName\nConnection to 172.31.35.147 32649 port [tcp/*] succeeded!\n"
  May 11 13:25:57.373: INFO: stdout: "externalname-service-b2nzx"
  May 11 13:25:57.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-7625 exec execpodcbklc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.16.37 32649'
  May 11 13:25:57.454: INFO: stderr: "+ nc -v -t -w 2 172.31.16.37 32649\n+ echo hostName\nConnection to 172.31.16.37 32649 port [tcp/*] succeeded!\n"
  May 11 13:25:57.454: INFO: stdout: "externalname-service-ggz56"
  May 11 13:25:57.454: INFO: Cleaning up the ExternalName to NodePort test service
  May 11 13:25:57.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7625" for this suite. @ 05/11/24 13:25:57.479
• [13.512 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 05/11/24 13:25:57.489
  May 11 13:25:57.489: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename runtimeclass @ 05/11/24 13:25:57.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:25:57.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:25:57.507
  May 11 13:25:57.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6870" for this suite. @ 05/11/24 13:25:57.517
• [0.034 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 05/11/24 13:25:57.523
  May 11 13:25:57.523: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename replicaset @ 05/11/24 13:25:57.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:25:57.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:25:57.543
  STEP: Create a ReplicaSet @ 05/11/24 13:25:57.545
  STEP: Verify that the required pods have come up @ 05/11/24 13:25:57.55
  May 11 13:25:57.552: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0511 13:25:57.941549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:58.941641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:25:59.941752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:00.942039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:01.942095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:26:02.557: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/11/24 13:26:02.557
  May 11 13:26:02.559: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/11/24 13:26:02.559
  STEP: DeleteCollection of the ReplicaSets @ 05/11/24 13:26:02.562
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/11/24 13:26:02.571
  May 11 13:26:02.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1428" for this suite. @ 05/11/24 13:26:02.584
• [5.069 seconds]
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 05/11/24 13:26:02.593
  May 11 13:26:02.593: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename certificates @ 05/11/24 13:26:02.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:26:02.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:26:02.663
  E0511 13:26:02.942541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 05/11/24 13:26:02.955
  STEP: getting /apis/certificates.k8s.io @ 05/11/24 13:26:02.958
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/11/24 13:26:02.959
  STEP: creating @ 05/11/24 13:26:02.96
  STEP: getting @ 05/11/24 13:26:02.975
  STEP: listing @ 05/11/24 13:26:02.978
  STEP: watching @ 05/11/24 13:26:02.98
  May 11 13:26:02.980: INFO: starting watch
  STEP: patching @ 05/11/24 13:26:02.981
  STEP: updating @ 05/11/24 13:26:02.986
  May 11 13:26:02.992: INFO: waiting for watch events with expected annotations
  May 11 13:26:02.992: INFO: saw patched and updated annotations
  STEP: getting /approval @ 05/11/24 13:26:02.992
  STEP: patching /approval @ 05/11/24 13:26:02.995
  STEP: updating /approval @ 05/11/24 13:26:03
  STEP: getting /status @ 05/11/24 13:26:03.006
  STEP: patching /status @ 05/11/24 13:26:03.009
  STEP: updating /status @ 05/11/24 13:26:03.016
  STEP: deleting @ 05/11/24 13:26:03.023
  STEP: deleting a collection @ 05/11/24 13:26:03.032
  May 11 13:26:03.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-7905" for this suite. @ 05/11/24 13:26:03.054
• [0.469 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 05/11/24 13:26:03.062
  May 11 13:26:03.062: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename var-expansion @ 05/11/24 13:26:03.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:26:03.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:26:03.08
  STEP: creating the pod @ 05/11/24 13:26:03.082
  STEP: waiting for pod running @ 05/11/24 13:26:03.09
  E0511 13:26:03.942911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:04.943678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 05/11/24 13:26:05.1
  May 11 13:26:05.103: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2060 PodName:var-expansion-9e501174-cf2f-4f87-ba9c-13b12dc11f41 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:26:05.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:26:05.104: INFO: ExecWithOptions: Clientset creation
  May 11 13:26:05.104: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-2060/pods/var-expansion-9e501174-cf2f-4f87-ba9c-13b12dc11f41/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 05/11/24 13:26:05.148
  May 11 13:26:05.152: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2060 PodName:var-expansion-9e501174-cf2f-4f87-ba9c-13b12dc11f41 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:26:05.152: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:26:05.152: INFO: ExecWithOptions: Clientset creation
  May 11 13:26:05.152: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-2060/pods/var-expansion-9e501174-cf2f-4f87-ba9c-13b12dc11f41/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 05/11/24 13:26:05.195
  May 11 13:26:05.705: INFO: Successfully updated pod "var-expansion-9e501174-cf2f-4f87-ba9c-13b12dc11f41"
  STEP: waiting for annotated pod running @ 05/11/24 13:26:05.705
  STEP: deleting the pod gracefully @ 05/11/24 13:26:05.708
  May 11 13:26:05.709: INFO: Deleting pod "var-expansion-9e501174-cf2f-4f87-ba9c-13b12dc11f41" in namespace "var-expansion-2060"
  May 11 13:26:05.715: INFO: Wait up to 5m0s for pod "var-expansion-9e501174-cf2f-4f87-ba9c-13b12dc11f41" to be fully deleted
  E0511 13:26:05.944682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:06.945033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:07.945486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:08.945611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:09.946153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:10.946231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:11.947158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:12.947262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:13.947634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:14.948671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:15.949655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:16.949811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:17.950535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:18.950575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:19.951023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:20.951207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:21.952285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:22.952374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:23.953443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:24.953531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:25.953590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:26.953666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:27.954611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:28.954677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:29.955159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:30.955240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:31.956125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:32.956214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:33.956743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:34.956958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:35.957473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:36.957588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:26:37.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2060" for this suite. @ 05/11/24 13:26:37.794
• [34.741 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 05/11/24 13:26:37.802
  May 11 13:26:37.802: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename replication-controller @ 05/11/24 13:26:37.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:26:37.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:26:37.822
  STEP: Creating replication controller my-hostname-basic-65085731-aed9-4750-9601-e3b73098724c @ 05/11/24 13:26:37.824
  May 11 13:26:37.832: INFO: Pod name my-hostname-basic-65085731-aed9-4750-9601-e3b73098724c: Found 0 pods out of 1
  E0511 13:26:37.958019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:38.958107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:39.958206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:40.958289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:41.958394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:26:42.836: INFO: Pod name my-hostname-basic-65085731-aed9-4750-9601-e3b73098724c: Found 1 pods out of 1
  May 11 13:26:42.836: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-65085731-aed9-4750-9601-e3b73098724c" are running
  May 11 13:26:42.841: INFO: Pod "my-hostname-basic-65085731-aed9-4750-9601-e3b73098724c-j5m42" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-11 13:26:39 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-11 13:26:37 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-11 13:26:39 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-11 13:26:39 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-11 13:26:37 +0000 UTC Reason: Message:}])
  May 11 13:26:42.841: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/11/24 13:26:42.841
  May 11 13:26:42.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3355" for this suite. @ 05/11/24 13:26:42.856
• [5.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 05/11/24 13:26:42.864
  May 11 13:26:42.864: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename dns @ 05/11/24 13:26:42.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:26:42.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:26:42.883
  STEP: Creating a test headless service @ 05/11/24 13:26:42.885
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9587.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-9587.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9587.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9587.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9587.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-9587.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9587.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-9587.svc.cluster.local;sleep 1; done
   @ 05/11/24 13:26:42.889
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9587.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9587.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9587.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9587.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9587.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9587.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9587.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9587.svc.cluster.local;sleep 1; done
   @ 05/11/24 13:26:42.889
  STEP: creating a pod to probe DNS @ 05/11/24 13:26:42.889
  STEP: submitting the pod to kubernetes @ 05/11/24 13:26:42.889
  E0511 13:26:42.958463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:43.958599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/11/24 13:26:44.904
  STEP: looking for the results for each expected name from probers @ 05/11/24 13:26:44.908
  May 11 13:26:44.913: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9587.svc.cluster.local from pod dns-9587/dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf: the server could not find the requested resource (get pods dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf)
  May 11 13:26:44.915: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9587.svc.cluster.local from pod dns-9587/dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf: the server could not find the requested resource (get pods dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf)
  May 11 13:26:44.919: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9587.svc.cluster.local from pod dns-9587/dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf: the server could not find the requested resource (get pods dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf)
  May 11 13:26:44.922: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9587.svc.cluster.local from pod dns-9587/dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf: the server could not find the requested resource (get pods dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf)
  May 11 13:26:44.925: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9587.svc.cluster.local from pod dns-9587/dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf: the server could not find the requested resource (get pods dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf)
  May 11 13:26:44.928: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9587.svc.cluster.local from pod dns-9587/dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf: the server could not find the requested resource (get pods dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf)
  May 11 13:26:44.932: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9587.svc.cluster.local from pod dns-9587/dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf: the server could not find the requested resource (get pods dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf)
  May 11 13:26:44.934: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9587.svc.cluster.local from pod dns-9587/dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf: the server could not find the requested resource (get pods dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf)
  May 11 13:26:44.934: INFO: Lookups using dns-9587/dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9587.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9587.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9587.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9587.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9587.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9587.svc.cluster.local jessie_udp@dns-test-service-2.dns-9587.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9587.svc.cluster.local]

  May 11 13:26:44.951: INFO: Pod client logs for webserver: 
  May 11 13:26:44.957: INFO: Pod client logs for querier: 
  E0511 13:26:44.959038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:26:44.962: INFO: Pod client logs for jessie-querier: 
  E0511 13:26:45.959182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:46.959257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:47.959365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:48.959573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:26:49.936: INFO: DNS probes using dns-9587/dns-test-e11764ac-9858-46bb-9ebd-6796c5f792cf succeeded

  STEP: deleting the pod @ 05/11/24 13:26:49.936
  STEP: deleting the test headless service @ 05/11/24 13:26:49.947
  E0511 13:26:49.959770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:26:49.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9587" for this suite. @ 05/11/24 13:26:49.966
• [7.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 05/11/24 13:26:49.975
  May 11 13:26:49.975: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename gc @ 05/11/24 13:26:49.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:26:49.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:26:49.993
  STEP: create the deployment @ 05/11/24 13:26:49.995
  W0511 13:26:50.005882      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/11/24 13:26:50.006
  STEP: delete the deployment @ 05/11/24 13:26:50.523
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/11/24 13:26:50.533
  E0511 13:26:50.960415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/11/24 13:26:51.049
  W0511 13:26:51.055170      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May 11 13:26:51.055: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 11 13:26:51.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7284" for this suite. @ 05/11/24 13:26:51.059
• [1.091 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 05/11/24 13:26:51.066
  May 11 13:26:51.066: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename field-validation @ 05/11/24 13:26:51.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:26:51.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:26:51.088
  May 11 13:26:51.090: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 13:26:51.961477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:52.961539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0511 13:26:53.631781      19 warnings.go:70] unknown field "alpha"
  W0511 13:26:53.631797      19 warnings.go:70] unknown field "beta"
  W0511 13:26:53.631799      19 warnings.go:70] unknown field "delta"
  W0511 13:26:53.631802      19 warnings.go:70] unknown field "epsilon"
  W0511 13:26:53.631850      19 warnings.go:70] unknown field "gamma"
  E0511 13:26:53.962312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:26:54.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5392" for this suite. @ 05/11/24 13:26:54.175
• [3.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 05/11/24 13:26:54.18
  May 11 13:26:54.180: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename svcaccounts @ 05/11/24 13:26:54.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:26:54.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:26:54.199
  May 11 13:26:54.213: INFO: created pod
  E0511 13:26:54.963149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:55.963247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:56.963584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:57.964579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:26:58.225
  E0511 13:26:58.965594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:26:59.965915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:00.966112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:01.966174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:02.966262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:03.967129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:04.967296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:05.967382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:06.967513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:07.967592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:08.967695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:09.967870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:10.968083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:11.968171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:12.968349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:13.968554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:14.968796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:15.969810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:16.970194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:17.971165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:18.971912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:19.971991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:20.972154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:21.972807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:22.972900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:23.973072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:24.973236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:25.974030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:26.974066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:27.974173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:27:28.226: INFO: polling logs
  May 11 13:27:28.248: INFO: Pod logs: 
  I0511 13:26:54.768423       1 log.go:245] OK: Got token
  I0511 13:26:54.768468       1 log.go:245] validating with in-cluster discovery
  I0511 13:26:54.768672       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0511 13:26:54.768691       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-9373:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000445260), NotBefore:(*jwt.NumericDate)(0xc000445348), IssuedAt:(*jwt.NumericDate)(0xc000445270), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9373", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"1a0ef043-4d13-4485-9e73-d7e9cd032112"}}}
  I0511 13:26:54.776533       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0511 13:26:54.779954       1 log.go:245] OK: Validated signature on JWT
  I0511 13:26:54.780004       1 log.go:245] OK: Got valid claims from token!
  I0511 13:26:54.780020       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-9373:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012a00), NotBefore:(*jwt.NumericDate)(0xc000012a28), IssuedAt:(*jwt.NumericDate)(0xc000012a08), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9373", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"1a0ef043-4d13-4485-9e73-d7e9cd032112"}}}

  May 11 13:27:28.248: INFO: completed pod
  May 11 13:27:28.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9373" for this suite. @ 05/11/24 13:27:28.26
• [34.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 05/11/24 13:27:28.266
  May 11 13:27:28.266: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename svcaccounts @ 05/11/24 13:27:28.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:27:28.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:27:28.288
  E0511 13:27:28.975121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:29.975196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 05/11/24 13:27:30.311
  May 11 13:27:30.311: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4114 pod-service-account-6dbb774d-3de3-4939-8cad-a37317e90c14 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/11/24 13:27:30.402
  May 11 13:27:30.402: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4114 pod-service-account-6dbb774d-3de3-4939-8cad-a37317e90c14 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 05/11/24 13:27:30.485
  May 11 13:27:30.485: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4114 pod-service-account-6dbb774d-3de3-4939-8cad-a37317e90c14 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  May 11 13:27:30.579: INFO: Got root ca configmap in namespace "svcaccounts-4114"
  May 11 13:27:30.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4114" for this suite. @ 05/11/24 13:27:30.584
• [2.326 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 05/11/24 13:27:30.592
  May 11 13:27:30.592: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename downward-api @ 05/11/24 13:27:30.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:27:30.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:27:30.61
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 13:27:30.612
  E0511 13:27:30.975927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:31.975996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:32.976075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:33.976168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:27:34.632
  May 11 13:27:34.636: INFO: Trying to get logs from node ip-172-31-16-37 pod downwardapi-volume-3c8f6d54-76b8-44d6-affb-fbd53d2517ab container client-container: <nil>
  STEP: delete the pod @ 05/11/24 13:27:34.642
  May 11 13:27:34.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8194" for this suite. @ 05/11/24 13:27:34.657
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 05/11/24 13:27:34.663
  May 11 13:27:34.663: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename replication-controller @ 05/11/24 13:27:34.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:27:34.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:27:34.682
  STEP: Creating ReplicationController "e2e-rc-jgcn9" @ 05/11/24 13:27:34.684
  May 11 13:27:34.688: INFO: Get Replication Controller "e2e-rc-jgcn9" to confirm replicas
  E0511 13:27:34.977143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:27:35.689: INFO: Get Replication Controller "e2e-rc-jgcn9" to confirm replicas
  May 11 13:27:35.693: INFO: Found 1 replicas for "e2e-rc-jgcn9" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-jgcn9" @ 05/11/24 13:27:35.693
  STEP: Updating a scale subresource @ 05/11/24 13:27:35.695
  STEP: Verifying replicas where modified for replication controller "e2e-rc-jgcn9" @ 05/11/24 13:27:35.7
  May 11 13:27:35.701: INFO: Get Replication Controller "e2e-rc-jgcn9" to confirm replicas
  E0511 13:27:35.977866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:27:36.701: INFO: Get Replication Controller "e2e-rc-jgcn9" to confirm replicas
  May 11 13:27:36.704: INFO: Found 2 replicas for "e2e-rc-jgcn9" replication controller
  May 11 13:27:36.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1558" for this suite. @ 05/11/24 13:27:36.709
• [2.054 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 05/11/24 13:27:36.718
  May 11 13:27:36.718: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pods @ 05/11/24 13:27:36.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:27:36.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:27:36.737
  STEP: creating pod @ 05/11/24 13:27:36.739
  E0511 13:27:36.978424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:37.978652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:27:38.764: INFO: Pod pod-hostip-109b17ed-f556-4b9c-b8f9-8406451f1746 has hostIP: 172.31.73.54
  May 11 13:27:38.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1988" for this suite. @ 05/11/24 13:27:38.766
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 05/11/24 13:27:38.773
  May 11 13:27:38.773: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename configmap @ 05/11/24 13:27:38.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:27:38.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:27:38.792
  STEP: Creating configMap that has name configmap-test-emptyKey-85e8997d-30e9-4e43-b991-4f4491b4d071 @ 05/11/24 13:27:38.794
  May 11 13:27:38.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-187" for this suite. @ 05/11/24 13:27:38.798
• [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 05/11/24 13:27:38.804
  May 11 13:27:38.804: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 13:27:38.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:27:38.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:27:38.824
  STEP: creating service in namespace services-4766 @ 05/11/24 13:27:38.826
  STEP: creating service affinity-clusterip in namespace services-4766 @ 05/11/24 13:27:38.826
  STEP: creating replication controller affinity-clusterip in namespace services-4766 @ 05/11/24 13:27:38.837
  I0511 13:27:38.843780      19 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-4766, replica count: 3
  E0511 13:27:38.979267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:39.979741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:40.979786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0511 13:27:41.895023      19 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 11 13:27:41.904: INFO: Creating new exec pod
  E0511 13:27:41.980265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:42.980442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:43.980708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:27:44.918: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-4766 exec execpod-affinity6lnjj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E0511 13:27:44.981244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:27:44.999: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  May 11 13:27:44.999: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 13:27:44.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-4766 exec execpod-affinity6lnjj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.152 80'
  May 11 13:27:45.099: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.152 80\nConnection to 10.152.183.152 80 port [tcp/http] succeeded!\n"
  May 11 13:27:45.099: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 13:27:45.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-4766 exec execpod-affinity6lnjj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.152:80/ ; done'
  May 11 13:27:45.266: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.152:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.152:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.152:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.152:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.152:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.152:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.152:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.152:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.152:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.152:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.152:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.152:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.152:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.152:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.152:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.152:80/\n"
  May 11 13:27:45.266: INFO: stdout: "\naffinity-clusterip-zjfpg\naffinity-clusterip-zjfpg\naffinity-clusterip-zjfpg\naffinity-clusterip-zjfpg\naffinity-clusterip-zjfpg\naffinity-clusterip-zjfpg\naffinity-clusterip-zjfpg\naffinity-clusterip-zjfpg\naffinity-clusterip-zjfpg\naffinity-clusterip-zjfpg\naffinity-clusterip-zjfpg\naffinity-clusterip-zjfpg\naffinity-clusterip-zjfpg\naffinity-clusterip-zjfpg\naffinity-clusterip-zjfpg\naffinity-clusterip-zjfpg"
  May 11 13:27:45.266: INFO: Received response from host: affinity-clusterip-zjfpg
  May 11 13:27:45.266: INFO: Received response from host: affinity-clusterip-zjfpg
  May 11 13:27:45.266: INFO: Received response from host: affinity-clusterip-zjfpg
  May 11 13:27:45.266: INFO: Received response from host: affinity-clusterip-zjfpg
  May 11 13:27:45.266: INFO: Received response from host: affinity-clusterip-zjfpg
  May 11 13:27:45.266: INFO: Received response from host: affinity-clusterip-zjfpg
  May 11 13:27:45.266: INFO: Received response from host: affinity-clusterip-zjfpg
  May 11 13:27:45.266: INFO: Received response from host: affinity-clusterip-zjfpg
  May 11 13:27:45.266: INFO: Received response from host: affinity-clusterip-zjfpg
  May 11 13:27:45.266: INFO: Received response from host: affinity-clusterip-zjfpg
  May 11 13:27:45.266: INFO: Received response from host: affinity-clusterip-zjfpg
  May 11 13:27:45.266: INFO: Received response from host: affinity-clusterip-zjfpg
  May 11 13:27:45.266: INFO: Received response from host: affinity-clusterip-zjfpg
  May 11 13:27:45.266: INFO: Received response from host: affinity-clusterip-zjfpg
  May 11 13:27:45.266: INFO: Received response from host: affinity-clusterip-zjfpg
  May 11 13:27:45.266: INFO: Received response from host: affinity-clusterip-zjfpg
  May 11 13:27:45.266: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-4766, will wait for the garbage collector to delete the pods @ 05/11/24 13:27:45.278
  May 11 13:27:45.338: INFO: Deleting ReplicationController affinity-clusterip took: 6.03965ms
  May 11 13:27:45.438: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.181598ms
  E0511 13:27:45.981702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:46.982105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:47.983025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:27:48.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4766" for this suite. @ 05/11/24 13:27:48.258
• [9.459 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 05/11/24 13:27:48.263
  May 11 13:27:48.263: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename daemonsets @ 05/11/24 13:27:48.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:27:48.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:27:48.283
  May 11 13:27:48.300: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/11/24 13:27:48.306
  May 11 13:27:48.309: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:27:48.309: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:27:48.312: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 13:27:48.312: INFO: Node ip-172-31-16-37 is running 0 daemon pod, expected 1
  E0511 13:27:48.983606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:27:49.310: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:27:49.310: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:27:49.314: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 11 13:27:49.314: INFO: Node ip-172-31-16-37 is running 0 daemon pod, expected 1
  E0511 13:27:49.983755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:27:50.311: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:27:50.311: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:27:50.314: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 11 13:27:50.314: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/11/24 13:27:50.326
  STEP: Check that daemon pods images are updated. @ 05/11/24 13:27:50.339
  May 11 13:27:50.341: INFO: Wrong image for pod: daemon-set-5t2jf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 11 13:27:50.341: INFO: Wrong image for pod: daemon-set-fdf7c. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 11 13:27:50.341: INFO: Wrong image for pod: daemon-set-k24rq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 11 13:27:50.346: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:27:50.346: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0511 13:27:50.984008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:27:51.345: INFO: Wrong image for pod: daemon-set-5t2jf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 11 13:27:51.345: INFO: Wrong image for pod: daemon-set-fdf7c. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 11 13:27:51.345: INFO: Pod daemon-set-z7r6w is not available
  May 11 13:27:51.348: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:27:51.348: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0511 13:27:51.984775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:27:52.344: INFO: Wrong image for pod: daemon-set-5t2jf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 11 13:27:52.344: INFO: Pod daemon-set-gxkb9 is not available
  May 11 13:27:52.352: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:27:52.353: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0511 13:27:52.985589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:27:53.345: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:27:53.345: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0511 13:27:53.986074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:27:54.344: INFO: Pod daemon-set-x8r8b is not available
  May 11 13:27:54.347: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:27:54.347: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/11/24 13:27:54.347
  May 11 13:27:54.351: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:27:54.351: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:27:54.353: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May 11 13:27:54.353: INFO: Node ip-172-31-16-37 is running 0 daemon pod, expected 1
  E0511 13:27:54.986382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:27:55.351: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:27:55.351: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 13:27:55.354: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 11 13:27:55.354: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/11/24 13:27:55.367
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7158, will wait for the garbage collector to delete the pods @ 05/11/24 13:27:55.367
  May 11 13:27:55.428: INFO: Deleting DaemonSet.extensions daemon-set took: 6.401594ms
  May 11 13:27:55.529: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.730437ms
  E0511 13:27:55.986889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:27:56.733: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 13:27:56.733: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 11 13:27:56.736: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32597"},"items":null}

  May 11 13:27:56.740: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32597"},"items":null}

  May 11 13:27:56.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7158" for this suite. @ 05/11/24 13:27:56.755
• [8.497 seconds]
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 05/11/24 13:27:56.76
  May 11 13:27:56.760: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename taint-single-pod @ 05/11/24 13:27:56.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:27:56.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:27:56.777
  May 11 13:27:56.779: INFO: Waiting up to 1m0s for all nodes to be ready
  E0511 13:27:56.986965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:57.987148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:58.987536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:27:59.987628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:00.988600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:01.989248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:02.990256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:03.991159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:04.991237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:05.991406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:06.992189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:07.992361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:08.992773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:09.992849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:10.992953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:11.993058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:12.993143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:13.993230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:14.993290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:15.993981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:16.994099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:17.994170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:18.995112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:19.995214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:20.995294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:21.995374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:22.996205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:23.996943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:24.997077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:25.997159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:26.997734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:27.997896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:28.998503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:29.999177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:30.999243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:31.999342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:32.999951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:34.000967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:35.001563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:36.001719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:37.002454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:38.002576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:39.003045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:40.003295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:41.004105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:42.004204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:43.004281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:44.004391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:45.004783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:46.004877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:47.004989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:48.005067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:49.005780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:50.006055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:51.006502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:52.006665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:53.007146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:54.007238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:55.007321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:56.007490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:28:56.780: INFO: Waiting for terminating namespaces to be deleted...
  May 11 13:28:56.784: INFO: Starting informer...
  STEP: Starting pod... @ 05/11/24 13:28:56.784
  May 11 13:28:57.000: INFO: Pod is running on ip-172-31-73-54. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/11/24 13:28:57
  E0511 13:28:57.007596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/11/24 13:28:57.01
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/11/24 13:28:57.014
  May 11 13:28:57.014: INFO: Pod wasn't evicted. Proceeding
  May 11 13:28:57.014: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/11/24 13:28:57.024
  STEP: Waiting some time to make sure that toleration time passed. @ 05/11/24 13:28:57.027
  E0511 13:28:58.008428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:28:59.009412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:00.010372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:01.011140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:02.011252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:03.011321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:04.011802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:05.011874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:06.012836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:07.012931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:08.013889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:09.014075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:10.014181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:11.014265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:12.015123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:13.015639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:14.015741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:15.015816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:16.015985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:17.016111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:18.016327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:19.016586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:20.016859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:21.017036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:22.017319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:23.017521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:24.017697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:25.017883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:26.018064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:27.018383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:28.018489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:29.019126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:30.020175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:31.020276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:32.020363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:33.020908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:34.021067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:35.022149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:36.022592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:37.022683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:38.022748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:39.023142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:40.023228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:41.023600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:42.023639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:43.024679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:44.024793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:45.025102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:46.025438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:47.025691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:48.026045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:49.026095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:50.027172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:51.027248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:52.027336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:53.027503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:54.027599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:55.027773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:56.028085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:57.028157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:58.028289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:29:59.028405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:00.028473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:01.028829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:02.028975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:03.029057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:04.029139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:05.029221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:06.029657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:07.029747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:08.029933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:09.030066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:10.030190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:11.030264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:12.028: INFO: Pod wasn't evicted. Test successful
  May 11 13:30:12.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0511 13:30:12.030621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "taint-single-pod-3410" for this suite. @ 05/11/24 13:30:12.033
• [135.279 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 05/11/24 13:30:12.039
  May 11 13:30:12.039: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/11/24 13:30:12.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:30:12.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:30:12.058
  STEP: create the container to handle the HTTPGet hook request. @ 05/11/24 13:30:12.064
  E0511 13:30:13.031162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:14.031262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/11/24 13:30:14.081
  E0511 13:30:15.031346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:16.031359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 05/11/24 13:30:16.099
  STEP: delete the pod with lifecycle hook @ 05/11/24 13:30:16.11
  E0511 13:30:17.031474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:18.031566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:18.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6819" for this suite. @ 05/11/24 13:30:18.13
• [6.099 seconds]
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 05/11/24 13:30:18.138
  May 11 13:30:18.138: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename configmap @ 05/11/24 13:30:18.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:30:18.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:30:18.16
  STEP: Creating configMap configmap-404/configmap-test-cd22da1d-e8ba-44d8-8ccf-efcac41dfd0c @ 05/11/24 13:30:18.162
  STEP: Creating a pod to test consume configMaps @ 05/11/24 13:30:18.167
  E0511 13:30:19.031645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:20.032629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:21.032756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:22.032843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:30:22.194
  May 11 13:30:22.197: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-configmaps-8a8d05c3-628b-42ec-a75e-4ba3b441dd46 container env-test: <nil>
  STEP: delete the pod @ 05/11/24 13:30:22.204
  May 11 13:30:22.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-404" for this suite. @ 05/11/24 13:30:22.223
• [4.092 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 05/11/24 13:30:22.23
  May 11 13:30:22.230: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-probe @ 05/11/24 13:30:22.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:30:22.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:30:22.254
  STEP: Creating pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727 @ 05/11/24 13:30:22.256
  E0511 13:30:23.033313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:24.033415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/11/24 13:30:24.273
  May 11 13:30:24.276: INFO: Initial restart count of pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 is 0
  May 11 13:30:24.279: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:25.033616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:26.034619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:26.284: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:27.034698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:28.034818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:28.288: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:29.034921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:30.035094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:30.291: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:31.035637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:32.036499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:32.297: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:33.036596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:34.036781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:34.301: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:35.037352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:36.037736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:36.306: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:37.038335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:38.038433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:38.311: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:39.038524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:40.039184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:40.314: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:41.039252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:42.039340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:42.320: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:43.039883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:44.040423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:44.324: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:45.041305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:46.041380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:46.330: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:47.041478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:48.041587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:48.336: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:49.041927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:50.042071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:50.341: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:51.043150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:52.043237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:52.347: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:53.043358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:54.043580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:54.351: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:55.044569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:56.044877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:56.356: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:57.045339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:30:58.045826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:30:58.360: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:30:59.046061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:00.046164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:00.365: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:01.046245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:02.047171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:02.370: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:03.048213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:04.048988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:04.376: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:05.049890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:06.050427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:06.380: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:07.050516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:08.051126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:08.384: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:09.051212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:10.051377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:10.389: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:11.051472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:12.051713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:12.393: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:13.052128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:14.052216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:14.399: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:15.052984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:16.053408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:16.404: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:17.054066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:18.054152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:18.408: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:19.054241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:20.055136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:20.413: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:21.055228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:22.055320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:22.419: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:23.055418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:24.055686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:24.424: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:25.055966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:26.056252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:26.429: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:27.057219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:28.057506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:28.433: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:29.057638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:30.057765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:30.438: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:31.058722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:32.059026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:32.445: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:33.059452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:34.059531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:34.449: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:35.060218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:36.060601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:36.454: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:37.061626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:38.061736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:38.459: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:39.062323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:40.063146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:40.463: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:41.063404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:42.063448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:42.468: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:43.064366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:44.064489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:44.472: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:45.064969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:46.065414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:46.477: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:47.065873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:48.066072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:48.482: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:49.066952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:50.067050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:50.486: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:51.067896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:52.068229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:52.491: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:53.069275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:54.069457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:54.496: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:55.070465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:56.071537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:56.500: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:57.071971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:31:58.072184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:31:58.504: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:31:59.072276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:00.072475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:00.510: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:01.072763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:02.072889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:02.514: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:03.073709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:04.073795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:04.519: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:05.073961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:06.074257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:06.523: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:07.074352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:08.075133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:08.527: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:09.075533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:10.075626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:10.533: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:11.075890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:12.076247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:12.539: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:13.076343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:14.076501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:14.544: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:15.077477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:16.078462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:16.550: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:17.078564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:18.079137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:18.554: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:19.079257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:20.079441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:20.558: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:21.079520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:22.079732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:22.564: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:23.080289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:24.081210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:24.569: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:25.081417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:26.082414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:26.575: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:27.082678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:28.082822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:28.578: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:29.083354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:30.083804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:30.583: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:31.084767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:32.084847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:32.588: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:33.085254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:34.085343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:34.592: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:35.086176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:36.086434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:36.597: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:37.087123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:38.087337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:38.603: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:39.087413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:40.087512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:40.607: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:41.087767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:42.088185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:42.612: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:43.089053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:44.089231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:44.617: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:45.089974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:46.090502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:46.622: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:47.091137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:48.091389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:48.627: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:49.091497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:50.091717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:50.632: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:51.092407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:52.092484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:52.638: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:53.093425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:54.093539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:54.641: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:55.094409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:56.095431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:56.646: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:57.095526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:32:58.095695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:32:58.652: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:32:59.095756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:00.095844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:00.655: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:01.096051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:02.096145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:02.661: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:03.097011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:04.097470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:04.665: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:05.098046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:06.099155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:06.670: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:07.099411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:08.099888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:08.674: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:09.100436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:10.100525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:10.679: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:11.101577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:12.101672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:12.683: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:13.102339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:14.102606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:14.687: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:15.102692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:16.103393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:16.692: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:17.104117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:18.104209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:18.698: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:19.104282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:20.104529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:20.701: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:21.104901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:22.104990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:22.706: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:23.105269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:24.105519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:24.710: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:25.106234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:26.106528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:26.715: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:27.107156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:28.107252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:28.721: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:29.107334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:30.107393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:30.725: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:31.108367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:32.108458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:32.730: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:33.109367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:34.109796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:34.735: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:35.110071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:36.110428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:36.739: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:37.111520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:38.111609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:38.745: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:39.112460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:40.112556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:40.750: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:41.112814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:42.112910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:42.755: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:43.113596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:44.113695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:44.760: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:45.114075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:46.114406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:46.764: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:47.115127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:48.115350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:48.769: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:49.115701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:50.115922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:50.774: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:51.116847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:52.117140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:52.778: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:53.118060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:54.118072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:54.782: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:55.119133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:56.119409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:56.787: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:57.120264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:33:58.120451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:33:58.791: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:33:59.121153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:00.121406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:34:00.795: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:34:01.122179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:02.122461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:34:02.801: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:34:03.123517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:04.123606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:34:04.807: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:34:05.124478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:06.124568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:34:06.810: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:34:07.124962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:08.125369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:34:08.814: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:34:09.126256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:10.126348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:34:10.820: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:34:11.126378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:12.126462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:34:12.823: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:34:13.127128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:14.127889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:34:14.829: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:34:15.128897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:16.129493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:34:16.835: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:34:17.129782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:18.130073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:34:18.839: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:34:19.130399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:20.131127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:34:20.844: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:34:21.131963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:22.132046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:34:22.850: INFO: Get pod test-webserver-949ca59a-1a94-4ded-905f-36472fd38139 in namespace container-probe-5727
  E0511 13:34:23.132558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:24.132607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/11/24 13:34:24.851
  May 11 13:34:24.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5727" for this suite. @ 05/11/24 13:34:24.867
• [242.645 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 05/11/24 13:34:24.876
  May 11 13:34:24.876: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pod-network-test @ 05/11/24 13:34:24.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:34:24.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:34:24.894
  STEP: Performing setup for networking test in namespace pod-network-test-8041 @ 05/11/24 13:34:24.896
  STEP: creating a selector @ 05/11/24 13:34:24.896
  STEP: Creating the service pods in kubernetes @ 05/11/24 13:34:24.896
  May 11 13:34:24.896: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0511 13:34:25.132947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:26.133777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:27.134201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:28.134297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:29.134906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:30.135000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:31.135751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:32.135839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:33.136848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:34.136986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:35.137320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:36.137673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/11/24 13:34:36.965
  E0511 13:34:37.138463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:38.139193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:34:38.980: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  May 11 13:34:38.980: INFO: Breadth first check of 192.168.204.169 on host 172.31.16.37...
  May 11 13:34:38.983: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.105.235:9080/dial?request=hostname&protocol=http&host=192.168.204.169&port=8083&tries=1'] Namespace:pod-network-test-8041 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:34:38.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:34:38.984: INFO: ExecWithOptions: Clientset creation
  May 11 13:34:38.984: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8041/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.105.235%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.204.169%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 11 13:34:39.039: INFO: Waiting for responses: map[]
  May 11 13:34:39.039: INFO: reached 192.168.204.169 after 0/1 tries
  May 11 13:34:39.039: INFO: Breadth first check of 192.168.55.181 on host 172.31.35.147...
  May 11 13:34:39.043: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.105.235:9080/dial?request=hostname&protocol=http&host=192.168.55.181&port=8083&tries=1'] Namespace:pod-network-test-8041 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:34:39.043: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:34:39.044: INFO: ExecWithOptions: Clientset creation
  May 11 13:34:39.044: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8041/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.105.235%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.55.181%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 11 13:34:39.092: INFO: Waiting for responses: map[]
  May 11 13:34:39.092: INFO: reached 192.168.55.181 after 0/1 tries
  May 11 13:34:39.092: INFO: Breadth first check of 192.168.105.196 on host 172.31.73.54...
  May 11 13:34:39.094: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.105.235:9080/dial?request=hostname&protocol=http&host=192.168.105.196&port=8083&tries=1'] Namespace:pod-network-test-8041 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:34:39.094: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:34:39.095: INFO: ExecWithOptions: Clientset creation
  May 11 13:34:39.095: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8041/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.105.235%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.105.196%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 11 13:34:39.138: INFO: Waiting for responses: map[]
  May 11 13:34:39.138: INFO: reached 192.168.105.196 after 0/1 tries
  May 11 13:34:39.138: INFO: Going to retry 0 out of 3 pods....
  May 11 13:34:39.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0511 13:34:39.139299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "pod-network-test-8041" for this suite. @ 05/11/24 13:34:39.141
• [14.271 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 05/11/24 13:34:39.147
  May 11 13:34:39.147: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename subpath @ 05/11/24 13:34:39.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:34:39.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:34:39.17
  STEP: Setting up data @ 05/11/24 13:34:39.172
  STEP: Creating pod pod-subpath-test-configmap-wpkh @ 05/11/24 13:34:39.181
  STEP: Creating a pod to test atomic-volume-subpath @ 05/11/24 13:34:39.181
  E0511 13:34:40.139707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:41.139785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:42.139885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:43.139981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:44.140078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:45.140277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:46.140507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:47.140607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:48.140672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:49.140764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:50.140879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:51.140953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:52.141066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:53.141158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:54.141244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:55.141335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:56.141397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:57.141492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:58.142094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:34:59.143139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:00.143553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:01.143625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:35:01.243
  May 11 13:35:01.246: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-subpath-test-configmap-wpkh container test-container-subpath-configmap-wpkh: <nil>
  STEP: delete the pod @ 05/11/24 13:35:01.261
  STEP: Deleting pod pod-subpath-test-configmap-wpkh @ 05/11/24 13:35:01.273
  May 11 13:35:01.273: INFO: Deleting pod "pod-subpath-test-configmap-wpkh" in namespace "subpath-34"
  May 11 13:35:01.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-34" for this suite. @ 05/11/24 13:35:01.28
• [22.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 05/11/24 13:35:01.286
  May 11 13:35:01.286: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename gc @ 05/11/24 13:35:01.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:35:01.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:35:01.307
  STEP: create the rc1 @ 05/11/24 13:35:01.312
  STEP: create the rc2 @ 05/11/24 13:35:01.317
  E0511 13:35:02.144278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:03.144464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:04.146776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:05.149339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:06.149503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:07.149788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/11/24 13:35:07.326
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/11/24 13:35:07.68
  STEP: wait for the rc to be deleted @ 05/11/24 13:35:07.686
  E0511 13:35:08.150421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:09.150971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:10.158145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:11.159238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:12.159785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:35:12.697: INFO: 68 pods remaining
  May 11 13:35:12.697: INFO: 68 pods has nil DeletionTimestamp
  May 11 13:35:12.697: INFO: 
  E0511 13:35:13.160316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:14.160567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:15.162091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:16.162313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:17.163153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/11/24 13:35:17.698
  W0511 13:35:17.702256      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May 11 13:35:17.702: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 11 13:35:17.702: INFO: Deleting pod "simpletest-rc-to-be-deleted-2kb7v" in namespace "gc-6487"
  May 11 13:35:17.714: INFO: Deleting pod "simpletest-rc-to-be-deleted-4f69s" in namespace "gc-6487"
  May 11 13:35:17.726: INFO: Deleting pod "simpletest-rc-to-be-deleted-4g2zm" in namespace "gc-6487"
  May 11 13:35:17.735: INFO: Deleting pod "simpletest-rc-to-be-deleted-4j4sv" in namespace "gc-6487"
  May 11 13:35:17.745: INFO: Deleting pod "simpletest-rc-to-be-deleted-4km8k" in namespace "gc-6487"
  May 11 13:35:17.757: INFO: Deleting pod "simpletest-rc-to-be-deleted-4pgzl" in namespace "gc-6487"
  May 11 13:35:17.768: INFO: Deleting pod "simpletest-rc-to-be-deleted-54mdf" in namespace "gc-6487"
  May 11 13:35:17.778: INFO: Deleting pod "simpletest-rc-to-be-deleted-57t5d" in namespace "gc-6487"
  May 11 13:35:17.788: INFO: Deleting pod "simpletest-rc-to-be-deleted-5qqj7" in namespace "gc-6487"
  May 11 13:35:17.799: INFO: Deleting pod "simpletest-rc-to-be-deleted-6kz2b" in namespace "gc-6487"
  May 11 13:35:17.811: INFO: Deleting pod "simpletest-rc-to-be-deleted-76ct2" in namespace "gc-6487"
  May 11 13:35:17.824: INFO: Deleting pod "simpletest-rc-to-be-deleted-7cfrp" in namespace "gc-6487"
  May 11 13:35:17.835: INFO: Deleting pod "simpletest-rc-to-be-deleted-7zzhl" in namespace "gc-6487"
  May 11 13:35:17.847: INFO: Deleting pod "simpletest-rc-to-be-deleted-8fd74" in namespace "gc-6487"
  May 11 13:35:17.861: INFO: Deleting pod "simpletest-rc-to-be-deleted-8ksmh" in namespace "gc-6487"
  May 11 13:35:17.871: INFO: Deleting pod "simpletest-rc-to-be-deleted-8mzxj" in namespace "gc-6487"
  May 11 13:35:17.885: INFO: Deleting pod "simpletest-rc-to-be-deleted-98hgm" in namespace "gc-6487"
  May 11 13:35:17.894: INFO: Deleting pod "simpletest-rc-to-be-deleted-9swvf" in namespace "gc-6487"
  May 11 13:35:17.905: INFO: Deleting pod "simpletest-rc-to-be-deleted-9v2xk" in namespace "gc-6487"
  May 11 13:35:17.915: INFO: Deleting pod "simpletest-rc-to-be-deleted-b82g9" in namespace "gc-6487"
  May 11 13:35:17.927: INFO: Deleting pod "simpletest-rc-to-be-deleted-bd7x9" in namespace "gc-6487"
  May 11 13:35:17.939: INFO: Deleting pod "simpletest-rc-to-be-deleted-bljs2" in namespace "gc-6487"
  May 11 13:35:17.950: INFO: Deleting pod "simpletest-rc-to-be-deleted-bmhxf" in namespace "gc-6487"
  May 11 13:35:17.964: INFO: Deleting pod "simpletest-rc-to-be-deleted-bnspq" in namespace "gc-6487"
  May 11 13:35:17.976: INFO: Deleting pod "simpletest-rc-to-be-deleted-bqg7c" in namespace "gc-6487"
  May 11 13:35:17.988: INFO: Deleting pod "simpletest-rc-to-be-deleted-br7tr" in namespace "gc-6487"
  May 11 13:35:18.003: INFO: Deleting pod "simpletest-rc-to-be-deleted-bsfwg" in namespace "gc-6487"
  May 11 13:35:18.018: INFO: Deleting pod "simpletest-rc-to-be-deleted-c5kgb" in namespace "gc-6487"
  May 11 13:35:18.029: INFO: Deleting pod "simpletest-rc-to-be-deleted-cvd4n" in namespace "gc-6487"
  May 11 13:35:18.055: INFO: Deleting pod "simpletest-rc-to-be-deleted-djhz5" in namespace "gc-6487"
  May 11 13:35:18.066: INFO: Deleting pod "simpletest-rc-to-be-deleted-dn9jt" in namespace "gc-6487"
  May 11 13:35:18.079: INFO: Deleting pod "simpletest-rc-to-be-deleted-dnrdb" in namespace "gc-6487"
  May 11 13:35:18.088: INFO: Deleting pod "simpletest-rc-to-be-deleted-dwfwb" in namespace "gc-6487"
  May 11 13:35:18.100: INFO: Deleting pod "simpletest-rc-to-be-deleted-f27b6" in namespace "gc-6487"
  May 11 13:35:18.111: INFO: Deleting pod "simpletest-rc-to-be-deleted-f6kln" in namespace "gc-6487"
  May 11 13:35:18.124: INFO: Deleting pod "simpletest-rc-to-be-deleted-glbwd" in namespace "gc-6487"
  May 11 13:35:18.136: INFO: Deleting pod "simpletest-rc-to-be-deleted-gv9d5" in namespace "gc-6487"
  May 11 13:35:18.147: INFO: Deleting pod "simpletest-rc-to-be-deleted-hdlnb" in namespace "gc-6487"
  E0511 13:35:18.170275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:35:18.170: INFO: Deleting pod "simpletest-rc-to-be-deleted-hn66l" in namespace "gc-6487"
  May 11 13:35:18.182: INFO: Deleting pod "simpletest-rc-to-be-deleted-hpxq5" in namespace "gc-6487"
  May 11 13:35:18.194: INFO: Deleting pod "simpletest-rc-to-be-deleted-htbpg" in namespace "gc-6487"
  May 11 13:35:18.210: INFO: Deleting pod "simpletest-rc-to-be-deleted-hwmk8" in namespace "gc-6487"
  May 11 13:35:18.223: INFO: Deleting pod "simpletest-rc-to-be-deleted-j29b9" in namespace "gc-6487"
  May 11 13:35:18.234: INFO: Deleting pod "simpletest-rc-to-be-deleted-j2qpm" in namespace "gc-6487"
  May 11 13:35:18.249: INFO: Deleting pod "simpletest-rc-to-be-deleted-j7znj" in namespace "gc-6487"
  May 11 13:35:18.262: INFO: Deleting pod "simpletest-rc-to-be-deleted-jqp4s" in namespace "gc-6487"
  May 11 13:35:18.275: INFO: Deleting pod "simpletest-rc-to-be-deleted-jt7n7" in namespace "gc-6487"
  May 11 13:35:18.291: INFO: Deleting pod "simpletest-rc-to-be-deleted-jz2m2" in namespace "gc-6487"
  May 11 13:35:18.303: INFO: Deleting pod "simpletest-rc-to-be-deleted-k7q6p" in namespace "gc-6487"
  May 11 13:35:18.326: INFO: Deleting pod "simpletest-rc-to-be-deleted-kjqfd" in namespace "gc-6487"
  May 11 13:35:18.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6487" for this suite. @ 05/11/24 13:35:18.347
• [17.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 05/11/24 13:35:18.36
  May 11 13:35:18.360: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename replication-controller @ 05/11/24 13:35:18.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:35:18.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:35:18.384
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/11/24 13:35:18.389
  E0511 13:35:19.178380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:20.178482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 05/11/24 13:35:20.412
  STEP: Then the orphan pod is adopted @ 05/11/24 13:35:20.417
  E0511 13:35:21.179174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:35:21.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3371" for this suite. @ 05/11/24 13:35:21.429
• [3.075 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 05/11/24 13:35:21.435
  May 11 13:35:21.435: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename resourcequota @ 05/11/24 13:35:21.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:35:21.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:35:21.455
  STEP: Discovering how many secrets are in namespace by default @ 05/11/24 13:35:21.457
  E0511 13:35:22.179522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:23.179616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:24.180510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:25.180571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:26.181538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/11/24 13:35:26.462
  E0511 13:35:27.182433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:28.182537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:29.183341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:30.183857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:31.183938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/11/24 13:35:31.467
  STEP: Ensuring resource quota status is calculated @ 05/11/24 13:35:31.474
  E0511 13:35:32.184031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:33.184116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 05/11/24 13:35:33.479
  STEP: Ensuring resource quota status captures secret creation @ 05/11/24 13:35:33.49
  E0511 13:35:34.184200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:35.184318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 05/11/24 13:35:35.497
  STEP: Ensuring resource quota status released usage @ 05/11/24 13:35:35.503
  E0511 13:35:36.185120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:37.185195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:35:37.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4907" for this suite. @ 05/11/24 13:35:37.511
• [16.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 05/11/24 13:35:37.518
  May 11 13:35:37.518: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pods @ 05/11/24 13:35:37.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:35:37.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:35:37.542
  STEP: Create set of pods @ 05/11/24 13:35:37.544
  May 11 13:35:37.551: INFO: created test-pod-1
  May 11 13:35:37.555: INFO: created test-pod-2
  May 11 13:35:37.566: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/11/24 13:35:37.566
  E0511 13:35:38.185333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:39.185538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 05/11/24 13:35:39.61
  May 11 13:35:39.613: INFO: Pod quantity 3 is different from expected quantity 0
  E0511 13:35:40.186304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:35:40.615: INFO: Pod quantity 3 is different from expected quantity 0
  E0511 13:35:41.187147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:35:41.616: INFO: Pod quantity 2 is different from expected quantity 0
  E0511 13:35:42.187505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:35:42.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2025" for this suite. @ 05/11/24 13:35:42.617
• [5.105 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 05/11/24 13:35:42.622
  May 11 13:35:42.622: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename job @ 05/11/24 13:35:42.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:35:42.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:35:42.649
  STEP: Creating a job @ 05/11/24 13:35:42.651
  STEP: Ensuring active pods == parallelism @ 05/11/24 13:35:42.656
  E0511 13:35:43.187943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:44.188028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 05/11/24 13:35:44.661
  STEP: deleting Job.batch foo in namespace job-2015, will wait for the garbage collector to delete the pods @ 05/11/24 13:35:44.661
  May 11 13:35:44.720: INFO: Deleting Job.batch foo took: 6.492542ms
  May 11 13:35:44.821: INFO: Terminating Job.batch foo pods took: 100.714599ms
  E0511 13:35:45.188851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:46.189356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 05/11/24 13:35:46.321
  May 11 13:35:46.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2015" for this suite. @ 05/11/24 13:35:46.327
• [3.709 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 05/11/24 13:35:46.332
  May 11 13:35:46.332: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename resourcequota @ 05/11/24 13:35:46.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:35:46.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:35:46.351
  STEP: Creating a ResourceQuota @ 05/11/24 13:35:46.352
  STEP: Getting a ResourceQuota @ 05/11/24 13:35:46.357
  STEP: Updating a ResourceQuota @ 05/11/24 13:35:46.361
  STEP: Verifying a ResourceQuota was modified @ 05/11/24 13:35:46.365
  STEP: Deleting a ResourceQuota @ 05/11/24 13:35:46.368
  STEP: Verifying the deleted ResourceQuota @ 05/11/24 13:35:46.374
  May 11 13:35:46.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1671" for this suite. @ 05/11/24 13:35:46.38
• [0.054 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 05/11/24 13:35:46.386
  May 11 13:35:46.386: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/11/24 13:35:46.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:35:46.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:35:46.404
  May 11 13:35:46.406: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 13:35:47.189433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/11/24 13:35:47.619
  May 11 13:35:47.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4159 --namespace=crd-publish-openapi-4159 create -f -'
  E0511 13:35:48.190168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:49.191143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:35:49.681: INFO: stderr: ""
  May 11 13:35:49.681: INFO: stdout: "e2e-test-crd-publish-openapi-2909-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  May 11 13:35:49.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4159 --namespace=crd-publish-openapi-4159 delete e2e-test-crd-publish-openapi-2909-crds test-foo'
  May 11 13:35:49.729: INFO: stderr: ""
  May 11 13:35:49.729: INFO: stdout: "e2e-test-crd-publish-openapi-2909-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  May 11 13:35:49.729: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4159 --namespace=crd-publish-openapi-4159 apply -f -'
  May 11 13:35:49.783: INFO: stderr: ""
  May 11 13:35:49.783: INFO: stdout: "e2e-test-crd-publish-openapi-2909-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  May 11 13:35:49.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4159 --namespace=crd-publish-openapi-4159 delete e2e-test-crd-publish-openapi-2909-crds test-foo'
  May 11 13:35:49.831: INFO: stderr: ""
  May 11 13:35:49.831: INFO: stdout: "e2e-test-crd-publish-openapi-2909-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/11/24 13:35:49.831
  May 11 13:35:49.831: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4159 --namespace=crd-publish-openapi-4159 create -f -'
  May 11 13:35:49.874: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/11/24 13:35:49.874
  May 11 13:35:49.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4159 --namespace=crd-publish-openapi-4159 create -f -'
  May 11 13:35:49.918: INFO: rc: 1
  May 11 13:35:49.918: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4159 --namespace=crd-publish-openapi-4159 apply -f -'
  May 11 13:35:49.965: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/11/24 13:35:49.965
  May 11 13:35:49.965: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4159 --namespace=crd-publish-openapi-4159 create -f -'
  May 11 13:35:50.005: INFO: rc: 1
  May 11 13:35:50.005: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4159 --namespace=crd-publish-openapi-4159 apply -f -'
  May 11 13:35:50.050: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/11/24 13:35:50.05
  May 11 13:35:50.050: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4159 explain e2e-test-crd-publish-openapi-2909-crds'
  May 11 13:35:50.087: INFO: stderr: ""
  May 11 13:35:50.087: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2909-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/11/24 13:35:50.088
  May 11 13:35:50.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4159 explain e2e-test-crd-publish-openapi-2909-crds.metadata'
  May 11 13:35:50.126: INFO: stderr: ""
  May 11 13:35:50.126: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2909-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  May 11 13:35:50.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4159 explain e2e-test-crd-publish-openapi-2909-crds.spec'
  May 11 13:35:50.163: INFO: stderr: ""
  May 11 13:35:50.163: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2909-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  May 11 13:35:50.163: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4159 explain e2e-test-crd-publish-openapi-2909-crds.spec.bars'
  E0511 13:35:50.192214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:35:50.200: INFO: stderr: ""
  May 11 13:35:50.200: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2909-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/11/24 13:35:50.2
  May 11 13:35:50.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-4159 explain e2e-test-crd-publish-openapi-2909-crds.spec.bars2'
  May 11 13:35:50.237: INFO: rc: 1
  E0511 13:35:51.192332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:35:51.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4159" for this suite. @ 05/11/24 13:35:51.484
• [5.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 05/11/24 13:35:51.492
  May 11 13:35:51.492: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename sched-pred @ 05/11/24 13:35:51.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:35:51.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:35:51.512
  May 11 13:35:51.514: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 11 13:35:51.521: INFO: Waiting for terminating namespaces to be deleted...
  May 11 13:35:51.524: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-16-37 before test
  May 11 13:35:51.530: INFO: nginx-ingress-controller-kubernetes-worker-v466k from ingress-nginx-kubernetes-worker started at 2024-05-11 12:06:42 +0000 UTC (1 container statuses recorded)
  May 11 13:35:51.530: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 11 13:35:51.530: INFO: calico-node-t46qx from kube-system started at 2024-05-11 12:06:15 +0000 UTC (1 container statuses recorded)
  May 11 13:35:51.530: INFO: 	Container calico-node ready: true, restart count 0
  May 11 13:35:51.530: INFO: metrics-server-v0.6.3-69d7fbfdf8-6l49v from kube-system started at 2024-05-11 13:28:57 +0000 UTC (2 container statuses recorded)
  May 11 13:35:51.530: INFO: 	Container metrics-server ready: true, restart count 0
  May 11 13:35:51.530: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  May 11 13:35:51.530: INFO: sonobuoy from sonobuoy started at 2024-05-11 12:13:03 +0000 UTC (1 container statuses recorded)
  May 11 13:35:51.530: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May 11 13:35:51.530: INFO: sonobuoy-e2e-job-7e280b976dab4535 from sonobuoy started at 2024-05-11 12:13:06 +0000 UTC (2 container statuses recorded)
  May 11 13:35:51.530: INFO: 	Container e2e ready: true, restart count 0
  May 11 13:35:51.530: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 11 13:35:51.530: INFO: sonobuoy-systemd-logs-daemon-set-49c1eec6cf1a48c7-8n44k from sonobuoy started at 2024-05-11 12:13:06 +0000 UTC (2 container statuses recorded)
  May 11 13:35:51.530: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 11 13:35:51.530: INFO: 	Container systemd-logs ready: true, restart count 0
  May 11 13:35:51.530: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-35-147 before test
  May 11 13:35:51.534: INFO: nginx-ingress-controller-kubernetes-worker-68vzz from ingress-nginx-kubernetes-worker started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 13:35:51.534: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 11 13:35:51.534: INFO: calico-node-v7fn9 from kube-system started at 2024-05-11 12:07:44 +0000 UTC (1 container statuses recorded)
  May 11 13:35:51.534: INFO: 	Container calico-node ready: true, restart count 0
  May 11 13:35:51.534: INFO: coredns-bddfd76d7-pk78z from kube-system started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 13:35:51.534: INFO: 	Container coredns ready: true, restart count 0
  May 11 13:35:51.534: INFO: kube-state-metrics-6f48cdd76-mpr6f from kube-system started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 13:35:51.534: INFO: 	Container kube-state-metrics ready: true, restart count 0
  May 11 13:35:51.534: INFO: kubernetes-dashboard-7b899cb9d9-j9w54 from kubernetes-dashboard started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 13:35:51.534: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  May 11 13:35:51.534: INFO: sonobuoy-systemd-logs-daemon-set-49c1eec6cf1a48c7-8xp5v from sonobuoy started at 2024-05-11 12:13:06 +0000 UTC (2 container statuses recorded)
  May 11 13:35:51.534: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 11 13:35:51.534: INFO: 	Container systemd-logs ready: true, restart count 0
  May 11 13:35:51.534: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-73-54 before test
  May 11 13:35:51.539: INFO: nginx-ingress-controller-kubernetes-worker-drx5f from ingress-nginx-kubernetes-worker started at 2024-05-11 13:29:08 +0000 UTC (1 container statuses recorded)
  May 11 13:35:51.539: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 11 13:35:51.539: INFO: calico-node-l6qmg from kube-system started at 2024-05-11 12:06:15 +0000 UTC (1 container statuses recorded)
  May 11 13:35:51.539: INFO: 	Container calico-node ready: true, restart count 0
  May 11 13:35:51.539: INFO: dashboard-metrics-scraper-5dd7cb5fc-9bbhj from kubernetes-dashboard started at 2024-05-11 13:28:57 +0000 UTC (1 container statuses recorded)
  May 11 13:35:51.539: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  May 11 13:35:51.539: INFO: sonobuoy-systemd-logs-daemon-set-49c1eec6cf1a48c7-vdbk7 from sonobuoy started at 2024-05-11 12:13:06 +0000 UTC (2 container statuses recorded)
  May 11 13:35:51.539: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 11 13:35:51.539: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/11/24 13:35:51.54
  E0511 13:35:52.192470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:53.192926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/11/24 13:35:53.559
  STEP: Trying to apply a random label on the found node. @ 05/11/24 13:35:53.57
  STEP: verifying the node has the label kubernetes.io/e2e-c2c2fed6-593e-47ab-84d1-4f40bebedc42 42 @ 05/11/24 13:35:53.58
  STEP: Trying to relaunch the pod, now with labels. @ 05/11/24 13:35:53.583
  E0511 13:35:54.193467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:55.193558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-c2c2fed6-593e-47ab-84d1-4f40bebedc42 off the node ip-172-31-73-54 @ 05/11/24 13:35:55.605
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-c2c2fed6-593e-47ab-84d1-4f40bebedc42 @ 05/11/24 13:35:55.617
  May 11 13:35:55.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-266" for this suite. @ 05/11/24 13:35:55.624
• [4.137 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 05/11/24 13:35:55.63
  May 11 13:35:55.630: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 13:35:55.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:35:55.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:35:55.647
  STEP: creating service endpoint-test2 in namespace services-2506 @ 05/11/24 13:35:55.649
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2506 to expose endpoints map[] @ 05/11/24 13:35:55.662
  May 11 13:35:55.670: INFO: successfully validated that service endpoint-test2 in namespace services-2506 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2506 @ 05/11/24 13:35:55.67
  E0511 13:35:56.194464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:57.194557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2506 to expose endpoints map[pod1:[80]] @ 05/11/24 13:35:57.695
  May 11 13:35:57.705: INFO: successfully validated that service endpoint-test2 in namespace services-2506 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/11/24 13:35:57.705
  May 11 13:35:57.705: INFO: Creating new exec pod
  E0511 13:35:58.194599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:35:59.195521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:00.196395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:36:00.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2506 exec execpodjjrlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May 11 13:36:00.812: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May 11 13:36:00.812: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 13:36:00.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2506 exec execpodjjrlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80'
  May 11 13:36:00.901: INFO: stderr: "+ nc -v -t -w 2 10.152.183.40 80\n+ echo hostName\nConnection to 10.152.183.40 80 port [tcp/http] succeeded!\n"
  May 11 13:36:00.901: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-2506 @ 05/11/24 13:36:00.901
  E0511 13:36:01.197146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:02.197286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2506 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/11/24 13:36:02.92
  May 11 13:36:02.930: INFO: successfully validated that service endpoint-test2 in namespace services-2506 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/11/24 13:36:02.93
  E0511 13:36:03.198307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:36:03.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2506 exec execpodjjrlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May 11 13:36:04.023: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May 11 13:36:04.023: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 13:36:04.023: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2506 exec execpodjjrlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80'
  May 11 13:36:04.104: INFO: stderr: "+ nc -v -t -w 2 10.152.183.40 80\nConnection to 10.152.183.40 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  May 11 13:36:04.104: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2506 @ 05/11/24 13:36:04.104
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2506 to expose endpoints map[pod2:[80]] @ 05/11/24 13:36:04.124
  May 11 13:36:04.134: INFO: successfully validated that service endpoint-test2 in namespace services-2506 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/11/24 13:36:04.134
  E0511 13:36:04.199339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:36:05.135: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2506 exec execpodjjrlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0511 13:36:05.199584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:36:05.220: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May 11 13:36:05.220: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 11 13:36:05.220: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-2506 exec execpodjjrlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80'
  May 11 13:36:05.308: INFO: stderr: "+ nc -v -t -w 2 10.152.183.40 80\n+ echo hostName\nConnection to 10.152.183.40 80 port [tcp/http] succeeded!\n"
  May 11 13:36:05.308: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-2506 @ 05/11/24 13:36:05.308
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2506 to expose endpoints map[] @ 05/11/24 13:36:05.32
  May 11 13:36:05.330: INFO: successfully validated that service endpoint-test2 in namespace services-2506 exposes endpoints map[]
  May 11 13:36:05.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2506" for this suite. @ 05/11/24 13:36:05.353
• [9.729 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 05/11/24 13:36:05.359
  May 11 13:36:05.359: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename svc-latency @ 05/11/24 13:36:05.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:36:05.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:36:05.377
  May 11 13:36:05.379: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1461 @ 05/11/24 13:36:05.38
  I0511 13:36:05.386273      19 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1461, replica count: 1
  E0511 13:36:06.200402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0511 13:36:06.437440      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 11 13:36:06.551: INFO: Created: latency-svc-nrlb9
  May 11 13:36:06.557: INFO: Got endpoints: latency-svc-nrlb9 [19.252843ms]
  May 11 13:36:06.568: INFO: Created: latency-svc-m84qj
  May 11 13:36:06.575: INFO: Got endpoints: latency-svc-m84qj [16.962915ms]
  May 11 13:36:06.578: INFO: Created: latency-svc-jzxz5
  May 11 13:36:06.582: INFO: Got endpoints: latency-svc-jzxz5 [24.12923ms]
  May 11 13:36:06.589: INFO: Created: latency-svc-tcbxf
  May 11 13:36:06.592: INFO: Got endpoints: latency-svc-tcbxf [34.406367ms]
  May 11 13:36:06.596: INFO: Created: latency-svc-j9tkl
  May 11 13:36:06.601: INFO: Got endpoints: latency-svc-j9tkl [43.378315ms]
  May 11 13:36:06.607: INFO: Created: latency-svc-4jltr
  May 11 13:36:06.609: INFO: Got endpoints: latency-svc-4jltr [51.564252ms]
  May 11 13:36:06.616: INFO: Created: latency-svc-6p6wr
  May 11 13:36:06.620: INFO: Created: latency-svc-cqt6t
  May 11 13:36:06.621: INFO: Got endpoints: latency-svc-6p6wr [63.85681ms]
  May 11 13:36:06.625: INFO: Got endpoints: latency-svc-cqt6t [67.287802ms]
  May 11 13:36:06.629: INFO: Created: latency-svc-ljn4r
  May 11 13:36:06.633: INFO: Got endpoints: latency-svc-ljn4r [74.970434ms]
  May 11 13:36:06.641: INFO: Created: latency-svc-4cffv
  May 11 13:36:06.646: INFO: Got endpoints: latency-svc-4cffv [87.757698ms]
  May 11 13:36:06.647: INFO: Created: latency-svc-5x5zs
  May 11 13:36:06.654: INFO: Got endpoints: latency-svc-5x5zs [96.380045ms]
  May 11 13:36:06.658: INFO: Created: latency-svc-qjqkd
  May 11 13:36:06.660: INFO: Got endpoints: latency-svc-qjqkd [101.952602ms]
  May 11 13:36:06.668: INFO: Created: latency-svc-ktxzp
  May 11 13:36:06.673: INFO: Got endpoints: latency-svc-ktxzp [115.082736ms]
  May 11 13:36:06.677: INFO: Created: latency-svc-xqr9j
  May 11 13:36:06.681: INFO: Got endpoints: latency-svc-xqr9j [123.465611ms]
  May 11 13:36:06.686: INFO: Created: latency-svc-fg8ws
  May 11 13:36:06.692: INFO: Got endpoints: latency-svc-fg8ws [134.432247ms]
  May 11 13:36:06.699: INFO: Created: latency-svc-85kj5
  May 11 13:36:06.701: INFO: Got endpoints: latency-svc-85kj5 [143.355633ms]
  May 11 13:36:06.706: INFO: Created: latency-svc-wdjm8
  May 11 13:36:06.708: INFO: Got endpoints: latency-svc-wdjm8 [133.305225ms]
  May 11 13:36:06.712: INFO: Created: latency-svc-hnznz
  May 11 13:36:06.718: INFO: Got endpoints: latency-svc-hnznz [136.537288ms]
  May 11 13:36:06.726: INFO: Created: latency-svc-c5l5n
  May 11 13:36:06.731: INFO: Created: latency-svc-gp8bw
  May 11 13:36:06.733: INFO: Got endpoints: latency-svc-c5l5n [140.422398ms]
  May 11 13:36:06.738: INFO: Got endpoints: latency-svc-gp8bw [136.760428ms]
  May 11 13:36:06.743: INFO: Created: latency-svc-jgrwc
  May 11 13:36:06.745: INFO: Got endpoints: latency-svc-jgrwc [136.019025ms]
  May 11 13:36:06.753: INFO: Created: latency-svc-z7qxz
  May 11 13:36:06.756: INFO: Created: latency-svc-572cd
  May 11 13:36:06.761: INFO: Got endpoints: latency-svc-z7qxz [139.3017ms]
  May 11 13:36:06.762: INFO: Got endpoints: latency-svc-572cd [137.636897ms]
  May 11 13:36:06.767: INFO: Created: latency-svc-gbqpz
  May 11 13:36:06.772: INFO: Got endpoints: latency-svc-gbqpz [139.378864ms]
  May 11 13:36:06.775: INFO: Created: latency-svc-t8m2b
  May 11 13:36:06.779: INFO: Created: latency-svc-5n5nt
  May 11 13:36:06.780: INFO: Got endpoints: latency-svc-t8m2b [134.190228ms]
  May 11 13:36:06.788: INFO: Got endpoints: latency-svc-5n5nt [133.250566ms]
  May 11 13:36:06.856: INFO: Created: latency-svc-s9m86
  May 11 13:36:06.861: INFO: Created: latency-svc-5fnlv
  May 11 13:36:06.862: INFO: Created: latency-svc-pzh7s
  May 11 13:36:06.862: INFO: Created: latency-svc-5r58w
  May 11 13:36:06.862: INFO: Created: latency-svc-hdcvm
  May 11 13:36:06.862: INFO: Created: latency-svc-b5mtz
  May 11 13:36:06.861: INFO: Created: latency-svc-8tzbr
  May 11 13:36:06.862: INFO: Created: latency-svc-g45n9
  May 11 13:36:06.866: INFO: Created: latency-svc-pg99c
  May 11 13:36:06.866: INFO: Created: latency-svc-d6mlz
  May 11 13:36:06.866: INFO: Created: latency-svc-mpshk
  May 11 13:36:06.866: INFO: Created: latency-svc-d9dbl
  May 11 13:36:06.866: INFO: Created: latency-svc-rjp7g
  May 11 13:36:06.868: INFO: Created: latency-svc-4bsqp
  May 11 13:36:06.868: INFO: Created: latency-svc-dqjp8
  May 11 13:36:06.871: INFO: Got endpoints: latency-svc-s9m86 [132.617666ms]
  May 11 13:36:06.871: INFO: Got endpoints: latency-svc-8tzbr [178.350341ms]
  May 11 13:36:06.876: INFO: Got endpoints: latency-svc-5r58w [113.161512ms]
  May 11 13:36:06.876: INFO: Got endpoints: latency-svc-d9dbl [103.673648ms]
  May 11 13:36:06.885: INFO: Got endpoints: latency-svc-pg99c [152.124669ms]
  May 11 13:36:06.887: INFO: Got endpoints: latency-svc-b5mtz [99.230462ms]
  May 11 13:36:06.888: INFO: Got endpoints: latency-svc-pzh7s [206.791837ms]
  May 11 13:36:06.899: INFO: Got endpoints: latency-svc-g45n9 [197.744556ms]
  May 11 13:36:06.899: INFO: Got endpoints: latency-svc-hdcvm [239.358703ms]
  May 11 13:36:06.906: INFO: Got endpoints: latency-svc-5fnlv [126.202605ms]
  May 11 13:36:06.906: INFO: Created: latency-svc-tm4wh
  May 11 13:36:06.910: INFO: Got endpoints: latency-svc-d6mlz [191.16229ms]
  May 11 13:36:06.916: INFO: Created: latency-svc-4r9vm
  May 11 13:36:06.923: INFO: Created: latency-svc-k2m6m
  May 11 13:36:06.928: INFO: Created: latency-svc-7wbpc
  May 11 13:36:06.936: INFO: Created: latency-svc-j4ftg
  May 11 13:36:06.939: INFO: Created: latency-svc-fsgcj
  May 11 13:36:06.946: INFO: Created: latency-svc-27hg4
  May 11 13:36:06.956: INFO: Created: latency-svc-ltcdp
  May 11 13:36:06.959: INFO: Created: latency-svc-bnklr
  May 11 13:36:06.964: INFO: Got endpoints: latency-svc-mpshk [290.734138ms]
  May 11 13:36:06.969: INFO: Created: latency-svc-jq9gq
  May 11 13:36:06.976: INFO: Created: latency-svc-z6xmc
  May 11 13:36:06.981: INFO: Created: latency-svc-txjgp
  May 11 13:36:07.005: INFO: Got endpoints: latency-svc-dqjp8 [259.95186ms]
  May 11 13:36:07.017: INFO: Created: latency-svc-8wxbr
  May 11 13:36:07.055: INFO: Got endpoints: latency-svc-4bsqp [294.011637ms]
  May 11 13:36:07.067: INFO: Created: latency-svc-mwrsh
  May 11 13:36:07.109: INFO: Got endpoints: latency-svc-rjp7g [400.442452ms]
  May 11 13:36:07.117: INFO: Created: latency-svc-dz2gk
  May 11 13:36:07.157: INFO: Got endpoints: latency-svc-tm4wh [286.229927ms]
  May 11 13:36:07.168: INFO: Created: latency-svc-rplm9
  E0511 13:36:07.200436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:36:07.205: INFO: Got endpoints: latency-svc-4r9vm [334.22376ms]
  May 11 13:36:07.219: INFO: Created: latency-svc-2t45l
  May 11 13:36:07.258: INFO: Got endpoints: latency-svc-k2m6m [381.581653ms]
  May 11 13:36:07.267: INFO: Created: latency-svc-fb5lt
  May 11 13:36:07.306: INFO: Got endpoints: latency-svc-7wbpc [429.892904ms]
  May 11 13:36:07.317: INFO: Created: latency-svc-p778l
  May 11 13:36:07.358: INFO: Got endpoints: latency-svc-j4ftg [472.583973ms]
  May 11 13:36:07.370: INFO: Created: latency-svc-b6phc
  May 11 13:36:07.408: INFO: Got endpoints: latency-svc-fsgcj [520.480745ms]
  May 11 13:36:07.416: INFO: Created: latency-svc-zs25z
  May 11 13:36:07.457: INFO: Got endpoints: latency-svc-27hg4 [568.292921ms]
  May 11 13:36:07.469: INFO: Created: latency-svc-6ssvl
  May 11 13:36:07.507: INFO: Got endpoints: latency-svc-bnklr [607.393336ms]
  May 11 13:36:07.518: INFO: Created: latency-svc-vv658
  May 11 13:36:07.557: INFO: Got endpoints: latency-svc-ltcdp [657.26041ms]
  May 11 13:36:07.565: INFO: Created: latency-svc-2slw7
  May 11 13:36:07.607: INFO: Got endpoints: latency-svc-jq9gq [700.429338ms]
  May 11 13:36:07.618: INFO: Created: latency-svc-cl4td
  May 11 13:36:07.659: INFO: Got endpoints: latency-svc-z6xmc [749.138681ms]
  May 11 13:36:07.672: INFO: Created: latency-svc-dq7q4
  May 11 13:36:07.705: INFO: Got endpoints: latency-svc-txjgp [741.19953ms]
  May 11 13:36:07.714: INFO: Created: latency-svc-r4h9s
  May 11 13:36:07.756: INFO: Got endpoints: latency-svc-8wxbr [750.478817ms]
  May 11 13:36:07.768: INFO: Created: latency-svc-vqwln
  May 11 13:36:07.807: INFO: Got endpoints: latency-svc-mwrsh [751.730067ms]
  May 11 13:36:07.819: INFO: Created: latency-svc-nbjwd
  May 11 13:36:07.858: INFO: Got endpoints: latency-svc-dz2gk [749.611281ms]
  May 11 13:36:07.867: INFO: Created: latency-svc-gnr2z
  May 11 13:36:07.907: INFO: Got endpoints: latency-svc-rplm9 [749.661075ms]
  May 11 13:36:07.919: INFO: Created: latency-svc-lms28
  May 11 13:36:07.956: INFO: Got endpoints: latency-svc-2t45l [751.137743ms]
  May 11 13:36:07.968: INFO: Created: latency-svc-m544p
  May 11 13:36:08.007: INFO: Got endpoints: latency-svc-fb5lt [749.455915ms]
  May 11 13:36:08.017: INFO: Created: latency-svc-khqsk
  May 11 13:36:08.057: INFO: Got endpoints: latency-svc-p778l [750.881294ms]
  May 11 13:36:08.069: INFO: Created: latency-svc-g2m84
  May 11 13:36:08.107: INFO: Got endpoints: latency-svc-b6phc [748.721788ms]
  May 11 13:36:08.119: INFO: Created: latency-svc-lqs5p
  May 11 13:36:08.160: INFO: Got endpoints: latency-svc-zs25z [752.370679ms]
  May 11 13:36:08.171: INFO: Created: latency-svc-4gr9m
  E0511 13:36:08.201228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:36:08.209: INFO: Got endpoints: latency-svc-6ssvl [752.025453ms]
  May 11 13:36:08.220: INFO: Created: latency-svc-v8l72
  May 11 13:36:08.255: INFO: Got endpoints: latency-svc-vv658 [748.557405ms]
  May 11 13:36:08.268: INFO: Created: latency-svc-vdcvl
  May 11 13:36:08.305: INFO: Got endpoints: latency-svc-2slw7 [747.639691ms]
  May 11 13:36:08.315: INFO: Created: latency-svc-ccp9m
  May 11 13:36:08.358: INFO: Got endpoints: latency-svc-cl4td [750.693108ms]
  May 11 13:36:08.369: INFO: Created: latency-svc-5r5dh
  May 11 13:36:08.407: INFO: Got endpoints: latency-svc-dq7q4 [747.896689ms]
  May 11 13:36:08.421: INFO: Created: latency-svc-z2b2v
  May 11 13:36:08.457: INFO: Got endpoints: latency-svc-r4h9s [752.015592ms]
  May 11 13:36:08.468: INFO: Created: latency-svc-r6flc
  May 11 13:36:08.506: INFO: Got endpoints: latency-svc-vqwln [749.425354ms]
  May 11 13:36:08.518: INFO: Created: latency-svc-5lbgd
  May 11 13:36:08.556: INFO: Got endpoints: latency-svc-nbjwd [749.463096ms]
  May 11 13:36:08.569: INFO: Created: latency-svc-crcv8
  May 11 13:36:08.607: INFO: Got endpoints: latency-svc-gnr2z [748.975562ms]
  May 11 13:36:08.615: INFO: Created: latency-svc-9hjjl
  May 11 13:36:08.657: INFO: Got endpoints: latency-svc-lms28 [750.268444ms]
  May 11 13:36:08.668: INFO: Created: latency-svc-52kh8
  May 11 13:36:08.706: INFO: Got endpoints: latency-svc-m544p [749.169809ms]
  May 11 13:36:08.719: INFO: Created: latency-svc-2rr4z
  May 11 13:36:08.757: INFO: Got endpoints: latency-svc-khqsk [749.575609ms]
  May 11 13:36:08.766: INFO: Created: latency-svc-rpzsv
  May 11 13:36:08.807: INFO: Got endpoints: latency-svc-g2m84 [750.173196ms]
  May 11 13:36:08.818: INFO: Created: latency-svc-q24dn
  May 11 13:36:08.857: INFO: Got endpoints: latency-svc-lqs5p [749.7341ms]
  May 11 13:36:08.869: INFO: Created: latency-svc-mq5xx
  May 11 13:36:08.909: INFO: Got endpoints: latency-svc-4gr9m [748.728801ms]
  May 11 13:36:08.919: INFO: Created: latency-svc-v8j7f
  May 11 13:36:08.956: INFO: Got endpoints: latency-svc-v8l72 [747.351211ms]
  May 11 13:36:08.968: INFO: Created: latency-svc-55884
  May 11 13:36:09.008: INFO: Got endpoints: latency-svc-vdcvl [752.350762ms]
  May 11 13:36:09.021: INFO: Created: latency-svc-8pgl4
  May 11 13:36:09.057: INFO: Got endpoints: latency-svc-ccp9m [751.871283ms]
  May 11 13:36:09.066: INFO: Created: latency-svc-lhxtl
  May 11 13:36:09.108: INFO: Got endpoints: latency-svc-5r5dh [749.925399ms]
  May 11 13:36:09.119: INFO: Created: latency-svc-z8dj9
  May 11 13:36:09.158: INFO: Got endpoints: latency-svc-z2b2v [750.703575ms]
  May 11 13:36:09.173: INFO: Created: latency-svc-7cqz6
  E0511 13:36:09.201613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:36:09.206: INFO: Got endpoints: latency-svc-r6flc [748.438203ms]
  May 11 13:36:09.215: INFO: Created: latency-svc-g9kxw
  May 11 13:36:09.256: INFO: Got endpoints: latency-svc-5lbgd [750.230257ms]
  May 11 13:36:09.267: INFO: Created: latency-svc-5sqlg
  May 11 13:36:09.308: INFO: Got endpoints: latency-svc-crcv8 [751.866039ms]
  May 11 13:36:09.320: INFO: Created: latency-svc-9hvnn
  May 11 13:36:09.356: INFO: Got endpoints: latency-svc-9hjjl [749.080095ms]
  May 11 13:36:09.365: INFO: Created: latency-svc-n9s2x
  May 11 13:36:09.405: INFO: Got endpoints: latency-svc-52kh8 [747.53373ms]
  May 11 13:36:09.416: INFO: Created: latency-svc-m2tn4
  May 11 13:36:09.456: INFO: Got endpoints: latency-svc-2rr4z [749.739203ms]
  May 11 13:36:09.469: INFO: Created: latency-svc-t882w
  May 11 13:36:09.507: INFO: Got endpoints: latency-svc-rpzsv [749.550335ms]
  May 11 13:36:09.515: INFO: Created: latency-svc-7b5tp
  May 11 13:36:09.559: INFO: Got endpoints: latency-svc-q24dn [751.524386ms]
  May 11 13:36:09.569: INFO: Created: latency-svc-nh24r
  May 11 13:36:09.608: INFO: Got endpoints: latency-svc-mq5xx [751.44874ms]
  May 11 13:36:09.620: INFO: Created: latency-svc-gqr9k
  May 11 13:36:09.657: INFO: Got endpoints: latency-svc-v8j7f [748.236377ms]
  May 11 13:36:09.667: INFO: Created: latency-svc-mkj94
  May 11 13:36:09.706: INFO: Got endpoints: latency-svc-55884 [749.458193ms]
  May 11 13:36:09.719: INFO: Created: latency-svc-2db6k
  May 11 13:36:09.756: INFO: Got endpoints: latency-svc-8pgl4 [748.20028ms]
  May 11 13:36:09.767: INFO: Created: latency-svc-vv2pq
  May 11 13:36:09.808: INFO: Got endpoints: latency-svc-lhxtl [751.778375ms]
  May 11 13:36:09.818: INFO: Created: latency-svc-kg7bt
  May 11 13:36:09.859: INFO: Got endpoints: latency-svc-z8dj9 [751.124808ms]
  May 11 13:36:09.869: INFO: Created: latency-svc-ktqcd
  May 11 13:36:09.907: INFO: Got endpoints: latency-svc-7cqz6 [749.037303ms]
  May 11 13:36:09.920: INFO: Created: latency-svc-zqnl6
  May 11 13:36:09.955: INFO: Got endpoints: latency-svc-g9kxw [749.159261ms]
  May 11 13:36:09.964: INFO: Created: latency-svc-xqzvc
  May 11 13:36:10.006: INFO: Got endpoints: latency-svc-5sqlg [749.274428ms]
  May 11 13:36:10.017: INFO: Created: latency-svc-m8zxb
  May 11 13:36:10.059: INFO: Got endpoints: latency-svc-9hvnn [750.344003ms]
  May 11 13:36:10.071: INFO: Created: latency-svc-gtxmf
  May 11 13:36:10.106: INFO: Got endpoints: latency-svc-n9s2x [748.786107ms]
  May 11 13:36:10.115: INFO: Created: latency-svc-zs566
  May 11 13:36:10.157: INFO: Got endpoints: latency-svc-m2tn4 [751.832482ms]
  May 11 13:36:10.171: INFO: Created: latency-svc-vwmb7
  E0511 13:36:10.201930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:36:10.209: INFO: Got endpoints: latency-svc-t882w [753.093144ms]
  May 11 13:36:10.221: INFO: Created: latency-svc-62srz
  May 11 13:36:10.255: INFO: Got endpoints: latency-svc-7b5tp [748.243519ms]
  May 11 13:36:10.266: INFO: Created: latency-svc-6pq7h
  May 11 13:36:10.305: INFO: Got endpoints: latency-svc-nh24r [746.310663ms]
  May 11 13:36:10.316: INFO: Created: latency-svc-gjfnj
  May 11 13:36:10.357: INFO: Got endpoints: latency-svc-gqr9k [748.862063ms]
  May 11 13:36:10.369: INFO: Created: latency-svc-zrqhj
  May 11 13:36:10.406: INFO: Got endpoints: latency-svc-mkj94 [748.810797ms]
  May 11 13:36:10.416: INFO: Created: latency-svc-xccn7
  May 11 13:36:10.458: INFO: Got endpoints: latency-svc-2db6k [751.686389ms]
  May 11 13:36:10.468: INFO: Created: latency-svc-859s5
  May 11 13:36:10.507: INFO: Got endpoints: latency-svc-vv2pq [750.676185ms]
  May 11 13:36:10.522: INFO: Created: latency-svc-69hmr
  May 11 13:36:10.555: INFO: Got endpoints: latency-svc-kg7bt [746.100824ms]
  May 11 13:36:10.565: INFO: Created: latency-svc-bngkm
  May 11 13:36:10.608: INFO: Got endpoints: latency-svc-ktqcd [748.593212ms]
  May 11 13:36:10.621: INFO: Created: latency-svc-qdckd
  May 11 13:36:10.658: INFO: Got endpoints: latency-svc-zqnl6 [750.557207ms]
  May 11 13:36:10.669: INFO: Created: latency-svc-6g79f
  May 11 13:36:10.706: INFO: Got endpoints: latency-svc-xqzvc [751.063597ms]
  May 11 13:36:10.718: INFO: Created: latency-svc-q5mpl
  May 11 13:36:10.757: INFO: Got endpoints: latency-svc-m8zxb [751.511497ms]
  May 11 13:36:10.768: INFO: Created: latency-svc-xfrfc
  May 11 13:36:10.808: INFO: Got endpoints: latency-svc-gtxmf [748.970549ms]
  May 11 13:36:10.820: INFO: Created: latency-svc-j76x6
  May 11 13:36:10.855: INFO: Got endpoints: latency-svc-zs566 [749.548073ms]
  May 11 13:36:10.868: INFO: Created: latency-svc-54cns
  May 11 13:36:10.906: INFO: Got endpoints: latency-svc-vwmb7 [749.022741ms]
  May 11 13:36:10.916: INFO: Created: latency-svc-4r7x7
  May 11 13:36:10.958: INFO: Got endpoints: latency-svc-62srz [749.539149ms]
  May 11 13:36:10.970: INFO: Created: latency-svc-rsnw5
  May 11 13:36:11.007: INFO: Got endpoints: latency-svc-6pq7h [752.473764ms]
  May 11 13:36:11.017: INFO: Created: latency-svc-tsxs4
  May 11 13:36:11.057: INFO: Got endpoints: latency-svc-gjfnj [752.093583ms]
  May 11 13:36:11.067: INFO: Created: latency-svc-9lwlx
  May 11 13:36:11.106: INFO: Got endpoints: latency-svc-zrqhj [748.389327ms]
  May 11 13:36:11.118: INFO: Created: latency-svc-sxzkq
  May 11 13:36:11.156: INFO: Got endpoints: latency-svc-xccn7 [749.52814ms]
  May 11 13:36:11.174: INFO: Created: latency-svc-pbqzz
  E0511 13:36:11.202758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:36:11.205: INFO: Got endpoints: latency-svc-859s5 [747.015716ms]
  May 11 13:36:11.214: INFO: Created: latency-svc-256sh
  May 11 13:36:11.258: INFO: Got endpoints: latency-svc-69hmr [750.941475ms]
  May 11 13:36:11.269: INFO: Created: latency-svc-sxlmp
  May 11 13:36:11.307: INFO: Got endpoints: latency-svc-bngkm [751.751594ms]
  May 11 13:36:11.318: INFO: Created: latency-svc-rlxgj
  May 11 13:36:11.356: INFO: Got endpoints: latency-svc-qdckd [747.452468ms]
  May 11 13:36:11.368: INFO: Created: latency-svc-gr45r
  May 11 13:36:11.405: INFO: Got endpoints: latency-svc-6g79f [746.79462ms]
  May 11 13:36:11.417: INFO: Created: latency-svc-jnx9v
  May 11 13:36:11.456: INFO: Got endpoints: latency-svc-q5mpl [749.904402ms]
  May 11 13:36:11.467: INFO: Created: latency-svc-jmjwt
  May 11 13:36:11.509: INFO: Got endpoints: latency-svc-xfrfc [751.611576ms]
  May 11 13:36:11.518: INFO: Created: latency-svc-nr4xp
  May 11 13:36:11.555: INFO: Got endpoints: latency-svc-j76x6 [747.428218ms]
  May 11 13:36:11.569: INFO: Created: latency-svc-rmmcp
  May 11 13:36:11.607: INFO: Got endpoints: latency-svc-54cns [752.083949ms]
  May 11 13:36:11.618: INFO: Created: latency-svc-vlh7g
  May 11 13:36:11.657: INFO: Got endpoints: latency-svc-4r7x7 [750.488594ms]
  May 11 13:36:11.666: INFO: Created: latency-svc-jh9jb
  May 11 13:36:11.706: INFO: Got endpoints: latency-svc-rsnw5 [747.766966ms]
  May 11 13:36:11.718: INFO: Created: latency-svc-fpqnw
  May 11 13:36:11.757: INFO: Got endpoints: latency-svc-tsxs4 [749.987039ms]
  May 11 13:36:11.769: INFO: Created: latency-svc-p6v9b
  May 11 13:36:11.805: INFO: Got endpoints: latency-svc-9lwlx [747.475863ms]
  May 11 13:36:11.821: INFO: Created: latency-svc-sp6mv
  May 11 13:36:11.857: INFO: Got endpoints: latency-svc-sxzkq [750.838301ms]
  May 11 13:36:11.870: INFO: Created: latency-svc-jqddf
  May 11 13:36:11.907: INFO: Got endpoints: latency-svc-pbqzz [750.68371ms]
  May 11 13:36:11.918: INFO: Created: latency-svc-vcqpd
  May 11 13:36:11.958: INFO: Got endpoints: latency-svc-256sh [752.870452ms]
  May 11 13:36:11.967: INFO: Created: latency-svc-8zf9v
  May 11 13:36:12.007: INFO: Got endpoints: latency-svc-sxlmp [748.434402ms]
  May 11 13:36:12.018: INFO: Created: latency-svc-7n7jb
  May 11 13:36:12.058: INFO: Got endpoints: latency-svc-rlxgj [750.579391ms]
  May 11 13:36:12.068: INFO: Created: latency-svc-c8qz6
  May 11 13:36:12.105: INFO: Got endpoints: latency-svc-gr45r [748.597244ms]
  May 11 13:36:12.116: INFO: Created: latency-svc-m65lq
  May 11 13:36:12.158: INFO: Got endpoints: latency-svc-jnx9v [752.562521ms]
  May 11 13:36:12.174: INFO: Created: latency-svc-dj4z6
  E0511 13:36:12.203355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:36:12.205: INFO: Got endpoints: latency-svc-jmjwt [748.738749ms]
  May 11 13:36:12.217: INFO: Created: latency-svc-n94wf
  May 11 13:36:12.256: INFO: Got endpoints: latency-svc-nr4xp [747.175192ms]
  May 11 13:36:12.266: INFO: Created: latency-svc-wggvs
  May 11 13:36:12.307: INFO: Got endpoints: latency-svc-rmmcp [751.225662ms]
  May 11 13:36:12.321: INFO: Created: latency-svc-4pd7w
  May 11 13:36:12.357: INFO: Got endpoints: latency-svc-vlh7g [749.956933ms]
  May 11 13:36:12.367: INFO: Created: latency-svc-v8smp
  May 11 13:36:12.406: INFO: Got endpoints: latency-svc-jh9jb [749.129239ms]
  May 11 13:36:12.418: INFO: Created: latency-svc-25tcf
  May 11 13:36:12.456: INFO: Got endpoints: latency-svc-fpqnw [749.712109ms]
  May 11 13:36:12.468: INFO: Created: latency-svc-vln6w
  May 11 13:36:12.507: INFO: Got endpoints: latency-svc-p6v9b [749.317643ms]
  May 11 13:36:12.518: INFO: Created: latency-svc-rkp2g
  May 11 13:36:12.557: INFO: Got endpoints: latency-svc-sp6mv [751.907261ms]
  May 11 13:36:12.566: INFO: Created: latency-svc-dz6mn
  May 11 13:36:12.608: INFO: Got endpoints: latency-svc-jqddf [751.455954ms]
  May 11 13:36:12.619: INFO: Created: latency-svc-8z4nm
  May 11 13:36:12.656: INFO: Got endpoints: latency-svc-vcqpd [749.704667ms]
  May 11 13:36:12.668: INFO: Created: latency-svc-zph9k
  May 11 13:36:12.705: INFO: Got endpoints: latency-svc-8zf9v [747.415948ms]
  May 11 13:36:12.715: INFO: Created: latency-svc-5jwpv
  May 11 13:36:12.756: INFO: Got endpoints: latency-svc-7n7jb [749.584859ms]
  May 11 13:36:12.768: INFO: Created: latency-svc-g72kp
  May 11 13:36:12.808: INFO: Got endpoints: latency-svc-c8qz6 [749.957765ms]
  May 11 13:36:12.819: INFO: Created: latency-svc-pt25h
  May 11 13:36:12.855: INFO: Got endpoints: latency-svc-m65lq [750.103239ms]
  May 11 13:36:12.866: INFO: Created: latency-svc-5wwr4
  May 11 13:36:12.905: INFO: Got endpoints: latency-svc-dj4z6 [746.202009ms]
  May 11 13:36:12.916: INFO: Created: latency-svc-4sm8v
  May 11 13:36:12.958: INFO: Got endpoints: latency-svc-n94wf [753.194414ms]
  May 11 13:36:12.971: INFO: Created: latency-svc-nck8f
  May 11 13:36:13.006: INFO: Got endpoints: latency-svc-wggvs [750.187957ms]
  May 11 13:36:13.016: INFO: Created: latency-svc-fxptd
  May 11 13:36:13.058: INFO: Got endpoints: latency-svc-4pd7w [751.047577ms]
  May 11 13:36:13.069: INFO: Created: latency-svc-qjs8x
  May 11 13:36:13.107: INFO: Got endpoints: latency-svc-v8smp [749.408003ms]
  May 11 13:36:13.118: INFO: Created: latency-svc-97284
  May 11 13:36:13.157: INFO: Got endpoints: latency-svc-25tcf [750.473326ms]
  May 11 13:36:13.170: INFO: Created: latency-svc-7hgfj
  E0511 13:36:13.204261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:36:13.206: INFO: Got endpoints: latency-svc-vln6w [750.01868ms]
  May 11 13:36:13.217: INFO: Created: latency-svc-xcvhq
  May 11 13:36:13.257: INFO: Got endpoints: latency-svc-rkp2g [750.28666ms]
  May 11 13:36:13.268: INFO: Created: latency-svc-fsp65
  May 11 13:36:13.309: INFO: Got endpoints: latency-svc-dz6mn [751.835096ms]
  May 11 13:36:13.319: INFO: Created: latency-svc-gtf7m
  May 11 13:36:13.356: INFO: Got endpoints: latency-svc-8z4nm [747.995182ms]
  May 11 13:36:13.368: INFO: Created: latency-svc-5n9pg
  May 11 13:36:13.407: INFO: Got endpoints: latency-svc-zph9k [749.886341ms]
  May 11 13:36:13.419: INFO: Created: latency-svc-7tlxv
  May 11 13:36:13.457: INFO: Got endpoints: latency-svc-5jwpv [751.41557ms]
  May 11 13:36:13.467: INFO: Created: latency-svc-q7m58
  May 11 13:36:13.506: INFO: Got endpoints: latency-svc-g72kp [749.909826ms]
  May 11 13:36:13.518: INFO: Created: latency-svc-9r7mk
  May 11 13:36:13.556: INFO: Got endpoints: latency-svc-pt25h [747.897647ms]
  May 11 13:36:13.568: INFO: Created: latency-svc-v64f8
  May 11 13:36:13.605: INFO: Got endpoints: latency-svc-5wwr4 [750.40567ms]
  May 11 13:36:13.617: INFO: Created: latency-svc-vrxpk
  May 11 13:36:13.657: INFO: Got endpoints: latency-svc-4sm8v [751.557157ms]
  May 11 13:36:13.667: INFO: Created: latency-svc-ng6qb
  May 11 13:36:13.707: INFO: Got endpoints: latency-svc-nck8f [748.350499ms]
  May 11 13:36:13.717: INFO: Created: latency-svc-zwwj6
  May 11 13:36:13.757: INFO: Got endpoints: latency-svc-fxptd [750.539156ms]
  May 11 13:36:13.767: INFO: Created: latency-svc-5rc6t
  May 11 13:36:13.806: INFO: Got endpoints: latency-svc-qjs8x [747.985139ms]
  May 11 13:36:13.820: INFO: Created: latency-svc-kr7b9
  May 11 13:36:13.856: INFO: Got endpoints: latency-svc-97284 [748.187662ms]
  May 11 13:36:13.866: INFO: Created: latency-svc-bd75p
  May 11 13:36:13.906: INFO: Got endpoints: latency-svc-7hgfj [748.739718ms]
  May 11 13:36:13.915: INFO: Created: latency-svc-2wq6s
  May 11 13:36:13.957: INFO: Got endpoints: latency-svc-xcvhq [751.068124ms]
  May 11 13:36:13.968: INFO: Created: latency-svc-hp9pm
  May 11 13:36:14.006: INFO: Got endpoints: latency-svc-fsp65 [748.304674ms]
  May 11 13:36:14.019: INFO: Created: latency-svc-8twwz
  May 11 13:36:14.056: INFO: Got endpoints: latency-svc-gtf7m [747.365436ms]
  May 11 13:36:14.067: INFO: Created: latency-svc-gjqmj
  May 11 13:36:14.105: INFO: Got endpoints: latency-svc-5n9pg [749.02387ms]
  May 11 13:36:14.118: INFO: Created: latency-svc-smsrv
  May 11 13:36:14.156: INFO: Got endpoints: latency-svc-7tlxv [749.717349ms]
  May 11 13:36:14.171: INFO: Created: latency-svc-znzpb
  E0511 13:36:14.204672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:36:14.208: INFO: Got endpoints: latency-svc-q7m58 [750.531259ms]
  May 11 13:36:14.216: INFO: Created: latency-svc-d5kdc
  May 11 13:36:14.259: INFO: Got endpoints: latency-svc-9r7mk [752.395011ms]
  May 11 13:36:14.272: INFO: Created: latency-svc-k6plq
  May 11 13:36:14.305: INFO: Got endpoints: latency-svc-v64f8 [749.840314ms]
  May 11 13:36:14.317: INFO: Created: latency-svc-s5n7l
  May 11 13:36:14.356: INFO: Got endpoints: latency-svc-vrxpk [750.157837ms]
  May 11 13:36:14.367: INFO: Created: latency-svc-m5fw8
  May 11 13:36:14.406: INFO: Got endpoints: latency-svc-ng6qb [749.335843ms]
  May 11 13:36:14.457: INFO: Got endpoints: latency-svc-zwwj6 [750.237399ms]
  May 11 13:36:14.506: INFO: Got endpoints: latency-svc-5rc6t [749.290084ms]
  May 11 13:36:14.558: INFO: Got endpoints: latency-svc-kr7b9 [752.114717ms]
  May 11 13:36:14.606: INFO: Got endpoints: latency-svc-bd75p [750.71163ms]
  May 11 13:36:14.659: INFO: Got endpoints: latency-svc-2wq6s [752.805474ms]
  May 11 13:36:14.705: INFO: Got endpoints: latency-svc-hp9pm [748.063207ms]
  May 11 13:36:14.759: INFO: Got endpoints: latency-svc-8twwz [753.166037ms]
  May 11 13:36:14.805: INFO: Got endpoints: latency-svc-gjqmj [748.573305ms]
  May 11 13:36:14.859: INFO: Got endpoints: latency-svc-smsrv [753.574791ms]
  May 11 13:36:14.908: INFO: Got endpoints: latency-svc-znzpb [751.293693ms]
  May 11 13:36:14.957: INFO: Got endpoints: latency-svc-d5kdc [749.453725ms]
  May 11 13:36:15.005: INFO: Got endpoints: latency-svc-k6plq [745.868141ms]
  May 11 13:36:15.059: INFO: Got endpoints: latency-svc-s5n7l [753.102271ms]
  May 11 13:36:15.106: INFO: Got endpoints: latency-svc-m5fw8 [749.931853ms]
  May 11 13:36:15.106: INFO: Latencies: [16.962915ms 24.12923ms 34.406367ms 43.378315ms 51.564252ms 63.85681ms 67.287802ms 74.970434ms 87.757698ms 96.380045ms 99.230462ms 101.952602ms 103.673648ms 113.161512ms 115.082736ms 123.465611ms 126.202605ms 132.617666ms 133.250566ms 133.305225ms 134.190228ms 134.432247ms 136.019025ms 136.537288ms 136.760428ms 137.636897ms 139.3017ms 139.378864ms 140.422398ms 143.355633ms 152.124669ms 178.350341ms 191.16229ms 197.744556ms 206.791837ms 239.358703ms 259.95186ms 286.229927ms 290.734138ms 294.011637ms 334.22376ms 381.581653ms 400.442452ms 429.892904ms 472.583973ms 520.480745ms 568.292921ms 607.393336ms 657.26041ms 700.429338ms 741.19953ms 745.868141ms 746.100824ms 746.202009ms 746.310663ms 746.79462ms 747.015716ms 747.175192ms 747.351211ms 747.365436ms 747.415948ms 747.428218ms 747.452468ms 747.475863ms 747.53373ms 747.639691ms 747.766966ms 747.896689ms 747.897647ms 747.985139ms 747.995182ms 748.063207ms 748.187662ms 748.20028ms 748.236377ms 748.243519ms 748.304674ms 748.350499ms 748.389327ms 748.434402ms 748.438203ms 748.557405ms 748.573305ms 748.593212ms 748.597244ms 748.721788ms 748.728801ms 748.738749ms 748.739718ms 748.786107ms 748.810797ms 748.862063ms 748.970549ms 748.975562ms 749.022741ms 749.02387ms 749.037303ms 749.080095ms 749.129239ms 749.138681ms 749.159261ms 749.169809ms 749.274428ms 749.290084ms 749.317643ms 749.335843ms 749.408003ms 749.425354ms 749.453725ms 749.455915ms 749.458193ms 749.463096ms 749.52814ms 749.539149ms 749.548073ms 749.550335ms 749.575609ms 749.584859ms 749.611281ms 749.661075ms 749.704667ms 749.712109ms 749.717349ms 749.7341ms 749.739203ms 749.840314ms 749.886341ms 749.904402ms 749.909826ms 749.925399ms 749.931853ms 749.956933ms 749.957765ms 749.987039ms 750.01868ms 750.103239ms 750.157837ms 750.173196ms 750.187957ms 750.230257ms 750.237399ms 750.268444ms 750.28666ms 750.344003ms 750.40567ms 750.473326ms 750.478817ms 750.488594ms 750.531259ms 750.539156ms 750.557207ms 750.579391ms 750.676185ms 750.68371ms 750.693108ms 750.703575ms 750.71163ms 750.838301ms 750.881294ms 750.941475ms 751.047577ms 751.063597ms 751.068124ms 751.124808ms 751.137743ms 751.225662ms 751.293693ms 751.41557ms 751.44874ms 751.455954ms 751.511497ms 751.524386ms 751.557157ms 751.611576ms 751.686389ms 751.730067ms 751.751594ms 751.778375ms 751.832482ms 751.835096ms 751.866039ms 751.871283ms 751.907261ms 752.015592ms 752.025453ms 752.083949ms 752.093583ms 752.114717ms 752.350762ms 752.370679ms 752.395011ms 752.473764ms 752.562521ms 752.805474ms 752.870452ms 753.093144ms 753.102271ms 753.166037ms 753.194414ms 753.574791ms]
  May 11 13:36:15.106: INFO: 50 %ile: 749.159261ms
  May 11 13:36:15.106: INFO: 90 %ile: 751.866039ms
  May 11 13:36:15.106: INFO: 99 %ile: 753.194414ms
  May 11 13:36:15.106: INFO: Total sample count: 200
  May 11 13:36:15.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1461" for this suite. @ 05/11/24 13:36:15.111
• [9.759 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 05/11/24 13:36:15.118
  May 11 13:36:15.118: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 13:36:15.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:36:15.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:36:15.136
  STEP: Setting up server cert @ 05/11/24 13:36:15.157
  E0511 13:36:15.205549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 13:36:15.357
  STEP: Deploying the webhook pod @ 05/11/24 13:36:15.366
  STEP: Wait for the deployment to be ready @ 05/11/24 13:36:15.377
  May 11 13:36:15.385: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0511 13:36:16.205845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:17.206085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/11/24 13:36:17.397
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 13:36:17.412
  E0511 13:36:18.206662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:36:18.413: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/11/24 13:36:18.419
  STEP: create a configmap that should be updated by the webhook @ 05/11/24 13:36:18.431
  May 11 13:36:18.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5023" for this suite. @ 05/11/24 13:36:18.495
  STEP: Destroying namespace "webhook-markers-2541" for this suite. @ 05/11/24 13:36:18.504
• [3.394 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 05/11/24 13:36:18.512
  May 11 13:36:18.512: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename resourcequota @ 05/11/24 13:36:18.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:36:18.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:36:18.531
  STEP: Creating a ResourceQuota with terminating scope @ 05/11/24 13:36:18.533
  STEP: Ensuring ResourceQuota status is calculated @ 05/11/24 13:36:18.537
  E0511 13:36:19.206772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:20.206865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 05/11/24 13:36:20.543
  STEP: Ensuring ResourceQuota status is calculated @ 05/11/24 13:36:20.548
  E0511 13:36:21.207533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:22.208293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 05/11/24 13:36:22.553
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/11/24 13:36:22.569
  E0511 13:36:23.208406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:24.208505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/11/24 13:36:24.579
  E0511 13:36:25.208594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:26.209597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/11/24 13:36:26.584
  STEP: Ensuring resource quota status released the pod usage @ 05/11/24 13:36:26.605
  E0511 13:36:27.210378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:28.211172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 05/11/24 13:36:28.609
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/11/24 13:36:28.618
  E0511 13:36:29.211996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:30.212112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/11/24 13:36:30.621
  E0511 13:36:31.212345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:32.212401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/11/24 13:36:32.626
  STEP: Ensuring resource quota status released the pod usage @ 05/11/24 13:36:32.64
  E0511 13:36:33.213191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:34.213398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:36:34.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-471" for this suite. @ 05/11/24 13:36:34.647
• [16.141 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 05/11/24 13:36:34.653
  May 11 13:36:34.653: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 13:36:34.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:36:34.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:36:34.671
  STEP: Creating configMap with name configmap-projected-all-test-volume-f645dfbc-05a8-47fc-8013-29b0b92ecde2 @ 05/11/24 13:36:34.673
  STEP: Creating secret with name secret-projected-all-test-volume-9f14a048-1f40-461e-a11b-575a8bedccc9 @ 05/11/24 13:36:34.68
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/11/24 13:36:34.685
  E0511 13:36:35.214081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:36.214548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:36:36.703
  May 11 13:36:36.707: INFO: Trying to get logs from node ip-172-31-73-54 pod projected-volume-ba218991-5117-4703-b554-6e0e6a30ab97 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/11/24 13:36:36.719
  May 11 13:36:36.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2438" for this suite. @ 05/11/24 13:36:36.738
• [2.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 05/11/24 13:36:36.743
  May 11 13:36:36.743: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename lease-test @ 05/11/24 13:36:36.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:36:36.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:36:36.763
  May 11 13:36:36.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-6034" for this suite. @ 05/11/24 13:36:36.817
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 05/11/24 13:36:36.822
  May 11 13:36:36.822: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename init-container @ 05/11/24 13:36:36.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:36:36.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:36:36.839
  STEP: creating the pod @ 05/11/24 13:36:36.841
  May 11 13:36:36.841: INFO: PodSpec: initContainers in spec.initContainers
  E0511 13:36:37.215140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:38.215345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:39.215417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:40.215502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:41.215586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:42.215698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:43.215764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:44.215934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:45.216047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:46.216597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:47.216693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:48.216794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:49.216931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:50.217017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:51.217199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:52.217308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:53.217426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:54.218088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:55.219155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:56.219446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:57.219556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:58.219679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:36:59.219826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:00.220080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:01.220276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:02.220369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:03.220554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:04.220640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:05.220805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:06.221020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:07.221107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:08.222164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:09.222265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:10.223154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:11.223239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:12.223354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:13.223724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:14.223796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:15.224864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:16.225571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:17.225685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:18.225767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:19.225976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:20.228479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:21.228926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:37:21.476: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-3e007af4-f457-49fa-8d7d-978332b9e67d", GenerateName:"", Namespace:"init-container-6237", SelfLink:"", UID:"1628aeec-e4f2-47e4-b36a-ca629e88cf72", ResourceVersion:"39013", Generation:0, CreationTimestamp:time.Date(2024, time.May, 11, 13, 36, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"841674912"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 13, 36, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f7560), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 11, 13, 37, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f7590), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-74bvc", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc005780880), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-74bvc", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-74bvc", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-74bvc", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002981a00), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-73-54", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0003e6fc0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002981a90)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002981ab0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002981ab8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc002981abc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc001161790), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 11, 13, 36, 38, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 11, 13, 36, 36, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 11, 13, 36, 36, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 11, 13, 36, 36, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 11, 13, 36, 36, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.73.54", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.73.54"}}, PodIP:"192.168.105.233", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.105.233"}}, StartTime:time.Date(2024, time.May, 11, 13, 36, 36, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003e70a0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003e7110)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://56b1943bfa334107f874bc5f1cc71f9d02879f3e784366ab97f72926f4137d0f", Started:(*bool)(0xc002981b5a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005780900), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc002981b6f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0057808e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc002981b3f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  May 11 13:37:21.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6237" for this suite. @ 05/11/24 13:37:21.479
• [44.664 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 05/11/24 13:37:21.487
  May 11 13:37:21.487: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename namespaces @ 05/11/24 13:37:21.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:37:21.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:37:21.506
  STEP: creating a Namespace @ 05/11/24 13:37:21.509
  STEP: patching the Namespace @ 05/11/24 13:37:21.522
  STEP: get the Namespace and ensuring it has the label @ 05/11/24 13:37:21.528
  May 11 13:37:21.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8441" for this suite. @ 05/11/24 13:37:21.533
  STEP: Destroying namespace "nspatchtest-8896979a-397a-43db-bfaa-910aabd0c69b-2466" for this suite. @ 05/11/24 13:37:21.541
• [0.060 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 05/11/24 13:37:21.547
  May 11 13:37:21.547: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 13:37:21.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:37:21.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:37:21.565
  STEP: Setting up server cert @ 05/11/24 13:37:21.588
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 13:37:21.855
  STEP: Deploying the webhook pod @ 05/11/24 13:37:21.869
  STEP: Wait for the deployment to be ready @ 05/11/24 13:37:21.903
  May 11 13:37:21.910: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0511 13:37:22.229647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:23.229752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/11/24 13:37:23.922
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 13:37:23.939
  E0511 13:37:24.229840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:37:24.939: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 11 13:37:24.946: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 13:37:25.230364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4366-crds.webhook.example.com via the AdmissionRegistration API @ 05/11/24 13:37:25.456
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/11/24 13:37:25.471
  E0511 13:37:26.230905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:27.230978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:37:28.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-418" for this suite. @ 05/11/24 13:37:28.066
  STEP: Destroying namespace "webhook-markers-9571" for this suite. @ 05/11/24 13:37:28.076
• [6.535 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 05/11/24 13:37:28.083
  May 11 13:37:28.083: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename chunking @ 05/11/24 13:37:28.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:37:28.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:37:28.101
  STEP: creating a large number of resources @ 05/11/24 13:37:28.104
  E0511 13:37:28.231765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:29.232662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:30.232900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:31.233430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:32.234438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:33.234448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:34.234806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:35.235544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:36.236206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:37.237246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:38.237453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:39.238299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:40.238958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:41.239613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:42.239623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:43.240349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:44.240778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:45.240915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 05/11/24 13:37:45.79
  May 11 13:37:45.837: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  May 11 13:37:45.888: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  May 11 13:37:45.938: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  May 11 13:37:45.987: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  May 11 13:37:46.038: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  May 11 13:37:46.089: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  May 11 13:37:46.138: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  May 11 13:37:46.188: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  May 11 13:37:46.239: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  E0511 13:37:46.241196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:37:46.287: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  May 11 13:37:46.338: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  May 11 13:37:46.388: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  May 11 13:37:46.437: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  May 11 13:37:46.488: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  May 11 13:37:46.539: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  May 11 13:37:46.587: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  May 11 13:37:46.638: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  May 11 13:37:46.688: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  May 11 13:37:46.738: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  May 11 13:37:46.788: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  May 11 13:37:46.838: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  May 11 13:37:46.888: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  May 11 13:37:46.938: INFO: Retrieved 17/17 results with rv 39599 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1OTksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  May 11 13:37:46.988: INFO: Retrieved 9/17 results with rv 39599 and continue 
  May 11 13:37:47.037: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  May 11 13:37:47.088: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  May 11 13:37:47.139: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  May 11 13:37:47.186: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  May 11 13:37:47.238: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  E0511 13:37:47.242131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:37:47.288: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  May 11 13:37:47.337: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  May 11 13:37:47.387: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  May 11 13:37:47.438: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  May 11 13:37:47.487: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  May 11 13:37:47.538: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  May 11 13:37:47.588: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  May 11 13:37:47.637: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  May 11 13:37:47.687: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  May 11 13:37:47.739: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  May 11 13:37:47.787: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  May 11 13:37:47.836: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  May 11 13:37:47.888: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  May 11 13:37:47.937: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  May 11 13:37:47.988: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  May 11 13:37:48.038: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  May 11 13:37:48.087: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  May 11 13:37:48.138: INFO: Retrieved 17/17 results with rv 39602 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  May 11 13:37:48.188: INFO: Retrieved 9/17 results with rv 39602 and continue 
  May 11 13:37:48.238: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  E0511 13:37:48.242336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:37:48.289: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  May 11 13:37:48.338: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  May 11 13:37:48.387: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  May 11 13:37:48.437: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  May 11 13:37:48.489: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  May 11 13:37:48.537: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  May 11 13:37:48.588: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  May 11 13:37:48.638: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  May 11 13:37:48.688: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  May 11 13:37:48.738: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  May 11 13:37:48.788: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  May 11 13:37:48.836: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  May 11 13:37:48.887: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  May 11 13:37:48.938: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  May 11 13:37:48.987: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  May 11 13:37:49.037: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  May 11 13:37:49.089: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  May 11 13:37:49.137: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  May 11 13:37:49.189: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  May 11 13:37:49.238: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  E0511 13:37:49.242865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:37:49.287: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  May 11 13:37:49.339: INFO: Retrieved 17/17 results with rv 39603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  May 11 13:37:49.388: INFO: Retrieved 9/17 results with rv 39603 and continue 
  STEP: retrieving those results all at once @ 05/11/24 13:37:49.388
  May 11 13:37:49.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2002" for this suite. @ 05/11/24 13:37:49.487
• [21.459 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 05/11/24 13:37:49.542
  May 11 13:37:49.542: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename statefulset @ 05/11/24 13:37:49.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:37:49.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:37:49.561
  STEP: Creating service test in namespace statefulset-7940 @ 05/11/24 13:37:49.562
  STEP: Creating stateful set ss in namespace statefulset-7940 @ 05/11/24 13:37:49.567
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7940 @ 05/11/24 13:37:49.573
  May 11 13:37:49.577: INFO: Found 0 stateful pods, waiting for 1
  E0511 13:37:50.243925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:51.244017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:52.244409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:53.244509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:54.244611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:55.244698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:56.245441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:57.245729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:58.245839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:37:59.246050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:37:59.579: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/11/24 13:37:59.579
  May 11 13:37:59.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-7940 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 11 13:37:59.667: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 11 13:37:59.667: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 11 13:37:59.667: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 11 13:37:59.672: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0511 13:38:00.246165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:01.246275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:02.246375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:03.246466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:04.247137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:05.247257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:06.247445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:07.247522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:08.247705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:09.247877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:09.671: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 11 13:38:09.671: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 11 13:38:09.689: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  May 11 13:38:09.689: INFO: ss-0  ip-172-31-73-54  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:37:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:37:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:37:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:37:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:37:49 +0000 UTC  }]
  May 11 13:38:09.689: INFO: 
  May 11 13:38:09.689: INFO: StatefulSet ss has not reached scale 3, at 1
  E0511 13:38:10.248333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:10.695: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.993177087s
  E0511 13:38:11.249019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:11.701: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.987385767s
  E0511 13:38:12.249885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:12.706: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.981619203s
  E0511 13:38:13.250774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:13.710: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.976932869s
  E0511 13:38:14.251208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:14.715: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.97157406s
  E0511 13:38:15.251759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:15.719: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.967841425s
  E0511 13:38:16.251856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:16.723: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.963731138s
  E0511 13:38:17.251994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:17.729: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.959615732s
  E0511 13:38:18.252079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:18.736: INFO: Verifying statefulset ss doesn't scale past 3 for another 952.696375ms
  E0511 13:38:19.253042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7940 @ 05/11/24 13:38:19.736
  May 11 13:38:19.741: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-7940 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 11 13:38:19.825: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 11 13:38:19.825: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 11 13:38:19.825: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 11 13:38:19.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-7940 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 11 13:38:19.923: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  May 11 13:38:19.923: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 11 13:38:19.923: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 11 13:38:19.923: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-7940 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 11 13:38:20.023: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  May 11 13:38:20.023: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 11 13:38:20.023: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 11 13:38:20.026: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May 11 13:38:20.026: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  May 11 13:38:20.026: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/11/24 13:38:20.026
  May 11 13:38:20.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-7940 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 11 13:38:20.108: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 11 13:38:20.108: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 11 13:38:20.108: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 11 13:38:20.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-7940 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 11 13:38:20.204: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 11 13:38:20.204: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 11 13:38:20.204: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 11 13:38:20.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-7940 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0511 13:38:20.253562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:20.285: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 11 13:38:20.286: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 11 13:38:20.286: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 11 13:38:20.286: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 11 13:38:20.288: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0511 13:38:21.253907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:22.254085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:23.254154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:24.255131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:25.256143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:26.256539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:27.257438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:28.257546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:29.257657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:30.257851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:30.294: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 11 13:38:30.294: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  May 11 13:38:30.294: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  May 11 13:38:30.306: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  May 11 13:38:30.306: INFO: ss-0  ip-172-31-73-54   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:37:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:37:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:37:49 +0000 UTC  }]
  May 11 13:38:30.306: INFO: ss-1  ip-172-31-35-147  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:09 +0000 UTC  }]
  May 11 13:38:30.306: INFO: ss-2  ip-172-31-16-37   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:09 +0000 UTC  }]
  May 11 13:38:30.307: INFO: 
  May 11 13:38:30.307: INFO: StatefulSet ss has not reached scale 0, at 3
  E0511 13:38:31.258915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:31.311: INFO: POD   NODE             PHASE      GRACE  CONDITIONS
  May 11 13:38:31.311: INFO: ss-2  ip-172-31-16-37  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:30 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:09 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:21 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:21 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-11 13:38:09 +0000 UTC  }]
  May 11 13:38:31.311: INFO: 
  May 11 13:38:31.311: INFO: StatefulSet ss has not reached scale 0, at 1
  E0511 13:38:32.259409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:32.316: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.992131983s
  E0511 13:38:33.259614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:33.320: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.986838791s
  E0511 13:38:34.260076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:34.325: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.982433071s
  E0511 13:38:35.260191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:35.330: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.978166419s
  E0511 13:38:36.260642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:36.335: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.972854157s
  E0511 13:38:37.260761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:37.340: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.967724173s
  E0511 13:38:38.260864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:38.345: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.962662618s
  E0511 13:38:39.261798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:38:39.349: INFO: Verifying statefulset ss doesn't scale past 0 for another 957.66593ms
  E0511 13:38:40.262099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7940 @ 05/11/24 13:38:40.35
  May 11 13:38:40.355: INFO: Scaling statefulset ss to 0
  May 11 13:38:40.364: INFO: Waiting for statefulset status.replicas updated to 0
  May 11 13:38:40.368: INFO: Deleting all statefulset in ns statefulset-7940
  May 11 13:38:40.371: INFO: Scaling statefulset ss to 0
  May 11 13:38:40.381: INFO: Waiting for statefulset status.replicas updated to 0
  May 11 13:38:40.383: INFO: Deleting statefulset ss
  May 11 13:38:40.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7940" for this suite. @ 05/11/24 13:38:40.398
• [50.862 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 05/11/24 13:38:40.404
  May 11 13:38:40.404: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename var-expansion @ 05/11/24 13:38:40.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:38:40.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:38:40.422
  STEP: creating the pod with failed condition @ 05/11/24 13:38:40.423
  E0511 13:38:41.262690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:42.262820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:43.262925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:44.263013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:45.263113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:46.263176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:47.263295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:48.264340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:49.264446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:50.264511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:51.264638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:52.264748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:53.264862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:54.264970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:55.265058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:56.265361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:57.265461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:58.265534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:38:59.265642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:00.265714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:01.266077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:02.266197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:03.266276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:04.267150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:05.267273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:06.267812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:07.267746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:08.267939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:09.268191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:10.268306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:11.269331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:12.269426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:13.269548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:14.269622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:15.269791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:16.270659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:17.270767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:18.270873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:19.271919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:20.272012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:21.272089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:22.272184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:23.272433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:24.272622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:25.272712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:26.273636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:27.274710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:28.274818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:29.274913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:30.274991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:31.275107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:32.275189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:33.275282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:34.275348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:35.276430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:36.276665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:37.277266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:38.277449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:39.277691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:40.278735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:41.279133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:42.279218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:43.279559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:44.280579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:45.280951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:46.281629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:47.282035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:48.282192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:49.283117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:50.283219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:51.283277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:52.283582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:53.284407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:54.284566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:55.285192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:56.285291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:57.285547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:58.285725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:39:59.285816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:00.286849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:01.287580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:02.287672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:03.287758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:04.288446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:05.289487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:06.289724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:07.290168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:08.290269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:09.290787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:10.290879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:11.291008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:12.291082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:13.291128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:14.291401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:15.292383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:16.293443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:17.293534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:18.293709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:19.294568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:20.294671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:21.295310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:22.295399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:23.295523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:24.295701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:25.295787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:26.295833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:27.295935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:28.296107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:29.297058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:30.297155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:31.297744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:32.297888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:33.298079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:34.299159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:35.299645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:36.300665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:37.301733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:38.301849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:39.302559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:40.303535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 05/11/24 13:40:40.431
  May 11 13:40:40.945: INFO: Successfully updated pod "var-expansion-df6006e6-e4b5-41c5-995d-2c8e61032744"
  STEP: waiting for pod running @ 05/11/24 13:40:40.945
  E0511 13:40:41.304045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:42.304119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 05/11/24 13:40:42.952
  May 11 13:40:42.952: INFO: Deleting pod "var-expansion-df6006e6-e4b5-41c5-995d-2c8e61032744" in namespace "var-expansion-1417"
  May 11 13:40:42.960: INFO: Wait up to 5m0s for pod "var-expansion-df6006e6-e4b5-41c5-995d-2c8e61032744" to be fully deleted
  E0511 13:40:43.304709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:44.304803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:45.305645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:46.305673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:47.306700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:48.306795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:49.306884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:50.306981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:51.307210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:52.307282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:53.308263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:54.308423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:55.308599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:56.309115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:57.309812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:58.310080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:40:59.310149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:00.310256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:01.310344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:02.310437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:03.310863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:04.310959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:05.311059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:06.311167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:07.312151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:08.312225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:09.312298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:10.312506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:11.312857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:12.312945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:13.313041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:14.313149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:15.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1417" for this suite. @ 05/11/24 13:41:15.045
• [154.650 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 05/11/24 13:41:15.054
  May 11 13:41:15.054: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-runtime @ 05/11/24 13:41:15.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:41:15.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:41:15.073
  STEP: create the container @ 05/11/24 13:41:15.075
  W0511 13:41:15.083994      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 05/11/24 13:41:15.084
  E0511 13:41:15.314010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:16.314686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/11/24 13:41:17.098
  STEP: the container should be terminated @ 05/11/24 13:41:17.1
  STEP: the termination message should be set @ 05/11/24 13:41:17.1
  May 11 13:41:17.100: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/11/24 13:41:17.1
  May 11 13:41:17.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6658" for this suite. @ 05/11/24 13:41:17.12
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 05/11/24 13:41:17.127
  May 11 13:41:17.127: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pods @ 05/11/24 13:41:17.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:41:17.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:41:17.142
  STEP: Create a pod @ 05/11/24 13:41:17.146
  E0511 13:41:17.315406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:18.315512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 05/11/24 13:41:19.162
  May 11 13:41:19.172: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  May 11 13:41:19.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5455" for this suite. @ 05/11/24 13:41:19.176
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 05/11/24 13:41:19.183
  May 11 13:41:19.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename runtimeclass @ 05/11/24 13:41:19.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:41:19.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:41:19.201
  STEP: getting /apis @ 05/11/24 13:41:19.203
  STEP: getting /apis/node.k8s.io @ 05/11/24 13:41:19.208
  STEP: getting /apis/node.k8s.io/v1 @ 05/11/24 13:41:19.21
  STEP: creating @ 05/11/24 13:41:19.211
  STEP: watching @ 05/11/24 13:41:19.226
  May 11 13:41:19.226: INFO: starting watch
  STEP: getting @ 05/11/24 13:41:19.232
  STEP: listing @ 05/11/24 13:41:19.236
  STEP: patching @ 05/11/24 13:41:19.238
  STEP: updating @ 05/11/24 13:41:19.242
  May 11 13:41:19.246: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 05/11/24 13:41:19.247
  STEP: deleting a collection @ 05/11/24 13:41:19.257
  May 11 13:41:19.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5330" for this suite. @ 05/11/24 13:41:19.277
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 05/11/24 13:41:19.283
  May 11 13:41:19.283: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename apf @ 05/11/24 13:41:19.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:41:19.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:41:19.301
  STEP: getting /apis @ 05/11/24 13:41:19.304
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/11/24 13:41:19.306
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/11/24 13:41:19.306
  STEP: creating @ 05/11/24 13:41:19.307
  E0511 13:41:19.316030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting @ 05/11/24 13:41:19.324
  STEP: listing @ 05/11/24 13:41:19.326
  STEP: watching @ 05/11/24 13:41:19.33
  May 11 13:41:19.330: INFO: starting watch
  STEP: patching @ 05/11/24 13:41:19.331
  STEP: updating @ 05/11/24 13:41:19.335
  May 11 13:41:19.344: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 05/11/24 13:41:19.344
  STEP: patching /status @ 05/11/24 13:41:19.346
  STEP: updating /status @ 05/11/24 13:41:19.353
  STEP: deleting @ 05/11/24 13:41:19.383
  STEP: deleting a collection @ 05/11/24 13:41:19.394
  May 11 13:41:19.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3156" for this suite. @ 05/11/24 13:41:19.417
• [0.140 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 05/11/24 13:41:19.423
  May 11 13:41:19.423: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename configmap @ 05/11/24 13:41:19.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:41:19.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:41:19.439
  STEP: Creating configMap with name configmap-test-volume-7b2d0cb0-8f5e-4c07-b7d6-3133e5a5c80c @ 05/11/24 13:41:19.442
  STEP: Creating a pod to test consume configMaps @ 05/11/24 13:41:19.445
  E0511 13:41:20.316364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:21.316650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:22.316735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:23.316848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:41:23.47
  May 11 13:41:23.474: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-configmaps-173c892f-dcd7-45d6-ab7f-9c365976ade3 container agnhost-container: <nil>
  STEP: delete the pod @ 05/11/24 13:41:23.491
  May 11 13:41:23.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6780" for this suite. @ 05/11/24 13:41:23.507
• [4.091 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 05/11/24 13:41:23.515
  May 11 13:41:23.515: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename events @ 05/11/24 13:41:23.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:41:23.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:41:23.536
  STEP: Create set of events @ 05/11/24 13:41:23.538
  May 11 13:41:23.542: INFO: created test-event-1
  May 11 13:41:23.548: INFO: created test-event-2
  May 11 13:41:23.552: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/11/24 13:41:23.552
  STEP: delete collection of events @ 05/11/24 13:41:23.554
  May 11 13:41:23.554: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/11/24 13:41:23.577
  May 11 13:41:23.577: INFO: requesting list of events to confirm quantity
  May 11 13:41:23.579: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2731" for this suite. @ 05/11/24 13:41:23.582
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 05/11/24 13:41:23.588
  May 11 13:41:23.588: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-probe @ 05/11/24 13:41:23.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:41:23.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:41:23.608
  STEP: Creating pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913 @ 05/11/24 13:41:23.61
  E0511 13:41:24.316931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:25.317033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/11/24 13:41:25.625
  May 11 13:41:25.629: INFO: Initial restart count of pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee is 0
  May 11 13:41:25.631: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:26.317574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:27.317777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:27.637: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:28.317839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:29.318045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:29.640: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:30.318108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:31.318208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:31.646: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:32.319153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:33.319287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:33.650: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:34.320187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:35.320278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:35.656: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:36.320653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:37.320838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:37.660: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:38.321495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:39.321590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:39.666: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:40.321774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:41.322076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:41.672: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:42.322116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:43.323147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:43.676: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:44.323545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:45.323638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:45.680: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:46.324531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:47.324865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:47.685: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:48.325687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:49.325910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:49.689: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:50.326066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:51.326219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:51.694: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:52.326310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:53.327130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:53.698: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:54.328070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:55.328961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:55.702: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:56.329787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:57.330065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:57.707: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:41:58.330618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:41:59.330714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:41:59.713: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:42:00.330810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:01.331011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:42:01.718: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:42:02.331951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:03.332052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:42:03.721: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:42:04.332183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:05.332351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:42:05.726: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:42:06.332861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:07.332942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:42:07.729: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:42:08.333436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:09.334360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:42:09.734: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:42:10.334463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:11.335123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:42:11.740: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:42:12.335946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:13.336127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:42:13.745: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  E0511 13:42:14.336337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:15.336856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:42:15.749: INFO: Get pod busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee in namespace container-probe-7913
  May 11 13:42:15.749: INFO: Restart count of pod container-probe-7913/busybox-3129b0a1-c1fd-47a2-bba0-21024fd398ee is now 1 (50.120693616s elapsed)
  STEP: deleting the pod @ 05/11/24 13:42:15.749
  May 11 13:42:15.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7913" for this suite. @ 05/11/24 13:42:15.765
• [52.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 05/11/24 13:42:15.77
  May 11 13:42:15.770: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename sched-pred @ 05/11/24 13:42:15.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:42:15.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:42:15.79
  May 11 13:42:15.795: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 11 13:42:15.802: INFO: Waiting for terminating namespaces to be deleted...
  May 11 13:42:15.805: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-16-37 before test
  May 11 13:42:15.810: INFO: nginx-ingress-controller-kubernetes-worker-v466k from ingress-nginx-kubernetes-worker started at 2024-05-11 12:06:42 +0000 UTC (1 container statuses recorded)
  May 11 13:42:15.810: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 11 13:42:15.810: INFO: calico-node-t46qx from kube-system started at 2024-05-11 12:06:15 +0000 UTC (1 container statuses recorded)
  May 11 13:42:15.810: INFO: 	Container calico-node ready: true, restart count 0
  May 11 13:42:15.810: INFO: metrics-server-v0.6.3-69d7fbfdf8-6l49v from kube-system started at 2024-05-11 13:28:57 +0000 UTC (2 container statuses recorded)
  May 11 13:42:15.810: INFO: 	Container metrics-server ready: true, restart count 0
  May 11 13:42:15.810: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  May 11 13:42:15.810: INFO: sonobuoy from sonobuoy started at 2024-05-11 12:13:03 +0000 UTC (1 container statuses recorded)
  May 11 13:42:15.810: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May 11 13:42:15.810: INFO: sonobuoy-e2e-job-7e280b976dab4535 from sonobuoy started at 2024-05-11 12:13:06 +0000 UTC (2 container statuses recorded)
  May 11 13:42:15.810: INFO: 	Container e2e ready: true, restart count 0
  May 11 13:42:15.810: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 11 13:42:15.810: INFO: sonobuoy-systemd-logs-daemon-set-49c1eec6cf1a48c7-8n44k from sonobuoy started at 2024-05-11 12:13:06 +0000 UTC (2 container statuses recorded)
  May 11 13:42:15.810: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 11 13:42:15.810: INFO: 	Container systemd-logs ready: true, restart count 0
  May 11 13:42:15.810: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-35-147 before test
  May 11 13:42:15.816: INFO: nginx-ingress-controller-kubernetes-worker-68vzz from ingress-nginx-kubernetes-worker started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 13:42:15.816: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 11 13:42:15.816: INFO: calico-node-v7fn9 from kube-system started at 2024-05-11 12:07:44 +0000 UTC (1 container statuses recorded)
  May 11 13:42:15.816: INFO: 	Container calico-node ready: true, restart count 0
  May 11 13:42:15.816: INFO: coredns-bddfd76d7-pk78z from kube-system started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 13:42:15.816: INFO: 	Container coredns ready: true, restart count 0
  May 11 13:42:15.816: INFO: kube-state-metrics-6f48cdd76-mpr6f from kube-system started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 13:42:15.816: INFO: 	Container kube-state-metrics ready: true, restart count 0
  May 11 13:42:15.816: INFO: kubernetes-dashboard-7b899cb9d9-j9w54 from kubernetes-dashboard started at 2024-05-11 12:02:16 +0000 UTC (1 container statuses recorded)
  May 11 13:42:15.816: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  May 11 13:42:15.816: INFO: sonobuoy-systemd-logs-daemon-set-49c1eec6cf1a48c7-8xp5v from sonobuoy started at 2024-05-11 12:13:06 +0000 UTC (2 container statuses recorded)
  May 11 13:42:15.816: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 11 13:42:15.816: INFO: 	Container systemd-logs ready: true, restart count 0
  May 11 13:42:15.816: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-73-54 before test
  May 11 13:42:15.820: INFO: nginx-ingress-controller-kubernetes-worker-drx5f from ingress-nginx-kubernetes-worker started at 2024-05-11 13:29:08 +0000 UTC (1 container statuses recorded)
  May 11 13:42:15.820: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 11 13:42:15.820: INFO: calico-node-l6qmg from kube-system started at 2024-05-11 12:06:15 +0000 UTC (1 container statuses recorded)
  May 11 13:42:15.820: INFO: 	Container calico-node ready: true, restart count 0
  May 11 13:42:15.820: INFO: dashboard-metrics-scraper-5dd7cb5fc-9bbhj from kubernetes-dashboard started at 2024-05-11 13:28:57 +0000 UTC (1 container statuses recorded)
  May 11 13:42:15.820: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  May 11 13:42:15.820: INFO: sonobuoy-systemd-logs-daemon-set-49c1eec6cf1a48c7-vdbk7 from sonobuoy started at 2024-05-11 12:13:06 +0000 UTC (2 container statuses recorded)
  May 11 13:42:15.820: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 11 13:42:15.820: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-16-37 @ 05/11/24 13:42:15.833
  STEP: verifying the node has the label node ip-172-31-35-147 @ 05/11/24 13:42:15.847
  STEP: verifying the node has the label node ip-172-31-73-54 @ 05/11/24 13:42:15.859
  May 11 13:42:15.870: INFO: Pod nginx-ingress-controller-kubernetes-worker-68vzz requesting resource cpu=0m on Node ip-172-31-35-147
  May 11 13:42:15.870: INFO: Pod nginx-ingress-controller-kubernetes-worker-drx5f requesting resource cpu=0m on Node ip-172-31-73-54
  May 11 13:42:15.870: INFO: Pod nginx-ingress-controller-kubernetes-worker-v466k requesting resource cpu=0m on Node ip-172-31-16-37
  May 11 13:42:15.870: INFO: Pod calico-node-l6qmg requesting resource cpu=250m on Node ip-172-31-73-54
  May 11 13:42:15.870: INFO: Pod calico-node-t46qx requesting resource cpu=250m on Node ip-172-31-16-37
  May 11 13:42:15.871: INFO: Pod calico-node-v7fn9 requesting resource cpu=250m on Node ip-172-31-35-147
  May 11 13:42:15.871: INFO: Pod coredns-bddfd76d7-pk78z requesting resource cpu=100m on Node ip-172-31-35-147
  May 11 13:42:15.871: INFO: Pod kube-state-metrics-6f48cdd76-mpr6f requesting resource cpu=0m on Node ip-172-31-35-147
  May 11 13:42:15.871: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-6l49v requesting resource cpu=5m on Node ip-172-31-16-37
  May 11 13:42:15.871: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-9bbhj requesting resource cpu=0m on Node ip-172-31-73-54
  May 11 13:42:15.871: INFO: Pod kubernetes-dashboard-7b899cb9d9-j9w54 requesting resource cpu=0m on Node ip-172-31-35-147
  May 11 13:42:15.871: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-16-37
  May 11 13:42:15.871: INFO: Pod sonobuoy-e2e-job-7e280b976dab4535 requesting resource cpu=0m on Node ip-172-31-16-37
  May 11 13:42:15.871: INFO: Pod sonobuoy-systemd-logs-daemon-set-49c1eec6cf1a48c7-8n44k requesting resource cpu=0m on Node ip-172-31-16-37
  May 11 13:42:15.871: INFO: Pod sonobuoy-systemd-logs-daemon-set-49c1eec6cf1a48c7-8xp5v requesting resource cpu=0m on Node ip-172-31-35-147
  May 11 13:42:15.871: INFO: Pod sonobuoy-systemd-logs-daemon-set-49c1eec6cf1a48c7-vdbk7 requesting resource cpu=0m on Node ip-172-31-73-54
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/11/24 13:42:15.871
  May 11 13:42:15.871: INFO: Creating a pod which consumes cpu=1221m on Node ip-172-31-16-37
  May 11 13:42:15.879: INFO: Creating a pod which consumes cpu=1155m on Node ip-172-31-35-147
  May 11 13:42:15.891: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-73-54
  E0511 13:42:16.337577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:17.337542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/11/24 13:42:17.913
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9c34e606-aefd-44c4-9a9c-b91da965c966.17ce72fc45f75da2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1610/filler-pod-9c34e606-aefd-44c4-9a9c-b91da965c966 to ip-172-31-73-54] @ 05/11/24 13:42:17.915
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9c34e606-aefd-44c4-9a9c-b91da965c966.17ce72fc63f29379], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/11/24 13:42:17.915
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9c34e606-aefd-44c4-9a9c-b91da965c966.17ce72fc6506d17f], Reason = [Created], Message = [Created container filler-pod-9c34e606-aefd-44c4-9a9c-b91da965c966] @ 05/11/24 13:42:17.915
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9c34e606-aefd-44c4-9a9c-b91da965c966.17ce72fc676140b1], Reason = [Started], Message = [Started container filler-pod-9c34e606-aefd-44c4-9a9c-b91da965c966] @ 05/11/24 13:42:17.915
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a6088e33-ad57-4101-a76a-709702f4de31.17ce72fc44b6f6f1], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1610/filler-pod-a6088e33-ad57-4101-a76a-709702f4de31 to ip-172-31-16-37] @ 05/11/24 13:42:17.915
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a6088e33-ad57-4101-a76a-709702f4de31.17ce72fc63644e5c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/11/24 13:42:17.915
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a6088e33-ad57-4101-a76a-709702f4de31.17ce72fc646df08c], Reason = [Created], Message = [Created container filler-pod-a6088e33-ad57-4101-a76a-709702f4de31] @ 05/11/24 13:42:17.916
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a6088e33-ad57-4101-a76a-709702f4de31.17ce72fc67134e35], Reason = [Started], Message = [Started container filler-pod-a6088e33-ad57-4101-a76a-709702f4de31] @ 05/11/24 13:42:17.916
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cedff3f1-2e91-4ac4-89a3-3b8010ee0daa.17ce72fc457836cc], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1610/filler-pod-cedff3f1-2e91-4ac4-89a3-3b8010ee0daa to ip-172-31-35-147] @ 05/11/24 13:42:17.916
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cedff3f1-2e91-4ac4-89a3-3b8010ee0daa.17ce72fc65438539], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/11/24 13:42:17.916
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cedff3f1-2e91-4ac4-89a3-3b8010ee0daa.17ce72fc665a1a09], Reason = [Created], Message = [Created container filler-pod-cedff3f1-2e91-4ac4-89a3-3b8010ee0daa] @ 05/11/24 13:42:17.916
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cedff3f1-2e91-4ac4-89a3-3b8010ee0daa.17ce72fc68de2d9e], Reason = [Started], Message = [Started container filler-pod-cedff3f1-2e91-4ac4-89a3-3b8010ee0daa] @ 05/11/24 13:42:17.916
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17ce72fcbe31aa66], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 05/11/24 13:42:17.93
  E0511 13:42:18.337690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-16-37 @ 05/11/24 13:42:18.928
  STEP: verifying the node doesn't have the label node @ 05/11/24 13:42:18.938
  STEP: removing the label node off the node ip-172-31-35-147 @ 05/11/24 13:42:18.944
  STEP: verifying the node doesn't have the label node @ 05/11/24 13:42:18.955
  STEP: removing the label node off the node ip-172-31-73-54 @ 05/11/24 13:42:18.958
  STEP: verifying the node doesn't have the label node @ 05/11/24 13:42:18.969
  May 11 13:42:18.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1610" for this suite. @ 05/11/24 13:42:18.977
• [3.213 seconds]
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 05/11/24 13:42:18.983
  May 11 13:42:18.983: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename replication-controller @ 05/11/24 13:42:18.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:42:18.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:42:19
  STEP: Given a ReplicationController is created @ 05/11/24 13:42:19.001
  STEP: When the matched label of one of its pods change @ 05/11/24 13:42:19.008
  May 11 13:42:19.010: INFO: Pod name pod-release: Found 0 pods out of 1
  E0511 13:42:19.337785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:20.337885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:21.338075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:22.338176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:23.338273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:42:24.015: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/11/24 13:42:24.025
  E0511 13:42:24.338615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:42:25.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1113" for this suite. @ 05/11/24 13:42:25.036
• [6.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 05/11/24 13:42:25.043
  May 11 13:42:25.044: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename conformance-tests @ 05/11/24 13:42:25.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:42:25.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:42:25.068
  STEP: Getting node addresses @ 05/11/24 13:42:25.069
  May 11 13:42:25.069: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  May 11 13:42:25.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-5740" for this suite. @ 05/11/24 13:42:25.078
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 05/11/24 13:42:25.085
  May 11 13:42:25.085: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-probe @ 05/11/24 13:42:25.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:42:25.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:42:25.103
  E0511 13:42:25.339479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:26.339586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:27.340311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:28.340402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:29.340528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:30.340806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:31.340885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:32.340985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:33.341337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:34.341431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:35.342417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:36.343413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:37.344320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:38.345067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:39.346073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:40.346261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:41.346709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:42.346798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:43.347776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:44.348057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:45.348736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:46.348862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:42:47.179: INFO: Container started at 2024-05-11 13:42:25 +0000 UTC, pod became ready at 2024-05-11 13:42:45 +0000 UTC
  May 11 13:42:47.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1939" for this suite. @ 05/11/24 13:42:47.183
• [22.103 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 05/11/24 13:42:47.189
  May 11 13:42:47.189: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename containers @ 05/11/24 13:42:47.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:42:47.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:42:47.207
  STEP: Creating a pod to test override all @ 05/11/24 13:42:47.209
  E0511 13:42:47.349517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:48.349656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:42:49.225
  May 11 13:42:49.228: INFO: Trying to get logs from node ip-172-31-73-54 pod client-containers-2f2c141b-ce81-4618-8d51-a3f30904be04 container agnhost-container: <nil>
  STEP: delete the pod @ 05/11/24 13:42:49.234
  May 11 13:42:49.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7649" for this suite. @ 05/11/24 13:42:49.252
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 05/11/24 13:42:49.258
  May 11 13:42:49.258: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename gc @ 05/11/24 13:42:49.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:42:49.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:42:49.275
  May 11 13:42:49.305: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"bdeed023-8d3d-4d63-982f-7634e284074e", Controller:(*bool)(0xc0050ee16e), BlockOwnerDeletion:(*bool)(0xc0050ee16f)}}
  May 11 13:42:49.311: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"3b03aa40-7296-49af-8ba0-676f375ae80e", Controller:(*bool)(0xc004c2b0b6), BlockOwnerDeletion:(*bool)(0xc004c2b0b7)}}
  May 11 13:42:49.316: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"d0a526ab-6cff-420a-a481-2d39562968c2", Controller:(*bool)(0xc004c2b2ee), BlockOwnerDeletion:(*bool)(0xc004c2b2ef)}}
  E0511 13:42:49.350284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:50.350510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:51.351276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:52.351373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:53.351557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:42:54.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2694" for this suite. @ 05/11/24 13:42:54.332
• [5.082 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 05/11/24 13:42:54.341
  May 11 13:42:54.341: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename job @ 05/11/24 13:42:54.341
  E0511 13:42:54.352097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:42:54.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:42:54.361
  STEP: Creating Indexed job @ 05/11/24 13:42:54.363
  STEP: Ensuring job reaches completions @ 05/11/24 13:42:54.373
  E0511 13:42:55.352643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:56.352731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:57.352924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:58.352999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:42:59.353112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:00.353186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:01.353762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:02.353833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 05/11/24 13:43:02.379
  May 11 13:43:02.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9468" for this suite. @ 05/11/24 13:43:02.384
• [8.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 05/11/24 13:43:02.391
  May 11 13:43:02.391: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubelet-test @ 05/11/24 13:43:02.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:43:02.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:43:02.409
  E0511 13:43:03.354828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:04.354883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:43:04.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6337" for this suite. @ 05/11/24 13:43:04.52
• [2.135 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 05/11/24 13:43:04.526
  May 11 13:43:04.526: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubelet-test @ 05/11/24 13:43:04.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:43:04.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:43:04.544
  E0511 13:43:05.354980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:06.355049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:43:06.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9796" for this suite. @ 05/11/24 13:43:06.575
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 05/11/24 13:43:06.583
  May 11 13:43:06.583: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename deployment @ 05/11/24 13:43:06.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:43:06.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:43:06.601
  May 11 13:43:06.603: INFO: Creating simple deployment test-new-deployment
  May 11 13:43:06.615: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  E0511 13:43:07.355109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:08.356113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 05/11/24 13:43:08.627
  STEP: updating a scale subresource @ 05/11/24 13:43:08.629
  STEP: verifying the deployment Spec.Replicas was modified @ 05/11/24 13:43:08.635
  STEP: Patch a scale subresource @ 05/11/24 13:43:08.638
  May 11 13:43:08.672: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3348",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ccdfa1f1-b611-4814-8e79-5f6be0b1c077",
      ResourceVersion: (string) (len=5) "41580",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851031786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 11 13:43:08.701: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3348",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb10505a-cf6d-495b-8578-fb50ef6627bf",
      ResourceVersion: (string) (len=5) "41585",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851031786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "ccdfa1f1-b611-4814-8e79-5f6be0b1c077",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 63 64 66 61 31  66 31 2d 62 36 31 31 2d  |\"ccdfa1f1-b611-|
              00000120  34 38 31 34 2d 38 65 37  39 2d 35 66 36 62 65 30  |4814-8e79-5f6be0|
              00000130  62 31 63 30 37 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b1c077\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 11 13:43:08.707: INFO: Pod "test-new-deployment-557759b7c7-c6499" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-c6499",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3348",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2bc5b765-b9ec-4f39-86a4-137b230b9d83",
      ResourceVersion: (string) (len=5) "41572",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851031786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "eb10505a-cf6d-495b-8578-fb50ef6627bf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  31 30 35 30 35 61 2d 63  |d\":\"eb10505a-c|
              00000090  66 36 64 2d 34 39 35 62  2d 38 35 37 38 2d 66 62  |f6d-495b-8578-fb|
              000000a0  35 30 65 66 36 36 32 37  62 66 5c 22 7d 22 3a 7b  |50ef6627bf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  35 2e 32 30 36 5c 22 7d  |2.168.105.206\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x7bf7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x7bf7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-73-54",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.73.54",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.73.54"
        }
      },
      PodIP: (string) (len=15) "192.168.105.206",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.105.206"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851031786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851031787,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f2f92ac730a4b5b1850479a74708a824e9c2e85ce5eb0f69e3cdcd340d46eb6d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 13:43:08.708: INFO: Pod "test-new-deployment-557759b7c7-crl9z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-crl9z",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3348",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe1ebb06-665e-4e01-b904-f5fb081bd27c",
      ResourceVersion: (string) (len=5) "41584",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851031788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "eb10505a-cf6d-495b-8578-fb50ef6627bf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  31 30 35 30 35 61 2d 63  |d\":\"eb10505a-c|
              00000090  66 36 64 2d 34 39 35 62  2d 38 35 37 38 2d 66 62  |f6d-495b-8578-fb|
              000000a0  35 30 65 66 36 36 32 37  62 66 5c 22 7d 22 3a 7b  |50ef6627bf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fzp5l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fzp5l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-35-147",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851031788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 13:43:08.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3348" for this suite. @ 05/11/24 13:43:08.72
• [2.157 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 05/11/24 13:43:08.74
  May 11 13:43:08.740: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/11/24 13:43:08.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:43:08.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:43:08.779
  STEP: creating a target pod @ 05/11/24 13:43:08.781
  E0511 13:43:09.357020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:10.357118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/11/24 13:43:10.804
  E0511 13:43:11.357460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:12.357576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 05/11/24 13:43:12.821
  May 11 13:43:12.821: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4751 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:43:12.821: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:43:12.822: INFO: ExecWithOptions: Clientset creation
  May 11 13:43:12.822: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-4751/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  May 11 13:43:12.879: INFO: Exec stderr: ""
  May 11 13:43:12.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4751" for this suite. @ 05/11/24 13:43:12.891
• [4.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 05/11/24 13:43:12.897
  May 11 13:43:12.897: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename containers @ 05/11/24 13:43:12.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:43:12.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:43:12.914
  E0511 13:43:13.357679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:14.357754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:43:14.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9473" for this suite. @ 05/11/24 13:43:14.95
• [2.059 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 05/11/24 13:43:14.957
  May 11 13:43:14.957: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 13:43:14.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:43:14.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:43:14.975
  STEP: fetching services @ 05/11/24 13:43:14.977
  May 11 13:43:14.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2351" for this suite. @ 05/11/24 13:43:14.984
• [0.033 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 05/11/24 13:43:14.99
  May 11 13:43:14.990: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl @ 05/11/24 13:43:14.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:43:15.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:43:15.008
  STEP: starting the proxy server @ 05/11/24 13:43:15.01
  May 11 13:43:15.010: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-1963 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 05/11/24 13:43:15.04
  May 11 13:43:15.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1963" for this suite. @ 05/11/24 13:43:15.049
• [0.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 05/11/24 13:43:15.055
  May 11 13:43:15.055: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename discovery @ 05/11/24 13:43:15.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:43:15.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:43:15.074
  STEP: Setting up server cert @ 05/11/24 13:43:15.077
  May 11 13:43:15.191: INFO: Checking APIGroup: apiregistration.k8s.io
  May 11 13:43:15.192: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  May 11 13:43:15.192: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  May 11 13:43:15.192: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  May 11 13:43:15.192: INFO: Checking APIGroup: apps
  May 11 13:43:15.193: INFO: PreferredVersion.GroupVersion: apps/v1
  May 11 13:43:15.193: INFO: Versions found [{apps/v1 v1}]
  May 11 13:43:15.193: INFO: apps/v1 matches apps/v1
  May 11 13:43:15.193: INFO: Checking APIGroup: events.k8s.io
  May 11 13:43:15.194: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  May 11 13:43:15.194: INFO: Versions found [{events.k8s.io/v1 v1}]
  May 11 13:43:15.194: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  May 11 13:43:15.194: INFO: Checking APIGroup: authentication.k8s.io
  May 11 13:43:15.194: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  May 11 13:43:15.194: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  May 11 13:43:15.194: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  May 11 13:43:15.194: INFO: Checking APIGroup: authorization.k8s.io
  May 11 13:43:15.195: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  May 11 13:43:15.195: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  May 11 13:43:15.195: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  May 11 13:43:15.195: INFO: Checking APIGroup: autoscaling
  May 11 13:43:15.196: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  May 11 13:43:15.196: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  May 11 13:43:15.196: INFO: autoscaling/v2 matches autoscaling/v2
  May 11 13:43:15.196: INFO: Checking APIGroup: batch
  May 11 13:43:15.196: INFO: PreferredVersion.GroupVersion: batch/v1
  May 11 13:43:15.196: INFO: Versions found [{batch/v1 v1}]
  May 11 13:43:15.196: INFO: batch/v1 matches batch/v1
  May 11 13:43:15.196: INFO: Checking APIGroup: certificates.k8s.io
  May 11 13:43:15.197: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  May 11 13:43:15.197: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  May 11 13:43:15.197: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  May 11 13:43:15.197: INFO: Checking APIGroup: networking.k8s.io
  May 11 13:43:15.198: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  May 11 13:43:15.198: INFO: Versions found [{networking.k8s.io/v1 v1}]
  May 11 13:43:15.198: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  May 11 13:43:15.198: INFO: Checking APIGroup: policy
  May 11 13:43:15.198: INFO: PreferredVersion.GroupVersion: policy/v1
  May 11 13:43:15.198: INFO: Versions found [{policy/v1 v1}]
  May 11 13:43:15.198: INFO: policy/v1 matches policy/v1
  May 11 13:43:15.198: INFO: Checking APIGroup: rbac.authorization.k8s.io
  May 11 13:43:15.199: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  May 11 13:43:15.199: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  May 11 13:43:15.199: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  May 11 13:43:15.199: INFO: Checking APIGroup: storage.k8s.io
  May 11 13:43:15.200: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  May 11 13:43:15.200: INFO: Versions found [{storage.k8s.io/v1 v1}]
  May 11 13:43:15.200: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  May 11 13:43:15.200: INFO: Checking APIGroup: admissionregistration.k8s.io
  May 11 13:43:15.200: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  May 11 13:43:15.200: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  May 11 13:43:15.200: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  May 11 13:43:15.200: INFO: Checking APIGroup: apiextensions.k8s.io
  May 11 13:43:15.201: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  May 11 13:43:15.201: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  May 11 13:43:15.201: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  May 11 13:43:15.201: INFO: Checking APIGroup: scheduling.k8s.io
  May 11 13:43:15.201: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  May 11 13:43:15.201: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  May 11 13:43:15.201: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  May 11 13:43:15.201: INFO: Checking APIGroup: coordination.k8s.io
  May 11 13:43:15.202: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  May 11 13:43:15.202: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  May 11 13:43:15.202: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  May 11 13:43:15.202: INFO: Checking APIGroup: node.k8s.io
  May 11 13:43:15.203: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  May 11 13:43:15.203: INFO: Versions found [{node.k8s.io/v1 v1}]
  May 11 13:43:15.203: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  May 11 13:43:15.203: INFO: Checking APIGroup: discovery.k8s.io
  May 11 13:43:15.204: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  May 11 13:43:15.204: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  May 11 13:43:15.204: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  May 11 13:43:15.204: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  May 11 13:43:15.205: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  May 11 13:43:15.205: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  May 11 13:43:15.205: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  May 11 13:43:15.205: INFO: Checking APIGroup: metrics.k8s.io
  May 11 13:43:15.205: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  May 11 13:43:15.205: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  May 11 13:43:15.205: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  May 11 13:43:15.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3688" for this suite. @ 05/11/24 13:43:15.208
• [0.159 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 05/11/24 13:43:15.215
  May 11 13:43:15.215: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/11/24 13:43:15.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:43:15.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:43:15.233
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/11/24 13:43:15.234
  May 11 13:43:15.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 13:43:15.358597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:16.359597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:43:16.477: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 13:43:17.360267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:18.360291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:19.360942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:20.361834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:21.362845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:43:21.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2403" for this suite. @ 05/11/24 13:43:21.561
• [6.355 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 05/11/24 13:43:21.571
  May 11 13:43:21.571: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 13:43:21.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:43:21.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:43:21.591
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 13:43:21.594
  E0511 13:43:22.362968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:23.363332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:43:23.609
  May 11 13:43:23.613: INFO: Trying to get logs from node ip-172-31-35-147 pod downwardapi-volume-87c23e8b-baec-4af9-95c9-b364f41027e5 container client-container: <nil>
  STEP: delete the pod @ 05/11/24 13:43:23.634
  May 11 13:43:23.651: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8822" for this suite. @ 05/11/24 13:43:23.654
• [2.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 05/11/24 13:43:23.663
  May 11 13:43:23.663: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 13:43:23.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:43:23.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:43:23.683
  STEP: Setting up server cert @ 05/11/24 13:43:23.705
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 13:43:23.927
  STEP: Deploying the webhook pod @ 05/11/24 13:43:23.936
  STEP: Wait for the deployment to be ready @ 05/11/24 13:43:23.949
  May 11 13:43:23.955: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0511 13:43:24.363855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:25.363917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/11/24 13:43:25.967
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 13:43:25.983
  E0511 13:43:26.364506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:43:26.984: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 11 13:43:26.991: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 13:43:27.365191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2617-crds.webhook.example.com via the AdmissionRegistration API @ 05/11/24 13:43:27.503
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/11/24 13:43:27.519
  E0511 13:43:28.366236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:29.366334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:43:30.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4037" for this suite. @ 05/11/24 13:43:30.118
  STEP: Destroying namespace "webhook-markers-4234" for this suite. @ 05/11/24 13:43:30.126
• [6.471 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 05/11/24 13:43:30.134
  May 11 13:43:30.134: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename replicaset @ 05/11/24 13:43:30.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:43:30.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:43:30.151
  May 11 13:43:30.162: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0511 13:43:30.367292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:31.367516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:32.367607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:33.367709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:34.367818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:43:35.167: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/11/24 13:43:35.168
  STEP: Scaling up "test-rs" replicaset @ 05/11/24 13:43:35.168
  May 11 13:43:35.176: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/11/24 13:43:35.176
  May 11 13:43:35.186: INFO: observed ReplicaSet test-rs in namespace replicaset-3664 with ReadyReplicas 1, AvailableReplicas 1
  May 11 13:43:35.197: INFO: observed ReplicaSet test-rs in namespace replicaset-3664 with ReadyReplicas 1, AvailableReplicas 1
  May 11 13:43:35.216: INFO: observed ReplicaSet test-rs in namespace replicaset-3664 with ReadyReplicas 1, AvailableReplicas 1
  May 11 13:43:35.224: INFO: observed ReplicaSet test-rs in namespace replicaset-3664 with ReadyReplicas 1, AvailableReplicas 1
  E0511 13:43:35.368828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:43:35.980: INFO: observed ReplicaSet test-rs in namespace replicaset-3664 with ReadyReplicas 2, AvailableReplicas 2
  May 11 13:43:36.131: INFO: observed Replicaset test-rs in namespace replicaset-3664 with ReadyReplicas 3 found true
  May 11 13:43:36.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3664" for this suite. @ 05/11/24 13:43:36.135
• [6.008 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 05/11/24 13:43:36.142
  May 11 13:43:36.142: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 13:43:36.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:43:36.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:43:36.16
  STEP: Creating projection with secret that has name projected-secret-test-dc6f90ef-ac06-47fe-9ee1-7b5b1e3240a8 @ 05/11/24 13:43:36.163
  STEP: Creating a pod to test consume secrets @ 05/11/24 13:43:36.168
  E0511 13:43:36.368910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:37.369009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:38.369601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:39.369702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:43:40.191
  May 11 13:43:40.194: INFO: Trying to get logs from node ip-172-31-35-147 pod pod-projected-secrets-831eccf8-7b27-48c7-a627-96c28f865953 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/11/24 13:43:40.202
  May 11 13:43:40.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9952" for this suite. @ 05/11/24 13:43:40.221
• [4.085 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 05/11/24 13:43:40.227
  May 11 13:43:40.227: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename sched-preemption @ 05/11/24 13:43:40.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:43:40.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:43:40.249
  May 11 13:43:40.274: INFO: Waiting up to 1m0s for all nodes to be ready
  E0511 13:43:40.370419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:41.370556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:42.370838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:43.371097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:44.371621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:45.371751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:46.372321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:47.372598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:48.372805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:49.373127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:50.373515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:51.373629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:52.374230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:53.375127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:54.375356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:55.376310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:56.376584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:57.376888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:58.377693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:43:59.377805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:00.378489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:01.378582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:02.379415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:03.379562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:04.380417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:05.380668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:06.381202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:07.381595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:08.382307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:09.382436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:10.382675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:11.383124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:12.383697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:13.383901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:14.384589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:15.384751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:16.385394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:17.385504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:18.386143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:19.386252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:20.387119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:21.387286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:22.388226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:23.388342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:24.389309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:25.389405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:26.390150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:27.390266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:28.390666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:29.390792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:30.391382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:31.392075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:32.392974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:33.393235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:34.393589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:35.393712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:36.393954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:37.394074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:38.394186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:39.394282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:44:40.277: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/11/24 13:44:40.28
  May 11 13:44:40.280: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/11/24 13:44:40.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:44:40.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:44:40.301
  STEP: Finding an available node @ 05/11/24 13:44:40.303
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/11/24 13:44:40.303
  E0511 13:44:40.394841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:41.395844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/11/24 13:44:42.325
  May 11 13:44:42.340: INFO: found a healthy node: ip-172-31-73-54
  E0511 13:44:42.396525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:43.397189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:44.397755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:45.398526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:46.398514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:47.399332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:44:48.397: INFO: pods created so far: [1 1 1]
  May 11 13:44:48.397: INFO: length of pods created so far: 3
  E0511 13:44:48.400008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:49.400737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:50.401596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:44:50.409: INFO: pods created so far: [2 2 1]
  E0511 13:44:51.402560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:52.402640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:53.402751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:54.402821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:55.402935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:56.403785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:57.403870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:44:57.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9236" for this suite. @ 05/11/24 13:44:57.486
  May 11 13:44:57.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-656" for this suite. @ 05/11/24 13:44:57.494
• [77.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 05/11/24 13:44:57.505
  May 11 13:44:57.505: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 13:44:57.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:44:57.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:44:57.523
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 13:44:57.525
  E0511 13:44:58.404212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:44:59.404307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:44:59.541
  May 11 13:44:59.544: INFO: Trying to get logs from node ip-172-31-73-54 pod downwardapi-volume-0d4456b9-b4bf-43ce-a128-aff85bdce759 container client-container: <nil>
  STEP: delete the pod @ 05/11/24 13:44:59.553
  May 11 13:44:59.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1309" for this suite. @ 05/11/24 13:44:59.577
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 05/11/24 13:44:59.583
  May 11 13:44:59.583: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename field-validation @ 05/11/24 13:44:59.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:44:59.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:44:59.601
  May 11 13:44:59.604: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  W0511 13:44:59.605111      19 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0044752d0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0511 13:45:00.404921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:01.404994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0511 13:45:02.140965      19 warnings.go:70] unknown field "alpha"
  W0511 13:45:02.140982      19 warnings.go:70] unknown field "beta"
  W0511 13:45:02.140984      19 warnings.go:70] unknown field "delta"
  W0511 13:45:02.140988      19 warnings.go:70] unknown field "epsilon"
  W0511 13:45:02.140990      19 warnings.go:70] unknown field "gamma"
  E0511 13:45:02.405099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:45:02.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9454" for this suite. @ 05/11/24 13:45:02.685
• [3.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 05/11/24 13:45:02.692
  May 11 13:45:02.692: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename sysctl @ 05/11/24 13:45:02.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:02.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:02.714
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/11/24 13:45:02.717
  STEP: Watching for error events or started pod @ 05/11/24 13:45:02.724
  E0511 13:45:03.405410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:04.406420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 05/11/24 13:45:04.729
  E0511 13:45:05.407144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:06.407235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 05/11/24 13:45:06.739
  STEP: Getting logs from the pod @ 05/11/24 13:45:06.739
  STEP: Checking that the sysctl is actually updated @ 05/11/24 13:45:06.746
  May 11 13:45:06.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3647" for this suite. @ 05/11/24 13:45:06.749
• [4.064 seconds]
------------------------------
SSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 05/11/24 13:45:06.756
  May 11 13:45:06.756: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/11/24 13:45:06.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:06.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:06.774
  STEP: creating a target pod @ 05/11/24 13:45:06.776
  E0511 13:45:07.408253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:08.408450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/11/24 13:45:08.798
  E0511 13:45:09.408998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:10.409477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 05/11/24 13:45:10.816
  May 11 13:45:10.816: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3441 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:45:10.816: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:45:10.816: INFO: ExecWithOptions: Clientset creation
  May 11 13:45:10.816: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-3441/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  May 11 13:45:10.867: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/11/24 13:45:10.875
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/11/24 13:45:10.879
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/11/24 13:45:10.889
  May 11 13:45:10.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3441" for this suite. @ 05/11/24 13:45:10.898
• [4.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 05/11/24 13:45:10.905
  May 11 13:45:10.905: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename apf @ 05/11/24 13:45:10.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:10.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:10.926
  STEP: getting /apis @ 05/11/24 13:45:10.928
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/11/24 13:45:10.931
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/11/24 13:45:10.932
  STEP: creating @ 05/11/24 13:45:10.932
  STEP: getting @ 05/11/24 13:45:10.948
  STEP: listing @ 05/11/24 13:45:10.951
  STEP: watching @ 05/11/24 13:45:10.955
  May 11 13:45:10.955: INFO: starting watch
  STEP: patching @ 05/11/24 13:45:10.955
  STEP: updating @ 05/11/24 13:45:10.96
  May 11 13:45:10.968: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 05/11/24 13:45:10.968
  STEP: patching /status @ 05/11/24 13:45:10.97
  STEP: updating /status @ 05/11/24 13:45:10.976
  STEP: deleting @ 05/11/24 13:45:10.984
  STEP: deleting a collection @ 05/11/24 13:45:10.996
  May 11 13:45:11.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7321" for this suite. @ 05/11/24 13:45:11.019
• [0.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 05/11/24 13:45:11.028
  May 11 13:45:11.028: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pv @ 05/11/24 13:45:11.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:11.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:11.048
  STEP: Creating initial PV and PVC @ 05/11/24 13:45:11.05
  May 11 13:45:11.050: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5724" @ 05/11/24 13:45:11.063
  STEP: Listing PVCs in namespace "pv-5724" @ 05/11/24 13:45:11.067
  STEP: Patching the PV "pv-5724-2zvwg" @ 05/11/24 13:45:11.07
  STEP: Patching the PVC "pvc-4m5q5" @ 05/11/24 13:45:11.082
  STEP: Getting PV "pv-5724-2zvwg" @ 05/11/24 13:45:11.09
  STEP: Getting PVC "pvc-4m5q5" @ 05/11/24 13:45:11.094
  STEP: Deleting PVC "pvc-4m5q5" @ 05/11/24 13:45:11.097
  STEP: Confirm deletion of PVC "pvc-4m5q5" @ 05/11/24 13:45:11.104
  E0511 13:45:11.410180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:12.410211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-5724-2zvwg" @ 05/11/24 13:45:13.114
  STEP: Confirm deletion of PV "pv-5724-2zvwg" @ 05/11/24 13:45:13.121
  E0511 13:45:13.411123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:14.411217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 05/11/24 13:45:15.127
  May 11 13:45:15.127: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-5724-q4mjb" @ 05/11/24 13:45:15.136
  STEP: Updating the PVC "pvc-nvgb4" @ 05/11/24 13:45:15.145
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-nvgb4=updated" @ 05/11/24 13:45:15.152
  STEP: Deleting PVC "pvc-nvgb4" via DeleteCollection @ 05/11/24 13:45:15.155
  STEP: Confirm deletion of PVC "pvc-nvgb4" @ 05/11/24 13:45:15.166
  E0511 13:45:15.412191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:16.412286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-5724-q4mjb" via DeleteCollection @ 05/11/24 13:45:17.174
  STEP: Confirm deletion of PV "pv-5724-q4mjb" @ 05/11/24 13:45:17.183
  E0511 13:45:17.412457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:18.412532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:45:19.190: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  May 11 13:45:19.190: INFO: Deleting PersistentVolumeClaim "pvc-nvgb4"
  May 11 13:45:19.193: INFO: Deleting PersistentVolume "pv-5724-q4mjb"
  May 11 13:45:19.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5724" for this suite. @ 05/11/24 13:45:19.2
• [8.256 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 05/11/24 13:45:19.284
  May 11 13:45:19.284: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir @ 05/11/24 13:45:19.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:19.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:19.302
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/11/24 13:45:19.304
  E0511 13:45:19.413114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:20.414134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:21.414744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:22.414842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:45:23.323
  May 11 13:45:23.327: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-b77ece4f-bc97-4400-a9ed-865d26851f2d container test-container: <nil>
  STEP: delete the pod @ 05/11/24 13:45:23.332
  May 11 13:45:23.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6726" for this suite. @ 05/11/24 13:45:23.351
• [4.074 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 05/11/24 13:45:23.358
  May 11 13:45:23.358: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 13:45:23.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:23.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:23.381
  May 11 13:45:23.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9285" for this suite. @ 05/11/24 13:45:23.393
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 05/11/24 13:45:23.4
  May 11 13:45:23.400: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename security-context-test @ 05/11/24 13:45:23.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:23.414
  E0511 13:45:23.415506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:23.417
  E0511 13:45:24.416042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:25.416136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:26.416230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:27.416306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:45:27.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8477" for this suite. @ 05/11/24 13:45:27.447
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 05/11/24 13:45:27.454
  May 11 13:45:27.454: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename proxy @ 05/11/24 13:45:27.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:27.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:27.471
  May 11 13:45:27.473: INFO: Creating pod...
  E0511 13:45:28.416414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:29.416521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:45:29.489: INFO: Creating service...
  May 11 13:45:29.500: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1237/pods/agnhost/proxy/some/path/with/DELETE
  May 11 13:45:29.510: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 11 13:45:29.510: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1237/pods/agnhost/proxy/some/path/with/GET
  May 11 13:45:29.512: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  May 11 13:45:29.512: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1237/pods/agnhost/proxy/some/path/with/HEAD
  May 11 13:45:29.515: INFO: http.Client request:HEAD | StatusCode:200
  May 11 13:45:29.515: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1237/pods/agnhost/proxy/some/path/with/OPTIONS
  May 11 13:45:29.519: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 11 13:45:29.519: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1237/pods/agnhost/proxy/some/path/with/PATCH
  May 11 13:45:29.521: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 11 13:45:29.522: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1237/pods/agnhost/proxy/some/path/with/POST
  May 11 13:45:29.525: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 11 13:45:29.525: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1237/pods/agnhost/proxy/some/path/with/PUT
  May 11 13:45:29.529: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 11 13:45:29.529: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1237/services/test-service/proxy/some/path/with/DELETE
  May 11 13:45:29.534: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 11 13:45:29.534: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1237/services/test-service/proxy/some/path/with/GET
  May 11 13:45:29.540: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  May 11 13:45:29.540: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1237/services/test-service/proxy/some/path/with/HEAD
  May 11 13:45:29.544: INFO: http.Client request:HEAD | StatusCode:200
  May 11 13:45:29.545: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1237/services/test-service/proxy/some/path/with/OPTIONS
  May 11 13:45:29.549: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 11 13:45:29.549: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1237/services/test-service/proxy/some/path/with/PATCH
  May 11 13:45:29.554: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 11 13:45:29.554: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1237/services/test-service/proxy/some/path/with/POST
  May 11 13:45:29.559: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 11 13:45:29.559: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1237/services/test-service/proxy/some/path/with/PUT
  May 11 13:45:29.564: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 11 13:45:29.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1237" for this suite. @ 05/11/24 13:45:29.568
• [2.123 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 05/11/24 13:45:29.577
  May 11 13:45:29.577: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl @ 05/11/24 13:45:29.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:29.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:29.594
  STEP: validating cluster-info @ 05/11/24 13:45:29.596
  May 11 13:45:29.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-6096 cluster-info'
  May 11 13:45:29.635: INFO: stderr: ""
  May 11 13:45:29.635: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  May 11 13:45:29.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6096" for this suite. @ 05/11/24 13:45:29.638
• [0.070 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 05/11/24 13:45:29.647
  May 11 13:45:29.647: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename secrets @ 05/11/24 13:45:29.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:29.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:29.673
  STEP: Creating secret with name secret-test-337cefb2-d308-426c-b544-9054657cd7dc @ 05/11/24 13:45:29.675
  STEP: Creating a pod to test consume secrets @ 05/11/24 13:45:29.68
  E0511 13:45:30.417285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:31.417491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:45:31.696
  May 11 13:45:31.700: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-secrets-600a4ada-f06f-4db6-9f06-9e2771aa1d2b container secret-env-test: <nil>
  STEP: delete the pod @ 05/11/24 13:45:31.707
  May 11 13:45:31.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3738" for this suite. @ 05/11/24 13:45:31.727
• [2.085 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 05/11/24 13:45:31.733
  May 11 13:45:31.733: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename proxy @ 05/11/24 13:45:31.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:31.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:31.75
  May 11 13:45:31.752: INFO: Creating pod...
  E0511 13:45:32.417574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:33.417752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:45:33.770: INFO: Creating service...
  May 11 13:45:33.782: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7843/pods/agnhost/proxy?method=DELETE
  May 11 13:45:33.792: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 11 13:45:33.792: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7843/pods/agnhost/proxy?method=OPTIONS
  May 11 13:45:33.794: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 11 13:45:33.794: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7843/pods/agnhost/proxy?method=PATCH
  May 11 13:45:33.798: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 11 13:45:33.798: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7843/pods/agnhost/proxy?method=POST
  May 11 13:45:33.802: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 11 13:45:33.802: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7843/pods/agnhost/proxy?method=PUT
  May 11 13:45:33.804: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 11 13:45:33.804: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7843/services/e2e-proxy-test-service/proxy?method=DELETE
  May 11 13:45:33.811: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 11 13:45:33.811: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7843/services/e2e-proxy-test-service/proxy?method=OPTIONS
  May 11 13:45:33.817: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 11 13:45:33.817: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7843/services/e2e-proxy-test-service/proxy?method=PATCH
  May 11 13:45:33.821: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 11 13:45:33.821: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7843/services/e2e-proxy-test-service/proxy?method=POST
  May 11 13:45:33.826: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 11 13:45:33.826: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7843/services/e2e-proxy-test-service/proxy?method=PUT
  May 11 13:45:33.831: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 11 13:45:33.831: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7843/pods/agnhost/proxy?method=GET
  May 11 13:45:33.833: INFO: http.Client request:GET StatusCode:301
  May 11 13:45:33.833: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7843/services/e2e-proxy-test-service/proxy?method=GET
  May 11 13:45:33.839: INFO: http.Client request:GET StatusCode:301
  May 11 13:45:33.839: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7843/pods/agnhost/proxy?method=HEAD
  May 11 13:45:33.842: INFO: http.Client request:HEAD StatusCode:301
  May 11 13:45:33.842: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7843/services/e2e-proxy-test-service/proxy?method=HEAD
  May 11 13:45:33.845: INFO: http.Client request:HEAD StatusCode:301
  May 11 13:45:33.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7843" for this suite. @ 05/11/24 13:45:33.848
• [2.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 05/11/24 13:45:33.854
  May 11 13:45:33.854: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pods @ 05/11/24 13:45:33.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:33.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:33.874
  STEP: creating the pod @ 05/11/24 13:45:33.875
  STEP: setting up watch @ 05/11/24 13:45:33.876
  STEP: submitting the pod to kubernetes @ 05/11/24 13:45:33.979
  STEP: verifying the pod is in kubernetes @ 05/11/24 13:45:33.99
  STEP: verifying pod creation was observed @ 05/11/24 13:45:33.993
  E0511 13:45:34.418415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:35.418503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 05/11/24 13:45:36.005
  STEP: verifying pod deletion was observed @ 05/11/24 13:45:36.012
  E0511 13:45:36.418617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:37.418715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:38.418782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:45:38.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6116" for this suite. @ 05/11/24 13:45:38.644
• [4.797 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 05/11/24 13:45:38.652
  May 11 13:45:38.652: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename downward-api @ 05/11/24 13:45:38.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:38.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:38.668
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 13:45:38.67
  E0511 13:45:39.418906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:40.419027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:45:40.688
  May 11 13:45:40.692: INFO: Trying to get logs from node ip-172-31-73-54 pod downwardapi-volume-d0a911de-8743-4e0f-b45b-410dd4d743ad container client-container: <nil>
  STEP: delete the pod @ 05/11/24 13:45:40.698
  May 11 13:45:40.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5878" for this suite. @ 05/11/24 13:45:40.718
• [2.071 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 05/11/24 13:45:40.723
  May 11 13:45:40.723: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename security-context-test @ 05/11/24 13:45:40.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:40.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:40.743
  E0511 13:45:41.419961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:42.420300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:43.420607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:44.420714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:45:44.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1156" for this suite. @ 05/11/24 13:45:44.781
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 05/11/24 13:45:44.788
  May 11 13:45:44.788: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename replication-controller @ 05/11/24 13:45:44.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:44.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:44.805
  May 11 13:45:44.807: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/11/24 13:45:44.819
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/11/24 13:45:44.823
  E0511 13:45:45.420854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/11/24 13:45:45.831
  May 11 13:45:45.840: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/11/24 13:45:45.84
  E0511 13:45:46.421511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:45:46.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-204" for this suite. @ 05/11/24 13:45:46.852
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 05/11/24 13:45:46.858
  May 11 13:45:46.858: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl @ 05/11/24 13:45:46.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:46.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:46.876
  May 11 13:45:46.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-5308 version'
  May 11 13:45:46.912: INFO: stderr: ""
  May 11 13:45:46.912: INFO: stdout: "Client Version: v1.29.4\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.4\n"
  May 11 13:45:46.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5308" for this suite. @ 05/11/24 13:45:46.915
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 05/11/24 13:45:46.922
  May 11 13:45:46.922: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename endpointslice @ 05/11/24 13:45:46.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:46.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:46.939
  E0511 13:45:47.422143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:48.423175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:45:48.990: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6492" for this suite. @ 05/11/24 13:45:48.994
• [2.078 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 05/11/24 13:45:49
  May 11 13:45:49.000: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 13:45:49.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:49.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:49.019
  STEP: Creating projection with secret that has name projected-secret-test-map-4954db55-8b9e-4624-b2fc-f941bf806509 @ 05/11/24 13:45:49.021
  STEP: Creating a pod to test consume secrets @ 05/11/24 13:45:49.024
  E0511 13:45:49.423988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:50.424090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:51.424835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:52.425003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:45:53.045
  May 11 13:45:53.048: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-projected-secrets-73c51534-0ff1-4667-85a4-c442c8107aaf container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/11/24 13:45:53.054
  May 11 13:45:53.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1365" for this suite. @ 05/11/24 13:45:53.075
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 05/11/24 13:45:53.082
  May 11 13:45:53.082: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename svcaccounts @ 05/11/24 13:45:53.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:53.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:53.101
  May 11 13:45:53.105: INFO: Got root ca configmap in namespace "svcaccounts-4020"
  May 11 13:45:53.111: INFO: Deleted root ca configmap in namespace "svcaccounts-4020"
  E0511 13:45:53.425902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 05/11/24 13:45:53.611
  May 11 13:45:53.614: INFO: Recreated root ca configmap in namespace "svcaccounts-4020"
  May 11 13:45:53.620: INFO: Updated root ca configmap in namespace "svcaccounts-4020"
  STEP: waiting for the root ca configmap reconciled @ 05/11/24 13:45:54.12
  May 11 13:45:54.122: INFO: Reconciled root ca configmap in namespace "svcaccounts-4020"
  May 11 13:45:54.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4020" for this suite. @ 05/11/24 13:45:54.127
• [1.053 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 05/11/24 13:45:54.135
  May 11 13:45:54.135: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename configmap @ 05/11/24 13:45:54.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:54.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:54.156
  STEP: Creating configMap with name configmap-test-volume-7d300469-9147-4220-b370-87369b88ddf4 @ 05/11/24 13:45:54.159
  STEP: Creating a pod to test consume configMaps @ 05/11/24 13:45:54.163
  E0511 13:45:54.426940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:55.427045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:56.427118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:57.428409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:45:58.188
  May 11 13:45:58.190: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-configmaps-496431ba-d8ac-4fb8-988a-17f9555fb385 container agnhost-container: <nil>
  STEP: delete the pod @ 05/11/24 13:45:58.2
  May 11 13:45:58.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5399" for this suite. @ 05/11/24 13:45:58.221
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 05/11/24 13:45:58.228
  May 11 13:45:58.228: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename containers @ 05/11/24 13:45:58.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:45:58.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:45:58.246
  STEP: Creating a pod to test override arguments @ 05/11/24 13:45:58.248
  E0511 13:45:58.428994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:45:59.429208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:00.430075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:01.430152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:46:02.276
  May 11 13:46:02.279: INFO: Trying to get logs from node ip-172-31-73-54 pod client-containers-c9727925-ce64-481b-be04-3b6689cbd259 container agnhost-container: <nil>
  STEP: delete the pod @ 05/11/24 13:46:02.287
  May 11 13:46:02.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7846" for this suite. @ 05/11/24 13:46:02.308
• [4.088 seconds]
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 05/11/24 13:46:02.316
  May 11 13:46:02.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename watch @ 05/11/24 13:46:02.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:46:02.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:46:02.331
  STEP: creating a watch on configmaps with a certain label @ 05/11/24 13:46:02.334
  STEP: creating a new configmap @ 05/11/24 13:46:02.334
  STEP: modifying the configmap once @ 05/11/24 13:46:02.339
  STEP: changing the label value of the configmap @ 05/11/24 13:46:02.346
  STEP: Expecting to observe a delete notification for the watched object @ 05/11/24 13:46:02.353
  May 11 13:46:02.353: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-645  ca3458d3-f81d-4f27-9bbc-1d84ef81d161 43369 0 2024-05-11 13:46:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-11 13:46:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 13:46:02.353: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-645  ca3458d3-f81d-4f27-9bbc-1d84ef81d161 43370 0 2024-05-11 13:46:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-11 13:46:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 13:46:02.353: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-645  ca3458d3-f81d-4f27-9bbc-1d84ef81d161 43371 0 2024-05-11 13:46:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-11 13:46:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/11/24 13:46:02.353
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/11/24 13:46:02.36
  E0511 13:46:02.430197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:03.430397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:04.430447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:05.430552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:06.430656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:07.431129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:08.431220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:09.431411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:10.431490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:11.431577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 05/11/24 13:46:12.361
  STEP: modifying the configmap a third time @ 05/11/24 13:46:12.37
  STEP: deleting the configmap @ 05/11/24 13:46:12.379
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/11/24 13:46:12.386
  May 11 13:46:12.386: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-645  ca3458d3-f81d-4f27-9bbc-1d84ef81d161 43412 0 2024-05-11 13:46:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-11 13:46:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 13:46:12.386: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-645  ca3458d3-f81d-4f27-9bbc-1d84ef81d161 43413 0 2024-05-11 13:46:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-11 13:46:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 13:46:12.386: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-645  ca3458d3-f81d-4f27-9bbc-1d84ef81d161 43414 0 2024-05-11 13:46:02 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-11 13:46:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 13:46:12.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-645" for this suite. @ 05/11/24 13:46:12.39
• [10.079 seconds]
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 05/11/24 13:46:12.396
  May 11 13:46:12.396: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename crd-webhook @ 05/11/24 13:46:12.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:46:12.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:46:12.414
  STEP: Setting up server cert @ 05/11/24 13:46:12.415
  E0511 13:46:12.431937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/11/24 13:46:12.878
  STEP: Deploying the custom resource conversion webhook pod @ 05/11/24 13:46:12.889
  STEP: Wait for the deployment to be ready @ 05/11/24 13:46:12.899
  May 11 13:46:12.907: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0511 13:46:13.432620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:14.432696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/11/24 13:46:14.918
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 13:46:14.932
  E0511 13:46:15.433359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:46:15.932: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  May 11 13:46:15.941: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 13:46:16.433522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:17.433740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:18.433822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/11/24 13:46:18.515
  STEP: Create a v2 custom resource @ 05/11/24 13:46:18.53
  STEP: List CRs in v1 @ 05/11/24 13:46:18.536
  STEP: List CRs in v2 @ 05/11/24 13:46:18.559
  May 11 13:46:19.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3619" for this suite. @ 05/11/24 13:46:19.123
• [6.738 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 05/11/24 13:46:19.134
  May 11 13:46:19.134: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename configmap @ 05/11/24 13:46:19.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:46:19.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:46:19.159
  STEP: Creating configMap with name configmap-test-upd-262f8383-9724-4836-aeb6-36a7b26c65dd @ 05/11/24 13:46:19.165
  STEP: Creating the pod @ 05/11/24 13:46:19.17
  E0511 13:46:19.434248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:20.435147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-262f8383-9724-4836-aeb6-36a7b26c65dd @ 05/11/24 13:46:21.195
  STEP: waiting to observe update in volume @ 05/11/24 13:46:21.201
  E0511 13:46:21.435596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:22.435685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:23.435762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:24.436410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:25.436544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:26.436669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:27.437030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:28.437150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:29.437744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:30.437832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:31.438238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:32.438312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:33.439217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:34.439485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:35.439585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:36.439695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:37.440219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:38.440328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:39.441436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:40.441774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:41.442080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:42.442371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:43.442383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:44.442515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:45.442827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:46.443802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:47.444103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:48.444295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:49.444571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:50.444698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:51.445435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:52.445685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:53.446360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:54.446493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:55.447522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:56.447766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:57.448337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:58.448419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:46:59.449310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:00.449404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:01.449736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:02.449856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:03.450022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:04.450116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:05.450417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:06.450552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:07.451121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:08.451953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:09.451968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:10.452180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:11.452239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:12.452341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:13.453244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:14.453354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:15.454310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:16.454634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:17.455242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:18.455731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:19.456168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:20.456331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:21.457089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:22.457230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:23.457488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:24.458061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:25.458129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:26.459130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:27.459248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:28.459322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:29.459515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:30.459928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:31.460203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:32.460341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:33.460412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:34.460535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:35.460601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:36.461593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:37.461681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:38.462065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:39.462085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:40.462239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:41.463181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:42.464216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:43.464287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:44.464419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:45.464627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:46.465207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:47.465377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:48.466077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:49.466190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:47:49.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6641" for this suite. @ 05/11/24 13:47:49.578
• [90.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 05/11/24 13:47:49.584
  May 11 13:47:49.584: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 13:47:49.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:47:49.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:47:49.601
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 13:47:49.605
  E0511 13:47:50.466278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:51.468003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:52.468081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:53.468169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:47:53.625
  May 11 13:47:53.629: INFO: Trying to get logs from node ip-172-31-73-54 pod downwardapi-volume-4e41e0e3-bb4b-4c55-ad2a-c3c61a013eb0 container client-container: <nil>
  STEP: delete the pod @ 05/11/24 13:47:53.635
  May 11 13:47:53.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2591" for this suite. @ 05/11/24 13:47:53.652
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 05/11/24 13:47:53.66
  May 11 13:47:53.660: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-runtime @ 05/11/24 13:47:53.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:47:53.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:47:53.676
  STEP: create the container @ 05/11/24 13:47:53.678
  W0511 13:47:53.687128      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/11/24 13:47:53.687
  E0511 13:47:54.468423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:55.468500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:56.469198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/11/24 13:47:56.704
  STEP: the container should be terminated @ 05/11/24 13:47:56.708
  STEP: the termination message should be set @ 05/11/24 13:47:56.708
  May 11 13:47:56.708: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/11/24 13:47:56.708
  May 11 13:47:56.725: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9381" for this suite. @ 05/11/24 13:47:56.729
• [3.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 05/11/24 13:47:56.735
  May 11 13:47:56.735: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename deployment @ 05/11/24 13:47:56.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:47:56.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:47:56.753
  STEP: creating a Deployment @ 05/11/24 13:47:56.758
  May 11 13:47:56.758: INFO: Creating simple deployment test-deployment-6h97z
  May 11 13:47:56.771: INFO: deployment "test-deployment-6h97z" doesn't have the required revision set
  E0511 13:47:57.469355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:47:58.469503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 05/11/24 13:47:58.783
  May 11 13:47:58.786: INFO: Deployment test-deployment-6h97z has Conditions: [{Available True 2024-05-11 13:47:57 +0000 UTC 2024-05-11 13:47:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-05-11 13:47:57 +0000 UTC 2024-05-11 13:47:56 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6h97z-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/11/24 13:47:58.786
  May 11 13:47:58.796: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 13, 47, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 47, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 11, 13, 47, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 11, 13, 47, 56, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-6h97z-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/11/24 13:47:58.796
  May 11 13:47:58.798: INFO: Observed &Deployment event: ADDED
  May 11 13:47:58.798: INFO: Observed Deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-11 13:47:56 +0000 UTC 2024-05-11 13:47:56 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6h97z-5d576bd769"}
  May 11 13:47:58.798: INFO: Observed &Deployment event: MODIFIED
  May 11 13:47:58.798: INFO: Observed Deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-11 13:47:56 +0000 UTC 2024-05-11 13:47:56 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6h97z-5d576bd769"}
  May 11 13:47:58.798: INFO: Observed Deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-11 13:47:56 +0000 UTC 2024-05-11 13:47:56 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 11 13:47:58.798: INFO: Observed &Deployment event: MODIFIED
  May 11 13:47:58.798: INFO: Observed Deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-11 13:47:56 +0000 UTC 2024-05-11 13:47:56 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 11 13:47:58.798: INFO: Observed Deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-11 13:47:56 +0000 UTC 2024-05-11 13:47:56 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-6h97z-5d576bd769" is progressing.}
  May 11 13:47:58.798: INFO: Observed &Deployment event: MODIFIED
  May 11 13:47:58.798: INFO: Observed Deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-11 13:47:57 +0000 UTC 2024-05-11 13:47:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 11 13:47:58.798: INFO: Observed Deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-11 13:47:57 +0000 UTC 2024-05-11 13:47:56 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6h97z-5d576bd769" has successfully progressed.}
  May 11 13:47:58.799: INFO: Observed &Deployment event: MODIFIED
  May 11 13:47:58.799: INFO: Observed Deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-11 13:47:57 +0000 UTC 2024-05-11 13:47:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 11 13:47:58.799: INFO: Observed Deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-11 13:47:57 +0000 UTC 2024-05-11 13:47:56 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6h97z-5d576bd769" has successfully progressed.}
  May 11 13:47:58.799: INFO: Found Deployment test-deployment-6h97z in namespace deployment-701 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 11 13:47:58.799: INFO: Deployment test-deployment-6h97z has an updated status
  STEP: patching the Statefulset Status @ 05/11/24 13:47:58.799
  May 11 13:47:58.799: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May 11 13:47:58.805: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/11/24 13:47:58.805
  May 11 13:47:58.806: INFO: Observed &Deployment event: ADDED
  May 11 13:47:58.806: INFO: Observed deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-11 13:47:56 +0000 UTC 2024-05-11 13:47:56 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6h97z-5d576bd769"}
  May 11 13:47:58.806: INFO: Observed &Deployment event: MODIFIED
  May 11 13:47:58.806: INFO: Observed deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-11 13:47:56 +0000 UTC 2024-05-11 13:47:56 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6h97z-5d576bd769"}
  May 11 13:47:58.806: INFO: Observed deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-11 13:47:56 +0000 UTC 2024-05-11 13:47:56 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 11 13:47:58.806: INFO: Observed &Deployment event: MODIFIED
  May 11 13:47:58.806: INFO: Observed deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-11 13:47:56 +0000 UTC 2024-05-11 13:47:56 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 11 13:47:58.806: INFO: Observed deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-11 13:47:56 +0000 UTC 2024-05-11 13:47:56 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-6h97z-5d576bd769" is progressing.}
  May 11 13:47:58.807: INFO: Observed &Deployment event: MODIFIED
  May 11 13:47:58.807: INFO: Observed deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-11 13:47:57 +0000 UTC 2024-05-11 13:47:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 11 13:47:58.807: INFO: Observed deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-11 13:47:57 +0000 UTC 2024-05-11 13:47:56 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6h97z-5d576bd769" has successfully progressed.}
  May 11 13:47:58.807: INFO: Observed &Deployment event: MODIFIED
  May 11 13:47:58.807: INFO: Observed deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-11 13:47:57 +0000 UTC 2024-05-11 13:47:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 11 13:47:58.807: INFO: Observed deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-11 13:47:57 +0000 UTC 2024-05-11 13:47:56 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6h97z-5d576bd769" has successfully progressed.}
  May 11 13:47:58.807: INFO: Observed deployment test-deployment-6h97z in namespace deployment-701 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 11 13:47:58.807: INFO: Observed &Deployment event: MODIFIED
  May 11 13:47:58.807: INFO: Found deployment test-deployment-6h97z in namespace deployment-701 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  May 11 13:47:58.807: INFO: Deployment test-deployment-6h97z has a patched status
  May 11 13:47:58.811: INFO: Deployment "test-deployment-6h97z":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-6h97z",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-701",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98934481-3c3f-4da8-a25f-cf0fcbb7cae1",
      ResourceVersion: (string) (len=5) "43819",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851032076,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851032076,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851032077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851032078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 11 13:47:58.814: INFO: New ReplicaSet "test-deployment-6h97z-5d576bd769" of Deployment "test-deployment-6h97z":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6h97z-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-701",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "15f86183-e713-4bdc-871c-2f7fc61eac1b",
      ResourceVersion: (string) (len=5) "43808",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851032076,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-6h97z",
          UID: (types.UID) (len=36) "98934481-3c3f-4da8-a25f-cf0fcbb7cae1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851032076,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 39 38 39  |k:{\"uid\":\"989|
              00000120  33 34 34 38 31 2d 33 63  33 66 2d 34 64 61 38 2d  |34481-3c3f-4da8-|
              00000130  61 32 35 66 2d 63 66 30  66 63 62 62 37 63 61 65  |a25f-cf0fcbb7cae|
              00000140  31 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |1\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851032077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 11 13:47:58.819: INFO: Pod "test-deployment-6h97z-5d576bd769-7hhx7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-6h97z-5d576bd769-7hhx7",
      GenerateName: (string) (len=33) "test-deployment-6h97z-5d576bd769-",
      Namespace: (string) (len=14) "deployment-701",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "34df3708-9c4c-4f5c-9d66-b8cf7db15a5a",
      ResourceVersion: (string) (len=5) "43807",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851032076,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-6h97z-5d576bd769",
          UID: (types.UID) (len=36) "15f86183-e713-4bdc-871c-2f7fc61eac1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851032076,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 31 35 66 38 36 31 38  33 2d 65 37 31 33 2d 34  |"15f86183-e713-4|
              000000a0  62 64 63 2d 38 37 31 63  2d 32 66 37 66 63 36 31  |bdc-871c-2f7fc61|
              000000b0  65 61 63 31 62 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |eac1b\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851032077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  35 2e 32 32 36 5c 22 7d  |2.168.105.226\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rl798",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rl798",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-73-54",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851032077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851032076,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851032077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851032077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851032076,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.73.54",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.73.54"
        }
      },
      PodIP: (string) (len=15) "192.168.105.226",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.105.226"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851032076,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851032077,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://38ae75357272309e6e3ae8d4ef7b9c19943fec9d6fa1a17c3d20e0fac1fe0be6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 11 13:47:58.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-701" for this suite. @ 05/11/24 13:47:58.826
• [2.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 05/11/24 13:47:58.832
  May 11 13:47:58.832: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename secrets @ 05/11/24 13:47:58.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:47:58.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:47:58.85
  STEP: Creating secret with name secret-test-086962b4-813f-4bd0-94e9-38470505840b @ 05/11/24 13:47:58.852
  STEP: Creating a pod to test consume secrets @ 05/11/24 13:47:58.857
  E0511 13:47:59.469750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:00.470011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:48:00.874
  May 11 13:48:00.877: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-secrets-8611e832-dfdb-4e09-8813-4fe870ef2f78 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/11/24 13:48:00.884
  May 11 13:48:00.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3544" for this suite. @ 05/11/24 13:48:00.905
• [2.079 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 05/11/24 13:48:00.911
  May 11 13:48:00.911: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename resourcequota @ 05/11/24 13:48:00.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:48:00.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:48:00.93
  STEP: Counting existing ResourceQuota @ 05/11/24 13:48:00.931
  E0511 13:48:01.470590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:02.470685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:03.470823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:04.471774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:05.471869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/11/24 13:48:05.935
  STEP: Ensuring resource quota status is calculated @ 05/11/24 13:48:05.941
  E0511 13:48:06.472901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:07.473110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:48:07.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2345" for this suite. @ 05/11/24 13:48:07.948
• [7.043 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 05/11/24 13:48:07.953
  May 11 13:48:07.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename downward-api @ 05/11/24 13:48:07.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:48:07.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:48:07.972
  STEP: Creating a pod to test downward api env vars @ 05/11/24 13:48:07.974
  E0511 13:48:08.473843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:09.474090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:48:09.989
  May 11 13:48:09.992: INFO: Trying to get logs from node ip-172-31-73-54 pod downward-api-bdcb33d0-d3f1-4241-8545-944523985d0b container dapi-container: <nil>
  STEP: delete the pod @ 05/11/24 13:48:09.999
  May 11 13:48:10.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6937" for this suite. @ 05/11/24 13:48:10.019
• [2.072 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 05/11/24 13:48:10.026
  May 11 13:48:10.026: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename downward-api @ 05/11/24 13:48:10.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:48:10.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:48:10.044
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 13:48:10.046
  E0511 13:48:10.474253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:11.475200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:48:12.066
  May 11 13:48:12.069: INFO: Trying to get logs from node ip-172-31-73-54 pod downwardapi-volume-4f8d8126-e89f-4971-8aaa-ff35360f5917 container client-container: <nil>
  STEP: delete the pod @ 05/11/24 13:48:12.076
  May 11 13:48:12.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1775" for this suite. @ 05/11/24 13:48:12.095
• [2.076 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 05/11/24 13:48:12.102
  May 11 13:48:12.102: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename statefulset @ 05/11/24 13:48:12.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:48:12.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:48:12.121
  STEP: Creating service test in namespace statefulset-6314 @ 05/11/24 13:48:12.123
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/11/24 13:48:12.128
  STEP: Creating stateful set ss in namespace statefulset-6314 @ 05/11/24 13:48:12.135
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6314 @ 05/11/24 13:48:12.14
  May 11 13:48:12.143: INFO: Found 0 stateful pods, waiting for 1
  E0511 13:48:12.476124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:13.476236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:14.476329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:15.476404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:16.476927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:17.477025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:18.477256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:19.477416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:20.477523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:21.477753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:48:22.145: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/11/24 13:48:22.145
  May 11 13:48:22.149: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-6314 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 11 13:48:22.243: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 11 13:48:22.243: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 11 13:48:22.243: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 11 13:48:22.246: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0511 13:48:22.478161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:23.478925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:24.479627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:25.479709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:26.479952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:27.480773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:28.481477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:29.481804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:30.482013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:31.482227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:48:32.249: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 11 13:48:32.249: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 11 13:48:32.263: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999749s
  E0511 13:48:32.482793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:48:33.267: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.997314573s
  E0511 13:48:33.482884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:48:34.272: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.992979699s
  E0511 13:48:34.483650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:48:35.277: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.988303584s
  E0511 13:48:35.483820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:48:36.282: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.982112916s
  E0511 13:48:36.483975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:48:37.286: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.977833585s
  E0511 13:48:37.484778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:48:38.290: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.974096845s
  E0511 13:48:38.484916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:48:39.295: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.969615744s
  E0511 13:48:39.485515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:48:40.298: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.965355281s
  E0511 13:48:40.485837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:48:41.303: INFO: Verifying statefulset ss doesn't scale past 1 for another 961.927576ms
  E0511 13:48:41.486528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6314 @ 05/11/24 13:48:42.303
  May 11 13:48:42.306: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-6314 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 11 13:48:42.388: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 11 13:48:42.388: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 11 13:48:42.388: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 11 13:48:42.391: INFO: Found 1 stateful pods, waiting for 3
  E0511 13:48:42.486704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:43.486813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:44.486937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:45.487094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:46.487535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:47.487731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:48.487813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:49.487988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:50.488100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:51.488179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:48:52.393: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May 11 13:48:52.393: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  May 11 13:48:52.393: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/11/24 13:48:52.393
  STEP: Scale down will halt with unhealthy stateful pod @ 05/11/24 13:48:52.393
  May 11 13:48:52.399: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-6314 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 11 13:48:52.484: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 11 13:48:52.484: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 11 13:48:52.484: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 11 13:48:52.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-6314 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0511 13:48:52.488376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:48:52.585: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 11 13:48:52.585: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 11 13:48:52.585: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 11 13:48:52.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-6314 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 11 13:48:52.676: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 11 13:48:52.676: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 11 13:48:52.676: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 11 13:48:52.676: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 11 13:48:52.679: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0511 13:48:53.489072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:54.489294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:55.489378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:56.489645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:57.489735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:58.489815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:48:59.490663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:00.490757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:01.491116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:02.491152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:49:02.683: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 11 13:49:02.683: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  May 11 13:49:02.683: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  May 11 13:49:02.694: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999836s
  E0511 13:49:03.492115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:49:03.699: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996591184s
  E0511 13:49:04.492445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:49:04.703: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.991451118s
  E0511 13:49:05.492975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:49:05.707: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.98787146s
  E0511 13:49:06.493603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:49:06.710: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.983074944s
  E0511 13:49:07.494661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:49:07.714: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.980085964s
  E0511 13:49:08.495447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:49:08.719: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.976288102s
  E0511 13:49:09.496192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:49:09.725: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.97050621s
  E0511 13:49:10.496307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:49:10.731: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.96438413s
  E0511 13:49:11.497093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:49:11.735: INFO: Verifying statefulset ss doesn't scale past 3 for another 959.046897ms
  E0511 13:49:12.497086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6314 @ 05/11/24 13:49:12.736
  May 11 13:49:12.741: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-6314 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 11 13:49:12.836: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 11 13:49:12.836: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 11 13:49:12.836: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 11 13:49:12.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-6314 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 11 13:49:12.928: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 11 13:49:12.928: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 11 13:49:12.928: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 11 13:49:12.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=statefulset-6314 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 11 13:49:13.010: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 11 13:49:13.010: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 11 13:49:13.010: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 11 13:49:13.010: INFO: Scaling statefulset ss to 0
  E0511 13:49:13.497172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:14.497410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:15.498019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:16.499023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:17.499214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:18.499322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:19.499421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:20.499436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:21.500489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:22.500598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/11/24 13:49:23.023
  May 11 13:49:23.023: INFO: Deleting all statefulset in ns statefulset-6314
  May 11 13:49:23.026: INFO: Scaling statefulset ss to 0
  May 11 13:49:23.037: INFO: Waiting for statefulset status.replicas updated to 0
  May 11 13:49:23.040: INFO: Deleting statefulset ss
  May 11 13:49:23.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6314" for this suite. @ 05/11/24 13:49:23.054
• [70.960 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 05/11/24 13:49:23.062
  May 11 13:49:23.062: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/11/24 13:49:23.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:49:23.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:49:23.081
  May 11 13:49:23.083: INFO: Waiting up to 1m0s for all nodes to be ready
  E0511 13:49:23.501382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:24.501578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:25.502206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:26.502193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:27.502857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:28.503135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:29.503243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:30.503400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:31.503682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:32.504407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:33.504590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:34.504670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:35.504775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:36.504965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:37.505520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:38.505587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:39.506526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:40.506610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:41.507149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:42.507224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:43.507318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:44.507408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:45.508314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:46.508897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:47.509022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:48.509267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:49.510320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:50.510389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:51.510470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:52.510531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:53.511101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:54.511200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:55.512225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:56.512653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:57.513446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:58.513454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:49:59.513706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:00.513968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:01.514599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:02.514687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:03.514781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:04.515137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:05.515701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:06.515954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:07.516303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:08.516395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:09.516548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:10.516638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:11.516982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:12.517075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:13.517164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:14.517386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:15.518355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:16.518768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:17.519198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:18.520005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:19.520660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:20.521001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:21.521817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:22.521896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:50:23.083: INFO: Waiting for terminating namespaces to be deleted...
  May 11 13:50:23.088: INFO: Starting informer...
  STEP: Starting pods... @ 05/11/24 13:50:23.088
  May 11 13:50:23.309: INFO: Pod1 is running on ip-172-31-73-54. Tainting Node
  E0511 13:50:23.521851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:24.522082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:25.522850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:50:25.529: INFO: Pod2 is running on ip-172-31-73-54. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/11/24 13:50:25.529
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/11/24 13:50:25.537
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/11/24 13:50:25.541
  E0511 13:50:26.523614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:27.523859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:28.523931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:29.524022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:30.524191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:50:30.912: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0511 13:50:31.525062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:32.525155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:33.525228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:34.525296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:35.525408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:36.525726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:37.525898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:38.526079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:39.527122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:40.528374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:41.528664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:42.528770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:43.528862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:44.528934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:45.529113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:46.529587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:47.529689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:48.529985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:49.530067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:50.530150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:50:50.946: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/11/24 13:50:50.964
  May 11 13:50:50.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-3710" for this suite. @ 05/11/24 13:50:50.971
• [87.918 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 05/11/24 13:50:50.98
  May 11 13:50:50.980: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 13:50:50.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:50:51.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:50:51.009
  STEP: Creating the pod @ 05/11/24 13:50:51.01
  E0511 13:50:51.530971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:52.531244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:53.531342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:50:53.555: INFO: Successfully updated pod "annotationupdate0f18ee3e-5f85-4daf-bd00-ddb385118fe6"
  E0511 13:50:54.532076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:55.532716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:56.533680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:57.533789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:50:57.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8571" for this suite. @ 05/11/24 13:50:57.58
• [6.606 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 05/11/24 13:50:57.586
  May 11 13:50:57.586: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename statefulset @ 05/11/24 13:50:57.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:50:57.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:50:57.604
  STEP: Creating service test in namespace statefulset-3949 @ 05/11/24 13:50:57.606
  STEP: Creating statefulset ss in namespace statefulset-3949 @ 05/11/24 13:50:57.617
  May 11 13:50:57.626: INFO: Found 0 stateful pods, waiting for 1
  E0511 13:50:58.533898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:50:59.534080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:00.534248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:01.535117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:02.535213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:03.535291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:04.535390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:05.535494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:06.535925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:07.536128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:51:07.630: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/11/24 13:51:07.636
  STEP: Getting /status @ 05/11/24 13:51:07.648
  May 11 13:51:07.651: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/11/24 13:51:07.651
  May 11 13:51:07.659: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/11/24 13:51:07.659
  May 11 13:51:07.660: INFO: Observed &StatefulSet event: ADDED
  May 11 13:51:07.660: INFO: Found Statefulset ss in namespace statefulset-3949 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 11 13:51:07.660: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/11/24 13:51:07.66
  May 11 13:51:07.660: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May 11 13:51:07.669: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/11/24 13:51:07.669
  May 11 13:51:07.670: INFO: Observed &StatefulSet event: ADDED
  May 11 13:51:07.670: INFO: Deleting all statefulset in ns statefulset-3949
  May 11 13:51:07.673: INFO: Scaling statefulset ss to 0
  E0511 13:51:08.536425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:09.536657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:10.536701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:11.537211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:12.537417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:13.537623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:14.537828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:15.537929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:16.538150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:17.538243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:51:17.685: INFO: Waiting for statefulset status.replicas updated to 0
  May 11 13:51:17.688: INFO: Deleting statefulset ss
  May 11 13:51:17.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3949" for this suite. @ 05/11/24 13:51:17.708
• [20.128 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 05/11/24 13:51:17.715
  May 11 13:51:17.715: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 13:51:17.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:51:17.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:51:17.731
  STEP: Creating projection with secret that has name projected-secret-test-11466af0-2ac8-4c2a-90cb-35b2514b1681 @ 05/11/24 13:51:17.733
  STEP: Creating a pod to test consume secrets @ 05/11/24 13:51:17.737
  E0511 13:51:18.538347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:19.539126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:20.539977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:21.540269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:51:21.764
  May 11 13:51:21.769: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-projected-secrets-c7337b59-aac6-481d-937d-7ac19c6aa7f1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/11/24 13:51:21.774
  May 11 13:51:21.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7436" for this suite. @ 05/11/24 13:51:21.794
• [4.089 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 05/11/24 13:51:21.803
  May 11 13:51:21.803: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename downward-api @ 05/11/24 13:51:21.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:51:21.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:51:21.818
  STEP: Creating a pod to test downward api env vars @ 05/11/24 13:51:21.82
  E0511 13:51:22.540359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:23.540747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:24.540839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:25.541032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:51:25.846
  May 11 13:51:25.848: INFO: Trying to get logs from node ip-172-31-73-54 pod downward-api-5d4a1b34-766d-4d07-8c04-b55ca70f49a0 container dapi-container: <nil>
  STEP: delete the pod @ 05/11/24 13:51:25.862
  May 11 13:51:25.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1092" for this suite. @ 05/11/24 13:51:25.882
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 05/11/24 13:51:25.888
  May 11 13:51:25.888: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-runtime @ 05/11/24 13:51:25.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:51:25.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:51:25.906
  STEP: create the container @ 05/11/24 13:51:25.909
  W0511 13:51:25.919486      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/11/24 13:51:25.919
  E0511 13:51:26.541048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:27.542155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:28.543063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/11/24 13:51:28.934
  STEP: the container should be terminated @ 05/11/24 13:51:28.938
  STEP: the termination message should be set @ 05/11/24 13:51:28.938
  May 11 13:51:28.938: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/11/24 13:51:28.938
  May 11 13:51:28.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3226" for this suite. @ 05/11/24 13:51:28.958
• [3.075 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 05/11/24 13:51:28.963
  May 11 13:51:28.963: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl @ 05/11/24 13:51:28.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:51:28.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:51:28.982
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/11/24 13:51:28.984
  May 11 13:51:28.984: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-720 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  May 11 13:51:29.032: INFO: stderr: ""
  May 11 13:51:29.032: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/11/24 13:51:29.032
  May 11 13:51:29.037: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-720 delete pods e2e-test-httpd-pod'
  E0511 13:51:29.543905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:30.544050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:51:31.031: INFO: stderr: ""
  May 11 13:51:31.031: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May 11 13:51:31.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-720" for this suite. @ 05/11/24 13:51:31.035
• [2.079 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 05/11/24 13:51:31.043
  May 11 13:51:31.043: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename statefulset @ 05/11/24 13:51:31.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:51:31.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:51:31.06
  STEP: Creating service test in namespace statefulset-7104 @ 05/11/24 13:51:31.062
  STEP: Creating a new StatefulSet @ 05/11/24 13:51:31.066
  May 11 13:51:31.076: INFO: Found 0 stateful pods, waiting for 3
  E0511 13:51:31.544269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:32.544371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:33.545196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:34.545300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:35.545551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:36.545966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:37.546075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:38.546166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:39.546264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:40.546375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:51:41.077: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May 11 13:51:41.077: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May 11 13:51:41.077: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/11/24 13:51:41.088
  May 11 13:51:41.106: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 05/11/24 13:51:41.106
  E0511 13:51:41.546932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:42.547254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:43.547336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:44.547436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:45.547638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:46.548025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:47.548164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:48.548267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:49.548413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:50.548762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/11/24 13:51:51.114
  STEP: Performing a canary update @ 05/11/24 13:51:51.114
  May 11 13:51:51.136: INFO: Updating stateful set ss2
  May 11 13:51:51.142: INFO: Waiting for Pod statefulset-7104/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0511 13:51:51.548848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:52.548969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:53.550148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:54.550242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:55.551129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:56.551584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:57.551688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:58.551783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:51:59.551960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:00.552147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/11/24 13:52:01.143
  May 11 13:52:01.183: INFO: Found 2 stateful pods, waiting for 3
  E0511 13:52:01.552481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:02.552677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:03.553048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:04.553027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:05.552968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:06.553320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:07.553453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:08.554411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:09.555114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:10.555219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:52:11.185: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May 11 13:52:11.185: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May 11 13:52:11.185: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/11/24 13:52:11.191
  May 11 13:52:11.212: INFO: Updating stateful set ss2
  May 11 13:52:11.220: INFO: Waiting for Pod statefulset-7104/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0511 13:52:11.555526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:12.555607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:13.555716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:14.555790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:15.556684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:16.557028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:17.557212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:18.558232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:19.558320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:20.559152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:52:21.238: INFO: Updating stateful set ss2
  May 11 13:52:21.247: INFO: Waiting for StatefulSet statefulset-7104/ss2 to complete update
  May 11 13:52:21.247: INFO: Waiting for Pod statefulset-7104/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0511 13:52:21.559681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:22.559795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:23.560042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:24.560136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:25.560320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:26.560735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:27.560828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:28.561055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:29.561159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:30.561254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:52:31.248: INFO: Deleting all statefulset in ns statefulset-7104
  May 11 13:52:31.252: INFO: Scaling statefulset ss2 to 0
  E0511 13:52:31.561634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:32.561802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:33.562146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:34.562745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:35.562984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:36.563454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:37.563677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:38.563756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:39.563853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:40.563936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:52:41.265: INFO: Waiting for statefulset status.replicas updated to 0
  May 11 13:52:41.269: INFO: Deleting statefulset ss2
  May 11 13:52:41.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7104" for this suite. @ 05/11/24 13:52:41.284
• [70.248 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 05/11/24 13:52:41.291
  May 11 13:52:41.291: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/11/24 13:52:41.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:52:41.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:52:41.322
  May 11 13:52:41.323: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 13:52:41.564317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/11/24 13:52:42.513
  May 11 13:52:42.513: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-7918 --namespace=crd-publish-openapi-7918 create -f -'
  E0511 13:52:42.565189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:43.565461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:44.565556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:52:44.670: INFO: stderr: ""
  May 11 13:52:44.670: INFO: stdout: "e2e-test-crd-publish-openapi-3468-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  May 11 13:52:44.670: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-7918 --namespace=crd-publish-openapi-7918 delete e2e-test-crd-publish-openapi-3468-crds test-cr'
  May 11 13:52:44.725: INFO: stderr: ""
  May 11 13:52:44.725: INFO: stdout: "e2e-test-crd-publish-openapi-3468-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  May 11 13:52:44.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-7918 --namespace=crd-publish-openapi-7918 apply -f -'
  May 11 13:52:44.775: INFO: stderr: ""
  May 11 13:52:44.775: INFO: stdout: "e2e-test-crd-publish-openapi-3468-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  May 11 13:52:44.775: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-7918 --namespace=crd-publish-openapi-7918 delete e2e-test-crd-publish-openapi-3468-crds test-cr'
  May 11 13:52:44.823: INFO: stderr: ""
  May 11 13:52:44.823: INFO: stdout: "e2e-test-crd-publish-openapi-3468-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/11/24 13:52:44.823
  May 11 13:52:44.823: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=crd-publish-openapi-7918 explain e2e-test-crd-publish-openapi-3468-crds'
  May 11 13:52:44.861: INFO: stderr: ""
  May 11 13:52:44.861: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-3468-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0511 13:52:45.566519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:52:46.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7918" for this suite. @ 05/11/24 13:52:46.127
• [4.844 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 05/11/24 13:52:46.135
  May 11 13:52:46.135: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 13:52:46.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:52:46.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:52:46.153
  STEP: Creating configMap with name projected-configmap-test-volume-map-fa48d212-e2ec-4b52-932e-89a0d502bc70 @ 05/11/24 13:52:46.154
  STEP: Creating a pod to test consume configMaps @ 05/11/24 13:52:46.159
  E0511 13:52:46.567212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:47.567298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:48.567367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:49.567410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:52:50.183
  May 11 13:52:50.187: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-projected-configmaps-73b3ea1d-1ad6-4260-8632-78b96967af6d container agnhost-container: <nil>
  STEP: delete the pod @ 05/11/24 13:52:50.194
  May 11 13:52:50.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2374" for this suite. @ 05/11/24 13:52:50.217
• [4.089 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 05/11/24 13:52:50.224
  May 11 13:52:50.224: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename pod-network-test @ 05/11/24 13:52:50.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:52:50.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:52:50.243
  STEP: Performing setup for networking test in namespace pod-network-test-2088 @ 05/11/24 13:52:50.245
  STEP: creating a selector @ 05/11/24 13:52:50.245
  STEP: Creating the service pods in kubernetes @ 05/11/24 13:52:50.245
  May 11 13:52:50.245: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0511 13:52:50.569953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:51.570325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:52.570586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:53.570809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:54.570917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:55.571826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:56.572512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:57.572607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:58.573542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:52:59.574123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:00.574197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:01.574247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/11/24 13:53:02.316
  E0511 13:53:02.574737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:03.575136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:53:04.332: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  May 11 13:53:04.332: INFO: Breadth first check of 192.168.204.144 on host 172.31.16.37...
  May 11 13:53:04.336: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.105.233:9080/dial?request=hostname&protocol=udp&host=192.168.204.144&port=8081&tries=1'] Namespace:pod-network-test-2088 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:53:04.336: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:53:04.336: INFO: ExecWithOptions: Clientset creation
  May 11 13:53:04.336: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2088/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.105.233%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.204.144%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 11 13:53:04.382: INFO: Waiting for responses: map[]
  May 11 13:53:04.382: INFO: reached 192.168.204.144 after 0/1 tries
  May 11 13:53:04.382: INFO: Breadth first check of 192.168.55.190 on host 172.31.35.147...
  May 11 13:53:04.385: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.105.233:9080/dial?request=hostname&protocol=udp&host=192.168.55.190&port=8081&tries=1'] Namespace:pod-network-test-2088 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:53:04.385: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:53:04.385: INFO: ExecWithOptions: Clientset creation
  May 11 13:53:04.385: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2088/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.105.233%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.55.190%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 11 13:53:04.430: INFO: Waiting for responses: map[]
  May 11 13:53:04.430: INFO: reached 192.168.55.190 after 0/1 tries
  May 11 13:53:04.430: INFO: Breadth first check of 192.168.105.231 on host 172.31.73.54...
  May 11 13:53:04.434: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.105.233:9080/dial?request=hostname&protocol=udp&host=192.168.105.231&port=8081&tries=1'] Namespace:pod-network-test-2088 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:53:04.434: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:53:04.435: INFO: ExecWithOptions: Clientset creation
  May 11 13:53:04.435: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2088/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.105.233%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.105.231%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 11 13:53:04.485: INFO: Waiting for responses: map[]
  May 11 13:53:04.485: INFO: reached 192.168.105.231 after 0/1 tries
  May 11 13:53:04.485: INFO: Going to retry 0 out of 3 pods....
  May 11 13:53:04.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2088" for this suite. @ 05/11/24 13:53:04.489
• [14.274 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 05/11/24 13:53:04.498
  May 11 13:53:04.498: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubelet-test @ 05/11/24 13:53:04.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:53:04.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:53:04.517
  May 11 13:53:04.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8620" for this suite. @ 05/11/24 13:53:04.549
• [0.060 seconds]
------------------------------
S
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 05/11/24 13:53:04.558
  May 11 13:53:04.558: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename hostport @ 05/11/24 13:53:04.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:53:04.573
  E0511 13:53:04.575773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:53:04.575
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/11/24 13:53:04.58
  E0511 13:53:05.576131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:06.576264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.35.147 on the node which pod1 resides and expect scheduled @ 05/11/24 13:53:06.597
  E0511 13:53:07.576341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:08.577186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:09.578099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:10.579139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:11.579240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:12.580246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:13.581324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:14.581533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:15.582307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:16.583311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:17.583439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:18.583525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.35.147 but use UDP protocol on the node which pod2 resides @ 05/11/24 13:53:18.635
  E0511 13:53:19.583648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:20.583821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:21.584062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:22.584160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/11/24 13:53:22.664
  May 11 13:53:22.664: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.35.147 http://127.0.0.1:54323/hostname] Namespace:hostport-8232 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:53:22.664: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:53:22.664: INFO: ExecWithOptions: Clientset creation
  May 11 13:53:22.664: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-8232/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.35.147+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.35.147, port: 54323 @ 05/11/24 13:53:22.712
  May 11 13:53:22.713: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.35.147:54323/hostname] Namespace:hostport-8232 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:53:22.713: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:53:22.713: INFO: ExecWithOptions: Clientset creation
  May 11 13:53:22.713: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-8232/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.35.147%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.35.147, port: 54323 UDP @ 05/11/24 13:53:22.773
  May 11 13:53:22.773: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.35.147 54323] Namespace:hostport-8232 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 11 13:53:22.773: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  May 11 13:53:22.773: INFO: ExecWithOptions: Clientset creation
  May 11 13:53:22.773: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-8232/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.35.147+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0511 13:53:23.584257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:24.584368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:25.584457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:26.584917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:27.584987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:53:27.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-8232" for this suite. @ 05/11/24 13:53:27.831
• [23.280 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 05/11/24 13:53:27.838
  May 11 13:53:27.838: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 13:53:27.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:53:27.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:53:27.86
  STEP: Creating projection with secret that has name projected-secret-test-map-f8c765ea-6f9f-4136-a674-9069996873ce @ 05/11/24 13:53:27.861
  STEP: Creating a pod to test consume secrets @ 05/11/24 13:53:27.865
  E0511 13:53:28.585573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:29.585689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:30.586090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:31.586305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:53:31.887
  May 11 13:53:31.890: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-projected-secrets-14887a80-11fb-443f-8b53-21c87ece63ce container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/11/24 13:53:31.898
  May 11 13:53:31.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2400" for this suite. @ 05/11/24 13:53:31.917
• [4.085 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 05/11/24 13:53:31.923
  May 11 13:53:31.923: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename configmap @ 05/11/24 13:53:31.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:53:31.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:53:31.941
  STEP: Creating configMap with name configmap-test-volume-map-7654b865-be33-4123-9ce0-2bd00bac100f @ 05/11/24 13:53:31.943
  STEP: Creating a pod to test consume configMaps @ 05/11/24 13:53:31.947
  E0511 13:53:32.587138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:33.587235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:34.587303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:35.587553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:53:35.97
  May 11 13:53:35.974: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-configmaps-4787a1a3-dc2f-448c-a39d-a9e9c1c41ebc container agnhost-container: <nil>
  STEP: delete the pod @ 05/11/24 13:53:35.982
  May 11 13:53:35.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2359" for this suite. @ 05/11/24 13:53:36.001
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 05/11/24 13:53:36.008
  May 11 13:53:36.008: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 13:53:36.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:53:36.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:53:36.027
  STEP: Setting up server cert @ 05/11/24 13:53:36.051
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 13:53:36.219
  STEP: Deploying the webhook pod @ 05/11/24 13:53:36.227
  STEP: Wait for the deployment to be ready @ 05/11/24 13:53:36.237
  May 11 13:53:36.244: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0511 13:53:36.587955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:37.588135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/11/24 13:53:38.251
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 13:53:38.267
  E0511 13:53:38.588200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:53:39.267: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/11/24 13:53:39.274
  STEP: create a pod that should be denied by the webhook @ 05/11/24 13:53:39.288
  STEP: create a pod that causes the webhook to hang @ 05/11/24 13:53:39.294
  E0511 13:53:39.588528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:40.589443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:41.590317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:42.591142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:43.591214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:44.591334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:45.591523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:46.592070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:47.592137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:48.592330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 05/11/24 13:53:49.301
  STEP: create a configmap that should be admitted by the webhook @ 05/11/24 13:53:49.308
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/11/24 13:53:49.317
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/11/24 13:53:49.324
  STEP: create a namespace that bypass the webhook @ 05/11/24 13:53:49.33
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/11/24 13:53:49.345
  May 11 13:53:49.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4697" for this suite. @ 05/11/24 13:53:49.413
  STEP: Destroying namespace "webhook-markers-3692" for this suite. @ 05/11/24 13:53:49.42
  STEP: Destroying namespace "exempted-namespace-7251" for this suite. @ 05/11/24 13:53:49.427
• [13.426 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 05/11/24 13:53:49.435
  May 11 13:53:49.435: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl @ 05/11/24 13:53:49.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:53:49.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:53:49.452
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/11/24 13:53:49.456
  May 11 13:53:49.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-184 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  May 11 13:53:49.509: INFO: stderr: ""
  May 11 13:53:49.509: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/11/24 13:53:49.509
  E0511 13:53:49.592561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:50.592659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:51.593308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:52.593490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:53.593747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/11/24 13:53:54.56
  May 11 13:53:54.560: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-184 get pod e2e-test-httpd-pod -o json'
  E0511 13:53:54.593989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:53:54.599: INFO: stderr: ""
  May 11 13:53:54.599: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-05-11T13:53:49Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-184\",\n        \"resourceVersion\": \"46057\",\n        \"uid\": \"d2fef1ca-c87e-477f-ba78-a5e8709e0255\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-krr4b\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-73-54\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-krr4b\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-11T13:53:50Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-11T13:53:49Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-11T13:53:50Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-11T13:53:50Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-11T13:53:49Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://3881bb635782fea72a4fc22b5c2c0e80cff448997d717914005f07e92c3a7f21\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-05-11T13:53:50Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.73.54\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.73.54\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.105.199\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.105.199\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-05-11T13:53:49Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/11/24 13:53:54.599
  May 11 13:53:54.599: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-184 replace -f -'
  May 11 13:53:54.679: INFO: stderr: ""
  May 11 13:53:54.679: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 05/11/24 13:53:54.679
  May 11 13:53:54.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-184 delete pods e2e-test-httpd-pod'
  E0511 13:53:55.594083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:53:56.291: INFO: stderr: ""
  May 11 13:53:56.291: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May 11 13:53:56.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-184" for this suite. @ 05/11/24 13:53:56.295
• [6.866 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 05/11/24 13:53:56.301
  May 11 13:53:56.301: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 13:53:56.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:53:56.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:53:56.319
  STEP: Setting up server cert @ 05/11/24 13:53:56.343
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 13:53:56.592
  E0511 13:53:56.594476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook pod @ 05/11/24 13:53:56.599
  STEP: Wait for the deployment to be ready @ 05/11/24 13:53:56.612
  May 11 13:53:56.618: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0511 13:53:57.595475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:53:58.595734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/11/24 13:53:58.629
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 13:53:58.64
  E0511 13:53:59.595912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:53:59.641: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/11/24 13:53:59.648
  STEP: create a pod @ 05/11/24 13:53:59.661
  E0511 13:54:00.596020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:01.596317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/11/24 13:54:01.675
  May 11 13:54:01.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=webhook-5642 attach --namespace=webhook-5642 to-be-attached-pod -i -c=container1'
  May 11 13:54:01.725: INFO: rc: 1
  May 11 13:54:01.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5642" for this suite. @ 05/11/24 13:54:01.776
  STEP: Destroying namespace "webhook-markers-7352" for this suite. @ 05/11/24 13:54:01.784
• [5.490 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 05/11/24 13:54:01.791
  May 11 13:54:01.791: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename podtemplate @ 05/11/24 13:54:01.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:54:01.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:54:01.811
  May 11 13:54:01.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7204" for this suite. @ 05/11/24 13:54:01.843
• [0.060 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 05/11/24 13:54:01.851
  May 11 13:54:01.851: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename namespaces @ 05/11/24 13:54:01.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:54:01.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:54:01.87
  STEP: Creating a test namespace @ 05/11/24 13:54:01.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:54:01.886
  STEP: Creating a service in the namespace @ 05/11/24 13:54:01.89
  STEP: Deleting the namespace @ 05/11/24 13:54:01.901
  STEP: Waiting for the namespace to be removed. @ 05/11/24 13:54:01.91
  E0511 13:54:02.596591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:03.596630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:04.597553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:05.597659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:06.598094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:07.598336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/11/24 13:54:07.914
  STEP: Verifying there is no service in the namespace @ 05/11/24 13:54:07.932
  May 11 13:54:07.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5948" for this suite. @ 05/11/24 13:54:07.94
  STEP: Destroying namespace "nsdeletetest-1893" for this suite. @ 05/11/24 13:54:07.947
  May 11 13:54:07.949: INFO: Namespace nsdeletetest-1893 was already deleted
  STEP: Destroying namespace "nsdeletetest-9264" for this suite. @ 05/11/24 13:54:07.949
• [6.104 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 05/11/24 13:54:07.956
  May 11 13:54:07.956: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl @ 05/11/24 13:54:07.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:54:07.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:54:07.974
  STEP: creating a replication controller @ 05/11/24 13:54:07.975
  May 11 13:54:07.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 create -f -'
  May 11 13:54:08.058: INFO: stderr: ""
  May 11 13:54:08.058: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/11/24 13:54:08.058
  May 11 13:54:08.058: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 11 13:54:08.103: INFO: stderr: ""
  May 11 13:54:08.103: INFO: stdout: "update-demo-nautilus-5zpdz update-demo-nautilus-q7w92 "
  May 11 13:54:08.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get pods update-demo-nautilus-5zpdz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 11 13:54:08.141: INFO: stderr: ""
  May 11 13:54:08.141: INFO: stdout: ""
  May 11 13:54:08.141: INFO: update-demo-nautilus-5zpdz is created but not running
  E0511 13:54:08.599105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:09.599274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:10.600211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:11.600280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:12.600393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:54:13.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 11 13:54:13.189: INFO: stderr: ""
  May 11 13:54:13.189: INFO: stdout: "update-demo-nautilus-5zpdz update-demo-nautilus-q7w92 "
  May 11 13:54:13.189: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get pods update-demo-nautilus-5zpdz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 11 13:54:13.228: INFO: stderr: ""
  May 11 13:54:13.228: INFO: stdout: "true"
  May 11 13:54:13.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get pods update-demo-nautilus-5zpdz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 11 13:54:13.269: INFO: stderr: ""
  May 11 13:54:13.269: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 11 13:54:13.269: INFO: validating pod update-demo-nautilus-5zpdz
  May 11 13:54:13.274: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 11 13:54:13.274: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 11 13:54:13.274: INFO: update-demo-nautilus-5zpdz is verified up and running
  May 11 13:54:13.274: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get pods update-demo-nautilus-q7w92 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 11 13:54:13.313: INFO: stderr: ""
  May 11 13:54:13.313: INFO: stdout: "true"
  May 11 13:54:13.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get pods update-demo-nautilus-q7w92 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 11 13:54:13.350: INFO: stderr: ""
  May 11 13:54:13.351: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 11 13:54:13.351: INFO: validating pod update-demo-nautilus-q7w92
  May 11 13:54:13.356: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 11 13:54:13.356: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 11 13:54:13.356: INFO: update-demo-nautilus-q7w92 is verified up and running
  STEP: scaling down the replication controller @ 05/11/24 13:54:13.356
  May 11 13:54:13.357: INFO: scanned /root for discovery docs: <nil>
  May 11 13:54:13.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0511 13:54:13.601135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:54:14.432: INFO: stderr: ""
  May 11 13:54:14.432: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/11/24 13:54:14.432
  May 11 13:54:14.432: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 11 13:54:14.497: INFO: stderr: ""
  May 11 13:54:14.497: INFO: stdout: "update-demo-nautilus-5zpdz "
  May 11 13:54:14.497: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get pods update-demo-nautilus-5zpdz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 11 13:54:14.555: INFO: stderr: ""
  May 11 13:54:14.555: INFO: stdout: "true"
  May 11 13:54:14.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get pods update-demo-nautilus-5zpdz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 11 13:54:14.594: INFO: stderr: ""
  May 11 13:54:14.594: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 11 13:54:14.594: INFO: validating pod update-demo-nautilus-5zpdz
  May 11 13:54:14.598: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 11 13:54:14.598: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 11 13:54:14.598: INFO: update-demo-nautilus-5zpdz is verified up and running
  STEP: scaling up the replication controller @ 05/11/24 13:54:14.598
  May 11 13:54:14.599: INFO: scanned /root for discovery docs: <nil>
  May 11 13:54:14.599: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0511 13:54:14.601807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:15.602026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:54:15.655: INFO: stderr: ""
  May 11 13:54:15.655: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/11/24 13:54:15.655
  May 11 13:54:15.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 11 13:54:15.695: INFO: stderr: ""
  May 11 13:54:15.695: INFO: stdout: "update-demo-nautilus-5zpdz update-demo-nautilus-fx2cg "
  May 11 13:54:15.695: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get pods update-demo-nautilus-5zpdz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 11 13:54:15.733: INFO: stderr: ""
  May 11 13:54:15.733: INFO: stdout: "true"
  May 11 13:54:15.733: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get pods update-demo-nautilus-5zpdz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 11 13:54:15.771: INFO: stderr: ""
  May 11 13:54:15.771: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 11 13:54:15.771: INFO: validating pod update-demo-nautilus-5zpdz
  May 11 13:54:15.775: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 11 13:54:15.775: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 11 13:54:15.775: INFO: update-demo-nautilus-5zpdz is verified up and running
  May 11 13:54:15.775: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get pods update-demo-nautilus-fx2cg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 11 13:54:15.813: INFO: stderr: ""
  May 11 13:54:15.813: INFO: stdout: "true"
  May 11 13:54:15.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get pods update-demo-nautilus-fx2cg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 11 13:54:15.851: INFO: stderr: ""
  May 11 13:54:15.851: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 11 13:54:15.851: INFO: validating pod update-demo-nautilus-fx2cg
  May 11 13:54:15.855: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 11 13:54:15.855: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 11 13:54:15.855: INFO: update-demo-nautilus-fx2cg is verified up and running
  STEP: using delete to clean up resources @ 05/11/24 13:54:15.855
  May 11 13:54:15.855: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 delete --grace-period=0 --force -f -'
  May 11 13:54:15.900: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 11 13:54:15.900: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  May 11 13:54:15.900: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get rc,svc -l name=update-demo --no-headers'
  May 11 13:54:15.953: INFO: stderr: "No resources found in kubectl-2508 namespace.\n"
  May 11 13:54:15.953: INFO: stdout: ""
  May 11 13:54:15.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-2508 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May 11 13:54:16.008: INFO: stderr: ""
  May 11 13:54:16.008: INFO: stdout: ""
  May 11 13:54:16.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2508" for this suite. @ 05/11/24 13:54:16.013
• [8.065 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 05/11/24 13:54:16.021
  May 11 13:54:16.021: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir @ 05/11/24 13:54:16.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:54:16.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:54:16.042
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/11/24 13:54:16.046
  E0511 13:54:16.602869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:17.603585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:18.604416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:19.604499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:54:20.069
  May 11 13:54:20.073: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-ed6eaa13-c192-46cf-8b8d-d457a9a54d40 container test-container: <nil>
  STEP: delete the pod @ 05/11/24 13:54:20.078
  May 11 13:54:20.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-326" for this suite. @ 05/11/24 13:54:20.099
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 05/11/24 13:54:20.108
  May 11 13:54:20.108: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename subjectreview @ 05/11/24 13:54:20.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:54:20.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:54:20.126
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7680" @ 05/11/24 13:54:20.129
  May 11 13:54:20.133: INFO: saUsername: "system:serviceaccount:subjectreview-7680:e2e"
  May 11 13:54:20.133: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7680"}
  May 11 13:54:20.133: INFO: saUID: "2a812e3a-a643-4bb1-9963-8c7e09a95cca"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7680:e2e" @ 05/11/24 13:54:20.133
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7680:e2e" @ 05/11/24 13:54:20.134
  May 11 13:54:20.135: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7680:e2e" api 'list' configmaps in "subjectreview-7680" namespace @ 05/11/24 13:54:20.135
  May 11 13:54:20.136: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7680:e2e" @ 05/11/24 13:54:20.136
  May 11 13:54:20.137: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  May 11 13:54:20.137: INFO: LocalSubjectAccessReview has been verified
  May 11 13:54:20.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7680" for this suite. @ 05/11/24 13:54:20.14
• [0.038 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 05/11/24 13:54:20.146
  May 11 13:54:20.146: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename services @ 05/11/24 13:54:20.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:54:20.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:54:20.164
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3683 @ 05/11/24 13:54:20.166
  STEP: changing the ExternalName service to type=ClusterIP @ 05/11/24 13:54:20.172
  STEP: creating replication controller externalname-service in namespace services-3683 @ 05/11/24 13:54:20.187
  I0511 13:54:20.194272      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-3683, replica count: 2
  E0511 13:54:20.604857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:21.605747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:22.606655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0511 13:54:23.245392      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 11 13:54:23.245: INFO: Creating new exec pod
  E0511 13:54:23.607172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:24.607464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:25.607789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:54:26.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-3683 exec execpod8vdmz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 11 13:54:26.364: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 11 13:54:26.364: INFO: stdout: "externalname-service-klsss"
  May 11 13:54:26.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=services-3683 exec execpod8vdmz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.42 80'
  May 11 13:54:26.450: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.42 80\nConnection to 10.152.183.42 80 port [tcp/http] succeeded!\n"
  May 11 13:54:26.450: INFO: stdout: "externalname-service-g99sj"
  May 11 13:54:26.450: INFO: Cleaning up the ExternalName to ClusterIP test service
  May 11 13:54:26.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3683" for this suite. @ 05/11/24 13:54:26.478
• [6.339 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 05/11/24 13:54:26.485
  May 11 13:54:26.485: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename gc @ 05/11/24 13:54:26.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:54:26.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:54:26.505
  STEP: create the rc @ 05/11/24 13:54:26.507
  W0511 13:54:26.511101      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0511 13:54:26.608317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:27.608518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:28.608624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:29.608689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:30.608786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/11/24 13:54:31.514
  STEP: wait for all pods to be garbage collected @ 05/11/24 13:54:31.521
  E0511 13:54:31.608831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:32.609954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:33.610126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:34.610128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:35.611117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/11/24 13:54:36.528
  W0511 13:54:36.534041      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May 11 13:54:36.534: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 11 13:54:36.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1341" for this suite. @ 05/11/24 13:54:36.538
• [10.059 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 05/11/24 13:54:36.544
  May 11 13:54:36.544: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename limitrange @ 05/11/24 13:54:36.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:54:36.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:54:36.562
  STEP: Creating LimitRange "e2e-limitrange-khz26" in namespace "limitrange-9399" @ 05/11/24 13:54:36.564
  STEP: Creating another limitRange in another namespace @ 05/11/24 13:54:36.569
  May 11 13:54:36.585: INFO: Namespace "e2e-limitrange-khz26-8117" created
  May 11 13:54:36.585: INFO: Creating LimitRange "e2e-limitrange-khz26" in namespace "e2e-limitrange-khz26-8117"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-khz26" @ 05/11/24 13:54:36.591
  May 11 13:54:36.594: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-khz26" in "limitrange-9399" namespace @ 05/11/24 13:54:36.594
  May 11 13:54:36.600: INFO: LimitRange "e2e-limitrange-khz26" has been patched
  STEP: Delete LimitRange "e2e-limitrange-khz26" by Collection with labelSelector: "e2e-limitrange-khz26=patched" @ 05/11/24 13:54:36.6
  STEP: Confirm that the limitRange "e2e-limitrange-khz26" has been deleted @ 05/11/24 13:54:36.607
  May 11 13:54:36.607: INFO: Requesting list of LimitRange to confirm quantity
  May 11 13:54:36.610: INFO: Found 0 LimitRange with label "e2e-limitrange-khz26=patched"
  May 11 13:54:36.610: INFO: LimitRange "e2e-limitrange-khz26" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-khz26" @ 05/11/24 13:54:36.61
  E0511 13:54:36.611258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:54:36.613: INFO: Found 1 limitRange
  May 11 13:54:36.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9399" for this suite. @ 05/11/24 13:54:36.616
  STEP: Destroying namespace "e2e-limitrange-khz26-8117" for this suite. @ 05/11/24 13:54:36.621
• [0.084 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 05/11/24 13:54:36.628
  May 11 13:54:36.628: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 13:54:36.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:54:36.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:54:36.645
  STEP: Creating configMap with name projected-configmap-test-volume-cc66a81e-9732-43e8-a899-cfbc157f5d86 @ 05/11/24 13:54:36.647
  STEP: Creating a pod to test consume configMaps @ 05/11/24 13:54:36.651
  E0511 13:54:37.611420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:38.611505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 13:54:38.666
  May 11 13:54:38.671: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-projected-configmaps-0345ced7-bee6-4a66-bed6-dd2bf6ccd1ca container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/11/24 13:54:38.677
  May 11 13:54:38.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3974" for this suite. @ 05/11/24 13:54:38.695
• [2.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 05/11/24 13:54:38.701
  May 11 13:54:38.701: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename dns @ 05/11/24 13:54:38.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:54:38.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:54:38.722
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/11/24 13:54:38.724
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/11/24 13:54:38.724
  STEP: creating a pod to probe DNS @ 05/11/24 13:54:38.724
  STEP: submitting the pod to kubernetes @ 05/11/24 13:54:38.724
  E0511 13:54:39.611608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:40.611691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/11/24 13:54:40.747
  STEP: looking for the results for each expected name from probers @ 05/11/24 13:54:40.75
  May 11 13:54:40.766: INFO: DNS probes using dns-9346/dns-test-12a22c1b-790b-43fc-a112-378c82d66c95 succeeded

  STEP: deleting the pod @ 05/11/24 13:54:40.766
  May 11 13:54:40.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9346" for this suite. @ 05/11/24 13:54:40.785
• [2.090 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 05/11/24 13:54:40.791
  May 11 13:54:40.791: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 13:54:40.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:54:40.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:54:40.811
  STEP: Creating secret with name s-test-opt-del-b5e8671e-4278-49f8-a2b5-73a897051df0 @ 05/11/24 13:54:40.817
  STEP: Creating secret with name s-test-opt-upd-e7786639-ea72-4945-b36b-b053b1eddc64 @ 05/11/24 13:54:40.821
  STEP: Creating the pod @ 05/11/24 13:54:40.824
  E0511 13:54:41.611797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:42.611916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-b5e8671e-4278-49f8-a2b5-73a897051df0 @ 05/11/24 13:54:42.871
  STEP: Updating secret s-test-opt-upd-e7786639-ea72-4945-b36b-b053b1eddc64 @ 05/11/24 13:54:42.878
  STEP: Creating secret with name s-test-opt-create-23e4f2c4-572c-41b5-b327-f61228241274 @ 05/11/24 13:54:42.882
  STEP: waiting to observe update in volume @ 05/11/24 13:54:42.886
  E0511 13:54:43.612815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:44.612962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:54:44.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2447" for this suite. @ 05/11/24 13:54:44.917
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 05/11/24 13:54:44.923
  May 11 13:54:44.923: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename cronjob @ 05/11/24 13:54:44.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:54:44.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:54:44.945
  STEP: Creating a suspended cronjob @ 05/11/24 13:54:44.947
  STEP: Ensuring no jobs are scheduled @ 05/11/24 13:54:44.953
  E0511 13:54:45.614020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:46.614376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:47.614464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:48.614543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:49.615143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:50.615244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:51.615871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:52.615966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:53.616050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:54.616172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:55.616271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:56.616661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:57.616765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:58.616878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:54:59.617016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:00.617194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:01.617400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:02.617498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:03.619057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:04.619235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:05.619346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:06.619954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:07.620955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:08.621049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:09.621151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:10.621318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:11.622406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:12.622593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:13.622682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:14.623440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:15.623542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:16.624000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:17.624126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:18.624498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:19.624585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:20.624672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:21.625349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:22.625470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:23.626073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:24.626102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:25.626583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:26.627047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:27.628074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:28.628180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:29.628459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:30.629395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:31.630316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:32.631163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:33.632143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:34.632268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:35.632355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:36.632792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:37.633083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:38.633181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:39.633275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:40.633363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:41.634400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:42.634477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:43.635243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:44.635345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:45.635420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:46.635872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:47.636855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:48.636926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:49.637071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:50.637304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:51.637317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:52.637435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:53.638286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:54.638397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:55.639147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:56.639263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:57.640245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:58.640349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:55:59.641303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:00.641465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:01.642394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:02.643148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:03.643213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:04.643409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:05.644307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:06.644658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:07.645060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:08.645159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:09.645427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:10.645514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:11.646376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:12.646489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:13.646582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:14.646664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:15.646924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:16.647756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:17.647846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:18.648614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:19.649546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:20.649773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:21.650377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:22.651142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:23.652178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:24.652280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:25.653136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:26.653711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:27.653859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:28.654069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:29.654156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:30.655126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:31.655215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:32.655482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:33.655719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:34.655815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:35.656301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:36.656807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:37.657864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:38.657994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:39.658088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:40.659144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:41.660244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:42.660324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:43.660442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:44.660481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:45.661482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:46.662008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:47.662118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:48.663170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:49.663272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:50.663374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:51.664386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:52.664614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:53.666395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:54.667145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:55.667283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:56.667323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:57.668381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:58.668485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:56:59.668656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:00.668913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:01.669010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:02.669268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:03.669751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:04.669981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:05.670124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:06.670877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:07.670960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:08.671499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:09.672202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:10.672369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:11.673330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:12.673406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:13.674383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:14.674475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:15.675149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:16.675205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:17.676034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:18.676143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:19.676227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:20.676572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:21.677644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:22.677844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:23.678093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:24.678183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:25.678276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:26.678787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:27.678894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:28.678979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:29.679951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:30.680047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:31.680354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:32.680479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:33.680557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:34.680746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:35.680838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:36.681803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:37.681864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:38.682087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:39.682190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:40.682275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:41.682888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:42.682983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:43.683876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:44.683966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:45.684144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:46.684654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:47.684745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:48.684987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:49.685097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:50.685397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:51.685707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:52.685804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:53.686149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:54.686227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:55.686337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:56.686639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:57.686756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:58.686839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:57:59.687366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:00.687473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:01.688395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:02.688884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:03.689842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:04.690171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:05.691052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:06.691255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:07.692226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:08.692318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:09.692509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:10.692676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:11.693430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:12.693567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:13.694321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:14.694373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:15.694453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:16.695028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:17.695117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:18.695331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:19.695425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:20.695604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:21.696177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:22.696720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:23.697674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:24.697887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:25.698007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:26.698442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:27.699206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:28.700105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:29.700969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:30.701139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:31.701397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:32.701473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:33.701818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:34.702090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:35.702640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:36.703129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:37.703294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:38.704204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:39.705277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:40.705404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:41.706212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:42.707155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:43.708045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:44.708339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:45.708963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:46.709068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:47.709136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:48.709720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:49.710076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:50.710120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:51.710360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:52.710461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:53.711117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:54.711267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:55.711349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:56.711424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:57.712073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:58.712255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:58:59.712633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:00.712718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:01.713454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:02.713541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:03.714069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:04.715155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:05.715371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:06.715466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:07.715554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:08.716053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:09.716154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:10.716246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:11.716339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:12.717207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:13.717298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:14.717469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:15.717561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:16.718198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:17.719148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:18.719243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:19.719347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:20.719451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:21.720346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:22.720464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:23.720888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:24.721070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:25.721696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:26.721724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:27.722073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:28.723136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:29.723744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:30.724187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:31.725036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:32.725143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:33.725250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:34.726234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:35.727137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:36.727532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:37.727775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:38.727999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:39.728972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:40.729087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:41.729181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:42.729277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:43.729851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:44.730059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/11/24 13:59:44.963
  STEP: Removing cronjob @ 05/11/24 13:59:44.966
  May 11 13:59:44.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3402" for this suite. @ 05/11/24 13:59:44.975
• [300.057 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 05/11/24 13:59:44.981
  May 11 13:59:44.981: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename field-validation @ 05/11/24 13:59:44.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:59:44.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:59:45.002
  May 11 13:59:45.004: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 13:59:45.730180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:46.730776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0511 13:59:47.539333      19 warnings.go:70] unknown field "alpha"
  W0511 13:59:47.539350      19 warnings.go:70] unknown field "beta"
  W0511 13:59:47.539353      19 warnings.go:70] unknown field "delta"
  W0511 13:59:47.539355      19 warnings.go:70] unknown field "epsilon"
  W0511 13:59:47.539358      19 warnings.go:70] unknown field "gamma"
  E0511 13:59:47.731142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 13:59:48.083: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-17" for this suite. @ 05/11/24 13:59:48.087
• [3.112 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 05/11/24 13:59:48.094
  May 11 13:59:48.094: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename secrets @ 05/11/24 13:59:48.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:59:48.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:59:48.111
  May 11 13:59:48.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9504" for this suite. @ 05/11/24 13:59:48.15
• [0.062 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 05/11/24 13:59:48.156
  May 11 13:59:48.156: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename subpath @ 05/11/24 13:59:48.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 13:59:48.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 13:59:48.174
  STEP: Setting up data @ 05/11/24 13:59:48.176
  STEP: Creating pod pod-subpath-test-configmap-5lct @ 05/11/24 13:59:48.184
  STEP: Creating a pod to test atomic-volume-subpath @ 05/11/24 13:59:48.184
  E0511 13:59:48.731256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:49.731324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:50.731426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:51.732413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:52.732805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:53.732894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:54.733001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:55.733077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:56.734045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:57.734103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:58.734185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 13:59:59.734257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:00.734736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:01.735732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:02.735815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:03.736026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:04.736108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:05.736309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:06.737285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:07.737492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:08.738469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:09.738556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:00:10.255
  May 11 14:00:10.257: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-subpath-test-configmap-5lct container test-container-subpath-configmap-5lct: <nil>
  STEP: delete the pod @ 05/11/24 14:00:10.272
  STEP: Deleting pod pod-subpath-test-configmap-5lct @ 05/11/24 14:00:10.29
  May 11 14:00:10.290: INFO: Deleting pod "pod-subpath-test-configmap-5lct" in namespace "subpath-5680"
  May 11 14:00:10.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5680" for this suite. @ 05/11/24 14:00:10.296
• [22.146 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 05/11/24 14:00:10.302
  May 11 14:00:10.302: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir @ 05/11/24 14:00:10.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:00:10.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:00:10.325
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/11/24 14:00:10.327
  E0511 14:00:10.739088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:11.739329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:12.740094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:13.740343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:00:14.346
  May 11 14:00:14.349: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-1473f478-5297-48a1-9399-653e12df1541 container test-container: <nil>
  STEP: delete the pod @ 05/11/24 14:00:14.356
  May 11 14:00:14.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8764" for this suite. @ 05/11/24 14:00:14.378
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 05/11/24 14:00:14.385
  May 11 14:00:14.385: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename watch @ 05/11/24 14:00:14.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:00:14.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:00:14.398
  STEP: getting a starting resourceVersion @ 05/11/24 14:00:14.401
  STEP: starting a background goroutine to produce watch events @ 05/11/24 14:00:14.404
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/11/24 14:00:14.404
  E0511 14:00:14.740434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:15.740719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:16.741390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 14:00:17.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6247" for this suite. @ 05/11/24 14:00:17.24
• [2.909 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 05/11/24 14:00:17.294
  May 11 14:00:17.294: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/11/24 14:00:17.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:00:17.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:00:17.312
  STEP: create the container to handle the HTTPGet hook request. @ 05/11/24 14:00:17.32
  E0511 14:00:17.742478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:18.742765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/11/24 14:00:19.343
  E0511 14:00:19.742906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:20.743460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 05/11/24 14:00:21.364
  STEP: delete the pod with lifecycle hook @ 05/11/24 14:00:21.381
  E0511 14:00:21.743912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:22.744009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 14:00:23.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-147" for this suite. @ 05/11/24 14:00:23.4
• [6.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 05/11/24 14:00:23.406
  May 11 14:00:23.406: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename dns @ 05/11/24 14:00:23.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:00:23.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:00:23.425
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6749.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-6749.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 05/11/24 14:00:23.428
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6749.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-6749.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/11/24 14:00:23.428
  STEP: creating a pod to probe /etc/hosts @ 05/11/24 14:00:23.428
  STEP: submitting the pod to kubernetes @ 05/11/24 14:00:23.428
  E0511 14:00:23.744924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:24.745591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/11/24 14:00:25.446
  STEP: looking for the results for each expected name from probers @ 05/11/24 14:00:25.448
  May 11 14:00:25.464: INFO: DNS probes using dns-6749/dns-test-c996c80e-3c79-4ba6-af1d-327ee01b7932 succeeded

  STEP: deleting the pod @ 05/11/24 14:00:25.464
  May 11 14:00:25.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6749" for this suite. @ 05/11/24 14:00:25.483
• [2.082 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 05/11/24 14:00:25.488
  May 11 14:00:25.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename daemonsets @ 05/11/24 14:00:25.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:00:25.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:00:25.507
  STEP: Creating simple DaemonSet "daemon-set" @ 05/11/24 14:00:25.527
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/11/24 14:00:25.532
  May 11 14:00:25.534: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 14:00:25.534: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 14:00:25.538: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 14:00:25.538: INFO: Node ip-172-31-16-37 is running 0 daemon pod, expected 1
  E0511 14:00:25.746302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 14:00:26.537: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 14:00:26.537: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 14:00:26.540: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 11 14:00:26.540: INFO: Node ip-172-31-35-147 is running 0 daemon pod, expected 1
  E0511 14:00:26.747338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 14:00:27.537: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 14:00:27.537: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 14:00:27.540: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 11 14:00:27.540: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/11/24 14:00:27.542
  May 11 14:00:27.557: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 14:00:27.557: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 14:00:27.559: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May 11 14:00:27.559: INFO: Node ip-172-31-35-147 is running 0 daemon pod, expected 1
  E0511 14:00:27.747799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 14:00:28.557: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 14:00:28.557: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 14:00:28.560: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May 11 14:00:28.560: INFO: Node ip-172-31-35-147 is running 0 daemon pod, expected 1
  E0511 14:00:28.748318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 14:00:29.557: INFO: DaemonSet pods can't tolerate node ip-172-31-23-198 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 14:00:29.557: INFO: DaemonSet pods can't tolerate node ip-172-31-91-191 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 11 14:00:29.560: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 11 14:00:29.560: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/11/24 14:00:29.562
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6824, will wait for the garbage collector to delete the pods @ 05/11/24 14:00:29.562
  May 11 14:00:29.624: INFO: Deleting DaemonSet.extensions daemon-set took: 8.003085ms
  May 11 14:00:29.725: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.973075ms
  E0511 14:00:29.748949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:30.749649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 14:00:31.229: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 11 14:00:31.229: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 11 14:00:31.231: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47975"},"items":null}

  May 11 14:00:31.235: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47975"},"items":null}

  May 11 14:00:31.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6824" for this suite. @ 05/11/24 14:00:31.25
• [5.771 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 05/11/24 14:00:31.26
  May 11 14:00:31.260: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 14:00:31.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:00:31.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:00:31.282
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 14:00:31.285
  E0511 14:00:31.750089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:32.750171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:33.750268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:34.750359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:00:35.307
  May 11 14:00:35.309: INFO: Trying to get logs from node ip-172-31-73-54 pod downwardapi-volume-6906b03b-e65c-4279-8255-875e7ab5c372 container client-container: <nil>
  STEP: delete the pod @ 05/11/24 14:00:35.316
  May 11 14:00:35.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3852" for this suite. @ 05/11/24 14:00:35.336
• [4.083 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 05/11/24 14:00:35.344
  May 11 14:00:35.344: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/11/24 14:00:35.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:00:35.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:00:35.362
  May 11 14:00:35.365: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 14:00:35.750875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 14:00:35.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2873" for this suite. @ 05/11/24 14:00:35.938
• [0.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 05/11/24 14:00:35.951
  May 11 14:00:35.951: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 14:00:35.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:00:35.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:00:35.968
  STEP: Creating configMap with name projected-configmap-test-volume-map-41fad695-9c24-4296-b199-c3f44aea790e @ 05/11/24 14:00:35.977
  STEP: Creating a pod to test consume configMaps @ 05/11/24 14:00:35.981
  E0511 14:00:36.751310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:37.751474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:38.751588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:39.751681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:00:40.004
  May 11 14:00:40.008: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-projected-configmaps-0ed2a7b0-bfe9-48cb-8c0d-447659f0d418 container agnhost-container: <nil>
  STEP: delete the pod @ 05/11/24 14:00:40.014
  May 11 14:00:40.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9567" for this suite. @ 05/11/24 14:00:40.033
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 05/11/24 14:00:40.041
  May 11 14:00:40.041: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename disruption @ 05/11/24 14:00:40.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:00:40.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:00:40.059
  STEP: Waiting for the pdb to be processed @ 05/11/24 14:00:40.109
  E0511 14:00:40.751760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:41.751847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 05/11/24 14:00:42.138
  May 11 14:00:42.148: INFO: running pods: 0 < 3
  E0511 14:00:42.752921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:43.753017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 14:00:44.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8777" for this suite. @ 05/11/24 14:00:44.149
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 05/11/24 14:00:44.158
  May 11 14:00:44.158: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename containers @ 05/11/24 14:00:44.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:00:44.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:00:44.18
  STEP: Creating a pod to test override command @ 05/11/24 14:00:44.182
  E0511 14:00:44.753163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:45.753249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:00:46.202
  May 11 14:00:46.205: INFO: Trying to get logs from node ip-172-31-73-54 pod client-containers-f61942a8-9146-465b-b5a0-91e55cbd4f78 container agnhost-container: <nil>
  STEP: delete the pod @ 05/11/24 14:00:46.212
  May 11 14:00:46.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3903" for this suite. @ 05/11/24 14:00:46.232
• [2.083 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 05/11/24 14:00:46.241
  May 11 14:00:46.241: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename downward-api @ 05/11/24 14:00:46.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:00:46.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:00:46.259
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 14:00:46.261
  E0511 14:00:46.754097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:47.754698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:00:48.28
  May 11 14:00:48.282: INFO: Trying to get logs from node ip-172-31-73-54 pod downwardapi-volume-caa54c4d-8a11-49e5-9ace-e534fc6f96e9 container client-container: <nil>
  STEP: delete the pod @ 05/11/24 14:00:48.29
  May 11 14:00:48.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1235" for this suite. @ 05/11/24 14:00:48.309
• [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 05/11/24 14:00:48.316
  May 11 14:00:48.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename namespaces @ 05/11/24 14:00:48.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:00:48.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:00:48.334
  STEP: Updating Namespace "namespaces-9037" @ 05/11/24 14:00:48.336
  May 11 14:00:48.345: INFO: Namespace "namespaces-9037" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"9ba88339-bf51-4bfb-8588-41c64075f6d1", "kubernetes.io/metadata.name":"namespaces-9037", "namespaces-9037":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  May 11 14:00:48.345: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9037" for this suite. @ 05/11/24 14:00:48.349
• [0.039 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 05/11/24 14:00:48.356
  May 11 14:00:48.356: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 14:00:48.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:00:48.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:00:48.373
  STEP: Setting up server cert @ 05/11/24 14:00:48.393
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 14:00:48.597
  STEP: Deploying the webhook pod @ 05/11/24 14:00:48.607
  STEP: Wait for the deployment to be ready @ 05/11/24 14:00:48.617
  May 11 14:00:48.625: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0511 14:00:48.755368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:49.755442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/11/24 14:00:50.635
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 14:00:50.651
  E0511 14:00:50.755510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 14:00:51.652: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/11/24 14:00:51.727
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/11/24 14:00:51.75
  E0511 14:00:51.756152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the collection of validation webhooks @ 05/11/24 14:00:51.772
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/11/24 14:00:51.822
  May 11 14:00:51.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8734" for this suite. @ 05/11/24 14:00:51.874
  STEP: Destroying namespace "webhook-markers-5980" for this suite. @ 05/11/24 14:00:51.882
• [3.533 seconds]
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 05/11/24 14:00:51.889
  May 11 14:00:51.889: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename job @ 05/11/24 14:00:51.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:00:51.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:00:51.907
  STEP: Creating a job @ 05/11/24 14:00:51.909
  STEP: Ensuring active pods == parallelism @ 05/11/24 14:00:51.914
  E0511 14:00:52.756891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:53.756983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 05/11/24 14:00:53.919
  May 11 14:00:54.435: INFO: Successfully updated pod "adopt-release-ldtj9"
  STEP: Checking that the Job readopts the Pod @ 05/11/24 14:00:54.435
  E0511 14:00:54.757664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:55.757848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 05/11/24 14:00:56.444
  E0511 14:00:56.758316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 14:00:56.958: INFO: Successfully updated pod "adopt-release-ldtj9"
  STEP: Checking that the Job releases the Pod @ 05/11/24 14:00:56.958
  E0511 14:00:57.758498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:00:58.758548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 14:00:58.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-298" for this suite. @ 05/11/24 14:00:58.971
• [7.088 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 05/11/24 14:00:58.978
  May 11 14:00:58.978: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename downward-api @ 05/11/24 14:00:58.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:00:59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:00:59.002
  STEP: Creating a pod to test downward api env vars @ 05/11/24 14:00:59.004
  E0511 14:00:59.759182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:00.759282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:01.759446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:02.759517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:01:03.027
  May 11 14:01:03.030: INFO: Trying to get logs from node ip-172-31-73-54 pod downward-api-42ee6596-47af-4b11-83eb-d62c5fa5a947 container dapi-container: <nil>
  STEP: delete the pod @ 05/11/24 14:01:03.036
  May 11 14:01:03.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6624" for this suite. @ 05/11/24 14:01:03.059
• [4.089 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 05/11/24 14:01:03.066
  May 11 14:01:03.066: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename secrets @ 05/11/24 14:01:03.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:01:03.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:01:03.086
  STEP: Creating secret with name secret-test-9d885823-c134-4cd9-80d9-fe4d4332d9a2 @ 05/11/24 14:01:03.109
  STEP: Creating a pod to test consume secrets @ 05/11/24 14:01:03.113
  E0511 14:01:03.760194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:04.760400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:05.761084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:06.761380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:01:07.137
  May 11 14:01:07.141: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-secrets-247cf138-d39a-4666-b0ad-4540713022ed container secret-volume-test: <nil>
  STEP: delete the pod @ 05/11/24 14:01:07.148
  May 11 14:01:07.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-562" for this suite. @ 05/11/24 14:01:07.169
  STEP: Destroying namespace "secret-namespace-320" for this suite. @ 05/11/24 14:01:07.176
• [4.116 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 05/11/24 14:01:07.183
  May 11 14:01:07.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename secrets @ 05/11/24 14:01:07.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:01:07.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:01:07.197
  STEP: Creating projection with secret that has name secret-emptykey-test-62e05d9c-e52c-43ae-8bd7-9860c02a2e6a @ 05/11/24 14:01:07.2
  May 11 14:01:07.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4782" for this suite. @ 05/11/24 14:01:07.204
• [0.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 05/11/24 14:01:07.209
  May 11 14:01:07.210: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/11/24 14:01:07.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:01:07.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:01:07.227
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/11/24 14:01:07.23
  May 11 14:01:07.230: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 14:01:07.762113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:08.762658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:09.762845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:10.763033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:11.763817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/11/24 14:01:12.202
  May 11 14:01:12.203: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 14:01:12.764308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 14:01:13.474: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  E0511 14:01:13.764401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:14.765247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:15.766281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:16.767224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:17.767669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 14:01:18.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7497" for this suite. @ 05/11/24 14:01:18.391
• [11.187 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 05/11/24 14:01:18.397
  May 11 14:01:18.397: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename disruption @ 05/11/24 14:01:18.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:01:18.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:01:18.417
  STEP: creating the pdb @ 05/11/24 14:01:18.419
  STEP: Waiting for the pdb to be processed @ 05/11/24 14:01:18.423
  E0511 14:01:18.768696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:19.768806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 05/11/24 14:01:20.426
  STEP: Waiting for the pdb to be processed @ 05/11/24 14:01:20.434
  E0511 14:01:20.769335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:21.769436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 05/11/24 14:01:22.439
  STEP: Waiting for the pdb to be processed @ 05/11/24 14:01:22.456
  STEP: Waiting for the pdb to be deleted @ 05/11/24 14:01:22.477
  May 11 14:01:22.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5110" for this suite. @ 05/11/24 14:01:22.481
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 05/11/24 14:01:22.487
  May 11 14:01:22.487: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 14:01:22.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:01:22.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:01:22.508
  STEP: Creating configMap with name projected-configmap-test-volume-89500853-9d68-4ff0-9f0e-3ebfd12774b2 @ 05/11/24 14:01:22.509
  STEP: Creating a pod to test consume configMaps @ 05/11/24 14:01:22.515
  E0511 14:01:22.770219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:23.771160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:24.771264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:25.771648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:01:26.54
  May 11 14:01:26.543: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-projected-configmaps-819efa93-c04a-49a0-8633-ce70364ec3f9 container agnhost-container: <nil>
  STEP: delete the pod @ 05/11/24 14:01:26.55
  May 11 14:01:26.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-730" for this suite. @ 05/11/24 14:01:26.569
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 05/11/24 14:01:26.577
  May 11 14:01:26.577: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubectl @ 05/11/24 14:01:26.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:01:26.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:01:26.594
  STEP: Starting the proxy @ 05/11/24 14:01:26.596
  May 11 14:01:26.596: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2343787702 --namespace=kubectl-5011 proxy --unix-socket=/tmp/kubectl-proxy-unix2482911554/test'
  STEP: retrieving proxy /api/ output @ 05/11/24 14:01:26.626
  May 11 14:01:26.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5011" for this suite. @ 05/11/24 14:01:26.63
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 05/11/24 14:01:26.638
  May 11 14:01:26.638: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 14:01:26.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:01:26.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:01:26.659
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 14:01:26.661
  E0511 14:01:26.772085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:27.772198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:28.773112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:29.773306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:01:30.698
  May 11 14:01:30.702: INFO: Trying to get logs from node ip-172-31-73-54 pod downwardapi-volume-2fc79136-5195-4d86-a015-dd6e92325697 container client-container: <nil>
  STEP: delete the pod @ 05/11/24 14:01:30.709
  May 11 14:01:30.725: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8264" for this suite. @ 05/11/24 14:01:30.729
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 05/11/24 14:01:30.735
  May 11 14:01:30.735: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 14:01:30.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:01:30.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:01:30.754
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 14:01:30.756
  E0511 14:01:30.773836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:31.774083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:32.775081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:33.775186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:34.775273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:01:34.78
  May 11 14:01:34.784: INFO: Trying to get logs from node ip-172-31-73-54 pod downwardapi-volume-39464261-115a-4967-8aa5-051527a2b9f0 container client-container: <nil>
  STEP: delete the pod @ 05/11/24 14:01:34.79
  May 11 14:01:34.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1579" for this suite. @ 05/11/24 14:01:34.811
• [4.084 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 05/11/24 14:01:34.82
  May 11 14:01:34.820: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename webhook @ 05/11/24 14:01:34.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:01:34.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:01:34.84
  STEP: Setting up server cert @ 05/11/24 14:01:34.869
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/11/24 14:01:35.054
  STEP: Deploying the webhook pod @ 05/11/24 14:01:35.061
  STEP: Wait for the deployment to be ready @ 05/11/24 14:01:35.072
  May 11 14:01:35.081: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0511 14:01:35.775598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:36.775982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/11/24 14:01:37.092
  STEP: Verifying the service has paired with the endpoint @ 05/11/24 14:01:37.104
  E0511 14:01:37.776062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 14:01:38.104: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/11/24 14:01:38.112
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/11/24 14:01:38.113
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/11/24 14:01:38.113
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/11/24 14:01:38.113
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/11/24 14:01:38.114
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/11/24 14:01:38.114
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/11/24 14:01:38.114
  May 11 14:01:38.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7288" for this suite. @ 05/11/24 14:01:38.158
  STEP: Destroying namespace "webhook-markers-5882" for this suite. @ 05/11/24 14:01:38.168
• [3.356 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 05/11/24 14:01:38.176
  May 11 14:01:38.176: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename var-expansion @ 05/11/24 14:01:38.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:01:38.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:01:38.194
  STEP: Creating a pod to test substitution in container's command @ 05/11/24 14:01:38.196
  E0511 14:01:38.776833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:39.777152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:40.777998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:41.778530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:01:42.214
  May 11 14:01:42.218: INFO: Trying to get logs from node ip-172-31-73-54 pod var-expansion-d27c1f0b-7757-478b-8608-fdf6abaf4e50 container dapi-container: <nil>
  STEP: delete the pod @ 05/11/24 14:01:42.226
  May 11 14:01:42.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-560" for this suite. @ 05/11/24 14:01:42.246
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 05/11/24 14:01:42.258
  May 11 14:01:42.258: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename kubelet-test @ 05/11/24 14:01:42.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:01:42.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:01:42.277
  E0511 14:01:42.778640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:43.778681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:44.779124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:45.779825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 11 14:01:46.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7637" for this suite. @ 05/11/24 14:01:46.304
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 05/11/24 14:01:46.312
  May 11 14:01:46.312: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename configmap @ 05/11/24 14:01:46.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:01:46.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:01:46.328
  STEP: Creating configMap with name configmap-test-volume-18345adf-ff7d-4333-975f-56fc1182af62 @ 05/11/24 14:01:46.332
  STEP: Creating a pod to test consume configMaps @ 05/11/24 14:01:46.336
  E0511 14:01:46.780536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:47.781120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:01:48.354
  May 11 14:01:48.357: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-configmaps-09be5be9-3f75-43b9-8667-be1f5517ea84 container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/11/24 14:01:48.363
  May 11 14:01:48.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6915" for this suite. @ 05/11/24 14:01:48.385
• [2.080 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 05/11/24 14:01:48.392
  May 11 14:01:48.392: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename watch @ 05/11/24 14:01:48.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:01:48.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:01:48.409
  STEP: creating a watch on configmaps @ 05/11/24 14:01:48.412
  STEP: creating a new configmap @ 05/11/24 14:01:48.412
  STEP: modifying the configmap once @ 05/11/24 14:01:48.418
  STEP: closing the watch once it receives two notifications @ 05/11/24 14:01:48.426
  May 11 14:01:48.426: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2343  4adbe9a9-e82c-4b9e-b11a-b61bd1ddc8e7 49053 0 2024-05-11 14:01:48 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-11 14:01:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 14:01:48.426: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2343  4adbe9a9-e82c-4b9e-b11a-b61bd1ddc8e7 49054 0 2024-05-11 14:01:48 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-11 14:01:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/11/24 14:01:48.426
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/11/24 14:01:48.433
  STEP: deleting the configmap @ 05/11/24 14:01:48.433
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/11/24 14:01:48.439
  May 11 14:01:48.439: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2343  4adbe9a9-e82c-4b9e-b11a-b61bd1ddc8e7 49055 0 2024-05-11 14:01:48 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-11 14:01:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 14:01:48.440: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2343  4adbe9a9-e82c-4b9e-b11a-b61bd1ddc8e7 49056 0 2024-05-11 14:01:48 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-11 14:01:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 11 14:01:48.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2343" for this suite. @ 05/11/24 14:01:48.443
• [0.056 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 05/11/24 14:01:48.448
  May 11 14:01:48.448: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename downward-api @ 05/11/24 14:01:48.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:01:48.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:01:48.466
  STEP: Creating a pod to test downward api env vars @ 05/11/24 14:01:48.468
  E0511 14:01:48.782177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:49.782265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:50.782694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:51.782802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:01:52.492
  May 11 14:01:52.496: INFO: Trying to get logs from node ip-172-31-73-54 pod downward-api-6b2b1090-7cfa-4a7c-a1e6-eb975fb714d4 container dapi-container: <nil>
  STEP: delete the pod @ 05/11/24 14:01:52.503
  May 11 14:01:52.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9596" for this suite. @ 05/11/24 14:01:52.519
• [4.076 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 05/11/24 14:01:52.525
  May 11 14:01:52.525: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename configmap @ 05/11/24 14:01:52.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:01:52.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:01:52.543
  STEP: Creating configMap with name configmap-test-volume-88622698-268a-4d5e-89fb-17a8766c9118 @ 05/11/24 14:01:52.545
  STEP: Creating a pod to test consume configMaps @ 05/11/24 14:01:52.548
  E0511 14:01:52.783103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:53.783280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:54.783373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:55.783490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:01:56.573
  May 11 14:01:56.577: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-configmaps-af57399f-4349-44e3-8c18-25c00bba168b container agnhost-container: <nil>
  STEP: delete the pod @ 05/11/24 14:01:56.583
  May 11 14:01:56.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7805" for this suite. @ 05/11/24 14:01:56.6
• [4.081 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 05/11/24 14:01:56.605
  May 11 14:01:56.605: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 14:01:56.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:01:56.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:01:56.623
  STEP: Creating configMap with name projected-configmap-test-volume-map-475255f8-f7f7-41ae-bdbb-3fca7022ce6a @ 05/11/24 14:01:56.625
  STEP: Creating a pod to test consume configMaps @ 05/11/24 14:01:56.63
  E0511 14:01:56.784013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:57.784095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:58.784229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:01:59.784322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:02:00.649
  May 11 14:02:00.652: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-projected-configmaps-7e6f3939-3bbe-4df1-a0a1-ea4e675a0798 container agnhost-container: <nil>
  STEP: delete the pod @ 05/11/24 14:02:00.659
  May 11 14:02:00.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-452" for this suite. @ 05/11/24 14:02:00.677
• [4.079 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 05/11/24 14:02:00.684
  May 11 14:02:00.684: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename field-validation @ 05/11/24 14:02:00.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:02:00.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:02:00.703
  STEP: apply creating a deployment @ 05/11/24 14:02:00.706
  May 11 14:02:00.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7852" for this suite. @ 05/11/24 14:02:00.72
• [0.040 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 05/11/24 14:02:00.724
  May 11 14:02:00.724: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename svcaccounts @ 05/11/24 14:02:00.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:02:00.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:02:00.741
  STEP: Creating ServiceAccount "e2e-sa-htw9s"  @ 05/11/24 14:02:00.744
  May 11 14:02:00.747: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-htw9s"  @ 05/11/24 14:02:00.747
  May 11 14:02:00.756: INFO: AutomountServiceAccountToken: true
  May 11 14:02:00.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2758" for this suite. @ 05/11/24 14:02:00.76
• [0.040 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 05/11/24 14:02:00.765
  May 11 14:02:00.765: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename emptydir @ 05/11/24 14:02:00.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:02:00.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:02:00.781
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/11/24 14:02:00.784
  E0511 14:02:00.784357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:02:01.784438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:02:02.784544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:02:03.784622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:02:04.784712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:02:04.807
  May 11 14:02:04.810: INFO: Trying to get logs from node ip-172-31-73-54 pod pod-f370985e-9835-4eee-9887-9eb20c05e586 container test-container: <nil>
  STEP: delete the pod @ 05/11/24 14:02:04.817
  May 11 14:02:04.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6602" for this suite. @ 05/11/24 14:02:04.839
• [4.081 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 05/11/24 14:02:04.846
  May 11 14:02:04.846: INFO: >>> kubeConfig: /tmp/kubeconfig-2343787702
  STEP: Building a namespace api object, basename projected @ 05/11/24 14:02:04.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/11/24 14:02:04.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/11/24 14:02:04.865
  STEP: Creating a pod to test downward API volume plugin @ 05/11/24 14:02:04.867
  E0511 14:02:05.784803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:02:06.784877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:02:07.784983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0511 14:02:08.785196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/11/24 14:02:08.887
  May 11 14:02:08.891: INFO: Trying to get logs from node ip-172-31-73-54 pod downwardapi-volume-f6777bbf-c77e-413e-bf08-6226d0f09c26 container client-container: <nil>
  STEP: delete the pod @ 05/11/24 14:02:08.898
  May 11 14:02:08.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3074" for this suite. @ 05/11/24 14:02:08.92
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  May 11 14:02:08.926: INFO: Running AfterSuite actions on node 1
  May 11 14:02:08.926: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.029 seconds]
------------------------------

Ran 388 of 7407 Specs in 6522.340 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7019 Skipped
PASS

Ginkgo ran 1 suite in 1h48m42.962501664s
Test Suite Passed
