  I0525 12:14:55.574951      21 e2e.go:117] Starting e2e run "9c22dd86-36af-482a-8b2f-e7d59476956e" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1716639294 - will randomize all specs

Will run 388 of 7408 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  May 25 12:14:55.847: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 12:14:55.848: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  May 25 12:14:55.884: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  May 25 12:14:55.889: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  May 25 12:14:55.889: INFO: e2e test version: v1.29.5
  May 25 12:14:55.890: INFO: kube-apiserver version: v1.29.5
  May 25 12:14:55.890: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 12:14:55.896: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.049 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 05/25/24 12:14:56.132
  May 25 12:14:56.132: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename certificates @ 05/25/24 12:14:56.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:14:56.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:14:56.202
  STEP: getting /apis @ 05/25/24 12:14:56.673
  STEP: getting /apis/certificates.k8s.io @ 05/25/24 12:14:56.678
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/25/24 12:14:56.679
  STEP: creating @ 05/25/24 12:14:56.68
  STEP: getting @ 05/25/24 12:14:56.703
  STEP: listing @ 05/25/24 12:14:56.706
  STEP: watching @ 05/25/24 12:14:56.711
  May 25 12:14:56.711: INFO: starting watch
  STEP: patching @ 05/25/24 12:14:56.713
  STEP: updating @ 05/25/24 12:14:56.72
  May 25 12:14:56.726: INFO: waiting for watch events with expected annotations
  May 25 12:14:56.726: INFO: saw patched and updated annotations
  STEP: getting /approval @ 05/25/24 12:14:56.726
  STEP: patching /approval @ 05/25/24 12:14:56.73
  STEP: updating /approval @ 05/25/24 12:14:56.738
  STEP: getting /status @ 05/25/24 12:14:56.746
  STEP: patching /status @ 05/25/24 12:14:56.75
  STEP: updating /status @ 05/25/24 12:14:56.76
  STEP: deleting @ 05/25/24 12:14:56.768
  STEP: deleting a collection @ 05/25/24 12:14:56.781
  May 25 12:14:56.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-1441" for this suite. @ 05/25/24 12:14:56.804
• [0.681 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 05/25/24 12:14:56.813
  May 25 12:14:56.813: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename field-validation @ 05/25/24 12:14:56.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:14:56.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:14:56.839
  May 25 12:14:56.844: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  W0525 12:14:59.417673      21 warnings.go:70] unknown field "alpha"
  W0525 12:14:59.417968      21 warnings.go:70] unknown field "beta"
  W0525 12:14:59.418077      21 warnings.go:70] unknown field "delta"
  W0525 12:14:59.418249      21 warnings.go:70] unknown field "epsilon"
  W0525 12:14:59.418423      21 warnings.go:70] unknown field "gamma"
  May 25 12:14:59.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3759" for this suite. @ 05/25/24 12:14:59.988
• [3.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 05/25/24 12:14:59.996
  May 25 12:14:59.996: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename secrets @ 05/25/24 12:14:59.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:15:00.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:15:00.017
  STEP: Creating secret with name secret-test-882c3693-cb6c-49d1-90b3-c1f3a0421a4a @ 05/25/24 12:15:00.02
  STEP: Creating a pod to test consume secrets @ 05/25/24 12:15:00.026
  STEP: Saw pod success @ 05/25/24 12:15:10.063
  May 25 12:15:10.066: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-secrets-077b61b4-3422-49c2-bb90-3e65af8c2d74 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/25/24 12:15:10.085
  May 25 12:15:10.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5648" for this suite. @ 05/25/24 12:15:10.107
• [10.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 05/25/24 12:15:10.114
  May 25 12:15:10.114: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename proxy @ 05/25/24 12:15:10.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:15:10.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:15:10.139
  May 25 12:15:10.142: INFO: Creating pod...
  May 25 12:15:12.159: INFO: Creating service...
  May 25 12:15:12.170: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1005/pods/agnhost/proxy?method=DELETE
  May 25 12:15:12.178: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 25 12:15:12.178: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1005/pods/agnhost/proxy?method=OPTIONS
  May 25 12:15:12.182: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 25 12:15:12.182: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1005/pods/agnhost/proxy?method=PATCH
  May 25 12:15:12.185: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 25 12:15:12.185: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1005/pods/agnhost/proxy?method=POST
  May 25 12:15:12.188: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 25 12:15:12.188: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1005/pods/agnhost/proxy?method=PUT
  May 25 12:15:12.192: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 25 12:15:12.192: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1005/services/e2e-proxy-test-service/proxy?method=DELETE
  May 25 12:15:12.197: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 25 12:15:12.198: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1005/services/e2e-proxy-test-service/proxy?method=OPTIONS
  May 25 12:15:12.203: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 25 12:15:12.203: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1005/services/e2e-proxy-test-service/proxy?method=PATCH
  May 25 12:15:12.209: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 25 12:15:12.210: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1005/services/e2e-proxy-test-service/proxy?method=POST
  May 25 12:15:12.215: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 25 12:15:12.215: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1005/services/e2e-proxy-test-service/proxy?method=PUT
  May 25 12:15:12.220: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 25 12:15:12.220: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1005/pods/agnhost/proxy?method=GET
  May 25 12:15:12.224: INFO: http.Client request:GET StatusCode:301
  May 25 12:15:12.224: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1005/services/e2e-proxy-test-service/proxy?method=GET
  May 25 12:15:12.228: INFO: http.Client request:GET StatusCode:301
  May 25 12:15:12.228: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1005/pods/agnhost/proxy?method=HEAD
  May 25 12:15:12.236: INFO: http.Client request:HEAD StatusCode:301
  May 25 12:15:12.236: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1005/services/e2e-proxy-test-service/proxy?method=HEAD
  May 25 12:15:12.241: INFO: http.Client request:HEAD StatusCode:301
  May 25 12:15:12.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1005" for this suite. @ 05/25/24 12:15:12.244
• [2.137 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 05/25/24 12:15:12.251
  May 25 12:15:12.251: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename replication-controller @ 05/25/24 12:15:12.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:15:12.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:15:12.27
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/25/24 12:15:12.273
  STEP: When a replication controller with a matching selector is created @ 05/25/24 12:15:16.303
  STEP: Then the orphan pod is adopted @ 05/25/24 12:15:16.31
  May 25 12:15:17.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7171" for this suite. @ 05/25/24 12:15:17.322
• [5.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 05/25/24 12:15:17.33
  May 25 12:15:17.330: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename resourcequota @ 05/25/24 12:15:17.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:15:17.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:15:17.349
  STEP: Creating resourceQuota "e2e-rq-status-gtqd6" @ 05/25/24 12:15:17.356
  May 25 12:15:17.366: INFO: Resource quota "e2e-rq-status-gtqd6" reports spec: hard cpu limit of 500m
  May 25 12:15:17.366: INFO: Resource quota "e2e-rq-status-gtqd6" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-gtqd6" /status @ 05/25/24 12:15:17.367
  STEP: Confirm /status for "e2e-rq-status-gtqd6" resourceQuota via watch @ 05/25/24 12:15:17.375
  May 25 12:15:17.376: INFO: observed resourceQuota "e2e-rq-status-gtqd6" in namespace "resourcequota-3772" with hard status: v1.ResourceList(nil)
  May 25 12:15:17.376: INFO: Found resourceQuota "e2e-rq-status-gtqd6" in namespace "resourcequota-3772" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  May 25 12:15:17.377: INFO: ResourceQuota "e2e-rq-status-gtqd6" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/25/24 12:15:17.38
  May 25 12:15:17.388: INFO: Resource quota "e2e-rq-status-gtqd6" reports spec: hard cpu limit of 1
  May 25 12:15:17.388: INFO: Resource quota "e2e-rq-status-gtqd6" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-gtqd6" /status @ 05/25/24 12:15:17.388
  STEP: Confirm /status for "e2e-rq-status-gtqd6" resourceQuota via watch @ 05/25/24 12:15:17.396
  May 25 12:15:17.398: INFO: observed resourceQuota "e2e-rq-status-gtqd6" in namespace "resourcequota-3772" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  May 25 12:15:17.398: INFO: Found resourceQuota "e2e-rq-status-gtqd6" in namespace "resourcequota-3772" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  May 25 12:15:17.398: INFO: ResourceQuota "e2e-rq-status-gtqd6" /status was patched
  STEP: Get "e2e-rq-status-gtqd6" /status @ 05/25/24 12:15:17.398
  May 25 12:15:17.402: INFO: Resourcequota "e2e-rq-status-gtqd6" reports status: hard cpu of 1
  May 25 12:15:17.402: INFO: Resourcequota "e2e-rq-status-gtqd6" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-gtqd6" /status before checking Spec is unchanged @ 05/25/24 12:15:17.406
  May 25 12:15:17.412: INFO: Resourcequota "e2e-rq-status-gtqd6" reports status: hard cpu of 2
  May 25 12:15:17.412: INFO: Resourcequota "e2e-rq-status-gtqd6" reports status: hard memory of 2Gi
  May 25 12:15:17.414: INFO: Found resourceQuota "e2e-rq-status-gtqd6" in namespace "resourcequota-3772" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  May 25 12:15:17.417: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c72c90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c72cd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c72d08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:15:22.418: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bc97d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bc9800), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bc9830), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:15:27.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c73020), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c73050), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c73080), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:15:32.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c732d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c73320), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c73350), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:15:37.418: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bc9a88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bc9ab8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bc9ae8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:15:42.420: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bc9d40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bc9d88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bc9db8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:15:47.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c73548), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c73590), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c735c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:15:52.423: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c737d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c73800), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c73830), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:15:57.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bc9f50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bc9f80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005bc9fb0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:16:02.418: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae228), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae2b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:16:07.420: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae5a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae5e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae630), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:16:12.418: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae930), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae978), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae9c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:16:17.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c73ad0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c73b00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c73b90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:16:22.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c73de8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c73e18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c73e48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:16:27.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c73fc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12018), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12048), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:16:32.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12240), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e122a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:16:37.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daed80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daedb0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daee10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:16:42.418: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf098), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf0c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf0f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:16:47.420: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e123f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12420), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12450), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:16:52.418: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf3f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf428), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf458), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:16:57.420: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12648), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12678), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e126a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:17:02.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae0d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:17:07.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae3d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae420), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae468), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:17:12.418: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae6a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae6f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:17:17.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae8e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae930), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dae978), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:17:22.418: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daec60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daeca8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daecf0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:17:27.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daeeb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daeee8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daef18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:17:32.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf170), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf1b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf1e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:17:37.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf440), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf470), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf4a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:17:42.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12330), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12360), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12390), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:17:47.420: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e127e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12840), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:17:52.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf698), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf6c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf6f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:17:57.418: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf8f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf920), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daf950), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:18:02.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12a50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12a98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12ac8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:18:07.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12c30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12c78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12ca8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:18:12.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dafcc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dafcf8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005dafd28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:18:17.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12ea0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12ed0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12f00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:18:22.418: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e13050), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e13080), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e130b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:18:27.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daff20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daff50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005daff80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:18:32.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e13368), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e13398), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e133e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:18:37.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e135f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e13620), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e13650), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:18:42.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e137a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e137d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e13800), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:18:47.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0059302a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0059302d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005930330), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:18:52.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0059304c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005930510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005930558), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:18:57.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005930708), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005930738), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005930780), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:19:02.418: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e120c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e120f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:19:07.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e122e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12348), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:19:12.420: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e12498), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e124c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005e124f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:19:17.418: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gtqd6", GenerateName:"", Namespace:"resourcequota-3772", SelfLink:"", UID:"1290179d-e1bf-4551-af4c-11f76a41c6fd", ResourceVersion:"4455", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gtqd6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005930270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0059302a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 12, 15, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0059302d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May 25 12:19:22.419: INFO: ResourceQuota "e2e-rq-status-gtqd6" Spec was unchanged and /status reset
  May 25 12:19:22.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3772" for this suite. @ 05/25/24 12:19:22.424
• [245.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 05/25/24 12:19:22.43
  May 25 12:19:22.430: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename replication-controller @ 05/25/24 12:19:22.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:19:22.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:19:22.45
  STEP: Creating replication controller my-hostname-basic-8dda3f53-2b5e-4c67-8c27-50a94d37909d @ 05/25/24 12:19:22.454
  May 25 12:19:22.465: INFO: Pod name my-hostname-basic-8dda3f53-2b5e-4c67-8c27-50a94d37909d: Found 0 pods out of 1
  May 25 12:19:27.471: INFO: Pod name my-hostname-basic-8dda3f53-2b5e-4c67-8c27-50a94d37909d: Found 1 pods out of 1
  May 25 12:19:27.471: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-8dda3f53-2b5e-4c67-8c27-50a94d37909d" are running
  May 25 12:19:27.474: INFO: Pod "my-hostname-basic-8dda3f53-2b5e-4c67-8c27-50a94d37909d-g9kng" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-25 12:19:23 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-25 12:19:22 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-25 12:19:23 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-25 12:19:23 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-25 12:19:22 +0000 UTC Reason: Message:}])
  May 25 12:19:27.474: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/25/24 12:19:27.474
  May 25 12:19:27.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6937" for this suite. @ 05/25/24 12:19:27.488
• [5.064 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 05/25/24 12:19:27.495
  May 25 12:19:27.495: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename security-context-test @ 05/25/24 12:19:27.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:19:27.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:19:27.513
  May 25 12:19:31.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4437" for this suite. @ 05/25/24 12:19:31.561
• [4.075 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 05/25/24 12:19:31.57
  May 25 12:19:31.570: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubelet-test @ 05/25/24 12:19:31.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:19:31.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:19:31.591
  May 25 12:19:33.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8820" for this suite. @ 05/25/24 12:19:33.634
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 05/25/24 12:19:33.641
  May 25 12:19:33.641: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename var-expansion @ 05/25/24 12:19:33.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:19:33.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:19:33.659
  STEP: Creating a pod to test substitution in volume subpath @ 05/25/24 12:19:33.665
  STEP: Saw pod success @ 05/25/24 12:19:37.688
  May 25 12:19:37.691: INFO: Trying to get logs from node ip-172-31-45-106 pod var-expansion-e8d354b1-f802-4378-a5d8-98b12aa7aa93 container dapi-container: <nil>
  STEP: delete the pod @ 05/25/24 12:19:37.702
  May 25 12:19:37.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8412" for this suite. @ 05/25/24 12:19:37.723
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 05/25/24 12:19:37.731
  May 25 12:19:37.731: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl @ 05/25/24 12:19:37.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:19:37.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:19:37.749
  STEP: create deployment with httpd image @ 05/25/24 12:19:37.751
  May 25 12:19:37.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-706 create -f -'
  May 25 12:19:37.822: INFO: stderr: ""
  May 25 12:19:37.822: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/25/24 12:19:37.822
  May 25 12:19:37.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-706 diff -f -'
  May 25 12:19:37.901: INFO: rc: 1
  May 25 12:19:37.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-706 delete -f -'
  May 25 12:19:37.947: INFO: stderr: ""
  May 25 12:19:37.947: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  May 25 12:19:37.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-706" for this suite. @ 05/25/24 12:19:37.954
• [0.229 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 05/25/24 12:19:37.96
  May 25 12:19:37.960: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename runtimeclass @ 05/25/24 12:19:37.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:19:37.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:19:37.978
  May 25 12:19:38.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-227" for this suite. @ 05/25/24 12:19:38.015
• [0.063 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 05/25/24 12:19:38.023
  May 25 12:19:38.023: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename configmap @ 05/25/24 12:19:38.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:19:38.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:19:38.038
  STEP: Creating configMap configmap-7434/configmap-test-bf547602-1b02-4963-b4f8-e972fc7c659d @ 05/25/24 12:19:38.041
  STEP: Creating a pod to test consume configMaps @ 05/25/24 12:19:38.046
  STEP: Saw pod success @ 05/25/24 12:19:42.069
  May 25 12:19:42.072: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-configmaps-5f5e869a-99df-4a8d-81d5-a2580ba98832 container env-test: <nil>
  STEP: delete the pod @ 05/25/24 12:19:42.079
  May 25 12:19:42.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7434" for this suite. @ 05/25/24 12:19:42.101
• [4.086 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 05/25/24 12:19:42.108
  May 25 12:19:42.108: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-probe @ 05/25/24 12:19:42.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:19:42.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:19:42.125
  May 25 12:20:42.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4994" for this suite. @ 05/25/24 12:20:42.143
• [60.043 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 05/25/24 12:20:42.152
  May 25 12:20:42.152: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename configmap @ 05/25/24 12:20:42.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:20:42.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:20:42.17
  STEP: creating a ConfigMap @ 05/25/24 12:20:42.174
  STEP: fetching the ConfigMap @ 05/25/24 12:20:42.178
  STEP: patching the ConfigMap @ 05/25/24 12:20:42.181
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/25/24 12:20:42.186
  STEP: deleting the ConfigMap by collection with a label selector @ 05/25/24 12:20:42.189
  STEP: listing all ConfigMaps in test namespace @ 05/25/24 12:20:42.197
  May 25 12:20:42.200: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-73" for this suite. @ 05/25/24 12:20:42.203
• [0.057 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:708
  STEP: Creating a kubernetes client @ 05/25/24 12:20:42.209
  May 25 12:20:42.209: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename sched-pred @ 05/25/24 12:20:42.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:20:42.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:20:42.228
  May 25 12:20:42.231: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 25 12:20:42.241: INFO: Waiting for terminating namespaces to be deleted...
  May 25 12:20:42.244: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-15-138 before test
  May 25 12:20:42.249: INFO: nginx-ingress-controller-kubernetes-worker-fczx7 from ingress-nginx-kubernetes-worker started at 2024-05-25 12:10:29 +0000 UTC (1 container statuses recorded)
  May 25 12:20:42.249: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 25 12:20:42.249: INFO: calico-node-zcfdr from kube-system started at 2024-05-25 12:11:54 +0000 UTC (1 container statuses recorded)
  May 25 12:20:42.249: INFO: 	Container calico-node ready: true, restart count 0
  May 25 12:20:42.249: INFO: sonobuoy-e2e-job-f71b16864db44f61 from sonobuoy started at 2024-05-25 12:14:50 +0000 UTC (2 container statuses recorded)
  May 25 12:20:42.249: INFO: 	Container e2e ready: true, restart count 0
  May 25 12:20:42.249: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 25 12:20:42.249: INFO: sonobuoy-systemd-logs-daemon-set-61d532afa6f144b3-tg5ts from sonobuoy started at 2024-05-25 12:14:50 +0000 UTC (2 container statuses recorded)
  May 25 12:20:42.250: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 25 12:20:42.250: INFO: 	Container systemd-logs ready: true, restart count 0
  May 25 12:20:42.250: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-23-222 before test
  May 25 12:20:42.255: INFO: nginx-ingress-controller-kubernetes-worker-zvbpv from ingress-nginx-kubernetes-worker started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 12:20:42.255: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 25 12:20:42.255: INFO: calico-node-zpkdg from kube-system started at 2024-05-25 12:12:04 +0000 UTC (1 container statuses recorded)
  May 25 12:20:42.255: INFO: 	Container calico-node ready: true, restart count 0
  May 25 12:20:42.255: INFO: coredns-bddfd76d7-x6hfl from kube-system started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 12:20:42.255: INFO: 	Container coredns ready: true, restart count 0
  May 25 12:20:42.255: INFO: kube-state-metrics-6f48cdd76-5mtk5 from kube-system started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 12:20:42.255: INFO: 	Container kube-state-metrics ready: true, restart count 0
  May 25 12:20:42.255: INFO: metrics-server-v0.6.3-69d7fbfdf8-82qd4 from kube-system started at 2024-05-25 12:07:22 +0000 UTC (2 container statuses recorded)
  May 25 12:20:42.255: INFO: 	Container metrics-server ready: true, restart count 0
  May 25 12:20:42.255: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  May 25 12:20:42.255: INFO: dashboard-metrics-scraper-5dd7cb5fc-gxms9 from kubernetes-dashboard started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 12:20:42.255: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  May 25 12:20:42.255: INFO: kubernetes-dashboard-7b899cb9d9-fl78g from kubernetes-dashboard started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 12:20:42.255: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  May 25 12:20:42.255: INFO: sonobuoy-systemd-logs-daemon-set-61d532afa6f144b3-8jjrn from sonobuoy started at 2024-05-25 12:14:50 +0000 UTC (2 container statuses recorded)
  May 25 12:20:42.255: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 25 12:20:42.255: INFO: 	Container systemd-logs ready: true, restart count 0
  May 25 12:20:42.255: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-45-106 before test
  May 25 12:20:42.260: INFO: test-webserver-d943a99c-fcc6-4213-921d-65cc8a99c3d8 from container-probe-4994 started at 2024-05-25 12:19:42 +0000 UTC (1 container statuses recorded)
  May 25 12:20:42.260: INFO: 	Container test-webserver ready: false, restart count 0
  May 25 12:20:42.260: INFO: nginx-ingress-controller-kubernetes-worker-tgvnv from ingress-nginx-kubernetes-worker started at 2024-05-25 12:09:05 +0000 UTC (1 container statuses recorded)
  May 25 12:20:42.260: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 25 12:20:42.260: INFO: calico-node-b4lmv from kube-system started at 2024-05-25 12:11:54 +0000 UTC (1 container statuses recorded)
  May 25 12:20:42.260: INFO: 	Container calico-node ready: true, restart count 0
  May 25 12:20:42.260: INFO: sonobuoy from sonobuoy started at 2024-05-25 12:14:48 +0000 UTC (1 container statuses recorded)
  May 25 12:20:42.260: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May 25 12:20:42.260: INFO: sonobuoy-systemd-logs-daemon-set-61d532afa6f144b3-fz7f5 from sonobuoy started at 2024-05-25 12:14:50 +0000 UTC (2 container statuses recorded)
  May 25 12:20:42.260: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 25 12:20:42.260: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/25/24 12:20:42.26
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/25/24 12:20:44.281
  STEP: Trying to apply a random label on the found node. @ 05/25/24 12:20:44.295
  STEP: verifying the node has the label kubernetes.io/e2e-f30fa9eb-3958-4726-a960-a5c039ef3ea8 95 @ 05/25/24 12:20:44.305
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/25/24 12:20:44.311
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.15.138 on the node which pod4 resides and expect not scheduled @ 05/25/24 12:20:48.335
  STEP: removing the label kubernetes.io/e2e-f30fa9eb-3958-4726-a960-a5c039ef3ea8 off the node ip-172-31-15-138 @ 05/25/24 12:25:48.344
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-f30fa9eb-3958-4726-a960-a5c039ef3ea8 @ 05/25/24 12:25:48.358
  May 25 12:25:48.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1804" for this suite. @ 05/25/24 12:25:48.37
• [306.169 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 05/25/24 12:25:48.379
  May 25 12:25:48.379: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename chunking @ 05/25/24 12:25:48.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:25:48.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:25:48.397
  STEP: creating a large number of resources @ 05/25/24 12:25:48.4
  STEP: retrieving those results in paged fashion several times @ 05/25/24 12:26:06.087
  May 25 12:26:06.134: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  May 25 12:26:06.185: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  May 25 12:26:06.234: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  May 25 12:26:06.285: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  May 25 12:26:06.335: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  May 25 12:26:06.385: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  May 25 12:26:06.435: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  May 25 12:26:06.485: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  May 25 12:26:06.535: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  May 25 12:26:06.585: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  May 25 12:26:06.634: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  May 25 12:26:06.685: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  May 25 12:26:06.735: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  May 25 12:26:06.785: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  May 25 12:26:06.835: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  May 25 12:26:06.885: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  May 25 12:26:06.935: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  May 25 12:26:06.985: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  May 25 12:26:07.035: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  May 25 12:26:07.085: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  May 25 12:26:07.135: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  May 25 12:26:07.185: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  May 25 12:26:07.235: INFO: Retrieved 17/17 results with rv 6518 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUxOCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  May 25 12:26:07.285: INFO: Retrieved 9/17 results with rv 6518 and continue 
  May 25 12:26:07.335: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  May 25 12:26:07.384: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  May 25 12:26:07.435: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  May 25 12:26:07.486: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  May 25 12:26:07.534: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  May 25 12:26:07.585: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  May 25 12:26:07.635: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  May 25 12:26:07.685: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  May 25 12:26:07.735: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  May 25 12:26:07.785: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  May 25 12:26:07.835: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  May 25 12:26:07.885: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  May 25 12:26:07.935: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  May 25 12:26:07.985: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  May 25 12:26:08.035: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  May 25 12:26:08.085: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  May 25 12:26:08.135: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  May 25 12:26:08.185: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  May 25 12:26:08.235: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  May 25 12:26:08.284: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  May 25 12:26:08.334: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  May 25 12:26:08.385: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  May 25 12:26:08.435: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  May 25 12:26:08.485: INFO: Retrieved 9/17 results with rv 6522 and continue 
  May 25 12:26:08.535: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  May 25 12:26:08.584: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  May 25 12:26:08.635: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  May 25 12:26:08.685: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  May 25 12:26:08.735: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  May 25 12:26:08.786: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  May 25 12:26:08.835: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  May 25 12:26:08.885: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  May 25 12:26:08.934: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  May 25 12:26:08.985: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  May 25 12:26:09.035: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  May 25 12:26:09.085: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  May 25 12:26:09.135: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  May 25 12:26:09.185: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  May 25 12:26:09.234: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  May 25 12:26:09.285: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  May 25 12:26:09.335: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  May 25 12:26:09.386: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  May 25 12:26:09.435: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  May 25 12:26:09.485: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  May 25 12:26:09.535: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  May 25 12:26:09.585: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  May 25 12:26:09.634: INFO: Retrieved 17/17 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  May 25 12:26:09.686: INFO: Retrieved 9/17 results with rv 6522 and continue 
  STEP: retrieving those results all at once @ 05/25/24 12:26:09.686
  May 25 12:26:09.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-685" for this suite. @ 05/25/24 12:26:09.785
• [21.459 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 05/25/24 12:26:09.838
  May 25 12:26:09.838: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename subpath @ 05/25/24 12:26:09.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:26:09.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:26:09.857
  STEP: Setting up data @ 05/25/24 12:26:09.86
  STEP: Creating pod pod-subpath-test-secret-f9pd @ 05/25/24 12:26:09.869
  STEP: Creating a pod to test atomic-volume-subpath @ 05/25/24 12:26:09.869
  STEP: Saw pod success @ 05/25/24 12:26:33.951
  May 25 12:26:33.955: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-subpath-test-secret-f9pd container test-container-subpath-secret-f9pd: <nil>
  STEP: delete the pod @ 05/25/24 12:26:33.973
  STEP: Deleting pod pod-subpath-test-secret-f9pd @ 05/25/24 12:26:33.991
  May 25 12:26:33.991: INFO: Deleting pod "pod-subpath-test-secret-f9pd" in namespace "subpath-2228"
  May 25 12:26:33.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2228" for this suite. @ 05/25/24 12:26:33.998
• [24.167 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 05/25/24 12:26:34.005
  May 25 12:26:34.005: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 12:26:34.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:26:34.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:26:34.021
  STEP: Creating configMap with name projected-configmap-test-volume-6c390d59-83e7-4d2b-b46a-0f9743aa3ffd @ 05/25/24 12:26:34.024
  STEP: Creating a pod to test consume configMaps @ 05/25/24 12:26:34.029
  STEP: Saw pod success @ 05/25/24 12:26:38.054
  May 25 12:26:38.058: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-projected-configmaps-1257f60e-7d58-4d1b-b52e-91739069e594 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/25/24 12:26:38.064
  May 25 12:26:38.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8538" for this suite. @ 05/25/24 12:26:38.083
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 05/25/24 12:26:38.091
  May 25 12:26:38.091: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename var-expansion @ 05/25/24 12:26:38.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:26:38.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:26:38.107
  STEP: Creating a pod to test substitution in container's command @ 05/25/24 12:26:38.111
  STEP: Saw pod success @ 05/25/24 12:26:42.134
  May 25 12:26:42.139: INFO: Trying to get logs from node ip-172-31-45-106 pod var-expansion-92c59005-1f4e-4ce2-984e-a84940f64744 container dapi-container: <nil>
  STEP: delete the pod @ 05/25/24 12:26:42.145
  May 25 12:26:42.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5462" for this suite. @ 05/25/24 12:26:42.167
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 05/25/24 12:26:42.174
  May 25 12:26:42.174: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename watch @ 05/25/24 12:26:42.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:26:42.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:26:42.19
  STEP: creating a new configmap @ 05/25/24 12:26:42.193
  STEP: modifying the configmap once @ 05/25/24 12:26:42.198
  STEP: modifying the configmap a second time @ 05/25/24 12:26:42.206
  STEP: deleting the configmap @ 05/25/24 12:26:42.213
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/25/24 12:26:42.218
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/25/24 12:26:42.22
  May 25 12:26:42.220: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9077  282aa810-a4a2-4cca-8344-fbf72991f71a 7090 0 2024-05-25 12:26:42 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-25 12:26:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 25 12:26:42.220: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9077  282aa810-a4a2-4cca-8344-fbf72991f71a 7091 0 2024-05-25 12:26:42 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-25 12:26:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 25 12:26:42.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9077" for this suite. @ 05/25/24 12:26:42.224
• [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 05/25/24 12:26:42.231
  May 25 12:26:42.231: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-probe @ 05/25/24 12:26:42.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:26:42.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:26:42.246
  STEP: Creating pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784 @ 05/25/24 12:26:42.25
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/25/24 12:26:44.271
  May 25 12:26:44.275: INFO: Initial restart count of pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 is 0
  May 25 12:26:44.279: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:26:46.284: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:26:48.289: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:26:50.295: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:26:52.300: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:26:54.305: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:26:56.309: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:26:58.316: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:00.321: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:02.326: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:04.336: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:06.340: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:08.345: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:10.350: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:12.355: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:14.363: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:16.368: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:18.375: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:20.380: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:22.385: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:24.391: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:26.396: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:28.400: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:30.405: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:32.411: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:34.417: INFO: Get pod busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 in namespace container-probe-7784
  May 25 12:27:34.417: INFO: Restart count of pod container-probe-7784/busybox-95bec5cb-b9ad-4666-9550-7d379bfddcb9 is now 1 (50.141624089s elapsed)
  STEP: deleting the pod @ 05/25/24 12:27:34.417
  May 25 12:27:34.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7784" for this suite. @ 05/25/24 12:27:34.438
• [52.214 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 05/25/24 12:27:34.445
  May 25 12:27:34.445: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 12:27:34.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:27:34.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:27:34.462
  STEP: creating service nodeport-test with type=NodePort in namespace services-1407 @ 05/25/24 12:27:34.465
  STEP: creating replication controller nodeport-test in namespace services-1407 @ 05/25/24 12:27:34.479
  I0525 12:27:34.488722      21 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-1407, replica count: 2
  I0525 12:27:37.539888      21 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 25 12:27:37.539: INFO: Creating new exec pod
  May 25 12:27:40.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-1407 exec execpodvkjw6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  May 25 12:27:40.658: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  May 25 12:27:40.658: INFO: stdout: ""
  May 25 12:27:41.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-1407 exec execpodvkjw6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  May 25 12:27:41.659: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  May 25 12:27:41.659: INFO: stdout: "nodeport-test-h6xxv"
  May 25 12:27:41.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-1407 exec execpodvkjw6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.194 80'
  May 25 12:27:41.752: INFO: stderr: "+ nc -v -t -w 2 10.152.183.194 80\nConnection to 10.152.183.194 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  May 25 12:27:41.752: INFO: stdout: "nodeport-test-wz5pw"
  May 25 12:27:41.752: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-1407 exec execpodvkjw6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.138 30725'
  May 25 12:27:41.846: INFO: stderr: "+ nc -v -t -w 2 172.31.15.138 30725\n+ echo hostName\nConnection to 172.31.15.138 30725 port [tcp/*] succeeded!\n"
  May 25 12:27:41.846: INFO: stdout: "nodeport-test-wz5pw"
  May 25 12:27:41.846: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-1407 exec execpodvkjw6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.106 30725'
  May 25 12:27:41.933: INFO: stderr: "+ nc -v -t -w 2 172.31.45.106 30725\n+ echo hostName\nConnection to 172.31.45.106 30725 port [tcp/*] succeeded!\n"
  May 25 12:27:41.933: INFO: stdout: "nodeport-test-h6xxv"
  May 25 12:27:41.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1407" for this suite. @ 05/25/24 12:27:41.938
• [7.500 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 05/25/24 12:27:41.945
  May 25 12:27:41.945: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 12:27:41.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:27:41.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:27:41.964
  STEP: Setting up server cert @ 05/25/24 12:27:41.986
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 12:27:42.306
  STEP: Deploying the webhook pod @ 05/25/24 12:27:42.314
  STEP: Wait for the deployment to be ready @ 05/25/24 12:27:42.326
  May 25 12:27:42.336: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/25/24 12:27:44.348
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 12:27:44.365
  May 25 12:27:45.365: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/25/24 12:27:45.373
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/25/24 12:27:45.374
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/25/24 12:27:45.374
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/25/24 12:27:45.374
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/25/24 12:27:45.376
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/25/24 12:27:45.376
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/25/24 12:27:45.377
  May 25 12:27:45.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1343" for this suite. @ 05/25/24 12:27:45.427
  STEP: Destroying namespace "webhook-markers-5276" for this suite. @ 05/25/24 12:27:45.435
• [3.500 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 05/25/24 12:27:45.446
  May 25 12:27:45.446: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename sched-preemption @ 05/25/24 12:27:45.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:27:45.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:27:45.462
  May 25 12:27:45.478: INFO: Waiting up to 1m0s for all nodes to be ready
  May 25 12:28:45.484: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/25/24 12:28:45.488
  May 25 12:28:45.507: INFO: Created pod: pod0-0-sched-preemption-low-priority
  May 25 12:28:45.514: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  May 25 12:28:45.530: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  May 25 12:28:45.538: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  May 25 12:28:45.552: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  May 25 12:28:45.561: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/25/24 12:28:45.561
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/25/24 12:28:47.591
  May 25 12:28:49.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4426" for this suite. @ 05/25/24 12:28:49.695
• [64.256 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 05/25/24 12:28:49.702
  May 25 12:28:49.702: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-probe @ 05/25/24 12:28:49.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:28:49.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:28:49.72
  STEP: Creating pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489 @ 05/25/24 12:28:49.723
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/25/24 12:28:51.741
  May 25 12:28:51.745: INFO: Initial restart count of pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e is 0
  May 25 12:28:51.749: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:28:53.754: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:28:55.758: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:28:57.763: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:28:59.768: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:01.773: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:03.779: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:05.785: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:07.789: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:09.794: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:11.799: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:13.804: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:15.809: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:17.814: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:19.819: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:21.823: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:23.827: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:25.834: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:27.838: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:29.843: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:31.847: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:33.853: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:35.857: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:37.862: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:39.868: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:41.873: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:43.878: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:45.883: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:47.889: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:49.895: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:51.900: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:53.906: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:55.911: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:57.916: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:29:59.922: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:01.927: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:03.932: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:05.937: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:07.943: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:09.948: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:11.956: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:13.961: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:15.967: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:17.972: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:19.977: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:21.983: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:23.988: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:25.993: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:27.997: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:30.002: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:32.007: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:34.013: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:36.018: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:38.023: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:40.029: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:42.035: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:44.039: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:46.045: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:48.051: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:50.055: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:52.061: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:54.066: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:56.071: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:30:58.076: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:00.081: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:02.086: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:04.091: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:06.097: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:08.101: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:10.107: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:12.112: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:14.118: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:16.123: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:18.128: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:20.134: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:22.140: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:24.145: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:26.150: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:28.156: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:30.161: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:32.166: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:34.172: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:36.177: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:38.182: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:40.187: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:42.192: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:44.197: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:46.202: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:48.208: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:50.214: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:52.219: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:54.225: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:56.229: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:31:58.235: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:00.240: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:02.245: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:04.250: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:06.254: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:08.259: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:10.264: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:12.271: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:14.277: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:16.282: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:18.287: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:20.293: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:22.298: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:24.304: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:26.308: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:28.313: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:30.318: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:32.322: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:34.328: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:36.333: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:38.339: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:40.344: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:42.349: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:44.354: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:46.359: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:48.365: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  May 25 12:32:50.369: INFO: Get pod test-grpc-fc128c7c-38c4-48ce-a3a7-e9036c318a1e in namespace container-probe-6489
  STEP: deleting the pod @ 05/25/24 12:32:52.37
  May 25 12:32:52.383: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6489" for this suite. @ 05/25/24 12:32:52.387
• [242.692 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 05/25/24 12:32:52.395
  May 25 12:32:52.395: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename proxy @ 05/25/24 12:32:52.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:32:52.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:32:52.423
  May 25 12:32:52.426: INFO: Creating pod...
  May 25 12:32:54.447: INFO: Creating service...
  May 25 12:32:54.458: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-756/pods/agnhost/proxy/some/path/with/DELETE
  May 25 12:32:54.469: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 25 12:32:54.469: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-756/pods/agnhost/proxy/some/path/with/GET
  May 25 12:32:54.472: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  May 25 12:32:54.472: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-756/pods/agnhost/proxy/some/path/with/HEAD
  May 25 12:32:54.475: INFO: http.Client request:HEAD | StatusCode:200
  May 25 12:32:54.475: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-756/pods/agnhost/proxy/some/path/with/OPTIONS
  May 25 12:32:54.479: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 25 12:32:54.479: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-756/pods/agnhost/proxy/some/path/with/PATCH
  May 25 12:32:54.482: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 25 12:32:54.482: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-756/pods/agnhost/proxy/some/path/with/POST
  May 25 12:32:54.486: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 25 12:32:54.486: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-756/pods/agnhost/proxy/some/path/with/PUT
  May 25 12:32:54.489: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 25 12:32:54.489: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-756/services/test-service/proxy/some/path/with/DELETE
  May 25 12:32:54.494: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May 25 12:32:54.494: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-756/services/test-service/proxy/some/path/with/GET
  May 25 12:32:54.501: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  May 25 12:32:54.501: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-756/services/test-service/proxy/some/path/with/HEAD
  May 25 12:32:54.506: INFO: http.Client request:HEAD | StatusCode:200
  May 25 12:32:54.506: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-756/services/test-service/proxy/some/path/with/OPTIONS
  May 25 12:32:54.511: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May 25 12:32:54.511: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-756/services/test-service/proxy/some/path/with/PATCH
  May 25 12:32:54.516: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May 25 12:32:54.516: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-756/services/test-service/proxy/some/path/with/POST
  May 25 12:32:54.522: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May 25 12:32:54.522: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-756/services/test-service/proxy/some/path/with/PUT
  May 25 12:32:54.527: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May 25 12:32:54.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-756" for this suite. @ 05/25/24 12:32:54.531
• [2.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 05/25/24 12:32:54.538
  May 25 12:32:54.538: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename cronjob @ 05/25/24 12:32:54.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:32:54.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:32:54.554
  STEP: Creating a cronjob @ 05/25/24 12:32:54.557
  STEP: Ensuring more than one job is running at a time @ 05/25/24 12:32:54.564
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/25/24 12:34:00.569
  STEP: Removing cronjob @ 05/25/24 12:34:00.573
  May 25 12:34:00.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5233" for this suite. @ 05/25/24 12:34:00.585
• [66.056 seconds]
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 05/25/24 12:34:00.594
  May 25 12:34:00.594: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename downward-api @ 05/25/24 12:34:00.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:34:00.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:34:00.623
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 12:34:00.626
  STEP: Saw pod success @ 05/25/24 12:34:04.65
  May 25 12:34:04.653: INFO: Trying to get logs from node ip-172-31-45-106 pod downwardapi-volume-e9dccac5-e283-4bd7-83e6-098bb924cce9 container client-container: <nil>
  STEP: delete the pod @ 05/25/24 12:34:04.668
  May 25 12:34:04.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7020" for this suite. @ 05/25/24 12:34:04.691
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 05/25/24 12:34:04.698
  May 25 12:34:04.698: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl @ 05/25/24 12:34:04.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:34:04.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:34:04.764
  STEP: starting the proxy server @ 05/25/24 12:34:04.767
  May 25 12:34:04.768: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8251 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 05/25/24 12:34:04.797
  May 25 12:34:04.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8251" for this suite. @ 05/25/24 12:34:04.807
• [0.118 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 05/25/24 12:34:04.816
  May 25 12:34:04.816: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename downward-api @ 05/25/24 12:34:04.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:34:04.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:34:04.835
  STEP: Creating a pod to test downward api env vars @ 05/25/24 12:34:04.84
  STEP: Saw pod success @ 05/25/24 12:34:08.865
  May 25 12:34:08.868: INFO: Trying to get logs from node ip-172-31-45-106 pod downward-api-c80cb08d-a565-4e7f-91ba-e21f397e152f container dapi-container: <nil>
  STEP: delete the pod @ 05/25/24 12:34:08.875
  May 25 12:34:08.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6635" for this suite. @ 05/25/24 12:34:08.895
• [4.086 seconds]
------------------------------
S
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 05/25/24 12:34:08.902
  May 25 12:34:08.902: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 12:34:08.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:34:08.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:34:08.92
  STEP: creating a collection of services @ 05/25/24 12:34:08.923
  May 25 12:34:08.923: INFO: Creating e2e-svc-a-h7m4p
  May 25 12:34:08.934: INFO: Creating e2e-svc-b-ncn2t
  May 25 12:34:08.945: INFO: Creating e2e-svc-c-g7zpx
  STEP: deleting service collection @ 05/25/24 12:34:08.959
  May 25 12:34:08.987: INFO: Collection of services has been deleted
  May 25 12:34:08.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8535" for this suite. @ 05/25/24 12:34:08.991
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 05/25/24 12:34:09
  May 25 12:34:09.000: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 12:34:09.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:34:09.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:34:09.015
  STEP: creating service in namespace services-7164 @ 05/25/24 12:34:09.018
  STEP: creating service affinity-nodeport in namespace services-7164 @ 05/25/24 12:34:09.018
  STEP: creating replication controller affinity-nodeport in namespace services-7164 @ 05/25/24 12:34:09.033
  I0525 12:34:09.044039      21 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-7164, replica count: 3
  I0525 12:34:12.094825      21 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 25 12:34:12.106: INFO: Creating new exec pod
  May 25 12:34:15.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-7164 exec execpod-affinitysztjv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  May 25 12:34:15.223: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  May 25 12:34:15.223: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 12:34:15.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-7164 exec execpod-affinitysztjv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.211 80'
  May 25 12:34:15.318: INFO: stderr: "+ nc -v -t -w 2 10.152.183.211 80\n+ echo hostName\nConnection to 10.152.183.211 80 port [tcp/http] succeeded!\n"
  May 25 12:34:15.318: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 12:34:15.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-7164 exec execpod-affinitysztjv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.138 32313'
  May 25 12:34:15.407: INFO: stderr: "+ nc -v -t -w 2 172.31.15.138 32313\n+ echo hostName\nConnection to 172.31.15.138 32313 port [tcp/*] succeeded!\n"
  May 25 12:34:15.407: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 12:34:15.407: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-7164 exec execpod-affinitysztjv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.106 32313'
  May 25 12:34:15.494: INFO: stderr: "+ nc -v -t -w 2 172.31.45.106 32313\n+ echo hostName\nConnection to 172.31.45.106 32313 port [tcp/*] succeeded!\n"
  May 25 12:34:15.494: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 12:34:15.494: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-7164 exec execpod-affinitysztjv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.15.138:32313/ ; done'
  May 25 12:34:15.662: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:32313/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:32313/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:32313/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:32313/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:32313/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:32313/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:32313/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:32313/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:32313/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:32313/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:32313/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:32313/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:32313/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:32313/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:32313/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:32313/\n"
  May 25 12:34:15.662: INFO: stdout: "\naffinity-nodeport-fvmzl\naffinity-nodeport-fvmzl\naffinity-nodeport-fvmzl\naffinity-nodeport-fvmzl\naffinity-nodeport-fvmzl\naffinity-nodeport-fvmzl\naffinity-nodeport-fvmzl\naffinity-nodeport-fvmzl\naffinity-nodeport-fvmzl\naffinity-nodeport-fvmzl\naffinity-nodeport-fvmzl\naffinity-nodeport-fvmzl\naffinity-nodeport-fvmzl\naffinity-nodeport-fvmzl\naffinity-nodeport-fvmzl\naffinity-nodeport-fvmzl"
  May 25 12:34:15.662: INFO: Received response from host: affinity-nodeport-fvmzl
  May 25 12:34:15.662: INFO: Received response from host: affinity-nodeport-fvmzl
  May 25 12:34:15.662: INFO: Received response from host: affinity-nodeport-fvmzl
  May 25 12:34:15.662: INFO: Received response from host: affinity-nodeport-fvmzl
  May 25 12:34:15.662: INFO: Received response from host: affinity-nodeport-fvmzl
  May 25 12:34:15.662: INFO: Received response from host: affinity-nodeport-fvmzl
  May 25 12:34:15.662: INFO: Received response from host: affinity-nodeport-fvmzl
  May 25 12:34:15.662: INFO: Received response from host: affinity-nodeport-fvmzl
  May 25 12:34:15.662: INFO: Received response from host: affinity-nodeport-fvmzl
  May 25 12:34:15.662: INFO: Received response from host: affinity-nodeport-fvmzl
  May 25 12:34:15.662: INFO: Received response from host: affinity-nodeport-fvmzl
  May 25 12:34:15.662: INFO: Received response from host: affinity-nodeport-fvmzl
  May 25 12:34:15.662: INFO: Received response from host: affinity-nodeport-fvmzl
  May 25 12:34:15.662: INFO: Received response from host: affinity-nodeport-fvmzl
  May 25 12:34:15.662: INFO: Received response from host: affinity-nodeport-fvmzl
  May 25 12:34:15.662: INFO: Received response from host: affinity-nodeport-fvmzl
  May 25 12:34:15.662: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-7164, will wait for the garbage collector to delete the pods @ 05/25/24 12:34:15.677
  May 25 12:34:15.739: INFO: Deleting ReplicationController affinity-nodeport took: 8.753726ms
  May 25 12:34:15.840: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.573955ms
  May 25 12:34:19.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7164" for this suite. @ 05/25/24 12:34:19.566
• [10.572 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 05/25/24 12:34:19.573
  May 25 12:34:19.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/25/24 12:34:19.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:34:19.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:34:19.59
  STEP: create the container to handle the HTTPGet hook request. @ 05/25/24 12:34:19.597
  STEP: create the pod with lifecycle hook @ 05/25/24 12:34:21.621
  STEP: check poststart hook @ 05/25/24 12:34:23.641
  STEP: delete the pod with lifecycle hook @ 05/25/24 12:34:23.648
  May 25 12:34:25.663: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1489" for this suite. @ 05/25/24 12:34:25.667
• [6.102 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 05/25/24 12:34:25.675
  May 25 12:34:25.675: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir @ 05/25/24 12:34:25.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:34:25.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:34:25.69
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/25/24 12:34:25.693
  STEP: Saw pod success @ 05/25/24 12:34:29.715
  May 25 12:34:29.719: INFO: Trying to get logs from node ip-172-31-15-138 pod pod-09799f5f-aa15-4590-91dd-b688910b6610 container test-container: <nil>
  STEP: delete the pod @ 05/25/24 12:34:29.738
  May 25 12:34:29.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-655" for this suite. @ 05/25/24 12:34:29.759
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 05/25/24 12:34:29.77
  May 25 12:34:29.770: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir @ 05/25/24 12:34:29.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:34:29.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:34:29.791
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/25/24 12:34:29.794
  STEP: Saw pod success @ 05/25/24 12:34:33.817
  May 25 12:34:33.820: INFO: Trying to get logs from node ip-172-31-15-138 pod pod-8f3f45a8-9da0-43e3-b4f8-87682921352a container test-container: <nil>
  STEP: delete the pod @ 05/25/24 12:34:33.827
  May 25 12:34:33.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2608" for this suite. @ 05/25/24 12:34:33.846
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 05/25/24 12:34:33.853
  May 25 12:34:33.853: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename containers @ 05/25/24 12:34:33.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:34:33.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:34:33.87
  STEP: Creating a pod to test override arguments @ 05/25/24 12:34:33.873
  STEP: Saw pod success @ 05/25/24 12:34:37.9
  May 25 12:34:37.904: INFO: Trying to get logs from node ip-172-31-45-106 pod client-containers-cf6264f1-a815-4e4f-8e50-7edc2cac6db7 container agnhost-container: <nil>
  STEP: delete the pod @ 05/25/24 12:34:37.914
  May 25 12:34:37.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1771" for this suite. @ 05/25/24 12:34:37.934
• [4.087 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 05/25/24 12:34:37.94
  May 25 12:34:37.940: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl @ 05/25/24 12:34:37.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:34:37.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:34:37.958
  STEP: creating a replication controller @ 05/25/24 12:34:37.961
  May 25 12:34:37.961: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 create -f -'
  May 25 12:34:38.047: INFO: stderr: ""
  May 25 12:34:38.047: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/25/24 12:34:38.047
  May 25 12:34:38.047: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 25 12:34:38.090: INFO: stderr: ""
  May 25 12:34:38.090: INFO: stdout: "update-demo-nautilus-dwgpx update-demo-nautilus-fzpgx "
  May 25 12:34:38.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods update-demo-nautilus-dwgpx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 25 12:34:38.128: INFO: stderr: ""
  May 25 12:34:38.128: INFO: stdout: ""
  May 25 12:34:38.128: INFO: update-demo-nautilus-dwgpx is created but not running
  May 25 12:34:43.130: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 25 12:34:43.171: INFO: stderr: ""
  May 25 12:34:43.171: INFO: stdout: "update-demo-nautilus-dwgpx update-demo-nautilus-fzpgx "
  May 25 12:34:43.171: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods update-demo-nautilus-dwgpx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 25 12:34:43.209: INFO: stderr: ""
  May 25 12:34:43.209: INFO: stdout: "true"
  May 25 12:34:43.209: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods update-demo-nautilus-dwgpx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 25 12:34:43.248: INFO: stderr: ""
  May 25 12:34:43.248: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 25 12:34:43.248: INFO: validating pod update-demo-nautilus-dwgpx
  May 25 12:34:43.254: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 25 12:34:43.254: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 25 12:34:43.254: INFO: update-demo-nautilus-dwgpx is verified up and running
  May 25 12:34:43.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods update-demo-nautilus-fzpgx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 25 12:34:43.292: INFO: stderr: ""
  May 25 12:34:43.292: INFO: stdout: "true"
  May 25 12:34:43.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods update-demo-nautilus-fzpgx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 25 12:34:43.332: INFO: stderr: ""
  May 25 12:34:43.332: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 25 12:34:43.332: INFO: validating pod update-demo-nautilus-fzpgx
  May 25 12:34:43.338: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 25 12:34:43.338: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 25 12:34:43.338: INFO: update-demo-nautilus-fzpgx is verified up and running
  STEP: scaling down the replication controller @ 05/25/24 12:34:43.339
  May 25 12:34:43.339: INFO: scanned /root for discovery docs: <nil>
  May 25 12:34:43.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  May 25 12:34:44.403: INFO: stderr: ""
  May 25 12:34:44.403: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/25/24 12:34:44.403
  May 25 12:34:44.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 25 12:34:44.454: INFO: stderr: ""
  May 25 12:34:44.454: INFO: stdout: "update-demo-nautilus-dwgpx update-demo-nautilus-fzpgx "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 05/25/24 12:34:44.454
  May 25 12:34:49.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 25 12:34:49.497: INFO: stderr: ""
  May 25 12:34:49.497: INFO: stdout: "update-demo-nautilus-fzpgx "
  May 25 12:34:49.497: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods update-demo-nautilus-fzpgx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 25 12:34:49.535: INFO: stderr: ""
  May 25 12:34:49.535: INFO: stdout: "true"
  May 25 12:34:49.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods update-demo-nautilus-fzpgx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 25 12:34:49.574: INFO: stderr: ""
  May 25 12:34:49.574: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 25 12:34:49.574: INFO: validating pod update-demo-nautilus-fzpgx
  May 25 12:34:49.579: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 25 12:34:49.579: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 25 12:34:49.579: INFO: update-demo-nautilus-fzpgx is verified up and running
  STEP: scaling up the replication controller @ 05/25/24 12:34:49.579
  May 25 12:34:49.580: INFO: scanned /root for discovery docs: <nil>
  May 25 12:34:49.580: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  May 25 12:34:50.633: INFO: stderr: ""
  May 25 12:34:50.633: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/25/24 12:34:50.634
  May 25 12:34:50.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 25 12:34:50.674: INFO: stderr: ""
  May 25 12:34:50.674: INFO: stdout: "update-demo-nautilus-2jlq8 update-demo-nautilus-fzpgx "
  May 25 12:34:50.674: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods update-demo-nautilus-2jlq8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 25 12:34:50.716: INFO: stderr: ""
  May 25 12:34:50.716: INFO: stdout: ""
  May 25 12:34:50.716: INFO: update-demo-nautilus-2jlq8 is created but not running
  May 25 12:34:55.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 25 12:34:55.762: INFO: stderr: ""
  May 25 12:34:55.762: INFO: stdout: "update-demo-nautilus-2jlq8 update-demo-nautilus-fzpgx "
  May 25 12:34:55.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods update-demo-nautilus-2jlq8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 25 12:34:55.803: INFO: stderr: ""
  May 25 12:34:55.803: INFO: stdout: "true"
  May 25 12:34:55.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods update-demo-nautilus-2jlq8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 25 12:34:55.842: INFO: stderr: ""
  May 25 12:34:55.842: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 25 12:34:55.842: INFO: validating pod update-demo-nautilus-2jlq8
  May 25 12:34:55.847: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 25 12:34:55.847: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 25 12:34:55.847: INFO: update-demo-nautilus-2jlq8 is verified up and running
  May 25 12:34:55.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods update-demo-nautilus-fzpgx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 25 12:34:55.887: INFO: stderr: ""
  May 25 12:34:55.887: INFO: stdout: "true"
  May 25 12:34:55.887: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods update-demo-nautilus-fzpgx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 25 12:34:55.929: INFO: stderr: ""
  May 25 12:34:55.929: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 25 12:34:55.929: INFO: validating pod update-demo-nautilus-fzpgx
  May 25 12:34:55.933: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 25 12:34:55.933: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 25 12:34:55.933: INFO: update-demo-nautilus-fzpgx is verified up and running
  STEP: using delete to clean up resources @ 05/25/24 12:34:55.933
  May 25 12:34:55.933: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 delete --grace-period=0 --force -f -'
  May 25 12:34:55.976: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 25 12:34:55.976: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  May 25 12:34:55.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get rc,svc -l name=update-demo --no-headers'
  May 25 12:34:56.033: INFO: stderr: "No resources found in kubectl-8193 namespace.\n"
  May 25 12:34:56.033: INFO: stdout: ""
  May 25 12:34:56.033: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8193 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May 25 12:34:56.080: INFO: stderr: ""
  May 25 12:34:56.080: INFO: stdout: ""
  May 25 12:34:56.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8193" for this suite. @ 05/25/24 12:34:56.084
• [18.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 05/25/24 12:34:56.091
  May 25 12:34:56.091: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename field-validation @ 05/25/24 12:34:56.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:34:56.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:34:56.11
  STEP: apply creating a deployment @ 05/25/24 12:34:56.113
  May 25 12:34:56.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9157" for this suite. @ 05/25/24 12:34:56.132
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 05/25/24 12:34:56.14
  May 25 12:34:56.140: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/25/24 12:34:56.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:34:56.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:34:56.154
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/25/24 12:34:56.157
  May 25 12:34:56.158: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/25/24 12:35:01.174
  May 25 12:35:01.174: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 12:35:02.501: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 12:35:07.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3481" for this suite. @ 05/25/24 12:35:07.337
• [11.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 05/25/24 12:35:07.344
  May 25 12:35:07.344: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename secrets @ 05/25/24 12:35:07.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:35:07.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:35:07.37
  STEP: Creating secret with name secret-test-e0ad4766-5dd4-4144-9226-e340bd2b84b0 @ 05/25/24 12:35:07.371
  STEP: Creating a pod to test consume secrets @ 05/25/24 12:35:07.376
  STEP: Saw pod success @ 05/25/24 12:35:09.391
  May 25 12:35:09.394: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-secrets-6cea0d90-4351-4c0d-8974-ba5d662088d4 container secret-env-test: <nil>
  STEP: delete the pod @ 05/25/24 12:35:09.404
  May 25 12:35:09.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2771" for this suite. @ 05/25/24 12:35:09.424
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 05/25/24 12:35:09.431
  May 25 12:35:09.431: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir @ 05/25/24 12:35:09.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:35:09.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:35:09.45
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/25/24 12:35:09.452
  STEP: Saw pod success @ 05/25/24 12:35:11.466
  May 25 12:35:11.469: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-14f6b1b0-da48-45f1-8df8-926a338af6a0 container test-container: <nil>
  STEP: delete the pod @ 05/25/24 12:35:11.474
  May 25 12:35:11.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7827" for this suite. @ 05/25/24 12:35:11.493
• [2.070 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 05/25/24 12:35:11.5
  May 25 12:35:11.500: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/25/24 12:35:11.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:35:11.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:35:11.515
  May 25 12:35:11.516: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 12:35:12.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6177" for this suite. @ 05/25/24 12:35:12.052
• [0.560 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 05/25/24 12:35:12.06
  May 25 12:35:12.060: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubelet-test @ 05/25/24 12:35:12.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:35:12.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:35:12.079
  May 25 12:35:16.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2407" for this suite. @ 05/25/24 12:35:16.097
• [4.044 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 05/25/24 12:35:16.104
  May 25 12:35:16.104: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename svcaccounts @ 05/25/24 12:35:16.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:35:16.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:35:16.127
  STEP: creating a ServiceAccount @ 05/25/24 12:35:16.128
  STEP: watching for the ServiceAccount to be added @ 05/25/24 12:35:16.135
  STEP: patching the ServiceAccount @ 05/25/24 12:35:16.136
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/25/24 12:35:16.147
  STEP: deleting the ServiceAccount @ 05/25/24 12:35:16.151
  May 25 12:35:16.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6618" for this suite. @ 05/25/24 12:35:16.168
• [0.073 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 05/25/24 12:35:16.177
  May 25 12:35:16.177: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir @ 05/25/24 12:35:16.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:35:16.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:35:16.193
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/25/24 12:35:16.194
  STEP: Saw pod success @ 05/25/24 12:35:20.213
  May 25 12:35:20.217: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-d314a58e-1a72-466c-aafe-97d2b62531d8 container test-container: <nil>
  STEP: delete the pod @ 05/25/24 12:35:20.224
  May 25 12:35:20.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9924" for this suite. @ 05/25/24 12:35:20.242
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 05/25/24 12:35:20.249
  May 25 12:35:20.249: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename downward-api @ 05/25/24 12:35:20.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:35:20.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:35:20.265
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 12:35:20.267
  STEP: Saw pod success @ 05/25/24 12:35:24.286
  May 25 12:35:24.289: INFO: Trying to get logs from node ip-172-31-45-106 pod downwardapi-volume-855ce6f5-328e-484a-b204-3a28fb6d2910 container client-container: <nil>
  STEP: delete the pod @ 05/25/24 12:35:24.296
  May 25 12:35:24.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9650" for this suite. @ 05/25/24 12:35:24.314
• [4.070 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 05/25/24 12:35:24.319
  May 25 12:35:24.319: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename watch @ 05/25/24 12:35:24.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:35:24.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:35:24.341
  STEP: creating a watch on configmaps @ 05/25/24 12:35:24.343
  STEP: creating a new configmap @ 05/25/24 12:35:24.343
  STEP: modifying the configmap once @ 05/25/24 12:35:24.347
  STEP: closing the watch once it receives two notifications @ 05/25/24 12:35:24.353
  May 25 12:35:24.353: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2025  658f88c4-d738-458a-a4b6-fa8ec367f271 9457 0 2024-05-25 12:35:24 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-25 12:35:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 25 12:35:24.354: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2025  658f88c4-d738-458a-a4b6-fa8ec367f271 9458 0 2024-05-25 12:35:24 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-25 12:35:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/25/24 12:35:24.354
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/25/24 12:35:24.36
  STEP: deleting the configmap @ 05/25/24 12:35:24.361
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/25/24 12:35:24.367
  May 25 12:35:24.367: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2025  658f88c4-d738-458a-a4b6-fa8ec367f271 9459 0 2024-05-25 12:35:24 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-25 12:35:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 25 12:35:24.367: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2025  658f88c4-d738-458a-a4b6-fa8ec367f271 9460 0 2024-05-25 12:35:24 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-25 12:35:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 25 12:35:24.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2025" for this suite. @ 05/25/24 12:35:24.372
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 05/25/24 12:35:24.382
  May 25 12:35:24.382: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/25/24 12:35:24.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:35:24.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:35:24.403
  STEP: creating @ 05/25/24 12:35:24.409
  STEP: getting @ 05/25/24 12:35:24.429
  STEP: listing in namespace @ 05/25/24 12:35:24.431
  STEP: patching @ 05/25/24 12:35:24.435
  STEP: deleting @ 05/25/24 12:35:24.439
  May 25 12:35:24.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9322" for this suite. @ 05/25/24 12:35:24.459
• [0.083 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 05/25/24 12:35:24.466
  May 25 12:35:24.466: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename namespaces @ 05/25/24 12:35:24.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:35:24.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:35:24.483
  STEP: Updating Namespace "namespaces-9944" @ 05/25/24 12:35:24.484
  May 25 12:35:24.492: INFO: Namespace "namespaces-9944" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"9c22dd86-36af-482a-8b2f-e7d59476956e", "kubernetes.io/metadata.name":"namespaces-9944", "namespaces-9944":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  May 25 12:35:24.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9944" for this suite. @ 05/25/24 12:35:24.495
• [0.037 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 05/25/24 12:35:24.502
  May 25 12:35:24.502: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 12:35:24.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:35:24.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:35:24.522
  STEP: Setting up server cert @ 05/25/24 12:35:24.544
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 12:35:24.715
  STEP: Deploying the webhook pod @ 05/25/24 12:35:24.725
  STEP: Wait for the deployment to be ready @ 05/25/24 12:35:24.736
  May 25 12:35:24.743: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  May 25 12:35:26.752: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 25, 12, 35, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 12, 35, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 12, 35, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 12, 35, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/25/24 12:35:28.756
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 12:35:28.766
  May 25 12:35:29.767: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 25 12:35:29.772: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/25/24 12:35:30.284
  STEP: Creating a custom resource that should be denied by the webhook @ 05/25/24 12:35:30.295
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/25/24 12:35:32.31
  STEP: Updating the custom resource with disallowed data should be denied @ 05/25/24 12:35:32.316
  STEP: Deleting the custom resource should be denied @ 05/25/24 12:35:32.323
  STEP: Remove the offending key and value from the custom resource data @ 05/25/24 12:35:32.329
  STEP: Deleting the updated custom resource should be successful @ 05/25/24 12:35:32.335
  May 25 12:35:32.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2039" for this suite. @ 05/25/24 12:35:32.9
  STEP: Destroying namespace "webhook-markers-6656" for this suite. @ 05/25/24 12:35:32.905
• [8.410 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 05/25/24 12:35:32.914
  May 25 12:35:32.914: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename statefulset @ 05/25/24 12:35:32.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:35:32.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:35:32.935
  STEP: Creating service test in namespace statefulset-4487 @ 05/25/24 12:35:32.937
  STEP: Creating stateful set ss in namespace statefulset-4487 @ 05/25/24 12:35:32.942
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4487 @ 05/25/24 12:35:32.95
  May 25 12:35:32.952: INFO: Found 0 stateful pods, waiting for 1
  May 25 12:35:42.955: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/25/24 12:35:42.955
  May 25 12:35:42.958: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-4487 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 25 12:35:43.046: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 25 12:35:43.046: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 25 12:35:43.046: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 25 12:35:43.051: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  May 25 12:35:53.051: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 25 12:35:53.051: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 25 12:35:53.064: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  May 25 12:35:53.064: INFO: ss-0  ip-172-31-45-106  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:34 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:43 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:43 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:32 +0000 UTC  }]
  May 25 12:35:53.064: INFO: 
  May 25 12:35:53.064: INFO: StatefulSet ss has not reached scale 3, at 1
  May 25 12:35:54.068: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997457321s
  May 25 12:35:55.073: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.992979784s
  May 25 12:35:56.080: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.988549666s
  May 25 12:35:57.084: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.981986726s
  May 25 12:35:58.087: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.977565131s
  May 25 12:35:59.093: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.973893289s
  May 25 12:36:00.096: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.968842681s
  May 25 12:36:01.101: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.964975464s
  May 25 12:36:02.106: INFO: Verifying statefulset ss doesn't scale past 3 for another 960.145384ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4487 @ 05/25/24 12:36:03.106
  May 25 12:36:03.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-4487 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 25 12:36:03.200: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 25 12:36:03.200: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 25 12:36:03.200: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 25 12:36:03.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-4487 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 25 12:36:03.291: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  May 25 12:36:03.291: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 25 12:36:03.291: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 25 12:36:03.291: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-4487 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 25 12:36:03.388: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  May 25 12:36:03.388: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 25 12:36:03.388: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 25 12:36:03.392: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May 25 12:36:03.392: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  May 25 12:36:03.392: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/25/24 12:36:03.392
  May 25 12:36:03.395: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-4487 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 25 12:36:03.483: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 25 12:36:03.483: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 25 12:36:03.483: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 25 12:36:03.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-4487 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 25 12:36:03.569: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 25 12:36:03.569: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 25 12:36:03.569: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 25 12:36:03.569: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-4487 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 25 12:36:03.663: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 25 12:36:03.663: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 25 12:36:03.663: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 25 12:36:03.663: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 25 12:36:03.666: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  May 25 12:36:13.670: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 25 12:36:13.670: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  May 25 12:36:13.670: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  May 25 12:36:13.680: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  May 25 12:36:13.680: INFO: ss-0  ip-172-31-45-106  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:34 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:36:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:36:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:32 +0000 UTC  }]
  May 25 12:36:13.680: INFO: ss-1  ip-172-31-23-222  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:55 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:53 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:36:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:36:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:53 +0000 UTC  }]
  May 25 12:36:13.680: INFO: ss-2  ip-172-31-15-138  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:56 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:53 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:36:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:36:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:53 +0000 UTC  }]
  May 25 12:36:13.680: INFO: 
  May 25 12:36:13.680: INFO: StatefulSet ss has not reached scale 0, at 3
  May 25 12:36:14.683: INFO: POD   NODE              PHASE      GRACE  CONDITIONS
  May 25 12:36:14.683: INFO: ss-1  ip-172-31-23-222  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:36:14 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:53 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:36:04 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:36:04 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:53 +0000 UTC  }]
  May 25 12:36:14.683: INFO: ss-2  ip-172-31-15-138  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:36:14 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:53 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:36:04 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:36:04 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:35:53 +0000 UTC  }]
  May 25 12:36:14.683: INFO: 
  May 25 12:36:14.683: INFO: StatefulSet ss has not reached scale 0, at 2
  May 25 12:36:15.688: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.994013887s
  May 25 12:36:16.692: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.989266272s
  May 25 12:36:17.697: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.985588396s
  May 25 12:36:18.700: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.980667064s
  May 25 12:36:19.704: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.977551686s
  May 25 12:36:20.709: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.974161757s
  May 25 12:36:21.713: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.96890991s
  May 25 12:36:22.716: INFO: Verifying statefulset ss doesn't scale past 0 for another 964.806066ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4487 @ 05/25/24 12:36:23.717
  May 25 12:36:23.722: INFO: Scaling statefulset ss to 0
  May 25 12:36:23.732: INFO: Waiting for statefulset status.replicas updated to 0
  May 25 12:36:23.734: INFO: Deleting all statefulset in ns statefulset-4487
  May 25 12:36:23.736: INFO: Scaling statefulset ss to 0
  May 25 12:36:23.745: INFO: Waiting for statefulset status.replicas updated to 0
  May 25 12:36:23.746: INFO: Deleting statefulset ss
  May 25 12:36:23.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4487" for this suite. @ 05/25/24 12:36:23.758
• [50.852 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 05/25/24 12:36:23.766
  May 25 12:36:23.766: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename field-validation @ 05/25/24 12:36:23.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:36:23.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:36:23.785
  May 25 12:36:23.787: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  W0525 12:36:26.318728      21 warnings.go:70] unknown field "alpha"
  W0525 12:36:26.318747      21 warnings.go:70] unknown field "beta"
  W0525 12:36:26.318750      21 warnings.go:70] unknown field "delta"
  W0525 12:36:26.318752      21 warnings.go:70] unknown field "epsilon"
  W0525 12:36:26.318755      21 warnings.go:70] unknown field "gamma"
  May 25 12:36:26.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6411" for this suite. @ 05/25/24 12:36:26.859
• [3.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 05/25/24 12:36:26.868
  May 25 12:36:26.868: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename downward-api @ 05/25/24 12:36:26.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:36:26.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:36:26.887
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 12:36:26.889
  STEP: Saw pod success @ 05/25/24 12:36:30.905
  May 25 12:36:30.909: INFO: Trying to get logs from node ip-172-31-45-106 pod downwardapi-volume-e3d883ad-5ebd-43fd-a9c2-13654f15e415 container client-container: <nil>
  STEP: delete the pod @ 05/25/24 12:36:30.915
  May 25 12:36:30.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-723" for this suite. @ 05/25/24 12:36:30.932
• [4.072 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 05/25/24 12:36:30.939
  May 25 12:36:30.939: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 12:36:30.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:36:30.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:36:30.957
  STEP: Creating configMap with name projected-configmap-test-volume-20f885d6-db1c-4d77-8e69-899152b2b2e6 @ 05/25/24 12:36:30.959
  STEP: Creating a pod to test consume configMaps @ 05/25/24 12:36:30.963
  STEP: Saw pod success @ 05/25/24 12:36:34.987
  May 25 12:36:34.990: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-projected-configmaps-83d5ff10-0427-4536-bab6-b67c321978d4 container agnhost-container: <nil>
  STEP: delete the pod @ 05/25/24 12:36:34.996
  May 25 12:36:35.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8019" for this suite. @ 05/25/24 12:36:35.016
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 05/25/24 12:36:35.024
  May 25 12:36:35.024: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename controllerrevisions @ 05/25/24 12:36:35.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:36:35.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:36:35.043
  STEP: Creating DaemonSet "e2e-6g4rf-daemon-set" @ 05/25/24 12:36:35.059
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/25/24 12:36:35.066
  May 25 12:36:35.068: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:36:35.068: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:36:35.071: INFO: Number of nodes with available pods controlled by daemonset e2e-6g4rf-daemon-set: 0
  May 25 12:36:35.071: INFO: Node ip-172-31-15-138 is running 0 daemon pod, expected 1
  May 25 12:36:36.070: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:36:36.071: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:36:36.073: INFO: Number of nodes with available pods controlled by daemonset e2e-6g4rf-daemon-set: 1
  May 25 12:36:36.073: INFO: Node ip-172-31-15-138 is running 0 daemon pod, expected 1
  May 25 12:36:37.070: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:36:37.070: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:36:37.073: INFO: Number of nodes with available pods controlled by daemonset e2e-6g4rf-daemon-set: 3
  May 25 12:36:37.073: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-6g4rf-daemon-set
  STEP: Confirm DaemonSet "e2e-6g4rf-daemon-set" successfully created with "daemonset-name=e2e-6g4rf-daemon-set" label @ 05/25/24 12:36:37.075
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-6g4rf-daemon-set" @ 05/25/24 12:36:37.081
  May 25 12:36:37.083: INFO: Located ControllerRevision: "e2e-6g4rf-daemon-set-79f69ddb94"
  STEP: Patching ControllerRevision "e2e-6g4rf-daemon-set-79f69ddb94" @ 05/25/24 12:36:37.085
  May 25 12:36:37.093: INFO: e2e-6g4rf-daemon-set-79f69ddb94 has been patched
  STEP: Create a new ControllerRevision @ 05/25/24 12:36:37.093
  May 25 12:36:37.097: INFO: Created ControllerRevision: e2e-6g4rf-daemon-set-68854b5f88
  STEP: Confirm that there are two ControllerRevisions @ 05/25/24 12:36:37.097
  May 25 12:36:37.097: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 25 12:36:37.099: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-6g4rf-daemon-set-79f69ddb94" @ 05/25/24 12:36:37.099
  STEP: Confirm that there is only one ControllerRevision @ 05/25/24 12:36:37.104
  May 25 12:36:37.104: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 25 12:36:37.106: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-6g4rf-daemon-set-68854b5f88" @ 05/25/24 12:36:37.109
  May 25 12:36:37.116: INFO: e2e-6g4rf-daemon-set-68854b5f88 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/25/24 12:36:37.116
  W0525 12:36:37.121701      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 05/25/24 12:36:37.121
  May 25 12:36:37.121: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 25 12:36:38.122: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 25 12:36:38.126: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-6g4rf-daemon-set-68854b5f88=updated" @ 05/25/24 12:36:38.126
  STEP: Confirm that there is only one ControllerRevision @ 05/25/24 12:36:38.133
  May 25 12:36:38.133: INFO: Requesting list of ControllerRevisions to confirm quantity
  May 25 12:36:38.135: INFO: Found 1 ControllerRevisions
  May 25 12:36:38.138: INFO: ControllerRevision "e2e-6g4rf-daemon-set-794645fbc7" has revision 3
  STEP: Deleting DaemonSet "e2e-6g4rf-daemon-set" @ 05/25/24 12:36:38.14
  STEP: deleting DaemonSet.extensions e2e-6g4rf-daemon-set in namespace controllerrevisions-2074, will wait for the garbage collector to delete the pods @ 05/25/24 12:36:38.14
  May 25 12:36:38.200: INFO: Deleting DaemonSet.extensions e2e-6g4rf-daemon-set took: 5.713909ms
  May 25 12:36:38.301: INFO: Terminating DaemonSet.extensions e2e-6g4rf-daemon-set pods took: 100.843187ms
  May 25 12:36:39.405: INFO: Number of nodes with available pods controlled by daemonset e2e-6g4rf-daemon-set: 0
  May 25 12:36:39.405: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-6g4rf-daemon-set
  May 25 12:36:39.408: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10173"},"items":null}

  May 25 12:36:39.412: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10173"},"items":null}

  May 25 12:36:39.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2074" for this suite. @ 05/25/24 12:36:39.425
• [4.408 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 05/25/24 12:36:39.432
  May 25 12:36:39.432: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename tables @ 05/25/24 12:36:39.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:36:39.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:36:39.452
  May 25 12:36:39.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-7457" for this suite. @ 05/25/24 12:36:39.458
• [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 05/25/24 12:36:39.465
  May 25 12:36:39.465: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 12:36:39.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:36:39.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:36:39.48
  STEP: Creating configMap with name cm-test-opt-del-a6fa444a-0e66-48d4-9472-80d0aa93dada @ 05/25/24 12:36:39.484
  STEP: Creating configMap with name cm-test-opt-upd-cf0b4d70-e2f6-47e2-97f1-0b3a67a15028 @ 05/25/24 12:36:39.487
  STEP: Creating the pod @ 05/25/24 12:36:39.49
  STEP: Deleting configmap cm-test-opt-del-a6fa444a-0e66-48d4-9472-80d0aa93dada @ 05/25/24 12:36:41.527
  STEP: Updating configmap cm-test-opt-upd-cf0b4d70-e2f6-47e2-97f1-0b3a67a15028 @ 05/25/24 12:36:41.533
  STEP: Creating configMap with name cm-test-opt-create-e85c5746-1cdc-4605-b5e3-a60149a2baee @ 05/25/24 12:36:41.537
  STEP: waiting to observe update in volume @ 05/25/24 12:36:41.541
  May 25 12:37:47.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2574" for this suite. @ 05/25/24 12:37:47.849
• [68.392 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 05/25/24 12:37:47.857
  May 25 12:37:47.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename disruption @ 05/25/24 12:37:47.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:37:47.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:37:47.878
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/25/24 12:37:47.879
  STEP: Waiting for the pdb to be processed @ 05/25/24 12:37:47.882
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/25/24 12:37:49.893
  STEP: Waiting for all pods to be running @ 05/25/24 12:37:49.893
  May 25 12:37:49.895: INFO: pods: 0 < 3
  STEP: locating a running pod @ 05/25/24 12:37:51.898
  STEP: Updating the pdb to allow a pod to be evicted @ 05/25/24 12:37:51.906
  STEP: Waiting for the pdb to be processed @ 05/25/24 12:37:51.915
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/25/24 12:37:53.92
  STEP: Waiting for all pods to be running @ 05/25/24 12:37:53.92
  STEP: Waiting for the pdb to observed all healthy pods @ 05/25/24 12:37:53.923
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/25/24 12:37:53.95
  STEP: Waiting for the pdb to be processed @ 05/25/24 12:37:53.973
  STEP: Waiting for all pods to be running @ 05/25/24 12:37:55.978
  STEP: locating a running pod @ 05/25/24 12:37:55.983
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/25/24 12:37:55.993
  STEP: Waiting for the pdb to be deleted @ 05/25/24 12:37:56.002
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/25/24 12:37:56.008
  STEP: Waiting for all pods to be running @ 05/25/24 12:37:56.008
  May 25 12:37:56.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7640" for this suite. @ 05/25/24 12:37:56.064
• [8.220 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 05/25/24 12:37:56.077
  May 25 12:37:56.077: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename ingress @ 05/25/24 12:37:56.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:37:56.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:37:56.097
  STEP: getting /apis @ 05/25/24 12:37:56.101
  STEP: getting /apis/networking.k8s.io @ 05/25/24 12:37:56.104
  STEP: getting /apis/networking.k8s.iov1 @ 05/25/24 12:37:56.105
  STEP: creating @ 05/25/24 12:37:56.106
  STEP: getting @ 05/25/24 12:37:56.127
  STEP: listing @ 05/25/24 12:37:56.13
  STEP: watching @ 05/25/24 12:37:56.136
  May 25 12:37:56.136: INFO: starting watch
  STEP: cluster-wide listing @ 05/25/24 12:37:56.136
  STEP: cluster-wide watching @ 05/25/24 12:37:56.139
  May 25 12:37:56.139: INFO: starting watch
  STEP: patching @ 05/25/24 12:37:56.14
  STEP: updating @ 05/25/24 12:37:56.144
  May 25 12:37:56.153: INFO: waiting for watch events with expected annotations
  May 25 12:37:56.153: INFO: saw patched and updated annotations
  STEP: patching /status @ 05/25/24 12:37:56.153
  STEP: updating /status @ 05/25/24 12:37:56.157
  STEP: get /status @ 05/25/24 12:37:56.169
  STEP: deleting @ 05/25/24 12:37:56.171
  STEP: deleting a collection @ 05/25/24 12:37:56.19
  May 25 12:37:56.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-7712" for this suite. @ 05/25/24 12:37:56.213
• [0.143 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 05/25/24 12:37:56.221
  May 25 12:37:56.221: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename sched-preemption @ 05/25/24 12:37:56.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:37:56.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:37:56.252
  May 25 12:37:56.266: INFO: Waiting up to 1m0s for all nodes to be ready
  May 25 12:38:56.270: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/25/24 12:38:56.274
  May 25 12:38:56.287: INFO: Created pod: pod0-0-sched-preemption-low-priority
  May 25 12:38:56.294: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  May 25 12:38:56.306: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  May 25 12:38:56.315: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  May 25 12:38:56.331: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  May 25 12:38:56.338: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/25/24 12:38:56.338
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/25/24 12:38:58.363
  May 25 12:39:02.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8638" for this suite. @ 05/25/24 12:39:02.443
• [66.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 05/25/24 12:39:02.448
  May 25 12:39:02.448: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubelet-test @ 05/25/24 12:39:02.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:39:02.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:39:02.469
  May 25 12:39:02.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5215" for this suite. @ 05/25/24 12:39:02.501
• [0.056 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 05/25/24 12:39:02.505
  May 25 12:39:02.505: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename var-expansion @ 05/25/24 12:39:02.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:39:02.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:39:02.522
  STEP: Creating a pod to test env composition @ 05/25/24 12:39:02.524
  STEP: Saw pod success @ 05/25/24 12:39:06.541
  May 25 12:39:06.544: INFO: Trying to get logs from node ip-172-31-45-106 pod var-expansion-986cdc01-cd22-4f03-8f6d-b817c1b223e2 container dapi-container: <nil>
  STEP: delete the pod @ 05/25/24 12:39:06.555
  May 25 12:39:06.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4463" for this suite. @ 05/25/24 12:39:06.571
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 05/25/24 12:39:06.577
  May 25 12:39:06.577: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename downward-api @ 05/25/24 12:39:06.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:39:06.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:39:06.596
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 12:39:06.598
  STEP: Saw pod success @ 05/25/24 12:39:10.617
  May 25 12:39:10.621: INFO: Trying to get logs from node ip-172-31-45-106 pod downwardapi-volume-3e838886-fb3c-429e-876c-78745eeed0f7 container client-container: <nil>
  STEP: delete the pod @ 05/25/24 12:39:10.627
  May 25 12:39:10.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6318" for this suite. @ 05/25/24 12:39:10.645
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 05/25/24 12:39:10.651
  May 25 12:39:10.651: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/25/24 12:39:10.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:39:10.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:39:10.667
  May 25 12:39:10.668: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 12:39:16.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6062" for this suite. @ 05/25/24 12:39:16.856
• [6.211 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 05/25/24 12:39:16.862
  May 25 12:39:16.862: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename dns @ 05/25/24 12:39:16.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:39:16.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:39:16.881
  STEP: Creating a test headless service @ 05/25/24 12:39:16.883
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3738.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-3738.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3738.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3738.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3738.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-3738.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3738.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-3738.svc.cluster.local;sleep 1; done
   @ 05/25/24 12:39:16.889
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3738.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3738.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3738.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3738.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3738.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3738.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3738.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3738.svc.cluster.local;sleep 1; done
   @ 05/25/24 12:39:16.889
  STEP: creating a pod to probe DNS @ 05/25/24 12:39:16.889
  STEP: submitting the pod to kubernetes @ 05/25/24 12:39:16.889
  STEP: retrieving the pod @ 05/25/24 12:39:22.913
  STEP: looking for the results for each expected name from probers @ 05/25/24 12:39:22.915
  May 25 12:39:22.921: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3738.svc.cluster.local from pod dns-3738/dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7: the server could not find the requested resource (get pods dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7)
  May 25 12:39:22.924: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3738.svc.cluster.local from pod dns-3738/dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7: the server could not find the requested resource (get pods dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7)
  May 25 12:39:22.927: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-3738.svc.cluster.local from pod dns-3738/dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7: the server could not find the requested resource (get pods dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7)
  May 25 12:39:22.931: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-3738.svc.cluster.local from pod dns-3738/dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7: the server could not find the requested resource (get pods dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7)
  May 25 12:39:22.934: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3738.svc.cluster.local from pod dns-3738/dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7: the server could not find the requested resource (get pods dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7)
  May 25 12:39:22.937: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3738.svc.cluster.local from pod dns-3738/dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7: the server could not find the requested resource (get pods dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7)
  May 25 12:39:22.940: INFO: Unable to read jessie_udp@dns-test-service-2.dns-3738.svc.cluster.local from pod dns-3738/dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7: the server could not find the requested resource (get pods dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7)
  May 25 12:39:22.943: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-3738.svc.cluster.local from pod dns-3738/dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7: the server could not find the requested resource (get pods dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7)
  May 25 12:39:22.943: INFO: Lookups using dns-3738/dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3738.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3738.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3738.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3738.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3738.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3738.svc.cluster.local jessie_udp@dns-test-service-2.dns-3738.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3738.svc.cluster.local]

  May 25 12:39:22.948: INFO: Pod client logs for webserver: 
  May 25 12:39:22.954: INFO: Pod client logs for querier: 
  May 25 12:39:22.961: INFO: Pod client logs for jessie-querier: 
  May 25 12:39:27.946: INFO: DNS probes using dns-3738/dns-test-9f52b5c9-1686-482a-bddd-62983fae94a7 succeeded

  STEP: deleting the pod @ 05/25/24 12:39:27.946
  STEP: deleting the test headless service @ 05/25/24 12:39:27.961
  May 25 12:39:27.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3738" for this suite. @ 05/25/24 12:39:27.974
• [11.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 05/25/24 12:39:27.984
  May 25 12:39:27.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename podtemplate @ 05/25/24 12:39:27.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:39:28.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:39:28.065
  STEP: Create set of pod templates @ 05/25/24 12:39:28.066
  May 25 12:39:28.071: INFO: created test-podtemplate-1
  May 25 12:39:28.075: INFO: created test-podtemplate-2
  May 25 12:39:28.078: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/25/24 12:39:28.078
  STEP: delete collection of pod templates @ 05/25/24 12:39:28.081
  May 25 12:39:28.081: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/25/24 12:39:28.097
  May 25 12:39:28.097: INFO: requesting list of pod templates to confirm quantity
  May 25 12:39:28.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5800" for this suite. @ 05/25/24 12:39:28.101
• [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 05/25/24 12:39:28.107
  May 25 12:39:28.107: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 12:39:28.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:39:28.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:39:28.124
  STEP: Setting up server cert @ 05/25/24 12:39:28.149
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 12:39:28.34
  STEP: Deploying the webhook pod @ 05/25/24 12:39:28.349
  STEP: Wait for the deployment to be ready @ 05/25/24 12:39:28.359
  May 25 12:39:28.370: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/25/24 12:39:30.379
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 12:39:30.39
  May 25 12:39:31.391: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/25/24 12:39:31.455
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/25/24 12:39:31.481
  STEP: Deleting the collection of validation webhooks @ 05/25/24 12:39:31.504
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/25/24 12:39:31.552
  May 25 12:39:31.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8308" for this suite. @ 05/25/24 12:39:31.593
  STEP: Destroying namespace "webhook-markers-2535" for this suite. @ 05/25/24 12:39:31.605
• [3.505 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 05/25/24 12:39:31.613
  May 25 12:39:31.613: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 12:39:31.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:39:31.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:39:31.634
  STEP: Creating projection with secret that has name projected-secret-test-f67d329d-a30a-470d-9718-54eab2de05c5 @ 05/25/24 12:39:31.636
  STEP: Creating a pod to test consume secrets @ 05/25/24 12:39:31.641
  STEP: Saw pod success @ 05/25/24 12:39:35.662
  May 25 12:39:35.665: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-projected-secrets-30b697da-f39f-45bd-8b9b-bdcf3b78fe66 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/25/24 12:39:35.67
  May 25 12:39:35.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6248" for this suite. @ 05/25/24 12:39:35.693
• [4.088 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 05/25/24 12:39:35.701
  May 25 12:39:35.701: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl @ 05/25/24 12:39:35.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:39:35.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:39:35.722
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/25/24 12:39:35.724
  May 25 12:39:35.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-5592 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  May 25 12:39:35.772: INFO: stderr: ""
  May 25 12:39:35.772: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/25/24 12:39:35.772
  May 25 12:39:35.775: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-5592 delete pods e2e-test-httpd-pod'
  May 25 12:39:37.623: INFO: stderr: ""
  May 25 12:39:37.623: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May 25 12:39:37.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5592" for this suite. @ 05/25/24 12:39:37.626
• [1.931 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 05/25/24 12:39:37.633
  May 25 12:39:37.633: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename endpointslice @ 05/25/24 12:39:37.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:39:37.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:39:37.65
  STEP: getting /apis @ 05/25/24 12:39:37.652
  STEP: getting /apis/discovery.k8s.io @ 05/25/24 12:39:37.654
  STEP: getting /apis/discovery.k8s.iov1 @ 05/25/24 12:39:37.655
  STEP: creating @ 05/25/24 12:39:37.655
  STEP: getting @ 05/25/24 12:39:37.669
  STEP: listing @ 05/25/24 12:39:37.671
  STEP: watching @ 05/25/24 12:39:37.673
  May 25 12:39:37.673: INFO: starting watch
  STEP: cluster-wide listing @ 05/25/24 12:39:37.674
  STEP: cluster-wide watching @ 05/25/24 12:39:37.677
  May 25 12:39:37.677: INFO: starting watch
  STEP: patching @ 05/25/24 12:39:37.678
  STEP: updating @ 05/25/24 12:39:37.682
  May 25 12:39:37.688: INFO: waiting for watch events with expected annotations
  May 25 12:39:37.688: INFO: saw patched and updated annotations
  STEP: deleting @ 05/25/24 12:39:37.688
  STEP: deleting a collection @ 05/25/24 12:39:37.698
  May 25 12:39:37.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4263" for this suite. @ 05/25/24 12:39:37.716
• [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 05/25/24 12:39:37.723
  May 25 12:39:37.723: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename runtimeclass @ 05/25/24 12:39:37.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:39:37.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:39:37.739
  May 25 12:39:39.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8546" for this suite. @ 05/25/24 12:39:39.768
• [2.051 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:335
  STEP: Creating a kubernetes client @ 05/25/24 12:39:39.775
  May 25 12:39:39.775: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename sched-pred @ 05/25/24 12:39:39.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:39:39.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:39:39.796
  May 25 12:39:39.797: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 25 12:39:39.802: INFO: Waiting for terminating namespaces to be deleted...
  May 25 12:39:39.806: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-15-138 before test
  May 25 12:39:39.811: INFO: nginx-ingress-controller-kubernetes-worker-fczx7 from ingress-nginx-kubernetes-worker started at 2024-05-25 12:10:29 +0000 UTC (1 container statuses recorded)
  May 25 12:39:39.811: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 25 12:39:39.811: INFO: calico-node-zcfdr from kube-system started at 2024-05-25 12:11:54 +0000 UTC (1 container statuses recorded)
  May 25 12:39:39.811: INFO: 	Container calico-node ready: true, restart count 0
  May 25 12:39:39.811: INFO: sonobuoy-e2e-job-f71b16864db44f61 from sonobuoy started at 2024-05-25 12:14:50 +0000 UTC (2 container statuses recorded)
  May 25 12:39:39.811: INFO: 	Container e2e ready: true, restart count 0
  May 25 12:39:39.811: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 25 12:39:39.811: INFO: sonobuoy-systemd-logs-daemon-set-61d532afa6f144b3-tg5ts from sonobuoy started at 2024-05-25 12:14:50 +0000 UTC (2 container statuses recorded)
  May 25 12:39:39.811: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 25 12:39:39.811: INFO: 	Container systemd-logs ready: true, restart count 0
  May 25 12:39:39.811: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-23-222 before test
  May 25 12:39:39.816: INFO: nginx-ingress-controller-kubernetes-worker-zvbpv from ingress-nginx-kubernetes-worker started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 12:39:39.816: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 25 12:39:39.816: INFO: calico-node-zpkdg from kube-system started at 2024-05-25 12:12:04 +0000 UTC (1 container statuses recorded)
  May 25 12:39:39.816: INFO: 	Container calico-node ready: true, restart count 0
  May 25 12:39:39.816: INFO: coredns-bddfd76d7-x6hfl from kube-system started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 12:39:39.816: INFO: 	Container coredns ready: true, restart count 0
  May 25 12:39:39.816: INFO: kube-state-metrics-6f48cdd76-5mtk5 from kube-system started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 12:39:39.816: INFO: 	Container kube-state-metrics ready: true, restart count 0
  May 25 12:39:39.816: INFO: metrics-server-v0.6.3-69d7fbfdf8-82qd4 from kube-system started at 2024-05-25 12:07:22 +0000 UTC (2 container statuses recorded)
  May 25 12:39:39.816: INFO: 	Container metrics-server ready: true, restart count 0
  May 25 12:39:39.816: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  May 25 12:39:39.816: INFO: dashboard-metrics-scraper-5dd7cb5fc-gxms9 from kubernetes-dashboard started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 12:39:39.816: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  May 25 12:39:39.816: INFO: kubernetes-dashboard-7b899cb9d9-fl78g from kubernetes-dashboard started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 12:39:39.816: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  May 25 12:39:39.816: INFO: sonobuoy-systemd-logs-daemon-set-61d532afa6f144b3-8jjrn from sonobuoy started at 2024-05-25 12:14:50 +0000 UTC (2 container statuses recorded)
  May 25 12:39:39.816: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 25 12:39:39.816: INFO: 	Container systemd-logs ready: true, restart count 0
  May 25 12:39:39.816: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-45-106 before test
  May 25 12:39:39.820: INFO: nginx-ingress-controller-kubernetes-worker-tgvnv from ingress-nginx-kubernetes-worker started at 2024-05-25 12:09:05 +0000 UTC (1 container statuses recorded)
  May 25 12:39:39.820: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 25 12:39:39.820: INFO: calico-node-b4lmv from kube-system started at 2024-05-25 12:11:54 +0000 UTC (1 container statuses recorded)
  May 25 12:39:39.820: INFO: 	Container calico-node ready: true, restart count 0
  May 25 12:39:39.820: INFO: test-runtimeclass-runtimeclass-8546-preconfigured-handler-gmtcr from runtimeclass-8546 started at 2024-05-25 12:39:37 +0000 UTC (1 container statuses recorded)
  May 25 12:39:39.820: INFO: 	Container test ready: false, restart count 0
  May 25 12:39:39.820: INFO: sonobuoy from sonobuoy started at 2024-05-25 12:14:48 +0000 UTC (1 container statuses recorded)
  May 25 12:39:39.820: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May 25 12:39:39.821: INFO: sonobuoy-systemd-logs-daemon-set-61d532afa6f144b3-fz7f5 from sonobuoy started at 2024-05-25 12:14:50 +0000 UTC (2 container statuses recorded)
  May 25 12:39:39.821: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 25 12:39:39.821: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-15-138 @ 05/25/24 12:39:39.836
  STEP: verifying the node has the label node ip-172-31-23-222 @ 05/25/24 12:39:39.849
  STEP: verifying the node has the label node ip-172-31-45-106 @ 05/25/24 12:39:39.861
  May 25 12:39:39.876: INFO: Pod nginx-ingress-controller-kubernetes-worker-fczx7 requesting resource cpu=0m on Node ip-172-31-15-138
  May 25 12:39:39.878: INFO: Pod nginx-ingress-controller-kubernetes-worker-tgvnv requesting resource cpu=0m on Node ip-172-31-45-106
  May 25 12:39:39.878: INFO: Pod nginx-ingress-controller-kubernetes-worker-zvbpv requesting resource cpu=0m on Node ip-172-31-23-222
  May 25 12:39:39.878: INFO: Pod calico-node-b4lmv requesting resource cpu=250m on Node ip-172-31-45-106
  May 25 12:39:39.878: INFO: Pod calico-node-zcfdr requesting resource cpu=250m on Node ip-172-31-15-138
  May 25 12:39:39.878: INFO: Pod calico-node-zpkdg requesting resource cpu=250m on Node ip-172-31-23-222
  May 25 12:39:39.878: INFO: Pod coredns-bddfd76d7-x6hfl requesting resource cpu=100m on Node ip-172-31-23-222
  May 25 12:39:39.878: INFO: Pod kube-state-metrics-6f48cdd76-5mtk5 requesting resource cpu=0m on Node ip-172-31-23-222
  May 25 12:39:39.878: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-82qd4 requesting resource cpu=5m on Node ip-172-31-23-222
  May 25 12:39:39.878: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-gxms9 requesting resource cpu=0m on Node ip-172-31-23-222
  May 25 12:39:39.878: INFO: Pod kubernetes-dashboard-7b899cb9d9-fl78g requesting resource cpu=0m on Node ip-172-31-23-222
  May 25 12:39:39.878: INFO: Pod test-runtimeclass-runtimeclass-8546-preconfigured-handler-gmtcr requesting resource cpu=0m on Node ip-172-31-45-106
  May 25 12:39:39.878: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-45-106
  May 25 12:39:39.878: INFO: Pod sonobuoy-e2e-job-f71b16864db44f61 requesting resource cpu=0m on Node ip-172-31-15-138
  May 25 12:39:39.878: INFO: Pod sonobuoy-systemd-logs-daemon-set-61d532afa6f144b3-8jjrn requesting resource cpu=0m on Node ip-172-31-23-222
  May 25 12:39:39.878: INFO: Pod sonobuoy-systemd-logs-daemon-set-61d532afa6f144b3-fz7f5 requesting resource cpu=0m on Node ip-172-31-45-106
  May 25 12:39:39.878: INFO: Pod sonobuoy-systemd-logs-daemon-set-61d532afa6f144b3-tg5ts requesting resource cpu=0m on Node ip-172-31-15-138
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/25/24 12:39:39.878
  May 25 12:39:39.878: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-45-106
  May 25 12:39:39.889: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-15-138
  May 25 12:39:39.896: INFO: Creating a pod which consumes cpu=1151m on Node ip-172-31-23-222
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/25/24 12:39:41.915
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9c0d346b-ed05-49fb-ab19-49cee3464827.17d2bbb1b54a22af], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1831/filler-pod-9c0d346b-ed05-49fb-ab19-49cee3464827 to ip-172-31-23-222] @ 05/25/24 12:39:41.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9c0d346b-ed05-49fb-ab19-49cee3464827.17d2bbb1d2e94730], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/25/24 12:39:41.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9c0d346b-ed05-49fb-ab19-49cee3464827.17d2bbb1d4065e77], Reason = [Created], Message = [Created container filler-pod-9c0d346b-ed05-49fb-ab19-49cee3464827] @ 05/25/24 12:39:41.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9c0d346b-ed05-49fb-ab19-49cee3464827.17d2bbb1d66a12de], Reason = [Started], Message = [Started container filler-pod-9c0d346b-ed05-49fb-ab19-49cee3464827] @ 05/25/24 12:39:41.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fa4bbb13-4875-4774-a59e-310d4ca9fb02.17d2bbb1b4801a9d], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1831/filler-pod-fa4bbb13-4875-4774-a59e-310d4ca9fb02 to ip-172-31-45-106] @ 05/25/24 12:39:41.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fa4bbb13-4875-4774-a59e-310d4ca9fb02.17d2bbb1d43c88f3], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/25/24 12:39:41.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fa4bbb13-4875-4774-a59e-310d4ca9fb02.17d2bbb1d527d382], Reason = [Created], Message = [Created container filler-pod-fa4bbb13-4875-4774-a59e-310d4ca9fb02] @ 05/25/24 12:39:41.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fa4bbb13-4875-4774-a59e-310d4ca9fb02.17d2bbb1d7b14870], Reason = [Started], Message = [Started container filler-pod-fa4bbb13-4875-4774-a59e-310d4ca9fb02] @ 05/25/24 12:39:41.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fe82c775-9eec-4bda-bcbe-6d0e0901fcd9.17d2bbb1b5166c97], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1831/filler-pod-fe82c775-9eec-4bda-bcbe-6d0e0901fcd9 to ip-172-31-15-138] @ 05/25/24 12:39:41.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fe82c775-9eec-4bda-bcbe-6d0e0901fcd9.17d2bbb1d2cfae50], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/25/24 12:39:41.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fe82c775-9eec-4bda-bcbe-6d0e0901fcd9.17d2bbb1d3d11cdc], Reason = [Created], Message = [Created container filler-pod-fe82c775-9eec-4bda-bcbe-6d0e0901fcd9] @ 05/25/24 12:39:41.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fe82c775-9eec-4bda-bcbe-6d0e0901fcd9.17d2bbb1d6c2836c], Reason = [Started], Message = [Started container filler-pod-fe82c775-9eec-4bda-bcbe-6d0e0901fcd9] @ 05/25/24 12:39:41.919
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17d2bbb22d9c2c41], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 05/25/24 12:39:41.931
  STEP: removing the label node off the node ip-172-31-15-138 @ 05/25/24 12:39:42.93
  STEP: verifying the node doesn't have the label node @ 05/25/24 12:39:42.939
  STEP: removing the label node off the node ip-172-31-23-222 @ 05/25/24 12:39:42.944
  STEP: verifying the node doesn't have the label node @ 05/25/24 12:39:42.954
  STEP: removing the label node off the node ip-172-31-45-106 @ 05/25/24 12:39:42.957
  STEP: verifying the node doesn't have the label node @ 05/25/24 12:39:42.968
  May 25 12:39:42.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1831" for this suite. @ 05/25/24 12:39:42.978
• [3.208 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 05/25/24 12:39:42.983
  May 25 12:39:42.983: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-probe @ 05/25/24 12:39:42.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:39:42.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:39:43
  STEP: Creating pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809 @ 05/25/24 12:39:43.001
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/25/24 12:39:45.015
  May 25 12:39:45.018: INFO: Initial restart count of pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f is 0
  May 25 12:39:45.020: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:39:47.025: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:39:49.029: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:39:51.032: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:39:53.038: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:39:55.043: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:39:57.046: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:39:59.052: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:01.057: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:03.061: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:05.066: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:07.070: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:09.074: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:11.079: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:13.084: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:15.089: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:17.093: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:19.098: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:21.102: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:23.106: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:25.111: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:27.116: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:29.120: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:31.123: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:33.127: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:35.132: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:37.136: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:39.140: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:41.145: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:43.149: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:45.153: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:47.158: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:49.163: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:51.168: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:53.172: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:55.176: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:57.180: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:40:59.184: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:01.190: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:03.194: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:05.198: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:07.204: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:09.208: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:11.214: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:13.219: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:15.223: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:17.229: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:19.233: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:21.237: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:23.242: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:25.246: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:27.250: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:29.255: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:31.259: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:33.264: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:35.268: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:37.271: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:39.276: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:41.280: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:43.284: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:45.290: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:47.294: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:49.299: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:51.303: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:53.306: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:55.310: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:57.314: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:41:59.318: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:01.324: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:03.328: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:05.331: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:07.336: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:09.339: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:11.344: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:13.349: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:15.353: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:17.357: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:19.362: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:21.366: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:23.372: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:25.377: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:27.380: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:29.385: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:31.388: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:33.394: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:35.398: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:37.404: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:39.408: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:41.412: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:43.417: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:45.422: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:47.426: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:49.430: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:51.433: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:53.439: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:55.443: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:57.446: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:42:59.451: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:01.455: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:03.460: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:05.466: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:07.471: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:09.477: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:11.481: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:13.487: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:15.492: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:17.496: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:19.501: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:21.506: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:23.510: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:25.516: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:27.520: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:29.525: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:31.529: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:33.533: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:35.539: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:37.543: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:39.547: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:41.554: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  May 25 12:43:43.559: INFO: Get pod liveness-7b9fb816-67bc-4d74-b758-b7364cc7140f in namespace container-probe-809
  STEP: deleting the pod @ 05/25/24 12:43:45.559
  May 25 12:43:45.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-809" for this suite. @ 05/25/24 12:43:45.577
• [242.602 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 05/25/24 12:43:45.585
  May 25 12:43:45.585: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename secrets @ 05/25/24 12:43:45.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:43:45.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:43:45.606
  STEP: Creating secret with name secret-test-67d8d7ba-3219-4d17-b75f-6388df62bd3f @ 05/25/24 12:43:45.608
  STEP: Creating a pod to test consume secrets @ 05/25/24 12:43:45.612
  STEP: Saw pod success @ 05/25/24 12:43:49.633
  May 25 12:43:49.635: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-secrets-2ce3117a-1ba2-4d00-bd34-3e6fa65882d5 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/25/24 12:43:49.645
  May 25 12:43:49.663: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-441" for this suite. @ 05/25/24 12:43:49.665
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 05/25/24 12:43:49.671
  May 25 12:43:49.671: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename crd-webhook @ 05/25/24 12:43:49.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:43:49.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:43:49.693
  STEP: Setting up server cert @ 05/25/24 12:43:49.694
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/25/24 12:43:49.865
  STEP: Deploying the custom resource conversion webhook pod @ 05/25/24 12:43:49.875
  STEP: Wait for the deployment to be ready @ 05/25/24 12:43:49.887
  May 25 12:43:49.895: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/25/24 12:43:51.905
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 12:43:51.915
  May 25 12:43:52.916: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  May 25 12:43:52.922: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Creating a v1 custom resource @ 05/25/24 12:43:55.476
  STEP: Create a v2 custom resource @ 05/25/24 12:43:55.494
  STEP: List CRs in v1 @ 05/25/24 12:43:55.524
  STEP: List CRs in v2 @ 05/25/24 12:43:55.528
  May 25 12:43:56.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5064" for this suite. @ 05/25/24 12:43:56.083
• [6.422 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 05/25/24 12:43:56.093
  May 25 12:43:56.093: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 12:43:56.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:43:56.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:43:56.113
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-86f1428c-1397-4d1a-85ed-2917b9bb82a8 @ 05/25/24 12:43:56.12
  STEP: Creating the pod @ 05/25/24 12:43:56.124
  STEP: Updating configmap projected-configmap-test-upd-86f1428c-1397-4d1a-85ed-2917b9bb82a8 @ 05/25/24 12:43:58.147
  STEP: waiting to observe update in volume @ 05/25/24 12:43:58.153
  May 25 12:45:16.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9122" for this suite. @ 05/25/24 12:45:16.506
• [80.419 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 05/25/24 12:45:16.513
  May 25 12:45:16.513: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 12:45:16.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:45:16.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:45:16.532
  STEP: Setting up server cert @ 05/25/24 12:45:16.557
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 12:45:16.819
  STEP: Deploying the webhook pod @ 05/25/24 12:45:16.83
  STEP: Wait for the deployment to be ready @ 05/25/24 12:45:16.841
  May 25 12:45:16.849: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/25/24 12:45:18.862
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 12:45:18.87
  May 25 12:45:19.870: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/25/24 12:45:19.876
  STEP: create a namespace for the webhook @ 05/25/24 12:45:19.888
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/25/24 12:45:19.903
  May 25 12:45:19.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1063" for this suite. @ 05/25/24 12:45:19.976
  STEP: Destroying namespace "webhook-markers-9349" for this suite. @ 05/25/24 12:45:19.983
  STEP: Destroying namespace "fail-closed-namespace-5224" for this suite. @ 05/25/24 12:45:19.987
• [3.480 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 05/25/24 12:45:19.993
  May 25 12:45:19.993: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 12:45:19.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:45:20.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:45:20.012
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 12:45:20.014
  STEP: Saw pod success @ 05/25/24 12:45:24.034
  May 25 12:45:24.037: INFO: Trying to get logs from node ip-172-31-15-138 pod downwardapi-volume-328f3b03-522d-4bf0-83dd-08ab7e278a98 container client-container: <nil>
  STEP: delete the pod @ 05/25/24 12:45:24.053
  May 25 12:45:24.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1225" for this suite. @ 05/25/24 12:45:24.077
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 05/25/24 12:45:24.086
  May 25 12:45:24.086: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubelet-test @ 05/25/24 12:45:24.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:45:24.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:45:24.108
  May 25 12:45:26.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7110" for this suite. @ 05/25/24 12:45:26.137
• [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 05/25/24 12:45:26.145
  May 25 12:45:26.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename events @ 05/25/24 12:45:26.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:45:26.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:45:26.164
  STEP: Create set of events @ 05/25/24 12:45:26.165
  STEP: get a list of Events with a label in the current namespace @ 05/25/24 12:45:26.179
  STEP: delete a list of events @ 05/25/24 12:45:26.181
  May 25 12:45:26.181: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/25/24 12:45:26.202
  May 25 12:45:26.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8180" for this suite. @ 05/25/24 12:45:26.206
• [0.068 seconds]
------------------------------
SS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 05/25/24 12:45:26.213
  May 25 12:45:26.213: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pv @ 05/25/24 12:45:26.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:45:26.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:45:26.229
  STEP: Creating initial PV and PVC @ 05/25/24 12:45:26.23
  May 25 12:45:26.230: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7068" @ 05/25/24 12:45:26.239
  STEP: Listing PVCs in namespace "pv-7068" @ 05/25/24 12:45:26.243
  STEP: Patching the PV "pv-7068-p79xj" @ 05/25/24 12:45:26.247
  STEP: Patching the PVC "pvc-kzlbs" @ 05/25/24 12:45:26.254
  STEP: Getting PV "pv-7068-p79xj" @ 05/25/24 12:45:26.261
  STEP: Getting PVC "pvc-kzlbs" @ 05/25/24 12:45:26.263
  STEP: Deleting PVC "pvc-kzlbs" @ 05/25/24 12:45:26.267
  STEP: Confirm deletion of PVC "pvc-kzlbs" @ 05/25/24 12:45:26.273
  STEP: Deleting PV "pv-7068-p79xj" @ 05/25/24 12:45:28.279
  STEP: Confirm deletion of PV "pv-7068-p79xj" @ 05/25/24 12:45:28.287
  STEP: Recreating another PV & PVC @ 05/25/24 12:45:30.295
  May 25 12:45:30.295: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-7068-8sbl9" @ 05/25/24 12:45:30.305
  STEP: Updating the PVC "pvc-f5s6m" @ 05/25/24 12:45:30.313
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-f5s6m=updated" @ 05/25/24 12:45:30.318
  STEP: Deleting PVC "pvc-f5s6m" via DeleteCollection @ 05/25/24 12:45:30.322
  STEP: Confirm deletion of PVC "pvc-f5s6m" @ 05/25/24 12:45:30.332
  STEP: Deleting PV "pv-7068-8sbl9" via DeleteCollection @ 05/25/24 12:45:32.337
  STEP: Confirm deletion of PV "pv-7068-8sbl9" @ 05/25/24 12:45:32.344
  May 25 12:45:34.350: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  May 25 12:45:34.350: INFO: Deleting PersistentVolumeClaim "pvc-f5s6m"
  May 25 12:45:34.353: INFO: Deleting PersistentVolume "pv-7068-8sbl9"
  May 25 12:45:34.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7068" for this suite. @ 05/25/24 12:45:34.361
• [8.155 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 05/25/24 12:45:34.381
  May 25 12:45:34.381: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/25/24 12:45:34.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:45:34.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:45:34.417
  STEP: creating a target pod @ 05/25/24 12:45:34.421
  STEP: adding an ephemeral container @ 05/25/24 12:45:36.44
  STEP: checking pod container endpoints @ 05/25/24 12:45:38.455
  May 25 12:45:38.455: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8352 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 12:45:38.455: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 12:45:38.456: INFO: ExecWithOptions: Clientset creation
  May 25 12:45:38.456: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-8352/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  May 25 12:45:38.511: INFO: Exec stderr: ""
  May 25 12:45:38.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8352" for this suite. @ 05/25/24 12:45:38.52
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 05/25/24 12:45:38.525
  May 25 12:45:38.525: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl @ 05/25/24 12:45:38.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:45:38.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:45:38.542
  STEP: validating api versions @ 05/25/24 12:45:38.544
  May 25 12:45:38.544: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-908 api-versions'
  May 25 12:45:38.583: INFO: stderr: ""
  May 25 12:45:38.584: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  May 25 12:45:38.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-908" for this suite. @ 05/25/24 12:45:38.588
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 05/25/24 12:45:38.593
  May 25 12:45:38.593: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir @ 05/25/24 12:45:38.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:45:38.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:45:38.611
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/25/24 12:45:38.613
  STEP: Saw pod success @ 05/25/24 12:45:42.631
  May 25 12:45:42.637: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-6169261e-54cc-420c-84d6-f248741b1628 container test-container: <nil>
  STEP: delete the pod @ 05/25/24 12:45:42.644
  May 25 12:45:42.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7914" for this suite. @ 05/25/24 12:45:42.661
• [4.073 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 05/25/24 12:45:42.667
  May 25 12:45:42.667: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/25/24 12:45:42.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:45:42.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:45:42.693
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/25/24 12:45:42.695
  May 25 12:45:42.695: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 12:45:43.941: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 12:45:48.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9909" for this suite. @ 05/25/24 12:45:48.818
• [6.158 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 05/25/24 12:45:48.825
  May 25 12:45:48.825: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename disruption @ 05/25/24 12:45:48.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:45:48.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:45:48.845
  STEP: Waiting for the pdb to be processed @ 05/25/24 12:45:48.852
  STEP: Updating PodDisruptionBudget status @ 05/25/24 12:45:50.855
  STEP: Waiting for all pods to be running @ 05/25/24 12:45:50.863
  May 25 12:45:50.870: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 05/25/24 12:45:52.885
  STEP: Waiting for the pdb to be processed @ 05/25/24 12:45:52.895
  STEP: Patching PodDisruptionBudget status @ 05/25/24 12:45:52.901
  STEP: Waiting for the pdb to be processed @ 05/25/24 12:45:52.909
  May 25 12:45:52.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4642" for this suite. @ 05/25/24 12:45:52.915
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 05/25/24 12:45:52.919
  May 25 12:45:52.919: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename dns @ 05/25/24 12:45:52.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:45:52.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:45:52.939
  STEP: Creating a test externalName service @ 05/25/24 12:45:52.94
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7552.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7552.svc.cluster.local; sleep 1; done
   @ 05/25/24 12:45:52.945
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7552.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7552.svc.cluster.local; sleep 1; done
   @ 05/25/24 12:45:52.945
  STEP: creating a pod to probe DNS @ 05/25/24 12:45:52.945
  STEP: submitting the pod to kubernetes @ 05/25/24 12:45:52.945
  STEP: retrieving the pod @ 05/25/24 12:45:58.97
  STEP: looking for the results for each expected name from probers @ 05/25/24 12:45:58.972
  May 25 12:45:58.979: INFO: DNS probes using dns-test-619d146d-d886-4fee-872a-e3ca11fee658 succeeded

  STEP: changing the externalName to bar.example.com @ 05/25/24 12:45:58.979
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7552.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7552.svc.cluster.local; sleep 1; done
   @ 05/25/24 12:45:58.987
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7552.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7552.svc.cluster.local; sleep 1; done
   @ 05/25/24 12:45:58.987
  STEP: creating a second pod to probe DNS @ 05/25/24 12:45:58.987
  STEP: submitting the pod to kubernetes @ 05/25/24 12:45:58.987
  STEP: retrieving the pod @ 05/25/24 12:46:00.999
  STEP: looking for the results for each expected name from probers @ 05/25/24 12:46:01.003
  May 25 12:46:01.008: INFO: File wheezy_udp@dns-test-service-3.dns-7552.svc.cluster.local from pod  dns-7552/dns-test-a7b19f0a-1e35-4091-a9c0-a16258beec5f contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May 25 12:46:01.012: INFO: File jessie_udp@dns-test-service-3.dns-7552.svc.cluster.local from pod  dns-7552/dns-test-a7b19f0a-1e35-4091-a9c0-a16258beec5f contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  May 25 12:46:01.012: INFO: Lookups using dns-7552/dns-test-a7b19f0a-1e35-4091-a9c0-a16258beec5f failed for: [wheezy_udp@dns-test-service-3.dns-7552.svc.cluster.local jessie_udp@dns-test-service-3.dns-7552.svc.cluster.local]

  May 25 12:46:01.021: INFO: Pod client logs for webserver: 
  May 25 12:46:01.026: INFO: Pod client logs for querier: 
  May 25 12:46:01.030: INFO: Pod client logs for jessie-querier: 
  May 25 12:46:06.013: INFO: DNS probes using dns-test-a7b19f0a-1e35-4091-a9c0-a16258beec5f succeeded

  STEP: changing the service to type=ClusterIP @ 05/25/24 12:46:06.013
  W0525 12:46:06.023326      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7552.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-7552.svc.cluster.local; sleep 1; done
   @ 05/25/24 12:46:06.023
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7552.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-7552.svc.cluster.local; sleep 1; done
   @ 05/25/24 12:46:06.023
  STEP: creating a third pod to probe DNS @ 05/25/24 12:46:06.023
  STEP: submitting the pod to kubernetes @ 05/25/24 12:46:06.027
  STEP: retrieving the pod @ 05/25/24 12:46:08.041
  STEP: looking for the results for each expected name from probers @ 05/25/24 12:46:08.043
  May 25 12:46:08.053: INFO: DNS probes using dns-test-dcaae4f0-a79a-4dde-851e-ca5ad5b1e48b succeeded

  STEP: deleting the pod @ 05/25/24 12:46:08.053
  STEP: deleting the pod @ 05/25/24 12:46:08.065
  STEP: deleting the pod @ 05/25/24 12:46:08.076
  STEP: deleting the test externalName service @ 05/25/24 12:46:08.093
  May 25 12:46:08.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7552" for this suite. @ 05/25/24 12:46:08.109
• [15.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 05/25/24 12:46:08.118
  May 25 12:46:08.118: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 12:46:08.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:46:08.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:46:08.139
  STEP: Creating projection with secret that has name projected-secret-test-007be802-78ca-4f9d-bc8b-b050937162f3 @ 05/25/24 12:46:08.141
  STEP: Creating a pod to test consume secrets @ 05/25/24 12:46:08.145
  STEP: Saw pod success @ 05/25/24 12:46:12.165
  May 25 12:46:12.169: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-projected-secrets-78885d26-ccb9-4480-a832-3baaf1f0d401 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/25/24 12:46:12.176
  May 25 12:46:12.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-931" for this suite. @ 05/25/24 12:46:12.192
• [4.081 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 05/25/24 12:46:12.2
  May 25 12:46:12.200: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 12:46:12.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:46:12.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:46:12.218
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6823 @ 05/25/24 12:46:12.219
  STEP: changing the ExternalName service to type=ClusterIP @ 05/25/24 12:46:12.224
  STEP: creating replication controller externalname-service in namespace services-6823 @ 05/25/24 12:46:12.235
  I0525 12:46:12.241346      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-6823, replica count: 2
  I0525 12:46:15.292592      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 25 12:46:15.292: INFO: Creating new exec pod
  May 25 12:46:18.308: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-6823 exec execpodcthvl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 25 12:46:18.407: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 25 12:46:18.407: INFO: stdout: ""
  May 25 12:46:19.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-6823 exec execpodcthvl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 25 12:46:19.399: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 25 12:46:19.399: INFO: stdout: "externalname-service-p96nn"
  May 25 12:46:19.399: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-6823 exec execpodcthvl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.76 80'
  May 25 12:46:19.488: INFO: stderr: "+ nc -v -t -w 2 10.152.183.76 80\nConnection to 10.152.183.76 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  May 25 12:46:19.488: INFO: stdout: ""
  May 25 12:46:20.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-6823 exec execpodcthvl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.76 80'
  May 25 12:46:20.493: INFO: stderr: "+ nc -v -t -w 2 10.152.183.76 80\n+ echo hostName\nConnection to 10.152.183.76 80 port [tcp/http] succeeded!\n"
  May 25 12:46:20.493: INFO: stdout: "externalname-service-p96nn"
  May 25 12:46:20.493: INFO: Cleaning up the ExternalName to ClusterIP test service
  May 25 12:46:20.509: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6823" for this suite. @ 05/25/24 12:46:20.512
• [8.318 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 05/25/24 12:46:20.518
  May 25 12:46:20.518: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 12:46:20.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:46:20.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:46:20.538
  STEP: Setting up server cert @ 05/25/24 12:46:20.567
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 12:46:20.741
  STEP: Deploying the webhook pod @ 05/25/24 12:46:20.748
  STEP: Wait for the deployment to be ready @ 05/25/24 12:46:20.759
  May 25 12:46:20.771: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/25/24 12:46:22.782
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 12:46:22.791
  May 25 12:46:23.792: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/25/24 12:46:23.797
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/25/24 12:46:23.81
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/25/24 12:46:23.817
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/25/24 12:46:23.846
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/25/24 12:46:23.856
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/25/24 12:46:23.863
  May 25 12:46:23.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8383" for this suite. @ 05/25/24 12:46:23.907
  STEP: Destroying namespace "webhook-markers-6722" for this suite. @ 05/25/24 12:46:23.917
• [3.405 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 05/25/24 12:46:23.923
  May 25 12:46:23.923: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl @ 05/25/24 12:46:23.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:46:23.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:46:23.943
  STEP: creating Agnhost RC @ 05/25/24 12:46:23.944
  May 25 12:46:23.944: INFO: namespace kubectl-5141
  May 25 12:46:23.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-5141 create -f -'
  May 25 12:46:24.022: INFO: stderr: ""
  May 25 12:46:24.022: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/25/24 12:46:24.022
  May 25 12:46:25.026: INFO: Selector matched 1 pods for map[app:agnhost]
  May 25 12:46:25.026: INFO: Found 0 / 1
  May 25 12:46:26.026: INFO: Selector matched 1 pods for map[app:agnhost]
  May 25 12:46:26.026: INFO: Found 1 / 1
  May 25 12:46:26.026: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  May 25 12:46:26.029: INFO: Selector matched 1 pods for map[app:agnhost]
  May 25 12:46:26.029: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 25 12:46:26.029: INFO: wait on agnhost-primary startup in kubectl-5141 
  May 25 12:46:26.029: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-5141 logs agnhost-primary-t7rmf agnhost-primary'
  May 25 12:46:26.079: INFO: stderr: ""
  May 25 12:46:26.079: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 05/25/24 12:46:26.079
  May 25 12:46:26.079: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-5141 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  May 25 12:46:26.135: INFO: stderr: ""
  May 25 12:46:26.135: INFO: stdout: "service/rm2 exposed\n"
  May 25 12:46:26.139: INFO: Service rm2 in namespace kubectl-5141 found.
  STEP: exposing service @ 05/25/24 12:46:28.148
  May 25 12:46:28.148: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-5141 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  May 25 12:46:28.200: INFO: stderr: ""
  May 25 12:46:28.200: INFO: stdout: "service/rm3 exposed\n"
  May 25 12:46:28.204: INFO: Service rm3 in namespace kubectl-5141 found.
  May 25 12:46:30.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5141" for this suite. @ 05/25/24 12:46:30.214
• [6.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 05/25/24 12:46:30.222
  May 25 12:46:30.222: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename discovery @ 05/25/24 12:46:30.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:46:30.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:46:30.241
  STEP: Setting up server cert @ 05/25/24 12:46:30.243
  STEP: Requesting APIResourceList from "/api/v1" @ 05/25/24 12:46:30.472
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/25/24 12:46:30.474
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/25/24 12:46:30.475
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/25/24 12:46:30.475
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/25/24 12:46:30.476
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/25/24 12:46:30.477
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/25/24 12:46:30.477
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/25/24 12:46:30.478
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/25/24 12:46:30.478
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/25/24 12:46:30.479
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/25/24 12:46:30.479
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/25/24 12:46:30.48
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/25/24 12:46:30.48
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/25/24 12:46:30.481
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/25/24 12:46:30.481
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/25/24 12:46:30.482
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/25/24 12:46:30.482
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/25/24 12:46:30.483
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/25/24 12:46:30.483
  May 25 12:46:30.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9840" for this suite. @ 05/25/24 12:46:30.488
• [0.272 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 05/25/24 12:46:30.494
  May 25 12:46:30.494: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename downward-api @ 05/25/24 12:46:30.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:46:30.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:46:30.511
  STEP: Creating the pod @ 05/25/24 12:46:30.513
  May 25 12:46:33.049: INFO: Successfully updated pod "labelsupdatea52d4f25-6313-461c-b892-8f2c723e6680"
  May 25 12:46:37.068: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7724" for this suite. @ 05/25/24 12:46:37.072
• [6.585 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 05/25/24 12:46:37.079
  May 25 12:46:37.079: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir @ 05/25/24 12:46:37.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:46:37.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:46:37.101
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/25/24 12:46:37.102
  STEP: Saw pod success @ 05/25/24 12:46:41.122
  May 25 12:46:41.125: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-67f8a76e-d17f-4114-8dd6-4d2c8a4b5ab0 container test-container: <nil>
  STEP: delete the pod @ 05/25/24 12:46:41.13
  May 25 12:46:41.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3711" for this suite. @ 05/25/24 12:46:41.151
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 05/25/24 12:46:41.159
  May 25 12:46:41.159: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename secrets @ 05/25/24 12:46:41.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:46:41.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:46:41.175
  STEP: Creating secret with name secret-test-4da23a41-e0b7-486c-ae4b-b54c3b9da006 @ 05/25/24 12:46:41.177
  STEP: Creating a pod to test consume secrets @ 05/25/24 12:46:41.181
  STEP: Saw pod success @ 05/25/24 12:46:45.2
  May 25 12:46:45.202: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-secrets-dace8f79-195e-453d-aa61-f8ac8819daca container secret-volume-test: <nil>
  STEP: delete the pod @ 05/25/24 12:46:45.21
  May 25 12:46:45.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2169" for this suite. @ 05/25/24 12:46:45.229
• [4.078 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 05/25/24 12:46:45.236
  May 25 12:46:45.236: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename dns @ 05/25/24 12:46:45.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:46:45.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:46:45.255
  STEP: Creating a test headless service @ 05/25/24 12:46:45.256
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7604.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-7604.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 05/25/24 12:46:45.261
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7604.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-7604.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/25/24 12:46:45.261
  STEP: creating a pod to probe DNS @ 05/25/24 12:46:45.261
  STEP: submitting the pod to kubernetes @ 05/25/24 12:46:45.261
  STEP: retrieving the pod @ 05/25/24 12:46:47.278
  STEP: looking for the results for each expected name from probers @ 05/25/24 12:46:47.282
  May 25 12:46:47.296: INFO: DNS probes using dns-7604/dns-test-c5d8b2f2-0c31-474f-8cb6-1e769cee2185 succeeded

  STEP: deleting the pod @ 05/25/24 12:46:47.296
  STEP: deleting the test headless service @ 05/25/24 12:46:47.307
  May 25 12:46:47.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7604" for this suite. @ 05/25/24 12:46:47.323
• [2.095 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 05/25/24 12:46:47.332
  May 25 12:46:47.332: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename disruption @ 05/25/24 12:46:47.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:46:47.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:46:47.353
  STEP: Creating a kubernetes client @ 05/25/24 12:46:47.355
  May 25 12:46:47.355: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename disruption-2 @ 05/25/24 12:46:47.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:46:47.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:46:47.376
  STEP: Waiting for the pdb to be processed @ 05/25/24 12:46:47.388
  STEP: Waiting for the pdb to be processed @ 05/25/24 12:46:49.397
  STEP: Waiting for the pdb to be processed @ 05/25/24 12:46:51.407
  STEP: listing a collection of PDBs across all namespaces @ 05/25/24 12:46:53.413
  STEP: listing a collection of PDBs in namespace disruption-2720 @ 05/25/24 12:46:53.416
  STEP: deleting a collection of PDBs @ 05/25/24 12:46:53.418
  STEP: Waiting for the PDB collection to be deleted @ 05/25/24 12:46:53.43
  May 25 12:46:53.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6629" for this suite. @ 05/25/24 12:46:53.435
  May 25 12:46:53.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2720" for this suite. @ 05/25/24 12:46:53.442
• [6.118 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 05/25/24 12:46:53.45
  May 25 12:46:53.450: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename deployment @ 05/25/24 12:46:53.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:46:53.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:46:53.473
  STEP: creating a Deployment @ 05/25/24 12:46:53.477
  STEP: waiting for Deployment to be created @ 05/25/24 12:46:53.482
  STEP: waiting for all Replicas to be Ready @ 05/25/24 12:46:53.483
  May 25 12:46:53.484: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 25 12:46:53.484: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 25 12:46:53.495: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 25 12:46:53.495: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 25 12:46:53.510: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 25 12:46:53.510: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 25 12:46:53.530: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 25 12:46:53.530: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May 25 12:46:54.255: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  May 25 12:46:54.255: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  May 25 12:46:54.368: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/25/24 12:46:54.368
  May 25 12:46:54.378: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/25/24 12:46:54.378
  May 25 12:46:54.379: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 0
  May 25 12:46:54.380: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 0
  May 25 12:46:54.380: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 0
  May 25 12:46:54.380: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 0
  May 25 12:46:54.380: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 0
  May 25 12:46:54.384: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 0
  May 25 12:46:54.384: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 0
  May 25 12:46:54.384: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 0
  May 25 12:46:54.384: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1
  May 25 12:46:54.384: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1
  May 25 12:46:54.384: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2
  May 25 12:46:54.384: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2
  May 25 12:46:54.384: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2
  May 25 12:46:54.384: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2
  May 25 12:46:54.396: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2
  May 25 12:46:54.396: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2
  May 25 12:46:54.410: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2
  May 25 12:46:54.410: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2
  May 25 12:46:54.419: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1
  May 25 12:46:54.420: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1
  May 25 12:46:54.432: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1
  May 25 12:46:54.432: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1
  May 25 12:46:55.382: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2
  May 25 12:46:55.382: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2
  May 25 12:46:55.415: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1
  STEP: listing Deployments @ 05/25/24 12:46:55.415
  May 25 12:46:55.418: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/25/24 12:46:55.418
  May 25 12:46:55.429: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/25/24 12:46:55.429
  May 25 12:46:55.434: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 25 12:46:55.449: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 25 12:46:55.477: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 25 12:46:55.491: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May 25 12:46:56.299: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May 25 12:46:56.400: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  May 25 12:46:56.433: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May 25 12:46:56.440: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May 25 12:46:57.269: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/25/24 12:46:57.291
  STEP: fetching the DeploymentStatus @ 05/25/24 12:46:57.297
  May 25 12:46:57.304: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1
  May 25 12:46:57.304: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1
  May 25 12:46:57.304: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1
  May 25 12:46:57.305: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 1
  May 25 12:46:57.305: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2
  May 25 12:46:57.305: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 3
  May 25 12:46:57.305: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2
  May 25 12:46:57.305: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 2
  May 25 12:46:57.305: INFO: observed Deployment test-deployment in namespace deployment-9025 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/25/24 12:46:57.305
  May 25 12:46:57.313: INFO: observed event type MODIFIED
  May 25 12:46:57.313: INFO: observed event type MODIFIED
  May 25 12:46:57.313: INFO: observed event type MODIFIED
  May 25 12:46:57.313: INFO: observed event type MODIFIED
  May 25 12:46:57.313: INFO: observed event type MODIFIED
  May 25 12:46:57.313: INFO: observed event type MODIFIED
  May 25 12:46:57.313: INFO: observed event type MODIFIED
  May 25 12:46:57.313: INFO: observed event type MODIFIED
  May 25 12:46:57.313: INFO: observed event type MODIFIED
  May 25 12:46:57.313: INFO: observed event type MODIFIED
  May 25 12:46:57.313: INFO: observed event type MODIFIED
  May 25 12:46:57.313: INFO: observed event type MODIFIED
  May 25 12:46:57.317: INFO: Log out all the ReplicaSets if there is no deployment created
  May 25 12:46:57.327: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9025",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "89e7cc41-eff7-4bed-a788-a5c647d51377",
      ResourceVersion: (string) (len=5) "13753",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852238014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "aed8df7e-a9b0-4099-976b-5640e0abcb97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 65 64 38  64 66 37 65 2d 61 39 62  |":\"aed8df7e-a9b|
              00000130  30 2d 34 30 39 39 2d 39  37 36 62 2d 35 36 34 30  |0-4099-976b-5640|
              00000140  65 30 61 62 63 62 39 37  5c 22 7d 22 3a 7b 7d 7d  |e0abcb97\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May 25 12:46:57.339: INFO: pod: "test-deployment-64fd565c98-lgwr8":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-lgwr8",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-9025",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fcf6b0fd-4fb3-4eda-b32a-5c384f2d78b3",
      ResourceVersion: (string) (len=5) "13735",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852238014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852238018,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "89e7cc41-eff7-4bed-a788-a5c647d51377",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 39 65 37 63 63 34 31  |uid\":\"89e7cc41|
              000000a0  2d 65 66 66 37 2d 34 62  65 64 2d 61 37 38 38 2d  |-eff7-4bed-a788-|
              000000b0  61 35 63 36 34 37 64 35  31 33 37 37 5c 22 7d 22  |a5c647d51377\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=621) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 73 74  |:phase":{},"f:st|
              00000260  61 72 74 54 69 6d 65 22  3a 7b 7d 7d 7d           |artTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kmkxr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kmkxr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-106",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238014,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.106",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.106"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852238014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852238014,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852238016,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://1826fd949af98d68d153008a79d3fb0f5749fc900786ce1829d6bfaeffe3b57c"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://1826fd949af98d68d153008a79d3fb0f5749fc900786ce1829d6bfaeffe3b57c",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May 25 12:46:57.344: INFO: pod: "test-deployment-64fd565c98-xvglz":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-xvglz",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-9025",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f563072c-8fc0-4b79-bd8f-e5e6d627491f",
      ResourceVersion: (string) (len=5) "13749",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852238015,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852238019,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "89e7cc41-eff7-4bed-a788-a5c647d51377",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 39 65 37 63 63 34 31  |uid\":\"89e7cc41|
              000000a0  2d 65 66 66 37 2d 34 62  65 64 2d 61 37 38 38 2d  |-eff7-4bed-a788-|
              000000b0  61 35 63 36 34 37 64 35  31 33 37 37 5c 22 7d 22  |a5c647d51377\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 33  38 2e 31 36 30 5c 22 7d  |2.168.138.160\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-htxsd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-htxsd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-15-138",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.138"
        }
      },
      PodIP: (string) (len=15) "192.168.138.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.138.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852238015,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852238016,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://fa36a366378e61c980e444572ccdd5615f999451adc675917afacda2d31a2b82",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May 25 12:46:57.345: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9025",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b1c9ed95-2eb0-45cc-964f-1a7315a31467",
      ResourceVersion: (string) (len=5) "13657",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852238013,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "aed8df7e-a9b0-4099-976b-5640e0abcb97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 65 64 38  64 66 37 65 2d 61 39 62  |":\"aed8df7e-a9b|
              00000130  30 2d 34 30 39 39 2d 39  37 36 62 2d 35 36 34 30  |0-4099-976b-5640|
              00000140  65 30 61 62 63 62 39 37  5c 22 7d 22 3a 7b 7d 7d  |e0abcb97\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May 25 12:46:57.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9025" for this suite. @ 05/25/24 12:46:57.351
• [3.908 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 05/25/24 12:46:57.358
  May 25 12:46:57.358: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename deployment @ 05/25/24 12:46:57.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:46:57.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:46:57.381
  STEP: creating a Deployment @ 05/25/24 12:46:57.386
  May 25 12:46:57.386: INFO: Creating simple deployment test-deployment-ntzh2
  May 25 12:46:57.402: INFO: deployment "test-deployment-ntzh2" doesn't have the required revision set
  STEP: Getting /status @ 05/25/24 12:46:59.415
  May 25 12:46:59.418: INFO: Deployment test-deployment-ntzh2 has Conditions: [{Available True 2024-05-25 12:46:58 +0000 UTC 2024-05-25 12:46:58 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-05-25 12:46:58 +0000 UTC 2024-05-25 12:46:57 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ntzh2-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/25/24 12:46:59.418
  May 25 12:46:59.427: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 12, 46, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 12, 46, 58, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 12, 46, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 12, 46, 57, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-ntzh2-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/25/24 12:46:59.427
  May 25 12:46:59.428: INFO: Observed &Deployment event: ADDED
  May 25 12:46:59.428: INFO: Observed Deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-25 12:46:57 +0000 UTC 2024-05-25 12:46:57 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ntzh2-5d576bd769"}
  May 25 12:46:59.428: INFO: Observed &Deployment event: MODIFIED
  May 25 12:46:59.428: INFO: Observed Deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-25 12:46:57 +0000 UTC 2024-05-25 12:46:57 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ntzh2-5d576bd769"}
  May 25 12:46:59.428: INFO: Observed Deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-25 12:46:57 +0000 UTC 2024-05-25 12:46:57 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 25 12:46:59.428: INFO: Observed &Deployment event: MODIFIED
  May 25 12:46:59.428: INFO: Observed Deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-25 12:46:57 +0000 UTC 2024-05-25 12:46:57 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 25 12:46:59.428: INFO: Observed Deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-25 12:46:57 +0000 UTC 2024-05-25 12:46:57 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-ntzh2-5d576bd769" is progressing.}
  May 25 12:46:59.428: INFO: Observed &Deployment event: MODIFIED
  May 25 12:46:59.428: INFO: Observed Deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-25 12:46:58 +0000 UTC 2024-05-25 12:46:58 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 25 12:46:59.428: INFO: Observed Deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-25 12:46:58 +0000 UTC 2024-05-25 12:46:57 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ntzh2-5d576bd769" has successfully progressed.}
  May 25 12:46:59.428: INFO: Observed &Deployment event: MODIFIED
  May 25 12:46:59.428: INFO: Observed Deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-25 12:46:58 +0000 UTC 2024-05-25 12:46:58 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 25 12:46:59.428: INFO: Observed Deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-25 12:46:58 +0000 UTC 2024-05-25 12:46:57 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ntzh2-5d576bd769" has successfully progressed.}
  May 25 12:46:59.428: INFO: Found Deployment test-deployment-ntzh2 in namespace deployment-9114 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 25 12:46:59.428: INFO: Deployment test-deployment-ntzh2 has an updated status
  STEP: patching the Statefulset Status @ 05/25/24 12:46:59.428
  May 25 12:46:59.428: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May 25 12:46:59.434: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/25/24 12:46:59.434
  May 25 12:46:59.435: INFO: Observed &Deployment event: ADDED
  May 25 12:46:59.435: INFO: Observed deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-25 12:46:57 +0000 UTC 2024-05-25 12:46:57 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ntzh2-5d576bd769"}
  May 25 12:46:59.435: INFO: Observed &Deployment event: MODIFIED
  May 25 12:46:59.435: INFO: Observed deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-25 12:46:57 +0000 UTC 2024-05-25 12:46:57 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ntzh2-5d576bd769"}
  May 25 12:46:59.435: INFO: Observed deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-25 12:46:57 +0000 UTC 2024-05-25 12:46:57 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 25 12:46:59.435: INFO: Observed &Deployment event: MODIFIED
  May 25 12:46:59.435: INFO: Observed deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-25 12:46:57 +0000 UTC 2024-05-25 12:46:57 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May 25 12:46:59.435: INFO: Observed deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-25 12:46:57 +0000 UTC 2024-05-25 12:46:57 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-ntzh2-5d576bd769" is progressing.}
  May 25 12:46:59.435: INFO: Observed &Deployment event: MODIFIED
  May 25 12:46:59.435: INFO: Observed deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-25 12:46:58 +0000 UTC 2024-05-25 12:46:58 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 25 12:46:59.435: INFO: Observed deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-25 12:46:58 +0000 UTC 2024-05-25 12:46:57 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ntzh2-5d576bd769" has successfully progressed.}
  May 25 12:46:59.436: INFO: Observed &Deployment event: MODIFIED
  May 25 12:46:59.436: INFO: Observed deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-25 12:46:58 +0000 UTC 2024-05-25 12:46:58 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May 25 12:46:59.436: INFO: Observed deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-25 12:46:58 +0000 UTC 2024-05-25 12:46:57 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ntzh2-5d576bd769" has successfully progressed.}
  May 25 12:46:59.436: INFO: Observed deployment test-deployment-ntzh2 in namespace deployment-9114 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 25 12:46:59.436: INFO: Observed &Deployment event: MODIFIED
  May 25 12:46:59.436: INFO: Found deployment test-deployment-ntzh2 in namespace deployment-9114 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  May 25 12:46:59.436: INFO: Deployment test-deployment-ntzh2 has a patched status
  May 25 12:46:59.442: INFO: Deployment "test-deployment-ntzh2":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-ntzh2",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9114",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f9c688e-f4e0-404f-96af-16c6b1686435",
      ResourceVersion: (string) (len=5) "13837",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852238017,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238019,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238019,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238019,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238019,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-ntzh2-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 25 12:46:59.446: INFO: New ReplicaSet "test-deployment-ntzh2-5d576bd769" of Deployment "test-deployment-ntzh2":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-ntzh2-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9114",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e590a7b5-7a5e-4cda-83f2-59e0624bd5d2",
      ResourceVersion: (string) (len=5) "13806",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852238017,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-ntzh2",
          UID: (types.UID) (len=36) "2f9c688e-f4e0-404f-96af-16c6b1686435",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 32 66 39  |k:{\"uid\":\"2f9|
              00000120  63 36 38 38 65 2d 66 34  65 30 2d 34 30 34 66 2d  |c688e-f4e0-404f-|
              00000130  39 36 61 66 2d 31 36 63  36 62 31 36 38 36 34 33  |96af-16c6b168643|
              00000140  35 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |5\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 25 12:46:59.450: INFO: Pod "test-deployment-ntzh2-5d576bd769-hsk4x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-ntzh2-5d576bd769-hsk4x",
      GenerateName: (string) (len=33) "test-deployment-ntzh2-5d576bd769-",
      Namespace: (string) (len=15) "deployment-9114",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "203144ab-cd34-453d-a6a2-8b82050797cf",
      ResourceVersion: (string) (len=5) "13805",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852238017,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-ntzh2-5d576bd769",
          UID: (types.UID) (len=36) "e590a7b5-7a5e-4cda-83f2-59e0624bd5d2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 65 35 39 30 61 37 62  35 2d 37 61 35 65 2d 34  |"e590a7b5-7a5e-4|
              000000a0  63 64 61 2d 38 33 66 32  2d 35 39 65 30 36 32 34  |cda-83f2-59e0624|
              000000b0  62 64 35 64 32 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |bd5d2\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 33  31 2e 36 5c 22 7d 22 3a  |2.168.131.6\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9ss7r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9ss7r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-106",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.106",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.106"
        }
      },
      PodIP: (string) (len=13) "192.168.131.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.131.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852238017,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852238017,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5dfb14054015ef20ee14f99f5d1e46cc533af8e39ae34977439501ebf410c8b3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 12:46:59.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9114" for this suite. @ 05/25/24 12:46:59.462
• [2.110 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 05/25/24 12:46:59.468
  May 25 12:46:59.468: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename job @ 05/25/24 12:46:59.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:46:59.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:46:59.485
  STEP: Creating a suspended job @ 05/25/24 12:46:59.488
  STEP: Patching the Job @ 05/25/24 12:46:59.494
  STEP: Watching for Job to be patched @ 05/25/24 12:46:59.507
  May 25 12:46:59.508: INFO: Event ADDED observed for Job e2e-hwq78 in namespace job-4383 with labels: map[e2e-job-label:e2e-hwq78] and annotations: map[]
  May 25 12:46:59.508: INFO: Event MODIFIED observed for Job e2e-hwq78 in namespace job-4383 with labels: map[e2e-job-label:e2e-hwq78] and annotations: map[]
  May 25 12:46:59.508: INFO: Event MODIFIED found for Job e2e-hwq78 in namespace job-4383 with labels: map[e2e-hwq78:patched e2e-job-label:e2e-hwq78] and annotations: map[]
  STEP: Updating the job @ 05/25/24 12:46:59.508
  STEP: Watching for Job to be updated @ 05/25/24 12:46:59.516
  May 25 12:46:59.516: INFO: Event MODIFIED found for Job e2e-hwq78 in namespace job-4383 with labels: map[e2e-hwq78:patched e2e-job-label:e2e-hwq78] and annotations: map[updated:true]
  May 25 12:46:59.516: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/25/24 12:46:59.516
  May 25 12:46:59.518: INFO: Job: e2e-hwq78 as labels: map[e2e-hwq78:patched e2e-job-label:e2e-hwq78]
  STEP: Waiting for job to complete @ 05/25/24 12:46:59.518
  STEP: Delete a job collection with a labelselector @ 05/25/24 12:47:05.521
  STEP: Watching for Job to be deleted @ 05/25/24 12:47:05.528
  May 25 12:47:05.529: INFO: Event MODIFIED observed for Job e2e-hwq78 in namespace job-4383 with labels: map[e2e-hwq78:patched e2e-job-label:e2e-hwq78] and annotations: map[updated:true]
  May 25 12:47:05.529: INFO: Event MODIFIED observed for Job e2e-hwq78 in namespace job-4383 with labels: map[e2e-hwq78:patched e2e-job-label:e2e-hwq78] and annotations: map[updated:true]
  May 25 12:47:05.529: INFO: Event MODIFIED observed for Job e2e-hwq78 in namespace job-4383 with labels: map[e2e-hwq78:patched e2e-job-label:e2e-hwq78] and annotations: map[updated:true]
  May 25 12:47:05.529: INFO: Event MODIFIED observed for Job e2e-hwq78 in namespace job-4383 with labels: map[e2e-hwq78:patched e2e-job-label:e2e-hwq78] and annotations: map[updated:true]
  May 25 12:47:05.530: INFO: Event MODIFIED observed for Job e2e-hwq78 in namespace job-4383 with labels: map[e2e-hwq78:patched e2e-job-label:e2e-hwq78] and annotations: map[updated:true]
  May 25 12:47:05.530: INFO: Event DELETED found for Job e2e-hwq78 in namespace job-4383 with labels: map[e2e-hwq78:patched e2e-job-label:e2e-hwq78] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/25/24 12:47:05.53
  May 25 12:47:05.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4383" for this suite. @ 05/25/24 12:47:05.536
• [6.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 05/25/24 12:47:05.55
  May 25 12:47:05.550: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/25/24 12:47:05.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:47:05.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:47:05.569
  STEP: Cleaning up the secret @ 05/25/24 12:47:07.596
  STEP: Cleaning up the configmap @ 05/25/24 12:47:07.602
  STEP: Cleaning up the pod @ 05/25/24 12:47:07.606
  May 25 12:47:07.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-2096" for this suite. @ 05/25/24 12:47:07.62
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 05/25/24 12:47:07.628
  May 25 12:47:07.628: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 12:47:07.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:47:07.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:47:07.648
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 12:47:07.649
  STEP: Saw pod success @ 05/25/24 12:47:09.664
  May 25 12:47:09.667: INFO: Trying to get logs from node ip-172-31-45-106 pod downwardapi-volume-9b8b19ce-13ef-4312-b868-22ebed25e535 container client-container: <nil>
  STEP: delete the pod @ 05/25/24 12:47:09.674
  May 25 12:47:09.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7621" for this suite. @ 05/25/24 12:47:09.693
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 05/25/24 12:47:09.698
  May 25 12:47:09.698: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pods @ 05/25/24 12:47:09.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:47:09.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:47:09.719
  May 25 12:47:09.722: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: creating the pod @ 05/25/24 12:47:09.722
  STEP: submitting the pod to kubernetes @ 05/25/24 12:47:09.723
  May 25 12:47:11.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7547" for this suite. @ 05/25/24 12:47:11.754
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 05/25/24 12:47:11.759
  May 25 12:47:11.759: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename downward-api @ 05/25/24 12:47:11.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:47:11.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:47:11.777
  STEP: Creating a pod to test downward api env vars @ 05/25/24 12:47:11.778
  STEP: Saw pod success @ 05/25/24 12:47:15.796
  May 25 12:47:15.800: INFO: Trying to get logs from node ip-172-31-15-138 pod downward-api-083e6349-2f3c-40f5-be1f-ce96bf00e792 container dapi-container: <nil>
  STEP: delete the pod @ 05/25/24 12:47:15.807
  May 25 12:47:15.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5710" for this suite. @ 05/25/24 12:47:15.823
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 05/25/24 12:47:15.828
  May 25 12:47:15.828: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pods @ 05/25/24 12:47:15.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:47:15.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:47:15.847
  STEP: creating pod @ 05/25/24 12:47:15.848
  May 25 12:47:17.868: INFO: Pod pod-hostip-2e09220f-e078-4fbb-8528-6c7d2e0e19c7 has hostIP: 172.31.45.106
  May 25 12:47:17.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7245" for this suite. @ 05/25/24 12:47:17.871
• [2.049 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 05/25/24 12:47:17.878
  May 25 12:47:17.878: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename downward-api @ 05/25/24 12:47:17.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:47:17.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:47:17.897
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 12:47:17.899
  STEP: Saw pod success @ 05/25/24 12:47:21.919
  May 25 12:47:21.924: INFO: Trying to get logs from node ip-172-31-15-138 pod downwardapi-volume-28b1ff07-e0bc-46a6-b413-c4356c92892b container client-container: <nil>
  STEP: delete the pod @ 05/25/24 12:47:21.929
  May 25 12:47:21.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1730" for this suite. @ 05/25/24 12:47:21.944
• [4.072 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 05/25/24 12:47:21.95
  May 25 12:47:21.950: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename namespaces @ 05/25/24 12:47:21.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:47:21.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:47:21.97
  STEP: Creating namespace "e2e-ns-r5cp9" @ 05/25/24 12:47:21.971
  May 25 12:47:21.987: INFO: Namespace "e2e-ns-r5cp9-3687" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-r5cp9-3687" @ 05/25/24 12:47:21.987
  May 25 12:47:21.996: INFO: Namespace "e2e-ns-r5cp9-3687" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-r5cp9-3687" @ 05/25/24 12:47:21.996
  May 25 12:47:22.005: INFO: Namespace "e2e-ns-r5cp9-3687" has []v1.FinalizerName{"kubernetes"}
  May 25 12:47:22.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-573" for this suite. @ 05/25/24 12:47:22.007
  STEP: Destroying namespace "e2e-ns-r5cp9-3687" for this suite. @ 05/25/24 12:47:22.011
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 05/25/24 12:47:22.019
  May 25 12:47:22.019: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename job @ 05/25/24 12:47:22.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:47:22.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:47:22.034
  STEP: Creating a job @ 05/25/24 12:47:22.036
  STEP: Ensuring job reaches completions @ 05/25/24 12:47:22.041
  May 25 12:47:32.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6181" for this suite. @ 05/25/24 12:47:32.051
• [10.039 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 05/25/24 12:47:32.058
  May 25 12:47:32.058: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 12:47:32.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:47:32.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:47:32.079
  STEP: Creating configMap with name projected-configmap-test-volume-map-74db5611-7052-4c76-a621-9d178005eb2f @ 05/25/24 12:47:32.08
  STEP: Creating a pod to test consume configMaps @ 05/25/24 12:47:32.087
  STEP: Saw pod success @ 05/25/24 12:47:36.104
  May 25 12:47:36.107: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-projected-configmaps-802a5593-d12c-4a66-8d52-f6351f7ae490 container agnhost-container: <nil>
  STEP: delete the pod @ 05/25/24 12:47:36.112
  May 25 12:47:36.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9318" for this suite. @ 05/25/24 12:47:36.129
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 05/25/24 12:47:36.135
  May 25 12:47:36.135: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-probe @ 05/25/24 12:47:36.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:47:36.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:47:36.153
  May 25 12:47:58.218: INFO: Container started at 2024-05-25 12:47:36 +0000 UTC, pod became ready at 2024-05-25 12:47:56 +0000 UTC
  May 25 12:47:58.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4195" for this suite. @ 05/25/24 12:47:58.22
• [22.093 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 05/25/24 12:47:58.228
  May 25 12:47:58.228: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename apf @ 05/25/24 12:47:58.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:47:58.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:47:58.245
  STEP: getting /apis @ 05/25/24 12:47:58.246
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/25/24 12:47:58.249
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/25/24 12:47:58.249
  STEP: creating @ 05/25/24 12:47:58.25
  STEP: getting @ 05/25/24 12:47:58.263
  STEP: listing @ 05/25/24 12:47:58.265
  STEP: watching @ 05/25/24 12:47:58.268
  May 25 12:47:58.268: INFO: starting watch
  STEP: patching @ 05/25/24 12:47:58.269
  STEP: updating @ 05/25/24 12:47:58.274
  May 25 12:47:58.283: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 05/25/24 12:47:58.283
  STEP: patching /status @ 05/25/24 12:47:58.286
  STEP: updating /status @ 05/25/24 12:47:58.289
  STEP: deleting @ 05/25/24 12:47:58.297
  STEP: deleting a collection @ 05/25/24 12:47:58.306
  May 25 12:47:58.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1546" for this suite. @ 05/25/24 12:47:58.327
• [0.105 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 05/25/24 12:47:58.333
  May 25 12:47:58.333: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/25/24 12:47:58.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:47:58.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:47:58.351
  STEP: set up a multi version CRD @ 05/25/24 12:47:58.352
  May 25 12:47:58.353: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: mark a version not serverd @ 05/25/24 12:48:01.379
  STEP: check the unserved version gets removed @ 05/25/24 12:48:01.396
  STEP: check the other version is not changed @ 05/25/24 12:48:02.15
  May 25 12:48:04.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4405" for this suite. @ 05/25/24 12:48:04.552
• [6.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 05/25/24 12:48:04.559
  May 25 12:48:04.559: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename disruption @ 05/25/24 12:48:04.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:48:04.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:48:04.576
  STEP: Waiting for the pdb to be processed @ 05/25/24 12:48:04.581
  STEP: Waiting for all pods to be running @ 05/25/24 12:48:06.605
  May 25 12:48:06.610: INFO: running pods: 0 < 3
  May 25 12:48:08.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8403" for this suite. @ 05/25/24 12:48:08.614
• [4.061 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 05/25/24 12:48:08.621
  May 25 12:48:08.621: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename namespaces @ 05/25/24 12:48:08.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:48:08.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:48:08.639
  STEP: creating a Namespace @ 05/25/24 12:48:08.641
  STEP: patching the Namespace @ 05/25/24 12:48:08.664
  STEP: get the Namespace and ensuring it has the label @ 05/25/24 12:48:08.669
  May 25 12:48:08.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9391" for this suite. @ 05/25/24 12:48:08.674
  STEP: Destroying namespace "nspatchtest-9aae261b-7640-4f30-95e1-18771d3705b5-5693" for this suite. @ 05/25/24 12:48:08.68
• [0.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 05/25/24 12:48:08.687
  May 25 12:48:08.687: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-probe @ 05/25/24 12:48:08.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:48:08.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:48:08.71
  STEP: Creating pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437 @ 05/25/24 12:48:08.712
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/25/24 12:48:10.728
  May 25 12:48:10.730: INFO: Initial restart count of pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 is 0
  May 25 12:48:10.734: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:12.739: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:14.744: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:16.749: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:18.752: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:20.758: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:22.763: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:24.767: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:26.774: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:28.779: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:30.785: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:32.789: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:34.793: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:36.799: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:38.803: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:40.807: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:42.814: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:44.818: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:46.822: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:48.827: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:50.831: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:52.836: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:54.841: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:56.845: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:48:58.850: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:00.855: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:02.859: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:04.864: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:06.868: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:08.874: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:10.878: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:12.884: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:14.888: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:16.892: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:18.898: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:20.903: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:22.907: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:24.912: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:26.916: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:28.920: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:30.925: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:32.928: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:34.933: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:36.937: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:38.941: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:40.946: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:42.950: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:44.955: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:46.960: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:48.964: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:50.969: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:52.974: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:54.978: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:56.984: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:49:58.988: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:00.992: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:02.998: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:05.003: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:07.009: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:09.013: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:11.018: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:13.023: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:15.027: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:17.033: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:19.036: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:21.041: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:23.047: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:25.052: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:27.055: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:29.060: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:31.064: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:33.070: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:35.074: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:37.078: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:39.083: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:41.087: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:43.091: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:45.096: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:47.101: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:49.105: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:51.108: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:53.113: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:55.118: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:57.123: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:50:59.127: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:01.132: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:03.135: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:05.140: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:07.145: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:09.150: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:11.155: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:13.159: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:15.163: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:17.169: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:19.173: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:21.178: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:23.183: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:25.188: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:27.192: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:29.197: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:31.200: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:33.205: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:35.209: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:37.214: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:39.218: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:41.223: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:43.228: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:45.232: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:47.236: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:49.239: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:51.245: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:53.250: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:55.254: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:57.259: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:51:59.264: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:52:01.267: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:52:03.273: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:52:05.278: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:52:07.283: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  May 25 12:52:09.287: INFO: Get pod test-webserver-9ed9d61d-d366-43d4-9db2-22d3b5f47a41 in namespace container-probe-3437
  STEP: deleting the pod @ 05/25/24 12:52:11.288
  May 25 12:52:11.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3437" for this suite. @ 05/25/24 12:52:11.304
• [242.623 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 05/25/24 12:52:11.31
  May 25 12:52:11.311: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 12:52:11.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:52:11.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:52:11.329
  STEP: Creating configMap with name projected-configmap-test-volume-c9dddc7e-155f-4924-bc10-45e26fc46abc @ 05/25/24 12:52:11.331
  STEP: Creating a pod to test consume configMaps @ 05/25/24 12:52:11.336
  STEP: Saw pod success @ 05/25/24 12:52:15.359
  May 25 12:52:15.362: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-projected-configmaps-a6d69e1d-cd9c-43d7-9ca1-156426937cde container agnhost-container: <nil>
  STEP: delete the pod @ 05/25/24 12:52:15.38
  May 25 12:52:15.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1543" for this suite. @ 05/25/24 12:52:15.395
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 05/25/24 12:52:15.4
  May 25 12:52:15.400: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename svcaccounts @ 05/25/24 12:52:15.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:52:15.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:52:15.42
  STEP: Creating ServiceAccount "e2e-sa-gdqzq"  @ 05/25/24 12:52:15.422
  May 25 12:52:15.426: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-gdqzq"  @ 05/25/24 12:52:15.426
  May 25 12:52:15.433: INFO: AutomountServiceAccountToken: true
  May 25 12:52:15.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9812" for this suite. @ 05/25/24 12:52:15.436
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 05/25/24 12:52:15.443
  May 25 12:52:15.443: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename downward-api @ 05/25/24 12:52:15.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:52:15.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:52:15.46
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 12:52:15.462
  STEP: Saw pod success @ 05/25/24 12:52:19.483
  May 25 12:52:19.486: INFO: Trying to get logs from node ip-172-31-45-106 pod downwardapi-volume-e0aa384c-8dcf-465d-958c-062585e5fbbd container client-container: <nil>
  STEP: delete the pod @ 05/25/24 12:52:19.491
  May 25 12:52:19.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8657" for this suite. @ 05/25/24 12:52:19.511
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 05/25/24 12:52:19.516
  May 25 12:52:19.516: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename gc @ 05/25/24 12:52:19.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:52:19.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:52:19.534
  May 25 12:52:19.569: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"b7a99966-4d83-4ac2-b31d-d2da03f8d218", Controller:(*bool)(0xc00332fef6), BlockOwnerDeletion:(*bool)(0xc00332fef7)}}
  May 25 12:52:19.584: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"a0790f9c-d8ab-42a0-9a8f-c79b7a4061c1", Controller:(*bool)(0xc002f4c15e), BlockOwnerDeletion:(*bool)(0xc002f4c15f)}}
  May 25 12:52:19.588: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"cc02e969-8b28-4185-a9f4-96a819854729", Controller:(*bool)(0xc003291756), BlockOwnerDeletion:(*bool)(0xc003291757)}}
  May 25 12:52:24.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6191" for this suite. @ 05/25/24 12:52:24.607
• [5.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 05/25/24 12:52:24.615
  May 25 12:52:24.615: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename daemonsets @ 05/25/24 12:52:24.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:52:24.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:52:24.635
  May 25 12:52:24.658: INFO: Create a RollingUpdate DaemonSet
  May 25 12:52:24.663: INFO: Check that daemon pods launch on every node of the cluster
  May 25 12:52:24.665: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:52:24.665: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:52:24.667: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 12:52:24.667: INFO: Node ip-172-31-15-138 is running 0 daemon pod, expected 1
  May 25 12:52:25.667: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:52:25.667: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:52:25.669: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 12:52:25.669: INFO: Node ip-172-31-15-138 is running 0 daemon pod, expected 1
  May 25 12:52:26.669: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:52:26.669: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:52:26.672: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 25 12:52:26.672: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  May 25 12:52:26.672: INFO: Update the DaemonSet to trigger a rollout
  May 25 12:52:26.681: INFO: Updating DaemonSet daemon-set
  May 25 12:52:27.694: INFO: Roll back the DaemonSet before rollout is complete
  May 25 12:52:27.701: INFO: Updating DaemonSet daemon-set
  May 25 12:52:27.701: INFO: Make sure DaemonSet rollback is complete
  May 25 12:52:27.704: INFO: Wrong image for pod: daemon-set-7gvt8. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  May 25 12:52:27.704: INFO: Pod daemon-set-7gvt8 is not available
  May 25 12:52:27.707: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:52:27.707: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:52:28.708: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:52:28.708: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:52:29.705: INFO: Pod daemon-set-wrs27 is not available
  May 25 12:52:29.708: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 12:52:29.708: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 05/25/24 12:52:29.713
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3467, will wait for the garbage collector to delete the pods @ 05/25/24 12:52:29.713
  May 25 12:52:29.771: INFO: Deleting DaemonSet.extensions daemon-set took: 6.141767ms
  May 25 12:52:29.872: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.349342ms
  May 25 12:52:31.076: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 12:52:31.076: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 25 12:52:31.078: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15583"},"items":null}

  May 25 12:52:31.080: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15583"},"items":null}

  May 25 12:52:31.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3467" for this suite. @ 05/25/24 12:52:31.092
• [6.481 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 05/25/24 12:52:31.097
  May 25 12:52:31.097: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename svcaccounts @ 05/25/24 12:52:31.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:52:31.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:52:31.116
  May 25 12:52:31.120: INFO: Got root ca configmap in namespace "svcaccounts-9700"
  May 25 12:52:31.125: INFO: Deleted root ca configmap in namespace "svcaccounts-9700"
  STEP: waiting for a new root ca configmap created @ 05/25/24 12:52:31.626
  May 25 12:52:31.629: INFO: Recreated root ca configmap in namespace "svcaccounts-9700"
  May 25 12:52:31.634: INFO: Updated root ca configmap in namespace "svcaccounts-9700"
  STEP: waiting for the root ca configmap reconciled @ 05/25/24 12:52:32.135
  May 25 12:52:32.138: INFO: Reconciled root ca configmap in namespace "svcaccounts-9700"
  May 25 12:52:32.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9700" for this suite. @ 05/25/24 12:52:32.141
• [1.051 seconds]
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 05/25/24 12:52:32.148
  May 25 12:52:32.148: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename chunking @ 05/25/24 12:52:32.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:52:32.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:52:32.164
  STEP: creating a large number of resources @ 05/25/24 12:52:32.166
  STEP: retrieving the first page @ 05/25/24 12:52:49.852
  May 25 12:52:49.904: INFO: Retrieved 40/40 results with rv 16077 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 05/25/24 12:52:49.904
  May 25 12:53:09.911: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:53:29.912: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:53:49.911: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:54:09.908: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:54:29.912: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:54:49.911: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:55:09.913: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:55:29.911: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:55:49.910: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:56:09.913: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:56:29.911: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:56:49.912: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:57:09.911: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:57:29.910: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:57:49.911: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:58:09.910: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:58:29.913: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:58:49.911: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May 25 12:59:09.912: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  May 25 12:59:09.912: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 05/25/24 12:59:09.912
  STEP: retrieving all remaining pages @ 05/25/24 12:59:09.915
  May 25 12:59:09.918: INFO: Retrieved 40/40 results with rv 16826 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTY4MjYsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  May 25 12:59:09.922: INFO: Retrieved 40/40 results with rv 16826 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTY4MjYsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  May 25 12:59:09.924: INFO: Retrieved 40/40 results with rv 16826 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTY4MjYsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  May 25 12:59:09.927: INFO: Retrieved 40/40 results with rv 16826 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTY4MjYsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  May 25 12:59:09.930: INFO: Retrieved 40/40 results with rv 16826 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTY4MjYsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  May 25 12:59:09.933: INFO: Retrieved 40/40 results with rv 16826 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTY4MjYsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  May 25 12:59:09.936: INFO: Retrieved 40/40 results with rv 16826 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTY4MjYsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  May 25 12:59:09.939: INFO: Retrieved 40/40 results with rv 16826 and continue 
  May 25 12:59:09.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3382" for this suite. @ 05/25/24 12:59:09.942
• [397.799 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 05/25/24 12:59:09.947
  May 25 12:59:09.947: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 12:59:09.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:59:09.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:59:09.972
  STEP: Setting up server cert @ 05/25/24 12:59:09.996
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 12:59:10.222
  STEP: Deploying the webhook pod @ 05/25/24 12:59:10.23
  STEP: Wait for the deployment to be ready @ 05/25/24 12:59:10.242
  May 25 12:59:10.247: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/25/24 12:59:12.256
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 12:59:12.267
  May 25 12:59:13.268: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/25/24 12:59:13.328
  STEP: Creating a configMap that should be mutated @ 05/25/24 12:59:13.337
  STEP: Deleting the collection of validation webhooks @ 05/25/24 12:59:13.362
  STEP: Creating a configMap that should not be mutated @ 05/25/24 12:59:13.405
  May 25 12:59:13.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6860" for this suite. @ 05/25/24 12:59:13.448
  STEP: Destroying namespace "webhook-markers-6589" for this suite. @ 05/25/24 12:59:13.456
• [3.514 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 05/25/24 12:59:13.461
  May 25 12:59:13.461: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename endpointslice @ 05/25/24 12:59:13.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:59:13.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:59:13.478
  STEP: referencing a single matching pod @ 05/25/24 12:59:18.534
  STEP: referencing matching pods with named port @ 05/25/24 12:59:23.543
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/25/24 12:59:28.55
  STEP: recreating EndpointSlices after they've been deleted @ 05/25/24 12:59:33.559
  May 25 12:59:33.577: INFO: EndpointSlice for Service endpointslice-7000/example-named-port not found
  May 25 12:59:43.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7000" for this suite. @ 05/25/24 12:59:43.586
• [30.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 05/25/24 12:59:43.592
  May 25 12:59:43.592: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 12:59:43.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:59:43.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:59:43.61
  STEP: creating a Service @ 05/25/24 12:59:43.615
  STEP: watching for the Service to be added @ 05/25/24 12:59:43.628
  May 25 12:59:43.630: INFO: Found Service test-service-jgm8c in namespace services-8940 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30517}]
  May 25 12:59:43.630: INFO: Service test-service-jgm8c created
  STEP: Getting /status @ 05/25/24 12:59:43.63
  May 25 12:59:43.635: INFO: Service test-service-jgm8c has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/25/24 12:59:43.635
  STEP: watching for the Service to be patched @ 05/25/24 12:59:43.64
  May 25 12:59:43.641: INFO: observed Service test-service-jgm8c in namespace services-8940 with annotations: map[] & LoadBalancer: {[]}
  May 25 12:59:43.641: INFO: Found Service test-service-jgm8c in namespace services-8940 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  May 25 12:59:43.641: INFO: Service test-service-jgm8c has service status patched
  STEP: updating the ServiceStatus @ 05/25/24 12:59:43.641
  May 25 12:59:43.649: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/25/24 12:59:43.649
  May 25 12:59:43.650: INFO: Observed Service test-service-jgm8c in namespace services-8940 with annotations: map[] & Conditions: {[]}
  May 25 12:59:43.650: INFO: Observed event: &Service{ObjectMeta:{test-service-jgm8c  services-8940  011fc394-dbca-4592-a675-e88243f244ef 17462 0 2024-05-25 12:59:43 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-05-25 12:59:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-05-25 12:59:43 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:30517,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.118,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.118],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  May 25 12:59:43.650: INFO: Found Service test-service-jgm8c in namespace services-8940 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 25 12:59:43.650: INFO: Service test-service-jgm8c has service status updated
  STEP: patching the service @ 05/25/24 12:59:43.65
  STEP: watching for the Service to be patched @ 05/25/24 12:59:43.662
  May 25 12:59:43.663: INFO: observed Service test-service-jgm8c in namespace services-8940 with labels: map[test-service-static:true]
  May 25 12:59:43.663: INFO: observed Service test-service-jgm8c in namespace services-8940 with labels: map[test-service-static:true]
  May 25 12:59:43.663: INFO: observed Service test-service-jgm8c in namespace services-8940 with labels: map[test-service-static:true]
  May 25 12:59:43.663: INFO: Found Service test-service-jgm8c in namespace services-8940 with labels: map[test-service:patched test-service-static:true]
  May 25 12:59:43.663: INFO: Service test-service-jgm8c patched
  STEP: deleting the service @ 05/25/24 12:59:43.663
  STEP: watching for the Service to be deleted @ 05/25/24 12:59:43.681
  May 25 12:59:43.682: INFO: Observed event: ADDED
  May 25 12:59:43.682: INFO: Observed event: MODIFIED
  May 25 12:59:43.682: INFO: Observed event: MODIFIED
  May 25 12:59:43.682: INFO: Observed event: MODIFIED
  May 25 12:59:43.682: INFO: Found Service test-service-jgm8c in namespace services-8940 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  May 25 12:59:43.682: INFO: Service test-service-jgm8c deleted
  May 25 12:59:43.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8940" for this suite. @ 05/25/24 12:59:43.685
• [0.099 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 05/25/24 12:59:43.691
  May 25 12:59:43.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir @ 05/25/24 12:59:43.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:59:43.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:59:43.711
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/25/24 12:59:43.713
  STEP: Saw pod success @ 05/25/24 12:59:47.737
  May 25 12:59:47.739: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-3e3a3c95-4fe9-4b79-9f2e-7ce3bdfe776b container test-container: <nil>
  STEP: delete the pod @ 05/25/24 12:59:47.759
  May 25 12:59:47.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1701" for this suite. @ 05/25/24 12:59:47.775
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 05/25/24 12:59:47.783
  May 25 12:59:47.783: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename configmap @ 05/25/24 12:59:47.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:59:47.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:59:47.803
  STEP: Creating configMap with name configmap-test-volume-map-04ddd609-b584-4bae-a660-e893ec1201cd @ 05/25/24 12:59:47.805
  STEP: Creating a pod to test consume configMaps @ 05/25/24 12:59:47.811
  STEP: Saw pod success @ 05/25/24 12:59:49.823
  May 25 12:59:49.826: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-configmaps-009040a5-a06d-4de6-ba25-ca732d298e62 container agnhost-container: <nil>
  STEP: delete the pod @ 05/25/24 12:59:49.832
  May 25 12:59:49.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1829" for this suite. @ 05/25/24 12:59:49.85
• [2.073 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 05/25/24 12:59:49.857
  May 25 12:59:49.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename deployment @ 05/25/24 12:59:49.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:59:49.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:59:49.883
  May 25 12:59:49.891: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  May 25 12:59:54.897: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/25/24 12:59:54.897
  May 25 12:59:54.897: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/25/24 12:59:54.906
  May 25 12:59:54.914: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2d95bde-3248-40e3-a9af-499f9ff0ea97",
      ResourceVersion: (string) (len=5) "17624",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852238794,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 25 12:59:54.920: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  May 25 12:59:54.920: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  May 25 12:59:54.920: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f7d5850-fcc6-4470-bcbb-086091300060",
      ResourceVersion: (string) (len=5) "17625",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852238789,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "f2d95bde-3248-40e3-a9af-499f9ff0ea97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238790,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 66 32 64 39 35 62 64  |"uid\":\"f2d95bd|
              00000040  65 2d 33 32 34 38 2d 34  30 65 33 2d 61 39 61 66  |e-3248-40e3-a9af|
              00000050  2d 34 39 39 66 39 66 66  30 65 61 39 37 5c 22 7d  |-499f9ff0ea97\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 25 12:59:54.924: INFO: Pod "test-cleanup-controller-psjr9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-psjr9",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-1519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "50681802-f7e6-47e9-97cd-55e4f854f926",
      ResourceVersion: (string) (len=5) "17597",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852238789,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "0f7d5850-fcc6-4470-bcbb-086091300060",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  30 66 37 64 35 38 35 30  |uid\":\"0f7d5850|
              00000080  2d 66 63 63 36 2d 34 34  37 30 2d 62 63 62 62 2d  |-fcc6-4470-bcbb-|
              00000090  30 38 36 30 39 31 33 30  30 30 36 30 5c 22 7d 22  |086091300060\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238790,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 33  31 2e 32 37 5c 22 7d 22  |2.168.131.27\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8gm6c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8gm6c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-106",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238790,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238790,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238790,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852238789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.106",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.106"
        }
      },
      PodIP: (string) (len=14) "192.168.131.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.131.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852238789,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852238790,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://26cadbbba4b373f036ad9ae74f5f0382a5625346e5e6b8ffe12a6445e92c220f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 12:59:54.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1519" for this suite. @ 05/25/24 12:59:54.931
• [5.084 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 05/25/24 12:59:54.941
  May 25 12:59:54.941: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pods @ 05/25/24 12:59:54.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:59:54.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:59:54.965
  STEP: creating a Pod with a static label @ 05/25/24 12:59:54.972
  STEP: watching for Pod to be ready @ 05/25/24 12:59:54.98
  May 25 12:59:54.981: INFO: observed Pod pod-test in namespace pods-177 in phase Pending with labels: map[test-pod-static:true] & conditions []
  May 25 12:59:54.985: INFO: observed Pod pod-test in namespace pods-177 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:59:54 +0000 UTC  }]
  May 25 12:59:55.003: INFO: observed Pod pod-test in namespace pods-177 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:59:54 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:59:54 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:59:54 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:59:54 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:59:54 +0000 UTC  }]
  May 25 12:59:55.641: INFO: Found Pod pod-test in namespace pods-177 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:59:55 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:59:54 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:59:55 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:59:55 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-25 12:59:54 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/25/24 12:59:55.644
  STEP: getting the Pod and ensuring that it's patched @ 05/25/24 12:59:55.653
  STEP: replacing the Pod's status Ready condition to False @ 05/25/24 12:59:55.657
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/25/24 12:59:55.666
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/25/24 12:59:55.666
  STEP: watching for the Pod to be deleted @ 05/25/24 12:59:55.676
  May 25 12:59:55.677: INFO: observed event type MODIFIED
  May 25 12:59:56.544: INFO: observed event type MODIFIED
  May 25 12:59:57.650: INFO: observed event type MODIFIED
  May 25 12:59:57.828: INFO: observed event type MODIFIED
  May 25 12:59:58.655: INFO: observed event type MODIFIED
  May 25 12:59:58.672: INFO: observed event type MODIFIED
  May 25 12:59:58.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-177" for this suite. @ 05/25/24 12:59:58.683
• [3.748 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 05/25/24 12:59:58.69
  May 25 12:59:58.690: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 12:59:58.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 12:59:58.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 12:59:58.708
  STEP: Setting up server cert @ 05/25/24 12:59:58.731
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 12:59:58.961
  STEP: Deploying the webhook pod @ 05/25/24 12:59:58.97
  STEP: Wait for the deployment to be ready @ 05/25/24 12:59:58.979
  May 25 12:59:58.986: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/25/24 13:00:00.995
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 13:00:01.006
  May 25 13:00:02.007: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/25/24 13:00:02.013
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/25/24 13:00:02.025
  May 25 13:00:02.025: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:00:02.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7519" for this suite. @ 05/25/24 13:00:02.082
  STEP: Destroying namespace "webhook-markers-1845" for this suite. @ 05/25/24 13:00:02.089
• [3.406 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 05/25/24 13:00:02.095
  May 25 13:00:02.095: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename init-container @ 05/25/24 13:00:02.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:00:02.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:00:02.113
  STEP: creating the pod @ 05/25/24 13:00:02.114
  May 25 13:00:02.114: INFO: PodSpec: initContainers in spec.initContainers
  May 25 13:00:05.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5739" for this suite. @ 05/25/24 13:00:05.837
• [3.748 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 05/25/24 13:00:05.843
  May 25 13:00:05.843: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pods @ 05/25/24 13:00:05.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:00:05.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:00:05.862
  STEP: creating the pod @ 05/25/24 13:00:05.864
  STEP: setting up watch @ 05/25/24 13:00:05.864
  STEP: submitting the pod to kubernetes @ 05/25/24 13:00:05.969
  STEP: verifying the pod is in kubernetes @ 05/25/24 13:00:05.976
  STEP: verifying pod creation was observed @ 05/25/24 13:00:05.98
  STEP: deleting the pod gracefully @ 05/25/24 13:00:07.991
  STEP: verifying pod deletion was observed @ 05/25/24 13:00:08.001
  May 25 13:00:08.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-296" for this suite. @ 05/25/24 13:00:08.717
• [2.880 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 05/25/24 13:00:08.723
  May 25 13:00:08.723: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename job @ 05/25/24 13:00:08.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:00:08.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:00:08.74
  STEP: Creating a job @ 05/25/24 13:00:08.742
  STEP: Ensuring active pods == parallelism @ 05/25/24 13:00:08.748
  STEP: delete a job @ 05/25/24 13:00:10.753
  STEP: deleting Job.batch foo in namespace job-5354, will wait for the garbage collector to delete the pods @ 05/25/24 13:00:10.753
  May 25 13:00:10.814: INFO: Deleting Job.batch foo took: 6.866628ms
  May 25 13:00:10.915: INFO: Terminating Job.batch foo pods took: 101.084735ms
  STEP: Ensuring job was deleted @ 05/25/24 13:00:11.815
  May 25 13:00:11.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5354" for this suite. @ 05/25/24 13:00:11.822
• [3.105 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 05/25/24 13:00:11.828
  May 25 13:00:11.828: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename replication-controller @ 05/25/24 13:00:11.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:00:11.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:00:11.846
  STEP: creating a ReplicationController @ 05/25/24 13:00:11.851
  STEP: waiting for RC to be added @ 05/25/24 13:00:11.856
  STEP: waiting for available Replicas @ 05/25/24 13:00:11.856
  STEP: patching ReplicationController @ 05/25/24 13:00:12.703
  STEP: waiting for RC to be modified @ 05/25/24 13:00:12.708
  STEP: patching ReplicationController status @ 05/25/24 13:00:12.708
  STEP: waiting for RC to be modified @ 05/25/24 13:00:12.713
  STEP: waiting for available Replicas @ 05/25/24 13:00:12.714
  STEP: fetching ReplicationController status @ 05/25/24 13:00:12.718
  STEP: patching ReplicationController scale @ 05/25/24 13:00:12.72
  STEP: waiting for RC to be modified @ 05/25/24 13:00:12.725
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/25/24 13:00:12.725
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/25/24 13:00:13.485
  STEP: updating ReplicationController status @ 05/25/24 13:00:13.489
  STEP: waiting for RC to be modified @ 05/25/24 13:00:13.495
  STEP: listing all ReplicationControllers @ 05/25/24 13:00:13.495
  STEP: checking that ReplicationController has expected values @ 05/25/24 13:00:13.497
  STEP: deleting ReplicationControllers by collection @ 05/25/24 13:00:13.497
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/25/24 13:00:13.505
  E0525 13:00:13.550730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:00:13.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2847" for this suite. @ 05/25/24 13:00:13.553
• [1.733 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 05/25/24 13:00:13.562
  May 25 13:00:13.562: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-runtime @ 05/25/24 13:00:13.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:00:13.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:00:13.58
  STEP: create the container @ 05/25/24 13:00:13.582
  W0525 13:00:13.589811      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 05/25/24 13:00:13.59
  E0525 13:00:14.551208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:15.552284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:16.552667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/25/24 13:00:16.606
  STEP: the container should be terminated @ 05/25/24 13:00:16.61
  STEP: the termination message should be set @ 05/25/24 13:00:16.61
  May 25 13:00:16.610: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/25/24 13:00:16.61
  May 25 13:00:16.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1551" for this suite. @ 05/25/24 13:00:16.625
• [3.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 05/25/24 13:00:16.632
  May 25 13:00:16.632: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 13:00:16.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:00:16.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:00:16.65
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1471 @ 05/25/24 13:00:16.652
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/25/24 13:00:16.661
  STEP: creating service externalsvc in namespace services-1471 @ 05/25/24 13:00:16.661
  STEP: creating replication controller externalsvc in namespace services-1471 @ 05/25/24 13:00:16.671
  I0525 13:00:16.675520      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1471, replica count: 2
  E0525 13:00:17.553200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:18.554276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:19.554454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0525 13:00:19.725936      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 05/25/24 13:00:19.729
  May 25 13:00:19.743: INFO: Creating new exec pod
  E0525 13:00:20.554692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:21.554771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:00:21.758: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-1471 exec execpodmqvzr -- /bin/sh -x -c nslookup clusterip-service.services-1471.svc.cluster.local'
  May 25 13:00:21.874: INFO: stderr: "+ nslookup clusterip-service.services-1471.svc.cluster.local\n"
  May 25 13:00:21.874: INFO: stdout: "Server:\t\t10.152.183.207\nAddress:\t10.152.183.207#53\n\nclusterip-service.services-1471.svc.cluster.local\tcanonical name = externalsvc.services-1471.svc.cluster.local.\nName:\texternalsvc.services-1471.svc.cluster.local\nAddress: 10.152.183.246\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1471, will wait for the garbage collector to delete the pods @ 05/25/24 13:00:21.874
  May 25 13:00:21.935: INFO: Deleting ReplicationController externalsvc took: 6.968339ms
  May 25 13:00:22.035: INFO: Terminating ReplicationController externalsvc pods took: 100.48842ms
  E0525 13:00:22.555761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:23.556350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:24.556553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:00:24.855: INFO: Cleaning up the ClusterIP to ExternalName test service
  May 25 13:00:24.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1471" for this suite. @ 05/25/24 13:00:24.869
• [8.242 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 05/25/24 13:00:24.874
  May 25 13:00:24.874: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl @ 05/25/24 13:00:24.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:00:24.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:00:24.891
  STEP: validating cluster-info @ 05/25/24 13:00:24.892
  May 25 13:00:24.893: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8897 cluster-info'
  May 25 13:00:24.931: INFO: stderr: ""
  May 25 13:00:24.931: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  May 25 13:00:24.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8897" for this suite. @ 05/25/24 13:00:24.934
• [0.067 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 05/25/24 13:00:24.941
  May 25 13:00:24.941: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 13:00:24.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:00:24.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:00:24.96
  STEP: Setting up server cert @ 05/25/24 13:00:24.98
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 13:00:25.083
  STEP: Deploying the webhook pod @ 05/25/24 13:00:25.088
  STEP: Wait for the deployment to be ready @ 05/25/24 13:00:25.098
  May 25 13:00:25.105: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0525 13:00:25.559408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:26.559476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/25/24 13:00:27.115
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 13:00:27.123
  E0525 13:00:27.559758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:00:28.123: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/25/24 13:00:28.13
  STEP: create a pod @ 05/25/24 13:00:28.143
  E0525 13:00:28.559847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:29.559942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/25/24 13:00:30.16
  May 25 13:00:30.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=webhook-6231 attach --namespace=webhook-6231 to-be-attached-pod -i -c=container1'
  May 25 13:00:30.208: INFO: rc: 1
  May 25 13:00:30.251: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6231" for this suite. @ 05/25/24 13:00:30.257
  STEP: Destroying namespace "webhook-markers-6389" for this suite. @ 05/25/24 13:00:30.263
• [5.330 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 05/25/24 13:00:30.271
  May 25 13:00:30.271: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pods @ 05/25/24 13:00:30.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:00:30.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:00:30.288
  STEP: Create set of pods @ 05/25/24 13:00:30.289
  May 25 13:00:30.296: INFO: created test-pod-1
  May 25 13:00:30.302: INFO: created test-pod-2
  May 25 13:00:30.308: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/25/24 13:00:30.308
  E0525 13:00:30.560014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:31.560105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 05/25/24 13:00:32.344
  May 25 13:00:32.347: INFO: Pod quantity 3 is different from expected quantity 0
  E0525 13:00:32.560198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:00:33.348: INFO: Pod quantity 3 is different from expected quantity 0
  E0525 13:00:33.560325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:00:34.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8665" for this suite. @ 05/25/24 13:00:34.351
• [4.087 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 05/25/24 13:00:34.359
  May 25 13:00:34.359: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename security-context-test @ 05/25/24 13:00:34.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:00:34.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:00:34.395
  E0525 13:00:34.560869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:35.561819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:36.562611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:37.562875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:00:38.431: INFO: Got logs for pod "busybox-privileged-false-eb95f7d8-09f3-409a-942a-5b04ffaa3edf": "ip: RTNETLINK answers: Operation not permitted\n"
  May 25 13:00:38.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4658" for this suite. @ 05/25/24 13:00:38.435
• [4.083 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 05/25/24 13:00:38.442
  May 25 13:00:38.442: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 13:00:38.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:00:38.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:00:38.459
  STEP: Creating the pod @ 05/25/24 13:00:38.461
  E0525 13:00:38.563465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:39.563555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:40.564140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:00:40.998: INFO: Successfully updated pod "labelsupdated0a33265-57db-47e7-84b5-6f58de90fede"
  E0525 13:00:41.564785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:42.564913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:43.565228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:44.565358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:00:45.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8534" for this suite. @ 05/25/24 13:00:45.023
• [6.586 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 05/25/24 13:00:45.029
  May 25 13:00:45.029: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename sched-preemption @ 05/25/24 13:00:45.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:00:45.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:00:45.048
  May 25 13:00:45.062: INFO: Waiting up to 1m0s for all nodes to be ready
  E0525 13:00:45.566260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:46.566352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:47.566475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:48.566652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:49.566896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:50.567057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:51.567902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:52.567963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:53.568883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:54.569019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:55.569864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:56.569937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:57.570883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:58.570946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:00:59.571220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:00.571311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:01.571414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:02.572274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:03.573189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:04.573365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:05.574232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:06.574389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:07.574473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:08.575161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:09.575212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:10.575260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:11.575698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:12.576567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:13.576656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:14.576835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:15.577000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:16.577084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:17.578146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:18.578248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:19.579037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:20.579370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:21.580257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:22.580366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:23.581299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:24.581382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:25.582383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:26.582467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:27.583184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:28.583217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:29.584020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:30.584330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:31.584969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:32.585061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:33.585810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:34.586088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:35.586167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:36.586247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:37.587301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:38.587412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:39.587554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:40.588475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:41.588755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:42.588950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:43.590025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:44.590969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:01:45.065: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/25/24 13:01:45.069
  May 25 13:01:45.069: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/25/24 13:01:45.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:01:45.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:01:45.091
  May 25 13:01:45.104: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  May 25 13:01:45.107: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  May 25 13:01:45.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8378" for this suite. @ 05/25/24 13:01:45.163
  May 25 13:01:45.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2103" for this suite. @ 05/25/24 13:01:45.173
• [60.148 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 05/25/24 13:01:45.177
  May 25 13:01:45.177: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename gc @ 05/25/24 13:01:45.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:01:45.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:01:45.196
  STEP: create the rc @ 05/25/24 13:01:45.2
  W0525 13:01:45.203755      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0525 13:01:45.591347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:46.592450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:47.594860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:48.601237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:49.603352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:50.605290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/25/24 13:01:51.206
  STEP: wait for the rc to be deleted @ 05/25/24 13:01:51.215
  E0525 13:01:51.605862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:01:52.252: INFO: 80 pods remaining
  May 25 13:01:52.252: INFO: 80 pods has nil DeletionTimestamp
  May 25 13:01:52.252: INFO: 
  E0525 13:01:52.606801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:01:53.226: INFO: 71 pods remaining
  May 25 13:01:53.226: INFO: 71 pods has nil DeletionTimestamp
  May 25 13:01:53.226: INFO: 
  E0525 13:01:53.607328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:01:54.247: INFO: 60 pods remaining
  May 25 13:01:54.247: INFO: 60 pods has nil DeletionTimestamp
  May 25 13:01:54.247: INFO: 
  E0525 13:01:54.608280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:01:55.221: INFO: 40 pods remaining
  May 25 13:01:55.221: INFO: 40 pods has nil DeletionTimestamp
  May 25 13:01:55.221: INFO: 
  E0525 13:01:55.608415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:01:56.222: INFO: 31 pods remaining
  May 25 13:01:56.222: INFO: 31 pods has nil DeletionTimestamp
  May 25 13:01:56.222: INFO: 
  E0525 13:01:56.609126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:01:57.223: INFO: 20 pods remaining
  May 25 13:01:57.223: INFO: 20 pods has nil DeletionTimestamp
  May 25 13:01:57.223: INFO: 
  E0525 13:01:57.609240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/25/24 13:01:58.223
  W0525 13:01:58.228242      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May 25 13:01:58.233: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 25 13:01:58.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8059" for this suite. @ 05/25/24 13:01:58.244
• [13.073 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 05/25/24 13:01:58.25
  May 25 13:01:58.250: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/25/24 13:01:58.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:01:58.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:01:58.273
  STEP: create the container to handle the HTTPGet hook request. @ 05/25/24 13:01:58.281
  E0525 13:01:58.609860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:01:59.609948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/25/24 13:02:00.296
  E0525 13:02:00.610755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:01.611578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 05/25/24 13:02:02.316
  E0525 13:02:02.611620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:03.611713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 05/25/24 13:02:04.332
  May 25 13:02:04.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5188" for this suite. @ 05/25/24 13:02:04.352
• [6.109 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 05/25/24 13:02:04.359
  May 25 13:02:04.359: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename replicaset @ 05/25/24 13:02:04.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:02:04.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:02:04.386
  STEP: Create a ReplicaSet @ 05/25/24 13:02:04.399
  STEP: Verify that the required pods have come up @ 05/25/24 13:02:04.408
  May 25 13:02:04.413: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0525 13:02:04.612273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:05.613271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:06.613385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:07.613510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:08.613600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:02:09.416: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/25/24 13:02:09.416
  May 25 13:02:09.419: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/25/24 13:02:09.419
  STEP: DeleteCollection of the ReplicaSets @ 05/25/24 13:02:09.422
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/25/24 13:02:09.429
  May 25 13:02:09.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-669" for this suite. @ 05/25/24 13:02:09.433
• [5.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 05/25/24 13:02:09.442
  May 25 13:02:09.442: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename sched-preemption @ 05/25/24 13:02:09.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:02:09.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:02:09.467
  May 25 13:02:09.481: INFO: Waiting up to 1m0s for all nodes to be ready
  E0525 13:02:09.614487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:10.614713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:11.615679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:12.615806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:13.616227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:14.616474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:15.616696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:16.616788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:17.617803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:18.617907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:19.618805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:20.619370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:21.619464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:22.619538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:23.619886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:24.619962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:25.620874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:26.621552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:27.622550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:28.622692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:29.623169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:30.623328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:31.624034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:32.624124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:33.624248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:34.624328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:35.625055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:36.625156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:37.625190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:38.625352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:39.626131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:40.626635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:41.627597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:42.628254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:43.628406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:44.628510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:45.628674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:46.629571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:47.629702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:48.629895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:49.630004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:50.630377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:51.631327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:52.632256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:53.633230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:54.633323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:55.633849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:56.633979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:57.634771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:58.634855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:02:59.635198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:00.635503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:01.635993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:02.636080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:03.636164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:04.636948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:05.637266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:06.637509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:07.638678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:08.638930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:03:09.485: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/25/24 13:03:09.488
  May 25 13:03:09.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/25/24 13:03:09.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:03:09.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:03:09.508
  STEP: Finding an available node @ 05/25/24 13:03:09.51
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/25/24 13:03:09.51
  E0525 13:03:09.639045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:10.639293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/25/24 13:03:11.527
  May 25 13:03:11.538: INFO: found a healthy node: ip-172-31-45-106
  E0525 13:03:11.640213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:12.640416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:13.640947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:14.641094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:15.641358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:16.641542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:03:17.595: INFO: pods created so far: [1 1 1]
  May 25 13:03:17.595: INFO: length of pods created so far: 3
  E0525 13:03:17.641895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:18.642667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:03:19.603: INFO: pods created so far: [2 2 1]
  E0525 13:03:19.643229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:20.643346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:21.643488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:22.644280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:23.644441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:24.644531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:25.644946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:26.645376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:03:26.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2355" for this suite. @ 05/25/24 13:03:26.661
  May 25 13:03:26.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5511" for this suite. @ 05/25/24 13:03:26.672
• [77.236 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 05/25/24 13:03:26.677
  May 25 13:03:26.677: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pods @ 05/25/24 13:03:26.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:03:26.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:03:26.697
  STEP: Create a pod @ 05/25/24 13:03:26.699
  E0525 13:03:27.645984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:28.646078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 05/25/24 13:03:28.716
  May 25 13:03:28.725: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  May 25 13:03:28.725: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1295" for this suite. @ 05/25/24 13:03:28.728
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 05/25/24 13:03:28.734
  May 25 13:03:28.734: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename downward-api @ 05/25/24 13:03:28.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:03:28.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:03:28.753
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 13:03:28.754
  E0525 13:03:29.646179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:30.646464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:31.646586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:32.646803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:03:32.773
  May 25 13:03:32.777: INFO: Trying to get logs from node ip-172-31-15-138 pod downwardapi-volume-037fccfd-a8b1-411f-a3d6-75fc2404faa9 container client-container: <nil>
  STEP: delete the pod @ 05/25/24 13:03:32.791
  May 25 13:03:32.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2379" for this suite. @ 05/25/24 13:03:32.806
• [4.079 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 05/25/24 13:03:32.813
  May 25 13:03:32.813: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/25/24 13:03:32.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:03:32.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:03:32.832
  STEP: Creating 50 configmaps @ 05/25/24 13:03:32.834
  STEP: Creating RC which spawns configmap-volume pods @ 05/25/24 13:03:33.125
  May 25 13:03:33.185: INFO: Pod name wrapped-volume-race-df595b11-af93-4d18-bafd-38c521bdb788: Found 3 pods out of 5
  E0525 13:03:33.647657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:34.648540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:35.648928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:36.649189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:37.649281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:03:38.192: INFO: Pod name wrapped-volume-race-df595b11-af93-4d18-bafd-38c521bdb788: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/25/24 13:03:38.192
  STEP: Creating RC which spawns configmap-volume pods @ 05/25/24 13:03:38.208
  May 25 13:03:38.220: INFO: Pod name wrapped-volume-race-9cbde067-8152-4bb6-8a90-795c67c847f3: Found 0 pods out of 5
  E0525 13:03:38.649776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:39.650037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:40.650441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:41.650756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:42.650874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:03:43.225: INFO: Pod name wrapped-volume-race-9cbde067-8152-4bb6-8a90-795c67c847f3: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/25/24 13:03:43.225
  STEP: Creating RC which spawns configmap-volume pods @ 05/25/24 13:03:43.249
  May 25 13:03:43.274: INFO: Pod name wrapped-volume-race-38774317-a407-4338-be5f-3b1559e95ea0: Found 0 pods out of 5
  E0525 13:03:43.651082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:44.651236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:45.652084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:46.652184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:47.652969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:03:48.280: INFO: Pod name wrapped-volume-race-38774317-a407-4338-be5f-3b1559e95ea0: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/25/24 13:03:48.28
  STEP: deleting ReplicationController wrapped-volume-race-38774317-a407-4338-be5f-3b1559e95ea0 in namespace emptydir-wrapper-9122, will wait for the garbage collector to delete the pods @ 05/25/24 13:03:48.296
  May 25 13:03:48.356: INFO: Deleting ReplicationController wrapped-volume-race-38774317-a407-4338-be5f-3b1559e95ea0 took: 7.663508ms
  May 25 13:03:48.456: INFO: Terminating ReplicationController wrapped-volume-race-38774317-a407-4338-be5f-3b1559e95ea0 pods took: 100.112076ms
  E0525 13:03:48.653861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:49.654792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-9cbde067-8152-4bb6-8a90-795c67c847f3 in namespace emptydir-wrapper-9122, will wait for the garbage collector to delete the pods @ 05/25/24 13:03:50.257
  May 25 13:03:50.319: INFO: Deleting ReplicationController wrapped-volume-race-9cbde067-8152-4bb6-8a90-795c67c847f3 took: 8.338795ms
  May 25 13:03:50.420: INFO: Terminating ReplicationController wrapped-volume-race-9cbde067-8152-4bb6-8a90-795c67c847f3 pods took: 101.016776ms
  E0525 13:03:50.655192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:51.655288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-df595b11-af93-4d18-bafd-38c521bdb788 in namespace emptydir-wrapper-9122, will wait for the garbage collector to delete the pods @ 05/25/24 13:03:52.021
  May 25 13:03:52.082: INFO: Deleting ReplicationController wrapped-volume-race-df595b11-af93-4d18-bafd-38c521bdb788 took: 7.291389ms
  May 25 13:03:52.182: INFO: Terminating ReplicationController wrapped-volume-race-df595b11-af93-4d18-bafd-38c521bdb788 pods took: 100.097094ms
  E0525 13:03:52.659235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:53.659416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 05/25/24 13:03:53.882
  May 25 13:03:54.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9122" for this suite. @ 05/25/24 13:03:54.149
• [21.342 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 05/25/24 13:03:54.156
  May 25 13:03:54.156: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename endpointslice @ 05/25/24 13:03:54.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:03:54.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:03:54.174
  E0525 13:03:54.660220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:55.660394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:03:56.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9301" for this suite. @ 05/25/24 13:03:56.216
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 05/25/24 13:03:56.225
  May 25 13:03:56.225: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl @ 05/25/24 13:03:56.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:03:56.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:03:56.245
  May 25 13:03:56.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-2029 create -f -'
  May 25 13:03:56.328: INFO: stderr: ""
  May 25 13:03:56.328: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  May 25 13:03:56.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-2029 create -f -'
  May 25 13:03:56.405: INFO: stderr: ""
  May 25 13:03:56.405: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/25/24 13:03:56.405
  E0525 13:03:56.661020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:03:57.410: INFO: Selector matched 1 pods for map[app:agnhost]
  May 25 13:03:57.410: INFO: Found 1 / 1
  May 25 13:03:57.410: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  May 25 13:03:57.413: INFO: Selector matched 1 pods for map[app:agnhost]
  May 25 13:03:57.413: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 25 13:03:57.413: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-2029 describe pod agnhost-primary-ckbjx'
  May 25 13:03:57.464: INFO: stderr: ""
  May 25 13:03:57.464: INFO: stdout: "Name:             agnhost-primary-ckbjx\nNamespace:        kubectl-2029\nPriority:         0\nService Account:  default\nNode:             ip-172-31-45-106/172.31.45.106\nStart Time:       Sat, 25 May 2024 13:03:56 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.131.19\nIPs:\n  IP:           192.168.131.19\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://7f8dfab3973f242f36a8719354401ce24ae664082a9899e50b13ea8647e21e22\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 25 May 2024 13:03:56 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-qpsk8 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-qpsk8:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-2029/agnhost-primary-ckbjx to ip-172-31-45-106\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  May 25 13:03:57.464: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-2029 describe rc agnhost-primary'
  May 25 13:03:57.519: INFO: stderr: ""
  May 25 13:03:57.519: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2029\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-ckbjx\n"
  May 25 13:03:57.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-2029 describe service agnhost-primary'
  May 25 13:03:57.569: INFO: stderr: ""
  May 25 13:03:57.569: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-2029\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.51\nIPs:               10.152.183.51\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.131.19:6379\nSession Affinity:  None\nEvents:            <none>\n"
  May 25 13:03:57.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-2029 describe node ip-172-31-15-138'
  May 25 13:03:57.655: INFO: stderr: ""
  May 25 13:03:57.655: INFO: stdout: "Name:               ip-172-31-15-138\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-15-138\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 25 May 2024 12:09:56 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-15-138\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 25 May 2024 13:03:51 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 25 May 2024 12:11:57 +0000   Sat, 25 May 2024 12:11:57 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 25 May 2024 12:59:36 +0000   Sat, 25 May 2024 12:09:56 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 25 May 2024 12:59:36 +0000   Sat, 25 May 2024 12:09:56 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 25 May 2024 12:59:36 +0000   Sat, 25 May 2024 12:09:56 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 25 May 2024 12:59:36 +0000   Sat, 25 May 2024 12:10:29 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.15.138\n  Hostname:    ip-172-31-15-138\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7958148Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7855748Ki\n  pods:               110\nSystem Info:\n  Machine ID:                      ec29a4532a7a2e54b464c537e594060a\n  System UUID:                     ec29a453-2a7a-2e54-b464-c537e594060a\n  Boot ID:                         94a3d037-93e3-4f60-bc28-465784dac513\n  Kernel Version:                  6.5.0-1020-aws\n  OS Image:                        Ubuntu 22.04.4 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.29.5\n  Kube-Proxy Version:              v1.29.5\nNon-terminated Pods:               (4 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-fczx7           0 (0%)        0 (0%)      0 (0%)           0 (0%)         53m\n  kube-system                      calico-node-zcfdr                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         52m\n  sonobuoy                         sonobuoy-e2e-job-f71b16864db44f61                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         49m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-61d532afa6f144b3-tg5ts    0 (0%)        0 (0%)      0 (0%)           0 (0%)         49m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 54m                kube-proxy       \n  Normal   Starting                 53m                kube-proxy       \n  Normal   RegisteredNode           53m                node-controller  Node ip-172-31-15-138 event: Registered Node ip-172-31-15-138 in Controller\n  Warning  InvalidDiskCapacity      53m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  53m (x7 over 53m)  kubelet          Node ip-172-31-15-138 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    53m (x7 over 53m)  kubelet          Node ip-172-31-15-138 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     53m (x7 over 53m)  kubelet          Node ip-172-31-15-138 status is now: NodeHasSufficientPID\n  Normal   NodeReady                53m                kubelet          Node ip-172-31-15-138 status is now: NodeReady\n"
  May 25 13:03:57.656: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-2029 describe namespace kubectl-2029'
  E0525 13:03:57.661311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:03:57.711: INFO: stderr: ""
  May 25 13:03:57.711: INFO: stdout: "Name:         kubectl-2029\nLabels:       e2e-framework=kubectl\n              e2e-run=9c22dd86-36af-482a-8b2f-e7d59476956e\n              kubernetes.io/metadata.name=kubectl-2029\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  May 25 13:03:57.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2029" for this suite. @ 05/25/24 13:03:57.715
• [1.494 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 05/25/24 13:03:57.72
  May 25 13:03:57.720: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename sysctl @ 05/25/24 13:03:57.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:03:57.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:03:57.738
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/25/24 13:03:57.739
  STEP: Watching for error events or started pod @ 05/25/24 13:03:57.745
  E0525 13:03:58.661433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:03:59.661510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 05/25/24 13:03:59.75
  E0525 13:04:00.662432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:01.662520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 05/25/24 13:04:01.76
  STEP: Getting logs from the pod @ 05/25/24 13:04:01.76
  STEP: Checking that the sysctl is actually updated @ 05/25/24 13:04:01.772
  May 25 13:04:01.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7619" for this suite. @ 05/25/24 13:04:01.775
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:447
  STEP: Creating a kubernetes client @ 05/25/24 13:04:01.781
  May 25 13:04:01.781: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename sched-pred @ 05/25/24 13:04:01.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:04:01.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:04:01.801
  May 25 13:04:01.802: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 25 13:04:01.810: INFO: Waiting for terminating namespaces to be deleted...
  May 25 13:04:01.812: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-15-138 before test
  May 25 13:04:01.816: INFO: nginx-ingress-controller-kubernetes-worker-fczx7 from ingress-nginx-kubernetes-worker started at 2024-05-25 12:10:29 +0000 UTC (1 container statuses recorded)
  May 25 13:04:01.816: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 25 13:04:01.816: INFO: calico-node-zcfdr from kube-system started at 2024-05-25 12:11:54 +0000 UTC (1 container statuses recorded)
  May 25 13:04:01.816: INFO: 	Container calico-node ready: true, restart count 0
  May 25 13:04:01.816: INFO: sonobuoy-e2e-job-f71b16864db44f61 from sonobuoy started at 2024-05-25 12:14:50 +0000 UTC (2 container statuses recorded)
  May 25 13:04:01.816: INFO: 	Container e2e ready: true, restart count 0
  May 25 13:04:01.816: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 25 13:04:01.816: INFO: sonobuoy-systemd-logs-daemon-set-61d532afa6f144b3-tg5ts from sonobuoy started at 2024-05-25 12:14:50 +0000 UTC (2 container statuses recorded)
  May 25 13:04:01.816: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 25 13:04:01.816: INFO: 	Container systemd-logs ready: true, restart count 0
  May 25 13:04:01.816: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-23-222 before test
  May 25 13:04:01.820: INFO: nginx-ingress-controller-kubernetes-worker-zvbpv from ingress-nginx-kubernetes-worker started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 13:04:01.820: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 25 13:04:01.820: INFO: calico-node-zpkdg from kube-system started at 2024-05-25 12:12:04 +0000 UTC (1 container statuses recorded)
  May 25 13:04:01.820: INFO: 	Container calico-node ready: true, restart count 0
  May 25 13:04:01.820: INFO: coredns-bddfd76d7-x6hfl from kube-system started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 13:04:01.820: INFO: 	Container coredns ready: true, restart count 0
  May 25 13:04:01.820: INFO: kube-state-metrics-6f48cdd76-5mtk5 from kube-system started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 13:04:01.820: INFO: 	Container kube-state-metrics ready: true, restart count 0
  May 25 13:04:01.820: INFO: metrics-server-v0.6.3-69d7fbfdf8-82qd4 from kube-system started at 2024-05-25 12:07:22 +0000 UTC (2 container statuses recorded)
  May 25 13:04:01.820: INFO: 	Container metrics-server ready: true, restart count 0
  May 25 13:04:01.820: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  May 25 13:04:01.820: INFO: dashboard-metrics-scraper-5dd7cb5fc-gxms9 from kubernetes-dashboard started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 13:04:01.820: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  May 25 13:04:01.820: INFO: kubernetes-dashboard-7b899cb9d9-fl78g from kubernetes-dashboard started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 13:04:01.820: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  May 25 13:04:01.820: INFO: sonobuoy-systemd-logs-daemon-set-61d532afa6f144b3-8jjrn from sonobuoy started at 2024-05-25 12:14:50 +0000 UTC (2 container statuses recorded)
  May 25 13:04:01.820: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 25 13:04:01.820: INFO: 	Container systemd-logs ready: true, restart count 0
  May 25 13:04:01.820: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-45-106 before test
  May 25 13:04:01.826: INFO: nginx-ingress-controller-kubernetes-worker-tgvnv from ingress-nginx-kubernetes-worker started at 2024-05-25 12:09:05 +0000 UTC (1 container statuses recorded)
  May 25 13:04:01.826: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 25 13:04:01.826: INFO: calico-node-b4lmv from kube-system started at 2024-05-25 12:11:54 +0000 UTC (1 container statuses recorded)
  May 25 13:04:01.826: INFO: 	Container calico-node ready: true, restart count 0
  May 25 13:04:01.826: INFO: agnhost-primary-ckbjx from kubectl-2029 started at 2024-05-25 13:03:56 +0000 UTC (1 container statuses recorded)
  May 25 13:04:01.826: INFO: 	Container agnhost-primary ready: true, restart count 0
  May 25 13:04:01.826: INFO: sonobuoy from sonobuoy started at 2024-05-25 12:14:48 +0000 UTC (1 container statuses recorded)
  May 25 13:04:01.826: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May 25 13:04:01.826: INFO: sonobuoy-systemd-logs-daemon-set-61d532afa6f144b3-fz7f5 from sonobuoy started at 2024-05-25 12:14:50 +0000 UTC (2 container statuses recorded)
  May 25 13:04:01.826: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 25 13:04:01.826: INFO: 	Container systemd-logs ready: true, restart count 0
  May 25 13:04:01.826: INFO: sysctl-ac1fc210-6a33-468d-bf1e-f09596dff5d0 from sysctl-7619 started at 2024-05-25 13:03:57 +0000 UTC (1 container statuses recorded)
  May 25 13:04:01.826: INFO: 	Container test-container ready: false, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/25/24 13:04:01.826
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17d2bd0617658772], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 05/25/24 13:04:01.848
  E0525 13:04:02.663585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:04:02.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3351" for this suite. @ 05/25/24 13:04:02.849
• [1.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 05/25/24 13:04:02.857
  May 25 13:04:02.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename security-context @ 05/25/24 13:04:02.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:04:02.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:04:02.877
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/25/24 13:04:02.878
  E0525 13:04:03.664271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:04.664364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:05.664991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:06.665158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:04:06.899
  May 25 13:04:06.902: INFO: Trying to get logs from node ip-172-31-45-106 pod security-context-ccd5ccb2-3035-4582-b6dc-0ec7a486a4b3 container test-container: <nil>
  STEP: delete the pod @ 05/25/24 13:04:06.908
  May 25 13:04:06.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2684" for this suite. @ 05/25/24 13:04:06.926
• [4.075 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 05/25/24 13:04:06.931
  May 25 13:04:06.931: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename resourcequota @ 05/25/24 13:04:06.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:04:06.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:04:06.947
  STEP: Counting existing ResourceQuota @ 05/25/24 13:04:06.949
  E0525 13:04:07.665836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:08.665920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:09.666681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:10.667442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:11.668281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/25/24 13:04:11.953
  STEP: Ensuring resource quota status is calculated @ 05/25/24 13:04:11.957
  E0525 13:04:12.668413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:13.668615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 05/25/24 13:04:13.962
  STEP: Creating a NodePort Service @ 05/25/24 13:04:13.982
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/25/24 13:04:14.002
  STEP: Ensuring resource quota status captures service creation @ 05/25/24 13:04:14.019
  E0525 13:04:14.669422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:15.669516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 05/25/24 13:04:16.024
  STEP: Ensuring resource quota status released usage @ 05/25/24 13:04:16.061
  E0525 13:04:16.669611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:17.669717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:04:18.068: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5898" for this suite. @ 05/25/24 13:04:18.07
• [11.144 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 05/25/24 13:04:18.076
  May 25 13:04:18.076: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir @ 05/25/24 13:04:18.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:04:18.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:04:18.094
  STEP: Creating Pod @ 05/25/24 13:04:18.096
  E0525 13:04:18.670478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:19.670580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 05/25/24 13:04:20.11
  May 25 13:04:20.110: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-2641 PodName:pod-sharedvolume-6cc44a6c-17bd-4460-8e5e-05165e5ebfa8 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:04:20.110: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:04:20.111: INFO: ExecWithOptions: Clientset creation
  May 25 13:04:20.111: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-2641/pods/pod-sharedvolume-6cc44a6c-17bd-4460-8e5e-05165e5ebfa8/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  May 25 13:04:20.151: INFO: Exec stderr: ""
  May 25 13:04:20.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2641" for this suite. @ 05/25/24 13:04:20.156
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 05/25/24 13:04:20.162
  May 25 13:04:20.162: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/25/24 13:04:20.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:04:20.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:04:20.18
  STEP: Creating two CSIDrivers @ 05/25/24 13:04:20.181
  STEP: Getting "inline-driver-32ec265f-f146-4510-9457-3b11cc936148" & "inline-driver-ba384f85-7319-4703-ac28-7ceb0676467c" @ 05/25/24 13:04:20.197
  STEP: Patching the CSIDriver "inline-driver-ba384f85-7319-4703-ac28-7ceb0676467c" @ 05/25/24 13:04:20.201
  STEP: Updating the CSIDriver "inline-driver-ba384f85-7319-4703-ac28-7ceb0676467c" @ 05/25/24 13:04:20.206
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9875" @ 05/25/24 13:04:20.213
  STEP: Deleting CSIDriver "inline-driver-32ec265f-f146-4510-9457-3b11cc936148" @ 05/25/24 13:04:20.216
  STEP: Confirm deletion of CSIDriver "inline-driver-32ec265f-f146-4510-9457-3b11cc936148" @ 05/25/24 13:04:20.22
  STEP: Deleting CSIDriver "inline-driver-ba384f85-7319-4703-ac28-7ceb0676467c" via DeleteCollection @ 05/25/24 13:04:20.223
  STEP: Confirm deletion of CSIDriver "inline-driver-ba384f85-7319-4703-ac28-7ceb0676467c" @ 05/25/24 13:04:20.23
  May 25 13:04:20.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9875" for this suite. @ 05/25/24 13:04:20.235
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 05/25/24 13:04:20.241
  May 25 13:04:20.241: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 13:04:20.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:04:20.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:04:20.257
  STEP: creating service in namespace services-5079 @ 05/25/24 13:04:20.258
  STEP: creating service affinity-clusterip-transition in namespace services-5079 @ 05/25/24 13:04:20.258
  STEP: creating replication controller affinity-clusterip-transition in namespace services-5079 @ 05/25/24 13:04:20.268
  I0525 13:04:20.276081      21 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-5079, replica count: 3
  E0525 13:04:20.671028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:21.671692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:22.671781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0525 13:04:23.326286      21 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 25 13:04:23.331: INFO: Creating new exec pod
  E0525 13:04:23.672143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:24.672358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:25.673083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:04:26.346: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-5079 exec execpod-affinityxc7h7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  May 25 13:04:26.443: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  May 25 13:04:26.443: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 13:04:26.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-5079 exec execpod-affinityxc7h7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.124 80'
  May 25 13:04:26.538: INFO: stderr: "+ nc -v -t -w 2 10.152.183.124 80\n+ echo hostName\nConnection to 10.152.183.124 80 port [tcp/http] succeeded!\n"
  May 25 13:04:26.538: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 13:04:26.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-5079 exec execpod-affinityxc7h7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.124:80/ ; done'
  E0525 13:04:26.673711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:04:26.706: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n"
  May 25 13:04:26.706: INFO: stdout: "\naffinity-clusterip-transition-gw6tj\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-vwc9l\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-gw6tj\naffinity-clusterip-transition-gw6tj\naffinity-clusterip-transition-vwc9l\naffinity-clusterip-transition-vwc9l\naffinity-clusterip-transition-vwc9l\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-vwc9l\naffinity-clusterip-transition-vwc9l\naffinity-clusterip-transition-cr98s"
  May 25 13:04:26.706: INFO: Received response from host: affinity-clusterip-transition-gw6tj
  May 25 13:04:26.706: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.706: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.706: INFO: Received response from host: affinity-clusterip-transition-vwc9l
  May 25 13:04:26.706: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.706: INFO: Received response from host: affinity-clusterip-transition-gw6tj
  May 25 13:04:26.706: INFO: Received response from host: affinity-clusterip-transition-gw6tj
  May 25 13:04:26.706: INFO: Received response from host: affinity-clusterip-transition-vwc9l
  May 25 13:04:26.706: INFO: Received response from host: affinity-clusterip-transition-vwc9l
  May 25 13:04:26.706: INFO: Received response from host: affinity-clusterip-transition-vwc9l
  May 25 13:04:26.706: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.706: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.706: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.706: INFO: Received response from host: affinity-clusterip-transition-vwc9l
  May 25 13:04:26.706: INFO: Received response from host: affinity-clusterip-transition-vwc9l
  May 25 13:04:26.706: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.714: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-5079 exec execpod-affinityxc7h7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.124:80/ ; done'
  May 25 13:04:26.837: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n"
  May 25 13:04:26.837: INFO: stdout: "\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s\naffinity-clusterip-transition-cr98s"
  May 25 13:04:26.837: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.837: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.837: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.837: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.837: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.837: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.837: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.837: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.837: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.837: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.837: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.837: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.837: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.837: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.837: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.837: INFO: Received response from host: affinity-clusterip-transition-cr98s
  May 25 13:04:26.838: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5079, will wait for the garbage collector to delete the pods @ 05/25/24 13:04:26.853
  May 25 13:04:26.915: INFO: Deleting ReplicationController affinity-clusterip-transition took: 7.047779ms
  May 25 13:04:27.016: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.152731ms
  E0525 13:04:27.673375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:28.673670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:29.673873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:04:30.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5079" for this suite. @ 05/25/24 13:04:30.237
• [10.001 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 05/25/24 13:04:30.242
  May 25 13:04:30.242: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename prestop @ 05/25/24 13:04:30.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:04:30.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:04:30.259
  STEP: Creating server pod server in namespace prestop-1088 @ 05/25/24 13:04:30.26
  STEP: Waiting for pods to come up. @ 05/25/24 13:04:30.266
  E0525 13:04:30.674625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:31.674718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-1088 @ 05/25/24 13:04:32.277
  E0525 13:04:32.675407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:33.675461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 05/25/24 13:04:34.289
  E0525 13:04:34.675537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:35.676063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:36.676165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:37.676262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:38.676413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:04:39.302: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 05/25/24 13:04:39.302
  May 25 13:04:39.313: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-1088" for this suite. @ 05/25/24 13:04:39.316
• [9.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 05/25/24 13:04:39.322
  May 25 13:04:39.322: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename replicaset @ 05/25/24 13:04:39.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:04:39.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:04:39.391
  May 25 13:04:39.393: INFO: Creating ReplicaSet my-hostname-basic-1d52b8b0-9967-4eeb-af07-f6e415c9cff1
  May 25 13:04:39.402: INFO: Pod name my-hostname-basic-1d52b8b0-9967-4eeb-af07-f6e415c9cff1: Found 0 pods out of 1
  E0525 13:04:39.677617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:40.678553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:41.678632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:42.678689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:43.678889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:04:44.406: INFO: Pod name my-hostname-basic-1d52b8b0-9967-4eeb-af07-f6e415c9cff1: Found 1 pods out of 1
  May 25 13:04:44.406: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-1d52b8b0-9967-4eeb-af07-f6e415c9cff1" is running
  May 25 13:04:44.410: INFO: Pod "my-hostname-basic-1d52b8b0-9967-4eeb-af07-f6e415c9cff1-hndrn" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-25 13:04:40 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-25 13:04:39 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-25 13:04:40 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-25 13:04:40 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-25 13:04:39 +0000 UTC Reason: Message:}])
  May 25 13:04:44.411: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/25/24 13:04:44.411
  May 25 13:04:44.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1887" for this suite. @ 05/25/24 13:04:44.427
• [5.114 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 05/25/24 13:04:44.436
  May 25 13:04:44.436: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 13:04:44.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:04:44.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:04:44.462
  STEP: Creating the pod @ 05/25/24 13:04:44.464
  E0525 13:04:44.679413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:45.679878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:46.679975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:04:46.999: INFO: Successfully updated pod "annotationupdateb4326c05-ef22-44b3-831f-6e4ee680ab87"
  E0525 13:04:47.680090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:48.680289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:49.680367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:50.681070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:04:51.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5407" for this suite. @ 05/25/24 13:04:51.035
• [6.606 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 05/25/24 13:04:51.042
  May 25 13:04:51.042: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename dns @ 05/25/24 13:04:51.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:04:51.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:04:51.059
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/25/24 13:04:51.06
  May 25 13:04:51.066: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-103  3a724e86-2fbb-4e0c-9f79-7d12b83a852d 22967 0 2024-05-25 13:04:51 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-05-25 13:04:51 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mp42m,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mp42m,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0525 13:04:51.681551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:52.681637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/25/24 13:04:53.074
  May 25 13:04:53.074: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-103 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:04:53.074: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:04:53.075: INFO: ExecWithOptions: Clientset creation
  May 25 13:04:53.075: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-103/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 05/25/24 13:04:53.132
  May 25 13:04:53.132: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-103 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:04:53.132: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:04:53.133: INFO: ExecWithOptions: Clientset creation
  May 25 13:04:53.133: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-103/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 25 13:04:53.192: INFO: Deleting pod test-dns-nameservers...
  May 25 13:04:53.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-103" for this suite. @ 05/25/24 13:04:53.209
• [2.173 seconds]
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 05/25/24 13:04:53.215
  May 25 13:04:53.216: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename downward-api @ 05/25/24 13:04:53.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:04:53.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:04:53.237
  STEP: Creating a pod to test downward api env vars @ 05/25/24 13:04:53.238
  E0525 13:04:53.681744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:04:54.681811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:04:55.253
  May 25 13:04:55.256: INFO: Trying to get logs from node ip-172-31-15-138 pod downward-api-3e8fc476-a88a-40a7-8932-090194828dd3 container dapi-container: <nil>
  STEP: delete the pod @ 05/25/24 13:04:55.261
  May 25 13:04:55.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2162" for this suite. @ 05/25/24 13:04:55.278
• [2.068 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 05/25/24 13:04:55.284
  May 25 13:04:55.284: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename daemonsets @ 05/25/24 13:04:55.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:04:55.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:04:55.302
  May 25 13:04:55.316: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/25/24 13:04:55.327
  May 25 13:04:55.330: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:04:55.330: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:04:55.332: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 13:04:55.332: INFO: Node ip-172-31-15-138 is running 0 daemon pod, expected 1
  E0525 13:04:55.682079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:04:56.330: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:04:56.330: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:04:56.334: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May 25 13:04:56.334: INFO: Node ip-172-31-15-138 is running 0 daemon pod, expected 1
  E0525 13:04:56.682789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:04:57.330: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:04:57.330: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:04:57.333: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 25 13:04:57.333: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/25/24 13:04:57.345
  STEP: Check that daemon pods images are updated. @ 05/25/24 13:04:57.352
  May 25 13:04:57.356: INFO: Wrong image for pod: daemon-set-9t2kz. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 25 13:04:57.356: INFO: Wrong image for pod: daemon-set-kwgd8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 25 13:04:57.356: INFO: Wrong image for pod: daemon-set-zgp5p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 25 13:04:57.359: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:04:57.359: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0525 13:04:57.683164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:04:58.356: INFO: Wrong image for pod: daemon-set-9t2kz. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 25 13:04:58.356: INFO: Wrong image for pod: daemon-set-zgp5p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 25 13:04:58.359: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:04:58.359: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0525 13:04:58.684133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:04:59.355: INFO: Wrong image for pod: daemon-set-9t2kz. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 25 13:04:59.355: INFO: Pod daemon-set-ftm2b is not available
  May 25 13:04:59.355: INFO: Wrong image for pod: daemon-set-zgp5p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 25 13:04:59.359: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:04:59.359: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0525 13:04:59.684218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:05:00.356: INFO: Pod daemon-set-wt55x is not available
  May 25 13:05:00.356: INFO: Wrong image for pod: daemon-set-zgp5p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May 25 13:05:00.360: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:05:00.360: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0525 13:05:00.684711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:05:01.355: INFO: Pod daemon-set-ct9gl is not available
  May 25 13:05:01.359: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:05:01.359: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/25/24 13:05:01.359
  May 25 13:05:01.363: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:05:01.363: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:05:01.366: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May 25 13:05:01.367: INFO: Node ip-172-31-45-106 is running 0 daemon pod, expected 1
  E0525 13:05:01.684897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:05:02.363: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:05:02.364: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:05:02.367: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 25 13:05:02.367: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/25/24 13:05:02.381
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-428, will wait for the garbage collector to delete the pods @ 05/25/24 13:05:02.381
  May 25 13:05:02.441: INFO: Deleting DaemonSet.extensions daemon-set took: 6.714327ms
  May 25 13:05:02.542: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.875339ms
  E0525 13:05:02.685553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:03.686463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:05:04.347: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 13:05:04.347: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 25 13:05:04.349: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23234"},"items":null}

  May 25 13:05:04.353: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23234"},"items":null}

  May 25 13:05:04.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-428" for this suite. @ 05/25/24 13:05:04.373
• [9.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 05/25/24 13:05:04.378
  May 25 13:05:04.378: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename resourcequota @ 05/25/24 13:05:04.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:05:04.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:05:04.409
  STEP: Creating a ResourceQuota with terminating scope @ 05/25/24 13:05:04.411
  STEP: Ensuring ResourceQuota status is calculated @ 05/25/24 13:05:04.416
  E0525 13:05:04.687136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:05.687421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 05/25/24 13:05:06.421
  STEP: Ensuring ResourceQuota status is calculated @ 05/25/24 13:05:06.425
  E0525 13:05:06.687897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:07.688246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 05/25/24 13:05:08.429
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/25/24 13:05:08.44
  E0525 13:05:08.688842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:09.689758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/25/24 13:05:10.445
  E0525 13:05:10.690521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:11.690621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/25/24 13:05:12.449
  STEP: Ensuring resource quota status released the pod usage @ 05/25/24 13:05:12.465
  E0525 13:05:12.691354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:13.691534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 05/25/24 13:05:14.468
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/25/24 13:05:14.479
  E0525 13:05:14.692197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:15.692438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/25/24 13:05:16.483
  E0525 13:05:16.692769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:17.693034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/25/24 13:05:18.486
  STEP: Ensuring resource quota status released the pod usage @ 05/25/24 13:05:18.501
  E0525 13:05:18.693139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:19.693469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:05:20.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2291" for this suite. @ 05/25/24 13:05:20.51
• [16.139 seconds]
------------------------------
SSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 05/25/24 13:05:20.517
  May 25 13:05:20.517: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename conformance-tests @ 05/25/24 13:05:20.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:05:20.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:05:20.537
  STEP: Getting node addresses @ 05/25/24 13:05:20.539
  May 25 13:05:20.539: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  May 25 13:05:20.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-589" for this suite. @ 05/25/24 13:05:20.546
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 05/25/24 13:05:20.552
  May 25 13:05:20.552: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename events @ 05/25/24 13:05:20.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:05:20.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:05:20.568
  STEP: Create set of events @ 05/25/24 13:05:20.569
  May 25 13:05:20.576: INFO: created test-event-1
  May 25 13:05:20.582: INFO: created test-event-2
  May 25 13:05:20.585: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/25/24 13:05:20.585
  STEP: delete collection of events @ 05/25/24 13:05:20.586
  May 25 13:05:20.586: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/25/24 13:05:20.609
  May 25 13:05:20.609: INFO: requesting list of events to confirm quantity
  May 25 13:05:20.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5493" for this suite. @ 05/25/24 13:05:20.613
• [0.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 05/25/24 13:05:20.619
  May 25 13:05:20.619: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename containers @ 05/25/24 13:05:20.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:05:20.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:05:20.637
  STEP: Creating a pod to test override command @ 05/25/24 13:05:20.638
  E0525 13:05:20.693722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:21.693832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:22.694863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:23.695589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:05:24.657
  May 25 13:05:24.661: INFO: Trying to get logs from node ip-172-31-45-106 pod client-containers-021b2c52-af42-4607-a03f-3913ead65c38 container agnhost-container: <nil>
  STEP: delete the pod @ 05/25/24 13:05:24.668
  May 25 13:05:24.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5064" for this suite. @ 05/25/24 13:05:24.682
• [4.070 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 05/25/24 13:05:24.689
  May 25 13:05:24.689: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/25/24 13:05:24.69
  E0525 13:05:24.696355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:05:24.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:05:24.709
  May 25 13:05:24.711: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  E0525 13:05:25.696998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/25/24 13:05:25.993
  May 25 13:05:25.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-719 --namespace=crd-publish-openapi-719 create -f -'
  May 25 13:05:26.054: INFO: stderr: ""
  May 25 13:05:26.054: INFO: stdout: "e2e-test-crd-publish-openapi-1218-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  May 25 13:05:26.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-719 --namespace=crd-publish-openapi-719 delete e2e-test-crd-publish-openapi-1218-crds test-foo'
  May 25 13:05:26.101: INFO: stderr: ""
  May 25 13:05:26.101: INFO: stdout: "e2e-test-crd-publish-openapi-1218-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  May 25 13:05:26.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-719 --namespace=crd-publish-openapi-719 apply -f -'
  May 25 13:05:26.158: INFO: stderr: ""
  May 25 13:05:26.158: INFO: stdout: "e2e-test-crd-publish-openapi-1218-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  May 25 13:05:26.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-719 --namespace=crd-publish-openapi-719 delete e2e-test-crd-publish-openapi-1218-crds test-foo'
  May 25 13:05:26.204: INFO: stderr: ""
  May 25 13:05:26.204: INFO: stdout: "e2e-test-crd-publish-openapi-1218-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/25/24 13:05:26.204
  May 25 13:05:26.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-719 --namespace=crd-publish-openapi-719 create -f -'
  May 25 13:05:26.244: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/25/24 13:05:26.244
  May 25 13:05:26.244: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-719 --namespace=crd-publish-openapi-719 create -f -'
  May 25 13:05:26.285: INFO: rc: 1
  May 25 13:05:26.285: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-719 --namespace=crd-publish-openapi-719 apply -f -'
  May 25 13:05:26.333: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/25/24 13:05:26.333
  May 25 13:05:26.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-719 --namespace=crd-publish-openapi-719 create -f -'
  May 25 13:05:26.372: INFO: rc: 1
  May 25 13:05:26.372: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-719 --namespace=crd-publish-openapi-719 apply -f -'
  May 25 13:05:26.420: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/25/24 13:05:26.42
  May 25 13:05:26.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-719 explain e2e-test-crd-publish-openapi-1218-crds'
  May 25 13:05:26.458: INFO: stderr: ""
  May 25 13:05:26.458: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1218-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/25/24 13:05:26.459
  May 25 13:05:26.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-719 explain e2e-test-crd-publish-openapi-1218-crds.metadata'
  May 25 13:05:26.499: INFO: stderr: ""
  May 25 13:05:26.499: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1218-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  May 25 13:05:26.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-719 explain e2e-test-crd-publish-openapi-1218-crds.spec'
  May 25 13:05:26.538: INFO: stderr: ""
  May 25 13:05:26.538: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1218-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  May 25 13:05:26.538: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-719 explain e2e-test-crd-publish-openapi-1218-crds.spec.bars'
  May 25 13:05:26.575: INFO: stderr: ""
  May 25 13:05:26.575: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1218-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/25/24 13:05:26.576
  May 25 13:05:26.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-719 explain e2e-test-crd-publish-openapi-1218-crds.spec.bars2'
  May 25 13:05:26.613: INFO: rc: 1
  E0525 13:05:26.697617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:27.697735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:05:27.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-719" for this suite. @ 05/25/24 13:05:27.803
• [3.128 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 05/25/24 13:05:27.818
  May 25 13:05:27.818: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 13:05:27.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:05:27.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:05:27.835
  STEP: Setting up server cert @ 05/25/24 13:05:27.856
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 13:05:28.148
  STEP: Deploying the webhook pod @ 05/25/24 13:05:28.156
  STEP: Wait for the deployment to be ready @ 05/25/24 13:05:28.168
  May 25 13:05:28.176: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0525 13:05:28.698008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:29.698088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/25/24 13:05:30.188
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 13:05:30.199
  E0525 13:05:30.698998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:05:31.199: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/25/24 13:05:31.207
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/25/24 13:05:31.221
  STEP: Creating a dummy validating-webhook-configuration object @ 05/25/24 13:05:31.233
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/25/24 13:05:31.24
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/25/24 13:05:31.247
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/25/24 13:05:31.256
  May 25 13:05:31.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9497" for this suite. @ 05/25/24 13:05:31.328
  STEP: Destroying namespace "webhook-markers-2615" for this suite. @ 05/25/24 13:05:31.334
• [3.524 seconds]
------------------------------
SSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 05/25/24 13:05:31.342
  May 25 13:05:31.342: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename hostport @ 05/25/24 13:05:31.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:05:31.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:05:31.359
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/25/24 13:05:31.366
  E0525 13:05:31.699134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:32.699483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:33.699604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:34.699684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:35.700316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:36.700434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:37.701059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:38.701813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:39.702647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:40.703416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:41.703527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:42.704301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.45.106 on the node which pod1 resides and expect scheduled @ 05/25/24 13:05:43.408
  E0525 13:05:43.704827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:44.705021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.45.106 but use UDP protocol on the node which pod2 resides @ 05/25/24 13:05:45.422
  E0525 13:05:45.705319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:46.705539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:47.706542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:48.706652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/25/24 13:05:49.458
  May 25 13:05:49.458: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.45.106 http://127.0.0.1:54323/hostname] Namespace:hostport-1648 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:05:49.458: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:05:49.459: INFO: ExecWithOptions: Clientset creation
  May 25 13:05:49.459: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1648/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.45.106+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.45.106, port: 54323 @ 05/25/24 13:05:49.517
  May 25 13:05:49.517: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.45.106:54323/hostname] Namespace:hostport-1648 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:05:49.517: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:05:49.518: INFO: ExecWithOptions: Clientset creation
  May 25 13:05:49.518: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1648/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.45.106%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.45.106, port: 54323 UDP @ 05/25/24 13:05:49.564
  May 25 13:05:49.564: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.45.106 54323] Namespace:hostport-1648 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:05:49.564: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:05:49.565: INFO: ExecWithOptions: Clientset creation
  May 25 13:05:49.565: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1648/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.45.106+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0525 13:05:49.706952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:50.707381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:51.707473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:52.707570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:53.707662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:05:54.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-1648" for this suite. @ 05/25/24 13:05:54.62
• [23.286 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 05/25/24 13:05:54.628
  May 25 13:05:54.628: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename runtimeclass @ 05/25/24 13:05:54.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:05:54.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:05:54.647
  STEP: getting /apis @ 05/25/24 13:05:54.65
  STEP: getting /apis/node.k8s.io @ 05/25/24 13:05:54.653
  STEP: getting /apis/node.k8s.io/v1 @ 05/25/24 13:05:54.655
  STEP: creating @ 05/25/24 13:05:54.656
  STEP: watching @ 05/25/24 13:05:54.671
  May 25 13:05:54.671: INFO: starting watch
  STEP: getting @ 05/25/24 13:05:54.677
  STEP: listing @ 05/25/24 13:05:54.68
  STEP: patching @ 05/25/24 13:05:54.683
  STEP: updating @ 05/25/24 13:05:54.689
  May 25 13:05:54.695: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 05/25/24 13:05:54.695
  STEP: deleting a collection @ 05/25/24 13:05:54.707
  E0525 13:05:54.708216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:05:54.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4260" for this suite. @ 05/25/24 13:05:54.724
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 05/25/24 13:05:54.73
  May 25 13:05:54.730: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/25/24 13:05:54.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:05:54.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:05:54.747
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/25/24 13:05:54.75
  May 25 13:05:54.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  E0525 13:05:55.708387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:05:55.952: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  E0525 13:05:56.708863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:57.714467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:58.715357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:05:59.715496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:00.716500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:06:00.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4111" for this suite. @ 05/25/24 13:06:00.864
• [6.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 05/25/24 13:06:00.872
  May 25 13:06:00.872: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/25/24 13:06:00.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:06:00.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:06:00.889
  STEP: Setting up the test @ 05/25/24 13:06:00.894
  STEP: Creating hostNetwork=false pod @ 05/25/24 13:06:00.894
  E0525 13:06:01.716627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:02.716718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 05/25/24 13:06:02.917
  E0525 13:06:03.717764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:04.718005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 05/25/24 13:06:04.937
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/25/24 13:06:04.937
  May 25 13:06:04.937: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7487 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:06:04.937: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:06:04.937: INFO: ExecWithOptions: Clientset creation
  May 25 13:06:04.937: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7487/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 25 13:06:04.986: INFO: Exec stderr: ""
  May 25 13:06:04.986: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7487 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:06:04.986: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:06:04.987: INFO: ExecWithOptions: Clientset creation
  May 25 13:06:04.987: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7487/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 25 13:06:05.030: INFO: Exec stderr: ""
  May 25 13:06:05.030: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7487 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:06:05.030: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:06:05.030: INFO: ExecWithOptions: Clientset creation
  May 25 13:06:05.030: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7487/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 25 13:06:05.074: INFO: Exec stderr: ""
  May 25 13:06:05.074: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7487 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:06:05.074: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:06:05.074: INFO: ExecWithOptions: Clientset creation
  May 25 13:06:05.074: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7487/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 25 13:06:05.118: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/25/24 13:06:05.118
  May 25 13:06:05.118: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7487 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:06:05.118: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:06:05.118: INFO: ExecWithOptions: Clientset creation
  May 25 13:06:05.118: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7487/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  May 25 13:06:05.170: INFO: Exec stderr: ""
  May 25 13:06:05.170: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7487 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:06:05.170: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:06:05.170: INFO: ExecWithOptions: Clientset creation
  May 25 13:06:05.170: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7487/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  May 25 13:06:05.214: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/25/24 13:06:05.214
  May 25 13:06:05.214: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7487 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:06:05.214: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:06:05.214: INFO: ExecWithOptions: Clientset creation
  May 25 13:06:05.214: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7487/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 25 13:06:05.255: INFO: Exec stderr: ""
  May 25 13:06:05.255: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7487 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:06:05.255: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:06:05.255: INFO: ExecWithOptions: Clientset creation
  May 25 13:06:05.255: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7487/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May 25 13:06:05.298: INFO: Exec stderr: ""
  May 25 13:06:05.298: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7487 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:06:05.298: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:06:05.299: INFO: ExecWithOptions: Clientset creation
  May 25 13:06:05.299: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7487/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 25 13:06:05.346: INFO: Exec stderr: ""
  May 25 13:06:05.346: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7487 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:06:05.346: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:06:05.347: INFO: ExecWithOptions: Clientset creation
  May 25 13:06:05.347: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7487/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May 25 13:06:05.391: INFO: Exec stderr: ""
  May 25 13:06:05.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-7487" for this suite. @ 05/25/24 13:06:05.395
• [4.530 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 05/25/24 13:06:05.402
  May 25 13:06:05.402: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl @ 05/25/24 13:06:05.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:06:05.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:06:05.421
  STEP: creating all guestbook components @ 05/25/24 13:06:05.426
  May 25 13:06:05.426: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  May 25 13:06:05.426: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9803 create -f -'
  May 25 13:06:05.516: INFO: stderr: ""
  May 25 13:06:05.516: INFO: stdout: "service/agnhost-replica created\n"
  May 25 13:06:05.516: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  May 25 13:06:05.516: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9803 create -f -'
  May 25 13:06:05.603: INFO: stderr: ""
  May 25 13:06:05.603: INFO: stdout: "service/agnhost-primary created\n"
  May 25 13:06:05.603: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  May 25 13:06:05.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9803 create -f -'
  May 25 13:06:05.683: INFO: stderr: ""
  May 25 13:06:05.683: INFO: stdout: "service/frontend created\n"
  May 25 13:06:05.683: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  May 25 13:06:05.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9803 create -f -'
  E0525 13:06:05.718264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:06:05.744: INFO: stderr: ""
  May 25 13:06:05.744: INFO: stdout: "deployment.apps/frontend created\n"
  May 25 13:06:05.744: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  May 25 13:06:05.744: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9803 create -f -'
  May 25 13:06:05.803: INFO: stderr: ""
  May 25 13:06:05.803: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  May 25 13:06:05.803: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  May 25 13:06:05.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9803 create -f -'
  May 25 13:06:05.870: INFO: stderr: ""
  May 25 13:06:05.870: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/25/24 13:06:05.87
  May 25 13:06:05.870: INFO: Waiting for all frontend pods to be Running.
  E0525 13:06:06.718851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:07.719748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:08.720560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:09.720744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:10.721458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:06:10.921: INFO: Waiting for frontend to serve content.
  May 25 13:06:10.932: INFO: Trying to add a new entry to the guestbook.
  May 25 13:06:10.946: INFO: Verifying that added entry can be retrieved.
  May 25 13:06:10.955: INFO: Failed to get response from guestbook. err: <nil>, response: {"data":""}
  E0525 13:06:11.721527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:12.721624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:13.721723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:14.721810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:15.722253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: using delete to clean up resources @ 05/25/24 13:06:15.966
  May 25 13:06:15.966: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9803 delete --grace-period=0 --force -f -'
  May 25 13:06:16.021: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 25 13:06:16.021: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/25/24 13:06:16.021
  May 25 13:06:16.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9803 delete --grace-period=0 --force -f -'
  May 25 13:06:16.083: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 25 13:06:16.083: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/25/24 13:06:16.083
  May 25 13:06:16.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9803 delete --grace-period=0 --force -f -'
  May 25 13:06:16.140: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 25 13:06:16.140: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/25/24 13:06:16.14
  May 25 13:06:16.140: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9803 delete --grace-period=0 --force -f -'
  May 25 13:06:16.183: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 25 13:06:16.183: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/25/24 13:06:16.183
  May 25 13:06:16.183: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9803 delete --grace-period=0 --force -f -'
  May 25 13:06:16.240: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 25 13:06:16.240: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/25/24 13:06:16.24
  May 25 13:06:16.240: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9803 delete --grace-period=0 --force -f -'
  May 25 13:06:16.314: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 25 13:06:16.314: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  May 25 13:06:16.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9803" for this suite. @ 05/25/24 13:06:16.318
• [10.929 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 05/25/24 13:06:16.345
  May 25 13:06:16.350: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename statefulset @ 05/25/24 13:06:16.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:06:16.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:06:16.384
  STEP: Creating service test in namespace statefulset-1570 @ 05/25/24 13:06:16.393
  STEP: Creating a new StatefulSet @ 05/25/24 13:06:16.399
  May 25 13:06:16.427: INFO: Found 0 stateful pods, waiting for 3
  E0525 13:06:16.722511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:17.722594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:18.722806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:19.723142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:20.723581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:21.723679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:22.724381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:23.724553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:24.724862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:25.725335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:06:26.425: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May 25 13:06:26.425: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May 25 13:06:26.425: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  May 25 13:06:26.436: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-1570 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 25 13:06:26.527: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 25 13:06:26.527: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 25 13:06:26.527: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0525 13:06:26.725409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:27.725997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:28.726396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:29.726906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:30.727348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:31.728128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:32.728222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:33.728481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:34.728682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:35.729683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/25/24 13:06:36.537
  May 25 13:06:36.558: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 05/25/24 13:06:36.558
  E0525 13:06:36.729824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:37.730089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:38.730284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:39.730358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:40.730431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:41.730550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:42.731502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:43.732277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:44.733420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:45.734483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 05/25/24 13:06:46.568
  May 25 13:06:46.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-1570 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 25 13:06:46.665: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 25 13:06:46.665: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 25 13:06:46.665: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0525 13:06:46.735040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:47.735244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:48.736260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:49.737231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:50.737502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:51.737789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:52.738009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:53.738219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:54.738293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:55.738387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:06:56.680: INFO: Waiting for StatefulSet statefulset-1570/ss2 to complete update
  E0525 13:06:56.739456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:57.739559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:58.740279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:06:59.740364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:00.740414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:01.740507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:02.740722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:03.740938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:04.741023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:05.741439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 05/25/24 13:07:06.682
  May 25 13:07:06.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-1570 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0525 13:07:06.741815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:07:06.779: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 25 13:07:06.779: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 25 13:07:06.779: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0525 13:07:07.742294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:08.743290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:09.743357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:10.743426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:11.743525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:12.743589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:13.743661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:14.743742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:15.744134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:16.744243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:07:16.808: INFO: Updating stateful set ss2
  E0525 13:07:17.745174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:18.745268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:19.745362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:20.745550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:21.745752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:22.745822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:23.745934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:24.746035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:25.746408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:26.746489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 05/25/24 13:07:26.817
  May 25 13:07:26.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-1570 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 25 13:07:26.904: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 25 13:07:26.904: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 25 13:07:26.904: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0525 13:07:27.746801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:28.747014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:29.747288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:30.747731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:31.747818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:32.747913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:33.748003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:34.748192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:35.748458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:36.748542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:07:36.921: INFO: Deleting all statefulset in ns statefulset-1570
  May 25 13:07:36.929: INFO: Scaling statefulset ss2 to 0
  E0525 13:07:37.748669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:38.748761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:39.748854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:40.749768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:41.750765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:42.750872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:43.750978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:44.751111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:45.751499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:46.751592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:07:46.943: INFO: Waiting for statefulset status.replicas updated to 0
  May 25 13:07:46.947: INFO: Deleting statefulset ss2
  May 25 13:07:46.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1570" for this suite. @ 05/25/24 13:07:46.964
• [90.626 seconds]
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 05/25/24 13:07:46.971
  May 25 13:07:46.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename downward-api @ 05/25/24 13:07:46.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:07:46.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:07:46.987
  STEP: Creating a pod to test downward api env vars @ 05/25/24 13:07:46.99
  E0525 13:07:47.751701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:48.751795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:49.752257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:50.752497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:07:51.014
  May 25 13:07:51.018: INFO: Trying to get logs from node ip-172-31-45-106 pod downward-api-ecd19993-5f24-4a1b-9039-3633b382cd71 container dapi-container: <nil>
  STEP: delete the pod @ 05/25/24 13:07:51.028
  May 25 13:07:51.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7721" for this suite. @ 05/25/24 13:07:51.049
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 05/25/24 13:07:51.055
  May 25 13:07:51.055: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename svcaccounts @ 05/25/24 13:07:51.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:07:51.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:07:51.074
  E0525 13:07:51.752632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:52.752717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 05/25/24 13:07:53.095
  May 25 13:07:53.096: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1866 pod-service-account-2affa779-086e-49bb-b83a-33ec6e7119ba -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/25/24 13:07:53.179
  May 25 13:07:53.179: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1866 pod-service-account-2affa779-086e-49bb-b83a-33ec6e7119ba -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 05/25/24 13:07:53.267
  May 25 13:07:53.267: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1866 pod-service-account-2affa779-086e-49bb-b83a-33ec6e7119ba -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  May 25 13:07:53.360: INFO: Got root ca configmap in namespace "svcaccounts-1866"
  May 25 13:07:53.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1866" for this suite. @ 05/25/24 13:07:53.366
• [2.318 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 05/25/24 13:07:53.373
  May 25 13:07:53.373: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/25/24 13:07:53.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:07:53.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:07:53.391
  STEP: create the container to handle the HTTPGet hook request. @ 05/25/24 13:07:53.397
  E0525 13:07:53.753764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:54.754691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/25/24 13:07:55.419
  E0525 13:07:55.755347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:56.755440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 05/25/24 13:07:57.441
  E0525 13:07:57.756299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:07:58.756389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 05/25/24 13:07:59.459
  May 25 13:07:59.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1189" for this suite. @ 05/25/24 13:07:59.483
• [6.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 05/25/24 13:07:59.491
  May 25 13:07:59.491: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename secrets @ 05/25/24 13:07:59.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:07:59.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:07:59.51
  STEP: Creating secret with name secret-test-map-e50d852b-0704-4621-924d-292168bd759d @ 05/25/24 13:07:59.513
  STEP: Creating a pod to test consume secrets @ 05/25/24 13:07:59.518
  E0525 13:07:59.757008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:00.757380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:01.758299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:02.758406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:08:03.541
  May 25 13:08:03.545: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-secrets-0866e832-0635-45c5-868c-724ef149472c container secret-volume-test: <nil>
  STEP: delete the pod @ 05/25/24 13:08:03.553
  May 25 13:08:03.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3628" for this suite. @ 05/25/24 13:08:03.573
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 05/25/24 13:08:03.587
  May 25 13:08:03.587: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename csi-storageclass @ 05/25/24 13:08:03.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:08:03.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:08:03.603
  STEP: Creating a StorageClass @ 05/25/24 13:08:03.606
  STEP: Get StorageClass "e2e-68zl7" @ 05/25/24 13:08:03.611
  STEP: Patching the StorageClass "e2e-68zl7" @ 05/25/24 13:08:03.615
  STEP: Delete StorageClass "e2e-68zl7" @ 05/25/24 13:08:03.622
  STEP: Confirm deletion of StorageClass "e2e-68zl7" @ 05/25/24 13:08:03.628
  STEP: Create a replacement StorageClass @ 05/25/24 13:08:03.632
  STEP: Updating StorageClass "e2e-v2-pld4g" @ 05/25/24 13:08:03.636
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-pld4g=updated" @ 05/25/24 13:08:03.646
  STEP: Deleting StorageClass "e2e-v2-pld4g" via DeleteCollection @ 05/25/24 13:08:03.649
  STEP: Confirm deletion of StorageClass "e2e-v2-pld4g" @ 05/25/24 13:08:03.661
  May 25 13:08:03.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-6698" for this suite. @ 05/25/24 13:08:03.668
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 05/25/24 13:08:03.675
  May 25 13:08:03.675: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir @ 05/25/24 13:08:03.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:08:03.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:08:03.693
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/25/24 13:08:03.696
  E0525 13:08:03.758984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:04.759199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:05.759892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:06.760298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:08:07.723
  May 25 13:08:07.726: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-84003913-a387-4dc7-bde1-18c1f0bef8ad container test-container: <nil>
  STEP: delete the pod @ 05/25/24 13:08:07.733
  May 25 13:08:07.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3934" for this suite. @ 05/25/24 13:08:07.758
  E0525 13:08:07.761050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 05/25/24 13:08:07.764
  May 25 13:08:07.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 13:08:07.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:08:07.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:08:07.782
  STEP: creating service multi-endpoint-test in namespace services-1367 @ 05/25/24 13:08:07.785
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1367 to expose endpoints map[] @ 05/25/24 13:08:07.797
  May 25 13:08:07.805: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0525 13:08:08.761205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:08:08.815: INFO: successfully validated that service multi-endpoint-test in namespace services-1367 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1367 @ 05/25/24 13:08:08.815
  E0525 13:08:09.762111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:10.762501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1367 to expose endpoints map[pod1:[100]] @ 05/25/24 13:08:10.838
  May 25 13:08:10.849: INFO: successfully validated that service multi-endpoint-test in namespace services-1367 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-1367 @ 05/25/24 13:08:10.849
  E0525 13:08:11.762605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:12.762799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1367 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/25/24 13:08:12.867
  May 25 13:08:12.883: INFO: successfully validated that service multi-endpoint-test in namespace services-1367 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/25/24 13:08:12.883
  May 25 13:08:12.883: INFO: Creating new exec pod
  E0525 13:08:13.763228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:14.763314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:15.764069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:08:15.899: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-1367 exec execpod9wt9q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  May 25 13:08:15.986: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  May 25 13:08:15.986: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 13:08:15.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-1367 exec execpod9wt9q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.218 80'
  May 25 13:08:16.076: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.218 80\nConnection to 10.152.183.218 80 port [tcp/http] succeeded!\n"
  May 25 13:08:16.076: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 13:08:16.076: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-1367 exec execpod9wt9q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  May 25 13:08:16.162: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  May 25 13:08:16.162: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 13:08:16.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-1367 exec execpod9wt9q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.218 81'
  May 25 13:08:16.253: INFO: stderr: "+ nc -v -t -w 2 10.152.183.218 81\n+ echo hostName\nConnection to 10.152.183.218 81 port [tcp/*] succeeded!\n"
  May 25 13:08:16.254: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1367 @ 05/25/24 13:08:16.254
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1367 to expose endpoints map[pod2:[101]] @ 05/25/24 13:08:16.272
  May 25 13:08:16.283: INFO: successfully validated that service multi-endpoint-test in namespace services-1367 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-1367 @ 05/25/24 13:08:16.283
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1367 to expose endpoints map[] @ 05/25/24 13:08:16.299
  May 25 13:08:16.309: INFO: successfully validated that service multi-endpoint-test in namespace services-1367 exposes endpoints map[]
  May 25 13:08:16.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1367" for this suite. @ 05/25/24 13:08:16.331
• [8.574 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 05/25/24 13:08:16.338
  May 25 13:08:16.338: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename statefulset @ 05/25/24 13:08:16.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:08:16.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:08:16.356
  STEP: Creating service test in namespace statefulset-2067 @ 05/25/24 13:08:16.359
  STEP: Creating statefulset ss in namespace statefulset-2067 @ 05/25/24 13:08:16.364
  May 25 13:08:16.376: INFO: Found 0 stateful pods, waiting for 1
  E0525 13:08:16.764413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:17.764258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:18.764569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:19.764849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:20.765341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:21.765608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:22.765876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:23.766114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:24.766362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:25.766476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:08:26.377: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/25/24 13:08:26.384
  STEP: updating a scale subresource @ 05/25/24 13:08:26.387
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/25/24 13:08:26.395
  STEP: Patch a scale subresource @ 05/25/24 13:08:26.398
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/25/24 13:08:26.406
  May 25 13:08:26.410: INFO: Deleting all statefulset in ns statefulset-2067
  May 25 13:08:26.414: INFO: Scaling statefulset ss to 0
  E0525 13:08:26.767396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:27.767493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:28.767781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:29.768696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:30.769640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:31.769824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:32.770115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:33.770226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:34.770551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:35.771498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:08:36.428: INFO: Waiting for statefulset status.replicas updated to 0
  May 25 13:08:36.432: INFO: Deleting statefulset ss
  May 25 13:08:36.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2067" for this suite. @ 05/25/24 13:08:36.455
• [20.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 05/25/24 13:08:36.462
  May 25 13:08:36.462: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename statefulset @ 05/25/24 13:08:36.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:08:36.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:08:36.483
  STEP: Creating service test in namespace statefulset-6973 @ 05/25/24 13:08:36.486
  STEP: Creating statefulset ss in namespace statefulset-6973 @ 05/25/24 13:08:36.495
  May 25 13:08:36.507: INFO: Found 0 stateful pods, waiting for 1
  E0525 13:08:36.772275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:37.772360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:38.773173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:39.773272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:40.773497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:41.773735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:42.773905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:43.774621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:44.774828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:45.775385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:08:46.508: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/25/24 13:08:46.515
  STEP: Getting /status @ 05/25/24 13:08:46.524
  May 25 13:08:46.528: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/25/24 13:08:46.528
  May 25 13:08:46.538: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/25/24 13:08:46.538
  May 25 13:08:46.540: INFO: Observed &StatefulSet event: ADDED
  May 25 13:08:46.540: INFO: Found Statefulset ss in namespace statefulset-6973 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 25 13:08:46.540: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/25/24 13:08:46.54
  May 25 13:08:46.540: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May 25 13:08:46.546: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/25/24 13:08:46.546
  May 25 13:08:46.548: INFO: Observed &StatefulSet event: ADDED
  May 25 13:08:46.548: INFO: Observed Statefulset ss in namespace statefulset-6973 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 25 13:08:46.548: INFO: Observed &StatefulSet event: MODIFIED
  May 25 13:08:46.548: INFO: Deleting all statefulset in ns statefulset-6973
  May 25 13:08:46.551: INFO: Scaling statefulset ss to 0
  E0525 13:08:46.775446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:47.776310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:48.777036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:49.777127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:50.777581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:51.777718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:52.777837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:53.778010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:54.778088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:55.778510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:08:56.567: INFO: Waiting for statefulset status.replicas updated to 0
  May 25 13:08:56.570: INFO: Deleting statefulset ss
  May 25 13:08:56.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6973" for this suite. @ 05/25/24 13:08:56.588
• [20.132 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 05/25/24 13:08:56.595
  May 25 13:08:56.595: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir @ 05/25/24 13:08:56.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:08:56.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:08:56.613
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/25/24 13:08:56.616
  E0525 13:08:56.779498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:57.780441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:58.781490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:08:59.781583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:09:00.638
  May 25 13:09:00.642: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-a7b8bfe8-0e17-42a8-9ba6-156a9e663be8 container test-container: <nil>
  STEP: delete the pod @ 05/25/24 13:09:00.648
  May 25 13:09:00.663: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4551" for this suite. @ 05/25/24 13:09:00.666
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 05/25/24 13:09:00.674
  May 25 13:09:00.674: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename job @ 05/25/24 13:09:00.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:09:00.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:09:00.694
  STEP: Creating a job @ 05/25/24 13:09:00.696
  STEP: Ensuring active pods == parallelism @ 05/25/24 13:09:00.701
  E0525 13:09:00.782614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:01.783159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 05/25/24 13:09:02.706
  E0525 13:09:02.784037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:09:03.223: INFO: Successfully updated pod "adopt-release-4qnc6"
  STEP: Checking that the Job readopts the Pod @ 05/25/24 13:09:03.223
  E0525 13:09:03.784131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:04.784372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 05/25/24 13:09:05.232
  May 25 13:09:05.744: INFO: Successfully updated pod "adopt-release-4qnc6"
  STEP: Checking that the Job releases the Pod @ 05/25/24 13:09:05.744
  E0525 13:09:05.784518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:06.784747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:09:07.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8739" for this suite. @ 05/25/24 13:09:07.757
• [7.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 05/25/24 13:09:07.764
  May 25 13:09:07.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename cronjob @ 05/25/24 13:09:07.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:09:07.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:09:07.781
  E0525 13:09:07.784704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ForbidConcurrent cronjob @ 05/25/24 13:09:07.784
  STEP: Ensuring a job is scheduled @ 05/25/24 13:09:07.789
  E0525 13:09:08.785740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:09.785899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:10.786606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:11.786797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:12.787227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:13.787316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:14.787419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:15.787483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:16.787570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:17.787681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:18.788279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:19.788377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:20.789224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:21.789474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:22.789599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:23.790150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:24.790586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:25.790636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:26.791219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:27.791203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:28.791337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:29.791428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:30.792555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:31.792642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:32.793184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:33.794178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:34.794344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:35.794667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:36.795220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:37.795598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:38.795748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:39.795814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:40.796334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:41.796840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:42.797050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:43.797876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:44.798780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:45.799361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:46.799488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:47.800051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:48.800603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:49.801443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:50.802511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:51.803248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:52.803392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:53.804349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:54.804925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:55.805895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:56.806017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:57.806131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:58.807055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:09:59.807750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:00.808550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/25/24 13:10:01.794
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/25/24 13:10:01.798
  STEP: Ensuring no more jobs are scheduled @ 05/25/24 13:10:01.802
  E0525 13:10:01.809557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:02.809703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:03.810300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:04.810458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:05.810713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:06.810895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:07.811424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:08.812280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:09.813063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:10.813953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:11.814581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:12.814834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:13.815020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:14.815207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:15.815994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:16.816233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:17.816863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:18.816964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:19.817376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:20.817496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:21.817761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:22.817939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:23.818559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:24.818986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:25.819798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:26.820287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:27.820561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:28.821458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:29.821578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:30.822564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:31.823347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:32.823463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:33.823750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:34.823877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:35.824371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:36.825473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:37.825576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:38.825759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:39.826506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:40.827590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:41.828452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:42.828551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:43.829441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:44.829734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:45.830411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:46.830640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:47.831475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:48.832263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:49.832305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:50.832400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:51.833036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:52.834025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:53.834548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:54.835272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:55.835700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:56.835829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:57.835910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:58.836428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:10:59.836863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:00.837575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:01.838283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:02.838409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:03.839163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:04.839284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:05.840104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:06.840185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:07.840520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:08.840634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:09.841236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:10.841345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:11.841975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:12.842165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:13.842395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:14.842633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:15.842797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:16.842963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:17.844011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:18.844289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:19.845209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:20.845401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:21.845730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:22.846043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:23.846654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:24.846727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:25.847609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:26.848263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:27.849193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:28.849330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:29.849450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:30.849564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:31.850066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:32.850253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:33.850352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:34.850459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:35.851274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:36.852273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:37.853221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:38.853336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:39.853520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:40.854597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:41.855271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:42.856270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:43.856648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:44.856852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:45.857774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:46.857952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:47.858847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:48.859025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:49.859346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:50.859439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:51.860448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:52.860541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:53.860874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:54.861003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:55.861035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:56.861761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:57.862056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:58.862786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:11:59.863334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:00.863440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:01.863783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:02.863901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:03.864769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:04.864860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:05.865915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:06.866539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:07.867053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:08.867223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:09.867631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:10.868459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:11.869003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:12.869182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:13.869659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:14.870033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:15.870480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:16.870693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:17.871116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:18.871196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:19.871560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:20.871644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:21.872556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:22.872645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:23.873096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:24.873204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:25.874184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:26.874384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:27.874725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:28.874844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:29.875442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:30.875540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:31.875998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:32.876128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:33.876326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:34.876418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:35.877133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:36.877309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:37.878068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:38.878183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:39.878286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:40.878557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:41.878832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:42.878938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:43.879013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:44.879229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:45.879884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:46.879986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:47.880056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:48.880693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:49.881436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:50.881632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:51.881891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:52.882013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:53.882503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:54.882611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:55.882868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:56.883576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:57.884044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:58.884245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:12:59.884997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:00.885430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:01.886267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:02.886452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:03.886874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:04.887115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:05.887268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:06.888331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:07.888503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:08.889420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:09.890019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:10.890482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:11.891035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:12.891302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:13.892035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:14.892180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:15.892977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:16.893232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:17.893286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:18.893529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:19.894514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:20.894570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:21.894853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:22.894970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:23.895514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:24.895608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:25.896172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:26.896355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:27.896880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:28.896981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:29.898001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:30.898513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:31.898948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:32.899145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:33.899544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:34.900409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:35.900861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:36.901106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:37.901519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:38.901620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:39.902610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:40.903646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:41.904549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:42.904740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:43.905310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:44.905428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:45.906488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:46.906678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:47.907647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:48.907752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:49.908292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:50.908385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:51.909148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:52.909751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:53.910354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:54.910541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:55.911163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:56.911196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:57.911944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:58.912226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:13:59.912934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:00.913022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:01.913966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:02.914080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:03.914866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:04.914988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:05.915994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:06.916742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:07.917112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:08.917314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:09.918192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:10.918454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:11.919033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:12.919216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:13.920061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:14.920162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:15.920794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:16.921004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:17.921293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:18.921531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:19.921813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:20.922652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:21.923282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:22.924264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:23.924484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:24.924575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:25.925545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:26.925642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:27.926316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:28.926431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:29.927130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:30.927222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:31.927331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:32.928327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:33.929141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:34.929237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:35.929318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:36.930081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:37.930753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:38.931332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:39.932053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:40.932938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:41.933428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:42.933707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:43.934622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:44.934710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:45.935615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:46.936316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:47.936641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:48.936932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:49.937716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:50.938685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:51.939609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:52.939725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:53.940234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:54.940432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:55.940745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:56.941472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:57.942624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:58.942687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:14:59.943364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:00.944290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 05/25/24 13:15:01.812
  May 25 13:15:01.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3476" for this suite. @ 05/25/24 13:15:01.822
• [354.064 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 05/25/24 13:15:01.829
  May 25 13:15:01.829: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename configmap @ 05/25/24 13:15:01.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:15:01.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:15:01.852
  STEP: Creating configMap with name configmap-test-volume-map-c3843cc6-f2f7-4472-bcee-445f709e3bc0 @ 05/25/24 13:15:01.855
  STEP: Creating a pod to test consume configMaps @ 05/25/24 13:15:01.861
  E0525 13:15:01.944716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:02.945539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:03.945817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:04.946645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:15:05.884
  May 25 13:15:05.887: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-configmaps-091b4561-f44c-417b-8cb4-ae5669e37c3d container agnhost-container: <nil>
  STEP: delete the pod @ 05/25/24 13:15:05.903
  May 25 13:15:05.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9780" for this suite. @ 05/25/24 13:15:05.926
• [4.105 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 05/25/24 13:15:05.934
  May 25 13:15:05.934: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 13:15:05.934
  E0525 13:15:05.947140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:15:05.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:15:05.951
  STEP: Setting up server cert @ 05/25/24 13:15:05.973
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 13:15:06.068
  STEP: Deploying the webhook pod @ 05/25/24 13:15:06.077
  STEP: Wait for the deployment to be ready @ 05/25/24 13:15:06.088
  May 25 13:15:06.096: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0525 13:15:06.947214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:07.947267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/25/24 13:15:08.109
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 13:15:08.119
  E0525 13:15:08.947380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:09.119: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/25/24 13:15:09.129
  STEP: create a pod that should be updated by the webhook @ 05/25/24 13:15:09.142
  May 25 13:15:09.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1527" for this suite. @ 05/25/24 13:15:09.213
  STEP: Destroying namespace "webhook-markers-8903" for this suite. @ 05/25/24 13:15:09.218
• [3.292 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 05/25/24 13:15:09.226
  May 25 13:15:09.226: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename watch @ 05/25/24 13:15:09.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:15:09.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:15:09.244
  STEP: getting a starting resourceVersion @ 05/25/24 13:15:09.248
  STEP: starting a background goroutine to produce watch events @ 05/25/24 13:15:09.25
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/25/24 13:15:09.25
  E0525 13:15:09.948060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:10.948419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:11.949488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:12.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7109" for this suite. @ 05/25/24 13:15:12.082
• [2.910 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 05/25/24 13:15:12.136
  May 25 13:15:12.136: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-probe @ 05/25/24 13:15:12.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:15:12.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:15:12.156
  STEP: Creating pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805 @ 05/25/24 13:15:12.16
  E0525 13:15:12.949629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:13.949701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/25/24 13:15:14.178
  May 25 13:15:14.182: INFO: Initial restart count of pod liveness-72220869-a86c-497b-af94-b18a947fccae is 0
  May 25 13:15:14.185: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:14.950695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:15.951650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:16.190: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:16.952300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:17.952555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:18.195: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:18.952656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:19.953355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:20.201: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:20.953820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:21.954415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:22.207: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:22.954573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:23.954672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:24.213: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:24.955571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:25.956621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:26.218: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:26.957409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:27.957604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:28.223: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:28.958525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:29.958619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:30.228: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:30.959283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:31.959376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:32.233: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:32.959460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:33.960306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:34.238: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  May 25 13:15:34.238: INFO: Restart count of pod container-probe-6805/liveness-72220869-a86c-497b-af94-b18a947fccae is now 1 (20.056464959s elapsed)
  E0525 13:15:34.960537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:35.960609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:36.243: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:36.961442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:37.961556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:38.249: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:38.961666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:39.962480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:40.255: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:40.963508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:41.964268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:42.261: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:42.964350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:43.964539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:44.266: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:44.965271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:45.965490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:46.271: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:46.965581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:47.966231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:48.276: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:48.966313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:49.966410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:50.281: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:50.967106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:51.967240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:52.286: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:52.967326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:53.968258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:54.291: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  May 25 13:15:54.291: INFO: Restart count of pod container-probe-6805/liveness-72220869-a86c-497b-af94-b18a947fccae is now 2 (40.109742658s elapsed)
  E0525 13:15:54.968748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:55.969698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:56.296: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:56.970334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:57.971173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:15:58.300: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:15:58.971270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:15:59.972258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:00.306: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:00.973261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:01.973878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:02.314: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:02.973984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:03.974220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:04.319: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:04.974233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:05.974342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:06.324: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:06.974407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:07.974636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:08.329: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:08.974773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:09.974863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:10.333: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:10.975456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:11.975580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:12.339: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:12.976296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:13.976881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:14.344: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  May 25 13:16:14.344: INFO: Restart count of pod container-probe-6805/liveness-72220869-a86c-497b-af94-b18a947fccae is now 3 (1m0.162036081s elapsed)
  E0525 13:16:14.977280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:15.978179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:16.349: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:16.978705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:17.978417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:18.354: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:18.979334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:19.979429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:20.358: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:20.979522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:21.979607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:22.364: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:22.980355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:23.980864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:24.372: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:24.981017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:25.981112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:26.376: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:26.981203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:27.981292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:28.382: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:28.981548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:29.981730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:30.387: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:30.981805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:31.982041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:32.392: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:32.983150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:33.983200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:34.401: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  May 25 13:16:34.401: INFO: Restart count of pod container-probe-6805/liveness-72220869-a86c-497b-af94-b18a947fccae is now 4 (1m20.219263232s elapsed)
  E0525 13:16:34.984274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:35.984372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:36.406: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:36.985070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:37.985260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:38.411: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:38.986213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:39.986409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:40.416: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:40.987390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:41.987492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:42.421: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:42.988483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:43.988620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:44.426: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:44.989439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:45.989710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:46.431: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:46.989788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:47.989980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:48.437: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:48.990854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:49.991046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:50.442: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:50.991920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:51.992009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:52.447: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:52.992688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:53.992895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:54.452: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:54.993641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:55.993737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:56.457: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:56.993858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:57.993956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:16:58.462: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:16:58.994646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:16:59.994732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:00.467: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:00.994821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:01.995105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:02.472: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:02.995194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:03.996253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:04.477: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:04.997163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:05.997710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:06.482: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:06.998578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:07.998680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:08.487: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:08.999197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:09.999292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:10.492: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:11.000000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:12.000344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:12.497: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:13.001136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:14.001295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:14.502: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:15.001349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:16.001671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:16.508: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:17.001713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:18.001901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:18.512: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:19.002226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:20.002319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:20.517: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:21.003272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:22.003370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:22.522: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:23.004265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:24.004358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:24.527: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:25.005264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:26.005497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:26.532: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:27.005663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:28.005760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:28.537: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:29.005954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:30.006152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:30.542: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:31.006242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:32.006331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:32.547: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:33.006672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:34.007449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:34.552: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  E0525 13:17:35.007548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:36.007690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:17:36.557: INFO: Get pod liveness-72220869-a86c-497b-af94-b18a947fccae in namespace container-probe-6805
  May 25 13:17:36.557: INFO: Restart count of pod container-probe-6805/liveness-72220869-a86c-497b-af94-b18a947fccae is now 5 (2m22.374821172s elapsed)
  STEP: deleting the pod @ 05/25/24 13:17:36.557
  May 25 13:17:36.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6805" for this suite. @ 05/25/24 13:17:36.575
• [144.447 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 05/25/24 13:17:36.584
  May 25 13:17:36.584: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pod-network-test @ 05/25/24 13:17:36.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:17:36.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:17:36.601
  STEP: Performing setup for networking test in namespace pod-network-test-4137 @ 05/25/24 13:17:36.604
  STEP: creating a selector @ 05/25/24 13:17:36.604
  STEP: Creating the service pods in kubernetes @ 05/25/24 13:17:36.604
  May 25 13:17:36.604: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0525 13:17:37.007776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:38.008267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:39.008387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:40.008484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:41.008835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:42.008943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:43.009415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:44.009603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:45.010046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:46.010114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:47.010456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:48.010549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:49.011032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:50.011201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:51.012233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:52.012317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:53.012419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:54.012495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:55.012894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:56.013076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:57.013500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:17:58.013706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/25/24 13:17:58.709
  E0525 13:17:59.013797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:00.013913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:18:00.745: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  May 25 13:18:00.745: INFO: Going to poll 192.168.138.173 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  May 25 13:18:00.748: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.138.173:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4137 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:18:00.748: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:18:00.749: INFO: ExecWithOptions: Clientset creation
  May 25 13:18:00.749: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4137/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.138.173%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 25 13:18:00.819: INFO: Found all 1 expected endpoints: [netserver-0]
  May 25 13:18:00.819: INFO: Going to poll 192.168.14.8 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  May 25 13:18:00.823: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.14.8:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4137 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:18:00.823: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:18:00.824: INFO: ExecWithOptions: Clientset creation
  May 25 13:18:00.824: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4137/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.14.8%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 25 13:18:00.875: INFO: Found all 1 expected endpoints: [netserver-1]
  May 25 13:18:00.875: INFO: Going to poll 192.168.131.44 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  May 25 13:18:00.879: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.131.44:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4137 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:18:00.879: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:18:00.879: INFO: ExecWithOptions: Clientset creation
  May 25 13:18:00.879: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4137/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.131.44%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May 25 13:18:00.929: INFO: Found all 1 expected endpoints: [netserver-2]
  May 25 13:18:00.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4137" for this suite. @ 05/25/24 13:18:00.933
• [24.356 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 05/25/24 13:18:00.94
  May 25 13:18:00.940: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename dns @ 05/25/24 13:18:00.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:18:00.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:18:00.961
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5690.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-5690.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 05/25/24 13:18:00.964
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5690.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-5690.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/25/24 13:18:00.964
  STEP: creating a pod to probe /etc/hosts @ 05/25/24 13:18:00.964
  STEP: submitting the pod to kubernetes @ 05/25/24 13:18:00.964
  E0525 13:18:01.014131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:02.014251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/25/24 13:18:02.986
  STEP: looking for the results for each expected name from probers @ 05/25/24 13:18:02.99
  May 25 13:18:03.008: INFO: DNS probes using dns-5690/dns-test-cffa18ad-601f-4e34-94de-9f04b8c902f5 succeeded

  STEP: deleting the pod @ 05/25/24 13:18:03.008
  E0525 13:18:03.014746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:18:03.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5690" for this suite. @ 05/25/24 13:18:03.026
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 05/25/24 13:18:03.033
  May 25 13:18:03.033: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename configmap @ 05/25/24 13:18:03.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:18:03.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:18:03.05
  STEP: Creating configMap configmap-2322/configmap-test-f7e864fc-57c2-491b-9466-8355393d1b97 @ 05/25/24 13:18:03.053
  STEP: Creating a pod to test consume configMaps @ 05/25/24 13:18:03.057
  E0525 13:18:04.015261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:05.016269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:06.017346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:07.017546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:18:07.079
  May 25 13:18:07.082: INFO: Trying to get logs from node ip-172-31-15-138 pod pod-configmaps-b8913e47-020c-4918-9e38-43467c5a4f1d container env-test: <nil>
  STEP: delete the pod @ 05/25/24 13:18:07.098
  May 25 13:18:07.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2322" for this suite. @ 05/25/24 13:18:07.119
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 05/25/24 13:18:07.129
  May 25 13:18:07.129: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename downward-api @ 05/25/24 13:18:07.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:18:07.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:18:07.146
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 13:18:07.15
  E0525 13:18:08.017645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:09.017802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:10.017895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:11.018029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:18:11.177
  May 25 13:18:11.181: INFO: Trying to get logs from node ip-172-31-45-106 pod downwardapi-volume-d55522e5-1f6a-4397-8228-afd5888ded98 container client-container: <nil>
  STEP: delete the pod @ 05/25/24 13:18:11.191
  May 25 13:18:11.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9350" for this suite. @ 05/25/24 13:18:11.214
• [4.091 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 05/25/24 13:18:11.22
  May 25 13:18:11.220: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 13:18:11.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:18:11.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:18:11.239
  STEP: creating service endpoint-test2 in namespace services-4520 @ 05/25/24 13:18:11.242
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4520 to expose endpoints map[] @ 05/25/24 13:18:11.254
  May 25 13:18:11.265: INFO: successfully validated that service endpoint-test2 in namespace services-4520 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4520 @ 05/25/24 13:18:11.265
  E0525 13:18:12.018147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:13.018244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4520 to expose endpoints map[pod1:[80]] @ 05/25/24 13:18:13.287
  May 25 13:18:13.298: INFO: successfully validated that service endpoint-test2 in namespace services-4520 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/25/24 13:18:13.298
  May 25 13:18:13.298: INFO: Creating new exec pod
  E0525 13:18:14.018343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:15.018621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:16.019544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:18:16.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-4520 exec execpodq5m6k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May 25 13:18:16.398: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May 25 13:18:16.398: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 13:18:16.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-4520 exec execpodq5m6k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.237 80'
  May 25 13:18:16.484: INFO: stderr: "+ nc -v -t -w 2 10.152.183.237 80\nConnection to 10.152.183.237 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  May 25 13:18:16.484: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-4520 @ 05/25/24 13:18:16.484
  E0525 13:18:17.021089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:18.021179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4520 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/25/24 13:18:18.505
  May 25 13:18:18.523: INFO: successfully validated that service endpoint-test2 in namespace services-4520 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/25/24 13:18:18.523
  E0525 13:18:19.021729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:18:19.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-4520 exec execpodq5m6k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May 25 13:18:19.609: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May 25 13:18:19.609: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 13:18:19.609: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-4520 exec execpodq5m6k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.237 80'
  May 25 13:18:19.693: INFO: stderr: "+ nc -v -t -w 2 10.152.183.237 80\n+ echo hostName\nConnection to 10.152.183.237 80 port [tcp/http] succeeded!\n"
  May 25 13:18:19.693: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4520 @ 05/25/24 13:18:19.693
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4520 to expose endpoints map[pod2:[80]] @ 05/25/24 13:18:19.717
  May 25 13:18:19.728: INFO: successfully validated that service endpoint-test2 in namespace services-4520 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/25/24 13:18:19.728
  E0525 13:18:20.022653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:18:20.729: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-4520 exec execpodq5m6k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May 25 13:18:20.822: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May 25 13:18:20.822: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 13:18:20.823: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-4520 exec execpodq5m6k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.237 80'
  May 25 13:18:20.925: INFO: stderr: "+ nc -v -t -w 2 10.152.183.237 80\n+ echo hostName\nConnection to 10.152.183.237 80 port [tcp/http] succeeded!\n"
  May 25 13:18:20.925: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-4520 @ 05/25/24 13:18:20.925
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4520 to expose endpoints map[] @ 05/25/24 13:18:20.958
  May 25 13:18:20.969: INFO: successfully validated that service endpoint-test2 in namespace services-4520 exposes endpoints map[]
  May 25 13:18:20.989: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4520" for this suite. @ 05/25/24 13:18:20.993
• [9.780 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 05/25/24 13:18:21.001
  May 25 13:18:21.001: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename secrets @ 05/25/24 13:18:21.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:18:21.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:18:21.021
  E0525 13:18:21.022727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating secret with name secret-test-map-34aad546-ebb9-4bee-84e8-75351f338680 @ 05/25/24 13:18:21.025
  STEP: Creating a pod to test consume secrets @ 05/25/24 13:18:21.029
  E0525 13:18:22.023059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:23.023211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:24.023293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:25.024285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:18:25.056
  May 25 13:18:25.059: INFO: Trying to get logs from node ip-172-31-15-138 pod pod-secrets-f689e6d3-b8f4-431d-8a37-ca45c63d2faa container secret-volume-test: <nil>
  STEP: delete the pod @ 05/25/24 13:18:25.066
  May 25 13:18:25.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5145" for this suite. @ 05/25/24 13:18:25.118
• [4.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 05/25/24 13:18:25.127
  May 25 13:18:25.127: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/25/24 13:18:25.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:18:25.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:18:25.145
  STEP: create the container to handle the HTTPGet hook request. @ 05/25/24 13:18:25.151
  E0525 13:18:26.024421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:27.025189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/25/24 13:18:27.174
  E0525 13:18:28.025321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:29.025528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 05/25/24 13:18:29.193
  STEP: delete the pod with lifecycle hook @ 05/25/24 13:18:29.201
  E0525 13:18:30.025796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:31.026406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:18:31.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1815" for this suite. @ 05/25/24 13:18:31.222
• [6.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 05/25/24 13:18:31.23
  May 25 13:18:31.230: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename taint-single-pod @ 05/25/24 13:18:31.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:18:31.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:18:31.249
  May 25 13:18:31.252: INFO: Waiting up to 1m0s for all nodes to be ready
  E0525 13:18:32.026544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:33.026604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:34.026661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:35.027468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:36.028132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:37.028147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:38.028544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:39.028621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:40.028741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:41.029761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:42.029851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:43.030025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:44.030552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:45.030978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:46.031639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:47.031718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:48.031831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:49.032282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:50.033270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:51.033356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:52.034370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:53.034567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:54.034730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:55.034746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:56.034917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:57.035131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:58.035225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:18:59.036284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:00.036408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:01.036479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:02.036618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:03.036730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:04.037157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:05.037415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:06.037494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:07.037791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:08.037892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:09.038391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:10.038539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:11.038694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:12.038796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:13.039286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:14.040318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:15.040603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:16.041676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:17.041746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:18.042664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:19.042766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:20.043006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:21.043204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:22.043232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:23.043260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:24.044268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:25.044599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:26.044764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:27.044959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:28.045143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:29.045311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:30.045694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:31.045836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:19:31.253: INFO: Waiting for terminating namespaces to be deleted...
  May 25 13:19:31.258: INFO: Starting informer...
  STEP: Starting pod... @ 05/25/24 13:19:31.258
  May 25 13:19:31.474: INFO: Pod is running on ip-172-31-45-106. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/25/24 13:19:31.474
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/25/24 13:19:31.485
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/25/24 13:19:31.49
  May 25 13:19:31.490: INFO: Pod wasn't evicted. Proceeding
  May 25 13:19:31.490: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/25/24 13:19:31.501
  STEP: Waiting some time to make sure that toleration time passed. @ 05/25/24 13:19:31.518
  E0525 13:19:32.045964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:33.046050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:34.046171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:35.046362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:36.046432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:37.046660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:38.046871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:39.046939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:40.047094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:41.047216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:42.047277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:43.048258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:44.048364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:45.048460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:46.048657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:47.048957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:48.049058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:49.049238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:50.049412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:51.049513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:52.049715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:53.049930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:54.050862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:55.050983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:56.051192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:57.052261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:58.052358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:19:59.053138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:00.053237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:01.053495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:02.053791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:03.053904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:04.054116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:05.054584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:06.054788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:07.054889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:08.055149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:09.055205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:10.055250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:11.056274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:12.056363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:13.056460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:14.056772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:15.057383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:16.057587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:17.057831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:18.058041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:19.058243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:20.058930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:21.059193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:22.059258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:23.060279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:24.060365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:25.060424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:26.060493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:27.061527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:28.062173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:29.062438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:30.063328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:31.063423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:32.064517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:33.064727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:34.064934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:35.065576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:36.065673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:37.065742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:38.065859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:39.066149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:40.066361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:41.066521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:42.066792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:43.067039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:44.067207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:45.068036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:46.068241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:20:46.518: INFO: Pod wasn't evicted. Test successful
  May 25 13:20:46.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-4536" for this suite. @ 05/25/24 13:20:46.524
• [135.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 05/25/24 13:20:46.531
  May 25 13:20:46.531: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename runtimeclass @ 05/25/24 13:20:46.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:20:46.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:20:46.549
  May 25 13:20:46.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8988" for this suite. @ 05/25/24 13:20:46.561
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 05/25/24 13:20:46.568
  May 25 13:20:46.568: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename configmap @ 05/25/24 13:20:46.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:20:46.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:20:46.585
  STEP: Creating configMap with name configmap-test-volume-fcbd9bb1-e759-4331-82e3-d3bfbf5d6ba1 @ 05/25/24 13:20:46.588
  STEP: Creating a pod to test consume configMaps @ 05/25/24 13:20:46.592
  E0525 13:20:47.068352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:48.068646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:20:48.612
  May 25 13:20:48.616: INFO: Trying to get logs from node ip-172-31-15-138 pod pod-configmaps-9f20a3ce-1df4-4c13-8bf2-73c769ff0259 container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/25/24 13:20:48.627
  May 25 13:20:48.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2135" for this suite. @ 05/25/24 13:20:48.648
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 05/25/24 13:20:48.655
  May 25 13:20:48.655: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename crd-watch @ 05/25/24 13:20:48.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:20:48.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:20:48.673
  May 25 13:20:48.676: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  E0525 13:20:49.068731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:50.068991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:51.069113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 05/25/24 13:20:51.217
  May 25 13:20:51.221: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-25T13:20:51Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-25T13:20:51Z]] name:name1 resourceVersion:27752 uid:02b38bfd-bc2e-465b-b47a-e909cff7acc9] num:map[num1:9223372036854775807 num2:1000000]]}
  E0525 13:20:52.069794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:53.070715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:54.071581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:55.071833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:56.072793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:57.073461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:58.073619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:20:59.073794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:00.074055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:01.074356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 05/25/24 13:21:01.222
  May 25 13:21:01.229: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-25T13:21:01Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-25T13:21:01Z]] name:name2 resourceVersion:27809 uid:c4f273c5-35be-4e26-b329-29efcf5be7de] num:map[num1:9223372036854775807 num2:1000000]]}
  E0525 13:21:02.075461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:03.075550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:04.076263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:05.076326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:06.076722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:07.076946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:08.077073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:09.077171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:10.077349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:11.077443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 05/25/24 13:21:11.229
  May 25 13:21:11.236: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-25T13:20:51Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-25T13:21:11Z]] name:name1 resourceVersion:27829 uid:02b38bfd-bc2e-465b-b47a-e909cff7acc9] num:map[num1:9223372036854775807 num2:1000000]]}
  E0525 13:21:12.078264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:13.078372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:14.078479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:15.078781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:16.079039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:17.079198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:18.080344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:19.080431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:20.080513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:21.080646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 05/25/24 13:21:21.237
  May 25 13:21:21.245: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-25T13:21:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-25T13:21:21Z]] name:name2 resourceVersion:27850 uid:c4f273c5-35be-4e26-b329-29efcf5be7de] num:map[num1:9223372036854775807 num2:1000000]]}
  E0525 13:21:22.081170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:23.081884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:24.081990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:25.082463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:26.082770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:27.082879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:28.083010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:29.083832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:30.083933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:31.084341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 05/25/24 13:21:31.245
  May 25 13:21:31.253: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-25T13:20:51Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-25T13:21:11Z]] name:name1 resourceVersion:27871 uid:02b38bfd-bc2e-465b-b47a-e909cff7acc9] num:map[num1:9223372036854775807 num2:1000000]]}
  E0525 13:21:32.084590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:33.084747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:34.084918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:35.085172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:36.085310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:37.085427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:38.085615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:39.085792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:40.085987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:41.086166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 05/25/24 13:21:41.254
  May 25 13:21:41.263: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-25T13:21:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-25T13:21:21Z]] name:name2 resourceVersion:27891 uid:c4f273c5-35be-4e26-b329-29efcf5be7de] num:map[num1:9223372036854775807 num2:1000000]]}
  E0525 13:21:42.086457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:43.086625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:44.086832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:45.086873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:46.086955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:47.087170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:48.087330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:49.087429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:50.088264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:51.088367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:21:51.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-9223" for this suite. @ 05/25/24 13:21:51.783
• [63.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 05/25/24 13:21:51.79
  May 25 13:21:51.790: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/25/24 13:21:51.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:21:51.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:21:51.808
  May 25 13:21:51.812: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  E0525 13:21:52.089363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:21:52.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5666" for this suite. @ 05/25/24 13:21:52.841
• [1.059 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 05/25/24 13:21:52.85
  May 25 13:21:52.850: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename subpath @ 05/25/24 13:21:52.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:21:52.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:21:52.867
  STEP: Setting up data @ 05/25/24 13:21:52.869
  STEP: Creating pod pod-subpath-test-configmap-hlq6 @ 05/25/24 13:21:52.878
  STEP: Creating a pod to test atomic-volume-subpath @ 05/25/24 13:21:52.878
  E0525 13:21:53.089730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:54.089769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:55.090783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:56.090862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:57.091593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:58.091641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:21:59.091842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:00.091929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:01.092872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:02.092996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:03.093127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:04.093297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:05.093892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:06.094244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:07.095289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:08.095394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:09.095491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:10.096285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:11.097052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:12.097143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:13.097896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:14.098029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:15.098562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:16.098799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:22:16.954
  May 25 13:22:16.958: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-subpath-test-configmap-hlq6 container test-container-subpath-configmap-hlq6: <nil>
  STEP: delete the pod @ 05/25/24 13:22:16.973
  STEP: Deleting pod pod-subpath-test-configmap-hlq6 @ 05/25/24 13:22:16.99
  May 25 13:22:16.990: INFO: Deleting pod "pod-subpath-test-configmap-hlq6" in namespace "subpath-251"
  May 25 13:22:16.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-251" for this suite. @ 05/25/24 13:22:16.998
• [24.154 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 05/25/24 13:22:17.004
  May 25 13:22:17.004: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename gc @ 05/25/24 13:22:17.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:22:17.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:22:17.023
  STEP: create the rc @ 05/25/24 13:22:17.029
  W0525 13:22:17.036303      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0525 13:22:17.099553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:18.107475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:19.107944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:20.108427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:21.108996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:22.111045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/25/24 13:22:23.041
  STEP: wait for the rc to be deleted @ 05/25/24 13:22:23.049
  E0525 13:22:23.111638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:24.111729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:25.111780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:26.111810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:27.111895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/25/24 13:22:28.054
  E0525 13:22:28.112285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:29.112387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:30.112453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:31.112568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:32.112641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:33.112791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:34.112881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:35.113668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:36.113830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:37.114163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:38.114356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:39.114555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:40.114777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:41.115847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:42.115948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:43.116066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:44.116388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:45.117461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:46.117689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:47.117896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:48.118118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:49.118307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:50.118634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:51.118718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:52.118824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:53.119008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:54.119186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:55.119379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:56.120269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:22:57.120351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/25/24 13:22:58.062
  W0525 13:22:58.066880      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May 25 13:22:58.066: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 25 13:22:58.066: INFO: Deleting pod "simpletest.rc-22pld" in namespace "gc-2356"
  May 25 13:22:58.078: INFO: Deleting pod "simpletest.rc-2khjg" in namespace "gc-2356"
  May 25 13:22:58.091: INFO: Deleting pod "simpletest.rc-2mfq9" in namespace "gc-2356"
  E0525 13:22:58.120816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:22:58.181: INFO: Deleting pod "simpletest.rc-2t26r" in namespace "gc-2356"
  May 25 13:22:58.194: INFO: Deleting pod "simpletest.rc-46h85" in namespace "gc-2356"
  May 25 13:22:58.210: INFO: Deleting pod "simpletest.rc-4h8gz" in namespace "gc-2356"
  May 25 13:22:58.222: INFO: Deleting pod "simpletest.rc-5fq77" in namespace "gc-2356"
  May 25 13:22:58.236: INFO: Deleting pod "simpletest.rc-5m88s" in namespace "gc-2356"
  May 25 13:22:58.250: INFO: Deleting pod "simpletest.rc-65l68" in namespace "gc-2356"
  May 25 13:22:58.261: INFO: Deleting pod "simpletest.rc-6cqdw" in namespace "gc-2356"
  May 25 13:22:58.275: INFO: Deleting pod "simpletest.rc-6gqq8" in namespace "gc-2356"
  May 25 13:22:58.287: INFO: Deleting pod "simpletest.rc-6ttk5" in namespace "gc-2356"
  May 25 13:22:58.303: INFO: Deleting pod "simpletest.rc-7j78k" in namespace "gc-2356"
  May 25 13:22:58.318: INFO: Deleting pod "simpletest.rc-7wbfs" in namespace "gc-2356"
  May 25 13:22:58.332: INFO: Deleting pod "simpletest.rc-7x64s" in namespace "gc-2356"
  May 25 13:22:58.344: INFO: Deleting pod "simpletest.rc-8m6bx" in namespace "gc-2356"
  May 25 13:22:58.361: INFO: Deleting pod "simpletest.rc-8ptf4" in namespace "gc-2356"
  May 25 13:22:58.374: INFO: Deleting pod "simpletest.rc-8tdtt" in namespace "gc-2356"
  May 25 13:22:58.385: INFO: Deleting pod "simpletest.rc-8wlvq" in namespace "gc-2356"
  May 25 13:22:58.398: INFO: Deleting pod "simpletest.rc-8xxb5" in namespace "gc-2356"
  May 25 13:22:58.413: INFO: Deleting pod "simpletest.rc-927zd" in namespace "gc-2356"
  May 25 13:22:58.429: INFO: Deleting pod "simpletest.rc-98rgr" in namespace "gc-2356"
  May 25 13:22:58.447: INFO: Deleting pod "simpletest.rc-b4d9v" in namespace "gc-2356"
  May 25 13:22:58.463: INFO: Deleting pod "simpletest.rc-b5fn2" in namespace "gc-2356"
  May 25 13:22:58.479: INFO: Deleting pod "simpletest.rc-b82w8" in namespace "gc-2356"
  May 25 13:22:58.493: INFO: Deleting pod "simpletest.rc-bbpgv" in namespace "gc-2356"
  May 25 13:22:58.509: INFO: Deleting pod "simpletest.rc-bcxt9" in namespace "gc-2356"
  May 25 13:22:58.524: INFO: Deleting pod "simpletest.rc-bgn52" in namespace "gc-2356"
  May 25 13:22:58.537: INFO: Deleting pod "simpletest.rc-bjjmv" in namespace "gc-2356"
  May 25 13:22:58.550: INFO: Deleting pod "simpletest.rc-c77h5" in namespace "gc-2356"
  May 25 13:22:58.563: INFO: Deleting pod "simpletest.rc-cgrzh" in namespace "gc-2356"
  May 25 13:22:58.574: INFO: Deleting pod "simpletest.rc-cjsk9" in namespace "gc-2356"
  May 25 13:22:58.589: INFO: Deleting pod "simpletest.rc-cpjp2" in namespace "gc-2356"
  May 25 13:22:58.601: INFO: Deleting pod "simpletest.rc-d528q" in namespace "gc-2356"
  May 25 13:22:58.616: INFO: Deleting pod "simpletest.rc-ddsct" in namespace "gc-2356"
  May 25 13:22:58.630: INFO: Deleting pod "simpletest.rc-ddvhw" in namespace "gc-2356"
  May 25 13:22:58.645: INFO: Deleting pod "simpletest.rc-dj5ff" in namespace "gc-2356"
  May 25 13:22:58.664: INFO: Deleting pod "simpletest.rc-dlmcb" in namespace "gc-2356"
  May 25 13:22:58.680: INFO: Deleting pod "simpletest.rc-dmf4q" in namespace "gc-2356"
  May 25 13:22:58.695: INFO: Deleting pod "simpletest.rc-fb2bg" in namespace "gc-2356"
  May 25 13:22:58.711: INFO: Deleting pod "simpletest.rc-ft5ps" in namespace "gc-2356"
  May 25 13:22:58.727: INFO: Deleting pod "simpletest.rc-grnnt" in namespace "gc-2356"
  May 25 13:22:58.739: INFO: Deleting pod "simpletest.rc-gx5tx" in namespace "gc-2356"
  May 25 13:22:58.752: INFO: Deleting pod "simpletest.rc-hp679" in namespace "gc-2356"
  May 25 13:22:58.762: INFO: Deleting pod "simpletest.rc-htmd6" in namespace "gc-2356"
  May 25 13:22:58.780: INFO: Deleting pod "simpletest.rc-j2ws5" in namespace "gc-2356"
  May 25 13:22:58.793: INFO: Deleting pod "simpletest.rc-kcjvs" in namespace "gc-2356"
  May 25 13:22:58.807: INFO: Deleting pod "simpletest.rc-kdm24" in namespace "gc-2356"
  May 25 13:22:58.820: INFO: Deleting pod "simpletest.rc-kg8s6" in namespace "gc-2356"
  May 25 13:22:58.836: INFO: Deleting pod "simpletest.rc-kw7qz" in namespace "gc-2356"
  May 25 13:22:58.853: INFO: Deleting pod "simpletest.rc-lc9wp" in namespace "gc-2356"
  May 25 13:22:58.865: INFO: Deleting pod "simpletest.rc-m4t55" in namespace "gc-2356"
  May 25 13:22:58.876: INFO: Deleting pod "simpletest.rc-m5nrg" in namespace "gc-2356"
  May 25 13:22:58.889: INFO: Deleting pod "simpletest.rc-mr7vh" in namespace "gc-2356"
  May 25 13:22:58.902: INFO: Deleting pod "simpletest.rc-ms69h" in namespace "gc-2356"
  May 25 13:22:58.917: INFO: Deleting pod "simpletest.rc-mx67s" in namespace "gc-2356"
  May 25 13:22:58.933: INFO: Deleting pod "simpletest.rc-n6t6j" in namespace "gc-2356"
  May 25 13:22:58.956: INFO: Deleting pod "simpletest.rc-ncjbm" in namespace "gc-2356"
  May 25 13:22:58.971: INFO: Deleting pod "simpletest.rc-ncrzq" in namespace "gc-2356"
  May 25 13:22:58.987: INFO: Deleting pod "simpletest.rc-njw7x" in namespace "gc-2356"
  May 25 13:22:59.003: INFO: Deleting pod "simpletest.rc-nlkf4" in namespace "gc-2356"
  May 25 13:22:59.015: INFO: Deleting pod "simpletest.rc-nlt2p" in namespace "gc-2356"
  May 25 13:22:59.029: INFO: Deleting pod "simpletest.rc-nnw9q" in namespace "gc-2356"
  May 25 13:22:59.042: INFO: Deleting pod "simpletest.rc-nppp6" in namespace "gc-2356"
  May 25 13:22:59.057: INFO: Deleting pod "simpletest.rc-pbdkn" in namespace "gc-2356"
  May 25 13:22:59.076: INFO: Deleting pod "simpletest.rc-pbgvg" in namespace "gc-2356"
  May 25 13:22:59.090: INFO: Deleting pod "simpletest.rc-pzgjs" in namespace "gc-2356"
  May 25 13:22:59.110: INFO: Deleting pod "simpletest.rc-q6rw5" in namespace "gc-2356"
  E0525 13:22:59.121852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:22:59.124: INFO: Deleting pod "simpletest.rc-qjlgq" in namespace "gc-2356"
  May 25 13:22:59.137: INFO: Deleting pod "simpletest.rc-qrlxn" in namespace "gc-2356"
  May 25 13:22:59.175: INFO: Deleting pod "simpletest.rc-rc7b7" in namespace "gc-2356"
  May 25 13:22:59.222: INFO: Deleting pod "simpletest.rc-rhshh" in namespace "gc-2356"
  May 25 13:22:59.269: INFO: Deleting pod "simpletest.rc-rv5rn" in namespace "gc-2356"
  May 25 13:22:59.319: INFO: Deleting pod "simpletest.rc-shzz4" in namespace "gc-2356"
  May 25 13:22:59.367: INFO: Deleting pod "simpletest.rc-szm9c" in namespace "gc-2356"
  May 25 13:22:59.415: INFO: Deleting pod "simpletest.rc-tmgjr" in namespace "gc-2356"
  May 25 13:22:59.470: INFO: Deleting pod "simpletest.rc-tqfvl" in namespace "gc-2356"
  May 25 13:22:59.541: INFO: Deleting pod "simpletest.rc-tsxfp" in namespace "gc-2356"
  May 25 13:22:59.569: INFO: Deleting pod "simpletest.rc-tx744" in namespace "gc-2356"
  May 25 13:22:59.618: INFO: Deleting pod "simpletest.rc-v2bqp" in namespace "gc-2356"
  May 25 13:22:59.676: INFO: Deleting pod "simpletest.rc-vbd4v" in namespace "gc-2356"
  May 25 13:22:59.723: INFO: Deleting pod "simpletest.rc-vbh55" in namespace "gc-2356"
  May 25 13:22:59.775: INFO: Deleting pod "simpletest.rc-vhgg5" in namespace "gc-2356"
  May 25 13:22:59.826: INFO: Deleting pod "simpletest.rc-vhjn2" in namespace "gc-2356"
  May 25 13:22:59.886: INFO: Deleting pod "simpletest.rc-vhmkk" in namespace "gc-2356"
  May 25 13:22:59.920: INFO: Deleting pod "simpletest.rc-vjnqt" in namespace "gc-2356"
  May 25 13:22:59.989: INFO: Deleting pod "simpletest.rc-vkd4m" in namespace "gc-2356"
  May 25 13:23:00.027: INFO: Deleting pod "simpletest.rc-vwplt" in namespace "gc-2356"
  May 25 13:23:00.067: INFO: Deleting pod "simpletest.rc-vwswl" in namespace "gc-2356"
  May 25 13:23:00.117: INFO: Deleting pod "simpletest.rc-wcmr9" in namespace "gc-2356"
  E0525 13:23:00.122387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:23:00.170: INFO: Deleting pod "simpletest.rc-wqm7d" in namespace "gc-2356"
  May 25 13:23:00.227: INFO: Deleting pod "simpletest.rc-wt9v5" in namespace "gc-2356"
  May 25 13:23:00.269: INFO: Deleting pod "simpletest.rc-wvdkt" in namespace "gc-2356"
  May 25 13:23:00.337: INFO: Deleting pod "simpletest.rc-x8vcr" in namespace "gc-2356"
  May 25 13:23:00.368: INFO: Deleting pod "simpletest.rc-xgnql" in namespace "gc-2356"
  May 25 13:23:00.431: INFO: Deleting pod "simpletest.rc-xvdrw" in namespace "gc-2356"
  May 25 13:23:00.468: INFO: Deleting pod "simpletest.rc-z2z94" in namespace "gc-2356"
  May 25 13:23:00.522: INFO: Deleting pod "simpletest.rc-z4vnw" in namespace "gc-2356"
  May 25 13:23:00.567: INFO: Deleting pod "simpletest.rc-zc47s" in namespace "gc-2356"
  May 25 13:23:00.624: INFO: Deleting pod "simpletest.rc-zpb6v" in namespace "gc-2356"
  May 25 13:23:00.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2356" for this suite. @ 05/25/24 13:23:00.724
• [43.759 seconds]
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 05/25/24 13:23:00.764
  May 25 13:23:00.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename secrets @ 05/25/24 13:23:00.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:23:00.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:23:00.784
  STEP: creating secret secrets-2024/secret-test-e104a86b-5aaa-4ac5-a375-c80349cda00e @ 05/25/24 13:23:00.792
  STEP: Creating a pod to test consume secrets @ 05/25/24 13:23:00.815
  E0525 13:23:01.124405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:02.124527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:03.124869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:04.125141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:05.125813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:06.125885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:23:06.855
  May 25 13:23:06.858: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-configmaps-1325a9b9-e0fc-4feb-8ce7-22b60c5ed8c6 container env-test: <nil>
  STEP: delete the pod @ 05/25/24 13:23:06.867
  May 25 13:23:06.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2024" for this suite. @ 05/25/24 13:23:06.887
• [6.130 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 05/25/24 13:23:06.894
  May 25 13:23:06.894: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename resourcequota @ 05/25/24 13:23:06.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:23:06.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:23:06.912
  E0525 13:23:07.126729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:08.126850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:09.126953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:10.127026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:11.128032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:12.128615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:13.129083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:14.129412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:15.129540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:16.129731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:17.130163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:18.131103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:19.131235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:20.132291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:21.132715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:22.133541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:23.134197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/25/24 13:23:23.919
  E0525 13:23:24.135190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:25.135810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:26.136261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:27.136351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:28.137205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/25/24 13:23:28.924
  STEP: Ensuring resource quota status is calculated @ 05/25/24 13:23:28.929
  E0525 13:23:29.138221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:30.138847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 05/25/24 13:23:30.935
  STEP: Ensuring resource quota status captures configMap creation @ 05/25/24 13:23:30.948
  E0525 13:23:31.139425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:32.139552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 05/25/24 13:23:32.954
  STEP: Ensuring resource quota status released usage @ 05/25/24 13:23:32.961
  E0525 13:23:33.140286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:34.140358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:23:34.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5270" for this suite. @ 05/25/24 13:23:34.97
• [28.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 05/25/24 13:23:34.979
  May 25 13:23:34.979: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename resourcequota @ 05/25/24 13:23:34.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:23:34.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:23:34.997
  STEP: Creating a ResourceQuota with best effort scope @ 05/25/24 13:23:35
  STEP: Ensuring ResourceQuota status is calculated @ 05/25/24 13:23:35.005
  E0525 13:23:35.140789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:36.140886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 05/25/24 13:23:37.009
  STEP: Ensuring ResourceQuota status is calculated @ 05/25/24 13:23:37.015
  E0525 13:23:37.141420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:38.141514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 05/25/24 13:23:39.019
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/25/24 13:23:39.031
  E0525 13:23:39.142132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:40.142256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/25/24 13:23:41.035
  E0525 13:23:41.143112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:42.143229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/25/24 13:23:43.041
  STEP: Ensuring resource quota status released the pod usage @ 05/25/24 13:23:43.05
  E0525 13:23:43.144182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:44.144272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 05/25/24 13:23:45.055
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/25/24 13:23:45.066
  E0525 13:23:45.144832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:46.145897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/25/24 13:23:47.07
  E0525 13:23:47.146094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:48.146175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/25/24 13:23:49.075
  STEP: Ensuring resource quota status released the pod usage @ 05/25/24 13:23:49.094
  E0525 13:23:49.147190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:50.147355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:23:51.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3771" for this suite. @ 05/25/24 13:23:51.102
• [16.131 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 05/25/24 13:23:51.11
  May 25 13:23:51.110: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename ingressclass @ 05/25/24 13:23:51.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:23:51.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:23:51.129
  STEP: getting /apis @ 05/25/24 13:23:51.132
  STEP: getting /apis/networking.k8s.io @ 05/25/24 13:23:51.135
  STEP: getting /apis/networking.k8s.iov1 @ 05/25/24 13:23:51.136
  STEP: creating @ 05/25/24 13:23:51.137
  E0525 13:23:51.147531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting @ 05/25/24 13:23:51.152
  STEP: listing @ 05/25/24 13:23:51.155
  STEP: watching @ 05/25/24 13:23:51.159
  May 25 13:23:51.159: INFO: starting watch
  STEP: patching @ 05/25/24 13:23:51.16
  STEP: updating @ 05/25/24 13:23:51.164
  May 25 13:23:51.173: INFO: waiting for watch events with expected annotations
  May 25 13:23:51.173: INFO: saw patched and updated annotations
  STEP: deleting @ 05/25/24 13:23:51.173
  STEP: deleting a collection @ 05/25/24 13:23:51.185
  May 25 13:23:51.200: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-8900" for this suite. @ 05/25/24 13:23:51.204
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 05/25/24 13:23:51.211
  May 25 13:23:51.211: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir @ 05/25/24 13:23:51.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:23:51.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:23:51.229
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/25/24 13:23:51.232
  E0525 13:23:52.147689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:53.147766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:54.148395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:55.148434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:23:55.256
  May 25 13:23:55.259: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-bc97a102-1e2f-442c-a257-70da313ed79c container test-container: <nil>
  STEP: delete the pod @ 05/25/24 13:23:55.266
  May 25 13:23:55.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6778" for this suite. @ 05/25/24 13:23:55.364
• [4.159 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 05/25/24 13:23:55.37
  May 25 13:23:55.370: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir @ 05/25/24 13:23:55.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:23:55.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:23:55.387
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/25/24 13:23:55.392
  E0525 13:23:56.149376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:57.149462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:58.150479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:23:59.150558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:23:59.42
  May 25 13:23:59.423: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-6c0f6380-810d-4dc3-b3a6-26d19c687f95 container test-container: <nil>
  STEP: delete the pod @ 05/25/24 13:23:59.43
  May 25 13:23:59.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5707" for this suite. @ 05/25/24 13:23:59.448
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 05/25/24 13:23:59.456
  May 25 13:23:59.456: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename resourcequota @ 05/25/24 13:23:59.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:23:59.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:23:59.473
  STEP: Creating a ResourceQuota @ 05/25/24 13:23:59.476
  STEP: Getting a ResourceQuota @ 05/25/24 13:23:59.481
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/25/24 13:23:59.486
  STEP: Patching the ResourceQuota @ 05/25/24 13:23:59.488
  STEP: Deleting a Collection of ResourceQuotas @ 05/25/24 13:23:59.496
  STEP: Verifying the deleted ResourceQuota @ 05/25/24 13:23:59.504
  May 25 13:23:59.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4466" for this suite. @ 05/25/24 13:23:59.51
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 05/25/24 13:23:59.518
  May 25 13:23:59.518: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename statefulset @ 05/25/24 13:23:59.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:23:59.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:23:59.535
  STEP: Creating service test in namespace statefulset-6328 @ 05/25/24 13:23:59.538
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/25/24 13:23:59.543
  STEP: Creating stateful set ss in namespace statefulset-6328 @ 05/25/24 13:23:59.551
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6328 @ 05/25/24 13:23:59.557
  May 25 13:23:59.560: INFO: Found 0 stateful pods, waiting for 1
  E0525 13:24:00.150915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:01.151627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:02.151727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:03.151808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:04.152320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:05.152481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:06.152576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:07.153502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:08.153590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:09.153764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:09.562: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/25/24 13:24:09.563
  May 25 13:24:09.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-6328 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 25 13:24:09.662: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 25 13:24:09.662: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 25 13:24:09.662: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 25 13:24:09.666: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0525 13:24:10.153876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:11.154022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:12.154146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:13.154236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:14.154320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:15.154451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:16.154513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:17.154635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:18.154844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:19.155584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:19.668: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 25 13:24:19.668: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 25 13:24:19.687: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.99999978s
  E0525 13:24:20.156315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:20.693: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.994728192s
  E0525 13:24:21.156783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:21.698: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.989085489s
  E0525 13:24:22.156964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:22.703: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.984162958s
  E0525 13:24:23.157681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:23.707: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.979484704s
  E0525 13:24:24.158148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:24.712: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.975030389s
  E0525 13:24:25.158221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:25.717: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.969809001s
  E0525 13:24:26.159103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:26.722: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.965011368s
  E0525 13:24:27.160008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:27.727: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.960143139s
  E0525 13:24:28.160488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:28.731: INFO: Verifying statefulset ss doesn't scale past 1 for another 955.633915ms
  E0525 13:24:29.160576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6328 @ 05/25/24 13:24:29.732
  May 25 13:24:29.737: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-6328 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 25 13:24:29.828: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 25 13:24:29.828: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 25 13:24:29.828: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 25 13:24:29.832: INFO: Found 1 stateful pods, waiting for 3
  E0525 13:24:30.161340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:31.161564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:32.162041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:33.162140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:34.162232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:35.162316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:36.162677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:37.162909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:38.163150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:39.163197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:39.832: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May 25 13:24:39.832: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  May 25 13:24:39.832: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/25/24 13:24:39.832
  STEP: Scale down will halt with unhealthy stateful pod @ 05/25/24 13:24:39.832
  May 25 13:24:39.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-6328 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 25 13:24:39.924: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 25 13:24:39.924: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 25 13:24:39.924: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 25 13:24:39.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-6328 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 25 13:24:40.023: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 25 13:24:40.023: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 25 13:24:40.023: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 25 13:24:40.023: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-6328 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May 25 13:24:40.113: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May 25 13:24:40.113: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May 25 13:24:40.113: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May 25 13:24:40.113: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May 25 13:24:40.118: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0525 13:24:40.163505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:41.163609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:42.163714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:43.163796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:44.164264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:45.164453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:46.164576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:47.164644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:48.164745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:49.165007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:50.121: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May 25 13:24:50.121: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  May 25 13:24:50.121: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  May 25 13:24:50.137: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999778s
  E0525 13:24:50.165193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:51.142: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.992921811s
  E0525 13:24:51.165879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:52.147: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988024508s
  E0525 13:24:52.166433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:53.152: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.982831509s
  E0525 13:24:53.166633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:54.156: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.978277978s
  E0525 13:24:54.167147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:55.162: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.973912692s
  E0525 13:24:55.167578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:56.166: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.96822421s
  E0525 13:24:56.167881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:24:57.168244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:57.172: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.963873004s
  E0525 13:24:58.168412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:58.177: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.958442594s
  E0525 13:24:59.168745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:24:59.182: INFO: Verifying statefulset ss doesn't scale past 3 for another 952.932674ms
  E0525 13:25:00.168859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6328 @ 05/25/24 13:25:00.183
  May 25 13:25:00.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-6328 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 25 13:25:00.271: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 25 13:25:00.271: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 25 13:25:00.271: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 25 13:25:00.272: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-6328 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 25 13:25:00.364: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 25 13:25:00.364: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 25 13:25:00.364: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 25 13:25:00.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=statefulset-6328 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May 25 13:25:00.456: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May 25 13:25:00.456: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May 25 13:25:00.456: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May 25 13:25:00.456: INFO: Scaling statefulset ss to 0
  E0525 13:25:01.169775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:02.170539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:03.170843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:04.171215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:05.171459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:06.171560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:07.171658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:08.171775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:09.171868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:10.171997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/25/24 13:25:10.47
  May 25 13:25:10.470: INFO: Deleting all statefulset in ns statefulset-6328
  May 25 13:25:10.473: INFO: Scaling statefulset ss to 0
  May 25 13:25:10.485: INFO: Waiting for statefulset status.replicas updated to 0
  May 25 13:25:10.488: INFO: Deleting statefulset ss
  May 25 13:25:10.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6328" for this suite. @ 05/25/24 13:25:10.506
• [70.995 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 05/25/24 13:25:10.516
  May 25 13:25:10.516: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename field-validation @ 05/25/24 13:25:10.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:25:10.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:25:10.534
  May 25 13:25:10.538: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  E0525 13:25:11.172933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:12.173090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0525 13:25:13.074327      21 warnings.go:70] unknown field "alpha"
  W0525 13:25:13.074344      21 warnings.go:70] unknown field "beta"
  W0525 13:25:13.074347      21 warnings.go:70] unknown field "delta"
  W0525 13:25:13.074350      21 warnings.go:70] unknown field "epsilon"
  W0525 13:25:13.074352      21 warnings.go:70] unknown field "gamma"
  E0525 13:25:13.174068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:25:13.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5108" for this suite. @ 05/25/24 13:25:13.621
• [3.111 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 05/25/24 13:25:13.628
  May 25 13:25:13.628: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename replicaset @ 05/25/24 13:25:13.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:25:13.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:25:13.644
  STEP: Create a Replicaset @ 05/25/24 13:25:13.65
  STEP: Verify that the required pods have come up. @ 05/25/24 13:25:13.655
  May 25 13:25:13.659: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0525 13:25:14.174934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:15.175163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:16.175752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:17.175855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:18.176794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:25:18.664: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/25/24 13:25:18.664
  STEP: Getting /status @ 05/25/24 13:25:18.664
  May 25 13:25:18.668: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/25/24 13:25:18.668
  May 25 13:25:18.679: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/25/24 13:25:18.679
  May 25 13:25:18.680: INFO: Observed &ReplicaSet event: ADDED
  May 25 13:25:18.680: INFO: Observed &ReplicaSet event: MODIFIED
  May 25 13:25:18.680: INFO: Observed &ReplicaSet event: MODIFIED
  May 25 13:25:18.680: INFO: Observed &ReplicaSet event: MODIFIED
  May 25 13:25:18.680: INFO: Found replicaset test-rs in namespace replicaset-6437 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 25 13:25:18.680: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/25/24 13:25:18.681
  May 25 13:25:18.681: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May 25 13:25:18.686: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/25/24 13:25:18.686
  May 25 13:25:18.688: INFO: Observed &ReplicaSet event: ADDED
  May 25 13:25:18.688: INFO: Observed &ReplicaSet event: MODIFIED
  May 25 13:25:18.688: INFO: Observed &ReplicaSet event: MODIFIED
  May 25 13:25:18.688: INFO: Observed &ReplicaSet event: MODIFIED
  May 25 13:25:18.688: INFO: Observed replicaset test-rs in namespace replicaset-6437 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 25 13:25:18.688: INFO: Observed &ReplicaSet event: MODIFIED
  May 25 13:25:18.688: INFO: Found replicaset test-rs in namespace replicaset-6437 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  May 25 13:25:18.688: INFO: Replicaset test-rs has a patched status
  May 25 13:25:18.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6437" for this suite. @ 05/25/24 13:25:18.692
• [5.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 05/25/24 13:25:18.699
  May 25 13:25:18.699: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 13:25:18.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:25:18.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:25:18.717
  STEP: Creating configMap with name projected-configmap-test-volume-map-e8952817-bf6b-41b5-8d4c-34674296889e @ 05/25/24 13:25:18.72
  STEP: Creating a pod to test consume configMaps @ 05/25/24 13:25:18.727
  E0525 13:25:19.176995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:20.177204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:21.178077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:22.178208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:25:22.758
  May 25 13:25:22.762: INFO: Trying to get logs from node ip-172-31-15-138 pod pod-projected-configmaps-d9f5df38-d03d-46d9-afc8-19c1963f99b6 container agnhost-container: <nil>
  STEP: delete the pod @ 05/25/24 13:25:22.781
  May 25 13:25:22.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7119" for this suite. @ 05/25/24 13:25:22.804
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 05/25/24 13:25:22.812
  May 25 13:25:22.812: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename dns @ 05/25/24 13:25:22.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:25:22.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:25:22.83
  STEP: Creating a test headless service @ 05/25/24 13:25:22.834
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9641 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9641;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9641 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9641;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9641.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9641.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9641.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9641.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9641.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9641.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9641.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9641.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9641.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9641.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9641.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9641.svc;check="$$(dig +notcp +noall +answer +search 98.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.98_udp@PTR;check="$$(dig +tcp +noall +answer +search 98.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.98_tcp@PTR;sleep 1; done
   @ 05/25/24 13:25:22.856
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9641 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9641;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9641 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9641;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9641.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9641.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9641.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9641.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9641.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9641.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9641.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9641.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9641.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9641.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9641.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9641.svc;check="$$(dig +notcp +noall +answer +search 98.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.98_udp@PTR;check="$$(dig +tcp +noall +answer +search 98.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.98_tcp@PTR;sleep 1; done
   @ 05/25/24 13:25:22.856
  STEP: creating a pod to probe DNS @ 05/25/24 13:25:22.856
  STEP: submitting the pod to kubernetes @ 05/25/24 13:25:22.857
  E0525 13:25:23.178803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:24.179756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/25/24 13:25:24.882
  STEP: looking for the results for each expected name from probers @ 05/25/24 13:25:24.886
  May 25 13:25:24.890: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9641/dns-test-33b8211e-a515-4d21-becf-ad90ded71e91: the server could not find the requested resource (get pods dns-test-33b8211e-a515-4d21-becf-ad90ded71e91)
  May 25 13:25:24.893: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9641/dns-test-33b8211e-a515-4d21-becf-ad90ded71e91: the server could not find the requested resource (get pods dns-test-33b8211e-a515-4d21-becf-ad90ded71e91)
  May 25 13:25:24.897: INFO: Unable to read wheezy_udp@dns-test-service.dns-9641 from pod dns-9641/dns-test-33b8211e-a515-4d21-becf-ad90ded71e91: the server could not find the requested resource (get pods dns-test-33b8211e-a515-4d21-becf-ad90ded71e91)
  May 25 13:25:24.900: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9641 from pod dns-9641/dns-test-33b8211e-a515-4d21-becf-ad90ded71e91: the server could not find the requested resource (get pods dns-test-33b8211e-a515-4d21-becf-ad90ded71e91)
  May 25 13:25:24.903: INFO: Unable to read wheezy_udp@dns-test-service.dns-9641.svc from pod dns-9641/dns-test-33b8211e-a515-4d21-becf-ad90ded71e91: the server could not find the requested resource (get pods dns-test-33b8211e-a515-4d21-becf-ad90ded71e91)
  May 25 13:25:24.907: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9641.svc from pod dns-9641/dns-test-33b8211e-a515-4d21-becf-ad90ded71e91: the server could not find the requested resource (get pods dns-test-33b8211e-a515-4d21-becf-ad90ded71e91)
  May 25 13:25:24.933: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9641/dns-test-33b8211e-a515-4d21-becf-ad90ded71e91: the server could not find the requested resource (get pods dns-test-33b8211e-a515-4d21-becf-ad90ded71e91)
  May 25 13:25:24.936: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9641/dns-test-33b8211e-a515-4d21-becf-ad90ded71e91: the server could not find the requested resource (get pods dns-test-33b8211e-a515-4d21-becf-ad90ded71e91)
  May 25 13:25:24.940: INFO: Unable to read jessie_udp@dns-test-service.dns-9641 from pod dns-9641/dns-test-33b8211e-a515-4d21-becf-ad90ded71e91: the server could not find the requested resource (get pods dns-test-33b8211e-a515-4d21-becf-ad90ded71e91)
  May 25 13:25:24.943: INFO: Unable to read jessie_tcp@dns-test-service.dns-9641 from pod dns-9641/dns-test-33b8211e-a515-4d21-becf-ad90ded71e91: the server could not find the requested resource (get pods dns-test-33b8211e-a515-4d21-becf-ad90ded71e91)
  May 25 13:25:24.947: INFO: Unable to read jessie_udp@dns-test-service.dns-9641.svc from pod dns-9641/dns-test-33b8211e-a515-4d21-becf-ad90ded71e91: the server could not find the requested resource (get pods dns-test-33b8211e-a515-4d21-becf-ad90ded71e91)
  May 25 13:25:24.950: INFO: Unable to read jessie_tcp@dns-test-service.dns-9641.svc from pod dns-9641/dns-test-33b8211e-a515-4d21-becf-ad90ded71e91: the server could not find the requested resource (get pods dns-test-33b8211e-a515-4d21-becf-ad90ded71e91)
  May 25 13:25:24.971: INFO: Lookups using dns-9641/dns-test-33b8211e-a515-4d21-becf-ad90ded71e91 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9641 wheezy_tcp@dns-test-service.dns-9641 wheezy_udp@dns-test-service.dns-9641.svc wheezy_tcp@dns-test-service.dns-9641.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9641 jessie_tcp@dns-test-service.dns-9641 jessie_udp@dns-test-service.dns-9641.svc jessie_tcp@dns-test-service.dns-9641.svc]

  May 25 13:25:24.977: INFO: Pod client logs for webserver: 
  May 25 13:25:24.983: INFO: Pod client logs for querier: 
  May 25 13:25:24.988: INFO: Pod client logs for jessie-querier: 
  E0525 13:25:25.179776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:26.179879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:27.179957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:28.180052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:29.180122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:25:29.972: INFO: DNS probes using dns-9641/dns-test-33b8211e-a515-4d21-becf-ad90ded71e91 succeeded

  STEP: deleting the pod @ 05/25/24 13:25:29.972
  STEP: deleting the test service @ 05/25/24 13:25:29.993
  STEP: deleting the test headless service @ 05/25/24 13:25:30.018
  May 25 13:25:30.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9641" for this suite. @ 05/25/24 13:25:30.034
• [7.228 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 05/25/24 13:25:30.04
  May 25 13:25:30.040: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl @ 05/25/24 13:25:30.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:25:30.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:25:30.057
  STEP: creating the pod @ 05/25/24 13:25:30.06
  May 25 13:25:30.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9133 create -f -'
  May 25 13:25:30.143: INFO: stderr: ""
  May 25 13:25:30.143: INFO: stdout: "pod/pause created\n"
  E0525 13:25:30.180968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:31.181308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/25/24 13:25:32.151
  May 25 13:25:32.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9133 label pods pause testing-label=testing-label-value'
  E0525 13:25:32.181891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:25:32.200: INFO: stderr: ""
  May 25 13:25:32.200: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/25/24 13:25:32.2
  May 25 13:25:32.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9133 get pod pause -L testing-label'
  May 25 13:25:32.239: INFO: stderr: ""
  May 25 13:25:32.239: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/25/24 13:25:32.239
  May 25 13:25:32.239: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9133 label pods pause testing-label-'
  May 25 13:25:32.285: INFO: stderr: ""
  May 25 13:25:32.285: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/25/24 13:25:32.285
  May 25 13:25:32.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9133 get pod pause -L testing-label'
  May 25 13:25:32.329: INFO: stderr: ""
  May 25 13:25:32.329: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 05/25/24 13:25:32.329
  May 25 13:25:32.329: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9133 delete --grace-period=0 --force -f -'
  May 25 13:25:32.384: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 25 13:25:32.384: INFO: stdout: "pod \"pause\" force deleted\n"
  May 25 13:25:32.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9133 get rc,svc -l name=pause --no-headers'
  May 25 13:25:32.429: INFO: stderr: "No resources found in kubectl-9133 namespace.\n"
  May 25 13:25:32.429: INFO: stdout: ""
  May 25 13:25:32.429: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-9133 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May 25 13:25:32.469: INFO: stderr: ""
  May 25 13:25:32.469: INFO: stdout: ""
  May 25 13:25:32.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9133" for this suite. @ 05/25/24 13:25:32.473
• [2.440 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 05/25/24 13:25:32.48
  May 25 13:25:32.480: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 13:25:32.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:25:32.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:25:32.5
  May 25 13:25:32.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-502" for this suite. @ 05/25/24 13:25:32.51
• [0.036 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 05/25/24 13:25:32.516
  May 25 13:25:32.516: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/25/24 13:25:32.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:25:32.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:25:32.533
  STEP: mirroring a new custom Endpoint @ 05/25/24 13:25:32.547
  May 25 13:25:32.555: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0525 13:25:33.182377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:34.182466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 05/25/24 13:25:34.56
  May 25 13:25:34.571: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0525 13:25:35.182553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:36.182640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 05/25/24 13:25:36.575
  May 25 13:25:36.587: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0525 13:25:37.182754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:38.182965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:25:38.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5839" for this suite. @ 05/25/24 13:25:38.596
• [6.086 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 05/25/24 13:25:38.603
  May 25 13:25:38.603: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename dns @ 05/25/24 13:25:38.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:25:38.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:25:38.622
  STEP: Creating a test headless service @ 05/25/24 13:25:38.625
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3725.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3725.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3725.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3725.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3725.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-3725.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3725.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-3725.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3725.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-3725.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3725.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-3725.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 191.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.191_udp@PTR;check="$$(dig +tcp +noall +answer +search 191.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.191_tcp@PTR;sleep 1; done
   @ 05/25/24 13:25:38.643
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3725.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3725.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3725.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3725.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3725.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3725.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3725.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3725.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3725.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3725.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3725.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3725.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 191.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.191_udp@PTR;check="$$(dig +tcp +noall +answer +search 191.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.191_tcp@PTR;sleep 1; done
   @ 05/25/24 13:25:38.643
  STEP: creating a pod to probe DNS @ 05/25/24 13:25:38.643
  STEP: submitting the pod to kubernetes @ 05/25/24 13:25:38.643
  E0525 13:25:39.183214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:40.183327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/25/24 13:25:40.665
  STEP: looking for the results for each expected name from probers @ 05/25/24 13:25:40.669
  May 25 13:25:40.673: INFO: Unable to read wheezy_udp@dns-test-service.dns-3725.svc.cluster.local from pod dns-3725/dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9: the server could not find the requested resource (get pods dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9)
  May 25 13:25:40.677: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3725.svc.cluster.local from pod dns-3725/dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9: the server could not find the requested resource (get pods dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9)
  May 25 13:25:40.681: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3725.svc.cluster.local from pod dns-3725/dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9: the server could not find the requested resource (get pods dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9)
  May 25 13:25:40.685: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3725.svc.cluster.local from pod dns-3725/dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9: the server could not find the requested resource (get pods dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9)
  May 25 13:25:40.704: INFO: Unable to read jessie_udp@dns-test-service.dns-3725.svc.cluster.local from pod dns-3725/dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9: the server could not find the requested resource (get pods dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9)
  May 25 13:25:40.708: INFO: Unable to read jessie_tcp@dns-test-service.dns-3725.svc.cluster.local from pod dns-3725/dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9: the server could not find the requested resource (get pods dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9)
  May 25 13:25:40.712: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3725.svc.cluster.local from pod dns-3725/dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9: the server could not find the requested resource (get pods dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9)
  May 25 13:25:40.715: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3725.svc.cluster.local from pod dns-3725/dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9: the server could not find the requested resource (get pods dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9)
  May 25 13:25:40.730: INFO: Lookups using dns-3725/dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9 failed for: [wheezy_udp@dns-test-service.dns-3725.svc.cluster.local wheezy_tcp@dns-test-service.dns-3725.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3725.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3725.svc.cluster.local jessie_udp@dns-test-service.dns-3725.svc.cluster.local jessie_tcp@dns-test-service.dns-3725.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3725.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3725.svc.cluster.local]

  May 25 13:25:40.736: INFO: Pod client logs for webserver: 
  May 25 13:25:40.742: INFO: Pod client logs for querier: 
  May 25 13:25:40.747: INFO: Pod client logs for jessie-querier: 
  E0525 13:25:41.184305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:42.184415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:43.184490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:44.184629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:45.185518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:25:45.728: INFO: DNS probes using dns-3725/dns-test-ceadf3be-ed4e-4874-b2fe-0fde63c118a9 succeeded

  STEP: deleting the pod @ 05/25/24 13:25:45.728
  STEP: deleting the test service @ 05/25/24 13:25:45.75
  STEP: deleting the test headless service @ 05/25/24 13:25:45.77
  May 25 13:25:45.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3725" for this suite. @ 05/25/24 13:25:45.788
• [7.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 05/25/24 13:25:45.796
  May 25 13:25:45.796: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename containers @ 05/25/24 13:25:45.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:25:45.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:25:45.814
  E0525 13:25:46.185601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:47.185870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:25:47.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-250" for this suite. @ 05/25/24 13:25:47.845
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 05/25/24 13:25:47.852
  May 25 13:25:47.852: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 13:25:47.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:25:47.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:25:47.867
  STEP: Creating configMap with name projected-configmap-test-volume-daa2b8e5-e947-498d-9f55-9c30ac49bb83 @ 05/25/24 13:25:47.87
  STEP: Creating a pod to test consume configMaps @ 05/25/24 13:25:47.875
  E0525 13:25:48.186573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:49.186796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:50.186919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:51.187595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:25:51.899
  May 25 13:25:51.903: INFO: Trying to get logs from node ip-172-31-15-138 pod pod-projected-configmaps-3a9888ba-cb17-421b-a71c-d5fa28109936 container agnhost-container: <nil>
  STEP: delete the pod @ 05/25/24 13:25:51.91
  May 25 13:25:51.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1193" for this suite. @ 05/25/24 13:25:51.931
• [4.085 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 05/25/24 13:25:51.937
  May 25 13:25:51.937: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename svcaccounts @ 05/25/24 13:25:51.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:25:51.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:25:51.955
  May 25 13:25:51.972: INFO: created pod
  E0525 13:25:52.187679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:53.187774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:54.188696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:55.189562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:25:55.986
  E0525 13:25:56.190199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:57.190302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:58.190479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:25:59.190575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:00.190698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:01.190792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:02.190869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:03.191020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:04.191210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:05.191489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:06.191578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:07.191669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:08.192259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:09.192432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:10.193107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:11.193329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:12.193444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:13.193604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:14.193820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:15.193889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:16.194205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:17.194313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:18.194403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:19.194573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:20.194783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:21.194922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:22.195153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:23.195361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:24.195439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:25.195667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:26:25.987: INFO: polling logs
  May 25 13:26:25.996: INFO: Pod logs: 
  I0525 13:25:52.547916       1 log.go:245] OK: Got token
  I0525 13:25:52.548017       1 log.go:245] validating with in-cluster discovery
  I0525 13:25:52.548216       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0525 13:25:52.548233       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8139:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002a7340), NotBefore:(*jwt.NumericDate)(0xc0002a7428), IssuedAt:(*jwt.NumericDate)(0xc0002a7350), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8139", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"ce62c2a5-ed0c-4f96-ab9e-fdc33a99706a"}}}
  I0525 13:25:52.554145       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0525 13:25:52.556577       1 log.go:245] OK: Validated signature on JWT
  I0525 13:25:52.556678       1 log.go:245] OK: Got valid claims from token!
  I0525 13:25:52.556716       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8139:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000123a0), NotBefore:(*jwt.NumericDate)(0xc0000123c8), IssuedAt:(*jwt.NumericDate)(0xc0000123a8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8139", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"ce62c2a5-ed0c-4f96-ab9e-fdc33a99706a"}}}

  May 25 13:26:25.996: INFO: completed pod
  May 25 13:26:26.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8139" for this suite. @ 05/25/24 13:26:26.012
• [34.081 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 05/25/24 13:26:26.019
  May 25 13:26:26.019: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename downward-api @ 05/25/24 13:26:26.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:26:26.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:26:26.037
  STEP: Creating the pod @ 05/25/24 13:26:26.04
  E0525 13:26:26.196279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:27.196396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:28.197281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:26:28.584: INFO: Successfully updated pod "annotationupdatea5c15c4a-7816-4d04-9bde-de7365f8f9c2"
  E0525 13:26:29.197634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:30.197735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:31.198197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:32.198293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:26:32.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-307" for this suite. @ 05/25/24 13:26:32.612
• [6.601 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 05/25/24 13:26:32.62
  May 25 13:26:32.620: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename init-container @ 05/25/24 13:26:32.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:26:32.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:26:32.639
  STEP: creating the pod @ 05/25/24 13:26:32.642
  May 25 13:26:32.642: INFO: PodSpec: initContainers in spec.initContainers
  E0525 13:26:33.198979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:34.199312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:35.200074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:36.200258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:37.200760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:26:37.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1373" for this suite. @ 05/25/24 13:26:37.375
• [4.761 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 05/25/24 13:26:37.382
  May 25 13:26:37.382: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 13:26:37.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:26:37.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:26:37.4
  STEP: Setting up server cert @ 05/25/24 13:26:37.442
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 13:26:37.665
  STEP: Deploying the webhook pod @ 05/25/24 13:26:37.672
  STEP: Wait for the deployment to be ready @ 05/25/24 13:26:37.689
  May 25 13:26:37.699: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0525 13:26:38.201315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:39.201407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/25/24 13:26:39.713
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 13:26:39.727
  E0525 13:26:40.201479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:26:40.729: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 25 13:26:40.737: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  E0525 13:26:41.201980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7086-crds.webhook.example.com via the AdmissionRegistration API @ 05/25/24 13:26:41.247
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/25/24 13:26:41.261
  E0525 13:26:42.202883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:43.203002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:26:43.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3282" for this suite. @ 05/25/24 13:26:43.857
  STEP: Destroying namespace "webhook-markers-6302" for this suite. @ 05/25/24 13:26:43.863
• [6.490 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 05/25/24 13:26:43.873
  May 25 13:26:43.873: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename configmap @ 05/25/24 13:26:43.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:26:43.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:26:43.895
  STEP: Creating configMap with name configmap-test-volume-e6917257-82a5-4d30-a3d0-152996a6eb69 @ 05/25/24 13:26:43.898
  STEP: Creating a pod to test consume configMaps @ 05/25/24 13:26:43.902
  E0525 13:26:44.203693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:45.203712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:26:45.922
  May 25 13:26:45.925: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-configmaps-6b0523be-98c8-43fe-9a60-effc395fd965 container agnhost-container: <nil>
  STEP: delete the pod @ 05/25/24 13:26:45.932
  May 25 13:26:45.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3170" for this suite. @ 05/25/24 13:26:45.954
• [2.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 05/25/24 13:26:45.96
  May 25 13:26:45.960: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pod-network-test @ 05/25/24 13:26:45.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:26:45.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:26:45.978
  STEP: Performing setup for networking test in namespace pod-network-test-3408 @ 05/25/24 13:26:45.981
  STEP: creating a selector @ 05/25/24 13:26:45.981
  STEP: Creating the service pods in kubernetes @ 05/25/24 13:26:45.981
  May 25 13:26:45.981: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0525 13:26:46.204295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:47.204392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:48.204489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:49.204571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:50.204897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:51.204994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:52.205747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:53.206648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:54.207666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:55.208341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:56.208667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:57.208758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/25/24 13:26:58.071
  E0525 13:26:58.209188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:26:59.209408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:27:00.093: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  May 25 13:27:00.093: INFO: Breadth first check of 192.168.138.153 on host 172.31.15.138...
  May 25 13:27:00.097: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.131.63:9080/dial?request=hostname&protocol=udp&host=192.168.138.153&port=8081&tries=1'] Namespace:pod-network-test-3408 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:27:00.097: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:27:00.097: INFO: ExecWithOptions: Clientset creation
  May 25 13:27:00.097: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3408/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.131.63%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.138.153%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 25 13:27:00.150: INFO: Waiting for responses: map[]
  May 25 13:27:00.150: INFO: reached 192.168.138.153 after 0/1 tries
  May 25 13:27:00.150: INFO: Breadth first check of 192.168.14.27 on host 172.31.23.222...
  May 25 13:27:00.154: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.131.63:9080/dial?request=hostname&protocol=udp&host=192.168.14.27&port=8081&tries=1'] Namespace:pod-network-test-3408 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:27:00.154: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:27:00.154: INFO: ExecWithOptions: Clientset creation
  May 25 13:27:00.154: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3408/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.131.63%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.14.27%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 25 13:27:00.202: INFO: Waiting for responses: map[]
  May 25 13:27:00.202: INFO: reached 192.168.14.27 after 0/1 tries
  May 25 13:27:00.202: INFO: Breadth first check of 192.168.131.9 on host 172.31.45.106...
  May 25 13:27:00.206: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.131.63:9080/dial?request=hostname&protocol=udp&host=192.168.131.9&port=8081&tries=1'] Namespace:pod-network-test-3408 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:27:00.206: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:27:00.206: INFO: ExecWithOptions: Clientset creation
  May 25 13:27:00.206: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3408/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.131.63%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.131.9%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0525 13:27:00.209847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:27:00.248: INFO: Waiting for responses: map[]
  May 25 13:27:00.248: INFO: reached 192.168.131.9 after 0/1 tries
  May 25 13:27:00.249: INFO: Going to retry 0 out of 3 pods....
  May 25 13:27:00.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3408" for this suite. @ 05/25/24 13:27:00.253
• [14.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 05/25/24 13:27:00.261
  May 25 13:27:00.262: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename server-version @ 05/25/24 13:27:00.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:27:00.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:27:00.281
  STEP: Request ServerVersion @ 05/25/24 13:27:00.283
  STEP: Confirm major version @ 05/25/24 13:27:00.285
  May 25 13:27:00.285: INFO: Major version: 1
  STEP: Confirm minor version @ 05/25/24 13:27:00.285
  May 25 13:27:00.285: INFO: cleanMinorVersion: 29
  May 25 13:27:00.285: INFO: Minor version: 29
  May 25 13:27:00.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-6856" for this suite. @ 05/25/24 13:27:00.289
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 05/25/24 13:27:00.295
  May 25 13:27:00.295: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename apf @ 05/25/24 13:27:00.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:27:00.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:27:00.311
  STEP: getting /apis @ 05/25/24 13:27:00.314
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/25/24 13:27:00.317
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/25/24 13:27:00.318
  STEP: creating @ 05/25/24 13:27:00.322
  STEP: getting @ 05/25/24 13:27:00.342
  STEP: listing @ 05/25/24 13:27:00.348
  STEP: watching @ 05/25/24 13:27:00.351
  May 25 13:27:00.351: INFO: starting watch
  STEP: patching @ 05/25/24 13:27:00.353
  STEP: updating @ 05/25/24 13:27:00.359
  May 25 13:27:00.369: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 05/25/24 13:27:00.369
  STEP: patching /status @ 05/25/24 13:27:00.372
  STEP: updating /status @ 05/25/24 13:27:00.378
  STEP: deleting @ 05/25/24 13:27:00.389
  STEP: deleting a collection @ 05/25/24 13:27:00.402
  May 25 13:27:00.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-2268" for this suite. @ 05/25/24 13:27:00.425
• [0.137 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 05/25/24 13:27:00.432
  May 25 13:27:00.432: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename resourcequota @ 05/25/24 13:27:00.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:27:00.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:27:00.447
  STEP: Creating a ResourceQuota @ 05/25/24 13:27:00.45
  STEP: Getting a ResourceQuota @ 05/25/24 13:27:00.455
  STEP: Updating a ResourceQuota @ 05/25/24 13:27:00.459
  STEP: Verifying a ResourceQuota was modified @ 05/25/24 13:27:00.463
  STEP: Deleting a ResourceQuota @ 05/25/24 13:27:00.468
  STEP: Verifying the deleted ResourceQuota @ 05/25/24 13:27:00.474
  May 25 13:27:00.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1534" for this suite. @ 05/25/24 13:27:00.48
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 05/25/24 13:27:00.487
  May 25 13:27:00.487: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename subpath @ 05/25/24 13:27:00.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:27:00.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:27:00.504
  STEP: Setting up data @ 05/25/24 13:27:00.506
  STEP: Creating pod pod-subpath-test-configmap-rlxz @ 05/25/24 13:27:00.522
  STEP: Creating a pod to test atomic-volume-subpath @ 05/25/24 13:27:00.522
  E0525 13:27:01.210911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:02.211018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:03.211235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:04.211304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:05.211789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:06.212001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:07.212252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:08.212359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:09.213186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:10.213301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:11.213428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:12.213593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:13.214535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:14.214598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:15.215428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:16.215602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:17.215707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:18.216261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:19.217012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:20.218061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:21.218179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:22.218343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:27:22.607
  May 25 13:27:22.610: INFO: Trying to get logs from node ip-172-31-15-138 pod pod-subpath-test-configmap-rlxz container test-container-subpath-configmap-rlxz: <nil>
  STEP: delete the pod @ 05/25/24 13:27:22.618
  STEP: Deleting pod pod-subpath-test-configmap-rlxz @ 05/25/24 13:27:22.636
  May 25 13:27:22.636: INFO: Deleting pod "pod-subpath-test-configmap-rlxz" in namespace "subpath-9401"
  May 25 13:27:22.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9401" for this suite. @ 05/25/24 13:27:22.643
• [22.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 05/25/24 13:27:22.65
  May 25 13:27:22.650: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/25/24 13:27:22.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:27:22.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:27:22.669
  STEP: fetching the /apis discovery document @ 05/25/24 13:27:22.672
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/25/24 13:27:22.674
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/25/24 13:27:22.674
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/25/24 13:27:22.674
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/25/24 13:27:22.675
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/25/24 13:27:22.675
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/25/24 13:27:22.676
  May 25 13:27:22.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1978" for this suite. @ 05/25/24 13:27:22.68
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 05/25/24 13:27:22.688
  May 25 13:27:22.688: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename replicaset @ 05/25/24 13:27:22.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:27:22.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:27:22.701
  May 25 13:27:22.717: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0525 13:27:23.218603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:24.219675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:25.220634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:26.220756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:27.221495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:27:27.722: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/25/24 13:27:27.722
  STEP: Scaling up "test-rs" replicaset @ 05/25/24 13:27:27.722
  May 25 13:27:27.731: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/25/24 13:27:27.731
  May 25 13:27:27.748: INFO: observed ReplicaSet test-rs in namespace replicaset-2114 with ReadyReplicas 1, AvailableReplicas 1
  May 25 13:27:27.760: INFO: observed ReplicaSet test-rs in namespace replicaset-2114 with ReadyReplicas 1, AvailableReplicas 1
  May 25 13:27:27.776: INFO: observed ReplicaSet test-rs in namespace replicaset-2114 with ReadyReplicas 1, AvailableReplicas 1
  May 25 13:27:27.782: INFO: observed ReplicaSet test-rs in namespace replicaset-2114 with ReadyReplicas 1, AvailableReplicas 1
  E0525 13:27:28.221825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:27:28.328: INFO: observed ReplicaSet test-rs in namespace replicaset-2114 with ReadyReplicas 2, AvailableReplicas 2
  May 25 13:27:28.712: INFO: observed Replicaset test-rs in namespace replicaset-2114 with ReadyReplicas 3 found true
  May 25 13:27:28.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2114" for this suite. @ 05/25/24 13:27:28.715
• [6.034 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 05/25/24 13:27:28.722
  May 25 13:27:28.722: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pods @ 05/25/24 13:27:28.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:27:28.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:27:28.74
  STEP: creating the pod @ 05/25/24 13:27:28.743
  STEP: submitting the pod to kubernetes @ 05/25/24 13:27:28.743
  W0525 13:27:28.751599      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0525 13:27:29.221960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:30.222946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 05/25/24 13:27:30.765
  STEP: updating the pod @ 05/25/24 13:27:30.769
  E0525 13:27:31.223549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:27:31.281: INFO: Successfully updated pod "pod-update-activedeadlineseconds-2b1bb606-9e86-4922-97eb-72f76e40a298"
  E0525 13:27:32.223724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:33.223882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:34.223979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:35.224662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:27:35.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4324" for this suite. @ 05/25/24 13:27:35.299
• [6.587 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 05/25/24 13:27:35.309
  May 25 13:27:35.309: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pv @ 05/25/24 13:27:35.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:27:35.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:27:35.326
  STEP: Creating initial PV and PVC @ 05/25/24 13:27:35.329
  May 25 13:27:35.329: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5076" @ 05/25/24 13:27:35.342
  STEP: Listing PVCs in namespace "pv-5076" @ 05/25/24 13:27:35.348
  STEP: Reading "pvc-vmlzl" Status @ 05/25/24 13:27:35.351
  STEP: Reading "pv-5076-28jjk" Status @ 05/25/24 13:27:35.355
  STEP: Patching "pvc-vmlzl" Status @ 05/25/24 13:27:35.36
  STEP: Patching "pv-5076-28jjk" Status @ 05/25/24 13:27:35.369
  STEP: Updating "pvc-vmlzl" Status @ 05/25/24 13:27:35.376
  STEP: Updating "pv-5076-28jjk" Status @ 05/25/24 13:27:35.385
  May 25 13:27:35.395: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  May 25 13:27:35.395: INFO: Deleting PersistentVolumeClaim "pvc-vmlzl"
  May 25 13:27:35.401: INFO: Deleting PersistentVolume "pv-5076-28jjk"
  May 25 13:27:35.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5076" for this suite. @ 05/25/24 13:27:35.415
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 05/25/24 13:27:35.426
  May 25 13:27:35.426: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename security-context @ 05/25/24 13:27:35.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:27:35.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:27:35.449
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/25/24 13:27:35.452
  E0525 13:27:36.225708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:37.225902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:38.226005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:39.226133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:27:39.476
  May 25 13:27:39.480: INFO: Trying to get logs from node ip-172-31-45-106 pod security-context-61f7d9da-e522-4453-911a-05c1a1ad23dc container test-container: <nil>
  STEP: delete the pod @ 05/25/24 13:27:39.494
  May 25 13:27:39.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5880" for this suite. @ 05/25/24 13:27:39.516
• [4.097 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 05/25/24 13:27:39.523
  May 25 13:27:39.523: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 13:27:39.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:27:39.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:27:39.541
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 13:27:39.544
  E0525 13:27:40.226471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:41.226730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:42.226772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:43.226844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:27:43.569
  May 25 13:27:43.573: INFO: Trying to get logs from node ip-172-31-45-106 pod downwardapi-volume-c9b36eca-af5f-486c-8404-3cefb02fd032 container client-container: <nil>
  STEP: delete the pod @ 05/25/24 13:27:43.579
  May 25 13:27:43.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7331" for this suite. @ 05/25/24 13:27:43.602
• [4.086 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 05/25/24 13:27:43.609
  May 25 13:27:43.609: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename deployment @ 05/25/24 13:27:43.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:27:43.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:27:43.627
  May 25 13:27:43.639: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0525 13:27:44.227238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:45.227305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:46.227385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:47.228348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:48.228469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:27:48.643: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/25/24 13:27:48.643
  May 25 13:27:48.643: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0525 13:27:49.228570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:50.228778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:27:50.648: INFO: Creating deployment "test-rollover-deployment"
  May 25 13:27:50.659: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0525 13:27:51.229655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:52.229757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:27:52.668: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  May 25 13:27:52.675: INFO: Ensure that both replica sets have 1 created replica
  May 25 13:27:52.682: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  May 25 13:27:52.692: INFO: Updating deployment test-rollover-deployment
  May 25 13:27:52.692: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0525 13:27:53.230243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:54.230343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:27:54.704: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  May 25 13:27:54.712: INFO: Make sure deployment "test-rollover-deployment" is complete
  May 25 13:27:54.718: INFO: all replica sets need to contain the pod-template-hash label
  May 25 13:27:54.718: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 27, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 27, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 27, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 27, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:27:55.231188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:56.231388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:27:56.727: INFO: all replica sets need to contain the pod-template-hash label
  May 25 13:27:56.727: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 27, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 27, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 27, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 27, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:27:57.231467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:27:58.231546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:27:58.727: INFO: all replica sets need to contain the pod-template-hash label
  May 25 13:27:58.727: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 27, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 27, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 27, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 27, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:27:59.232213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:00.232301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:28:00.728: INFO: all replica sets need to contain the pod-template-hash label
  May 25 13:28:00.728: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 27, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 27, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 27, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 27, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:28:01.232934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:02.233075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:28:02.727: INFO: all replica sets need to contain the pod-template-hash label
  May 25 13:28:02.727: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 27, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 27, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 27, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 27, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:28:03.233357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:04.233672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:28:04.728: INFO: 
  May 25 13:28:04.728: INFO: Ensure that both old replica sets have no replicas
  May 25 13:28:04.738: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6006",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23358a12-e139-470d-bd5a-5704885d3741",
      ResourceVersion: (string) (len=5) "32700",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852240470,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240483,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240483,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 25 13:28:04.742: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6006",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "669f9c5d-0f24-489e-9fe8-488d1686bbc9",
      ResourceVersion: (string) (len=5) "32690",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852240472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "23358a12-e139-470d-bd5a-5704885d3741",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 33 33 35 38 61  31 32 2d 65 31 33 39 2d  |\"23358a12-e139-|
              00000120  34 37 30 64 2d 62 64 35  61 2d 35 37 30 34 38 38  |470d-bd5a-570488|
              00000130  35 64 33 37 34 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5d3741\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240483,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 25 13:28:04.743: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  May 25 13:28:04.744: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6006",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "62e28fd6-fbf9-4bfa-a699-478a656ca39e",
      ResourceVersion: (string) (len=5) "32699",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852240463,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "23358a12-e139-470d-bd5a-5704885d3741",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240483,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  32 33 33 35 38 61 31 32  2d 65 31 33 39 2d 34 37  |23358a12-e139-47|
              000000c0  30 64 2d 62 64 35 61 2d  35 37 30 34 38 38 35 64  |0d-bd5a-5704885d|
              000000d0  33 37 34 31 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |3741\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240483,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 25 13:28:04.744: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6006",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ae798b6-bfc5-4e8f-99ed-d0a7b11a056b",
      ResourceVersion: (string) (len=5) "32647",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852240470,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "23358a12-e139-470d-bd5a-5704885d3741",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 33 33 35 38 61  31 32 2d 65 31 33 39 2d  |\"23358a12-e139-|
              00000120  34 37 30 64 2d 62 64 35  61 2d 35 37 30 34 38 38  |470d-bd5a-570488|
              00000130  35 64 33 37 34 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5d3741\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 25 13:28:04.749: INFO: Pod "test-rollover-deployment-68774655d5-fbls8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-fbls8",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-6006",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db1c6b54-795b-47fe-93bc-7444368720f6",
      ResourceVersion: (string) (len=5) "32668",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852240472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "669f9c5d-0f24-489e-9fe8-488d1686bbc9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  39 66 39 63 35 64 2d 30  |d\":\"669f9c5d-0|
              00000090  66 32 34 2d 34 38 39 65  2d 39 66 65 38 2d 34 38  |f24-489e-9fe8-48|
              000000a0  38 64 31 36 38 36 62 62  63 39 5c 22 7d 22 3a 7b  |8d1686bbc9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 33  38 2e 31 36 30 5c 22 7d  |2.168.138.160\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xqsvl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xqsvl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-15-138",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.138"
        }
      },
      PodIP: (string) (len=15) "192.168.138.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.138.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852240472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852240473,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://bb7910821809a9f943475e8c7add2e8e805e3dc9fd079ca85392a443d27cdbb1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:28:04.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6006" for this suite. @ 05/25/24 13:28:04.754
• [21.153 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 05/25/24 13:28:04.763
  May 25 13:28:04.763: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename var-expansion @ 05/25/24 13:28:04.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:28:04.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:28:04.781
  E0525 13:28:05.234084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:06.234199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:28:06.804: INFO: Deleting pod "var-expansion-3cf97852-6266-484f-9380-3c2d08def9c3" in namespace "var-expansion-6628"
  May 25 13:28:06.813: INFO: Wait up to 5m0s for pod "var-expansion-3cf97852-6266-484f-9380-3c2d08def9c3" to be fully deleted
  E0525 13:28:07.234315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:08.234400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:28:08.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6628" for this suite. @ 05/25/24 13:28:08.825
• [4.070 seconds]
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 05/25/24 13:28:08.833
  May 25 13:28:08.833: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pods @ 05/25/24 13:28:08.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:28:08.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:28:08.851
  STEP: creating the pod @ 05/25/24 13:28:08.855
  STEP: submitting the pod to kubernetes @ 05/25/24 13:28:08.855
  STEP: verifying QOS class is set on the pod @ 05/25/24 13:28:08.863
  May 25 13:28:08.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6580" for this suite. @ 05/25/24 13:28:08.874
• [0.048 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 05/25/24 13:28:08.881
  May 25 13:28:08.881: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 13:28:08.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:28:08.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:28:08.899
  STEP: Setting up server cert @ 05/25/24 13:28:08.918
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 13:28:09.043
  STEP: Deploying the webhook pod @ 05/25/24 13:28:09.052
  STEP: Wait for the deployment to be ready @ 05/25/24 13:28:09.064
  May 25 13:28:09.078: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0525 13:28:09.234543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:10.235140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/25/24 13:28:11.09
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 13:28:11.101
  E0525 13:28:11.235237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:28:12.101: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/25/24 13:28:12.109
  STEP: create a configmap that should be updated by the webhook @ 05/25/24 13:28:12.122
  May 25 13:28:12.177: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1776" for this suite. @ 05/25/24 13:28:12.181
  STEP: Destroying namespace "webhook-markers-7054" for this suite. @ 05/25/24 13:28:12.189
• [3.314 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 05/25/24 13:28:12.195
  May 25 13:28:12.195: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 13:28:12.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:28:12.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:28:12.212
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 13:28:12.215
  E0525 13:28:12.235771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:13.235941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:14.236151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:15.237049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:16.237468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:28:16.237
  May 25 13:28:16.241: INFO: Trying to get logs from node ip-172-31-15-138 pod downwardapi-volume-d0e4c4a9-0d67-4387-bf5e-1a5034da0cfc container client-container: <nil>
  STEP: delete the pod @ 05/25/24 13:28:16.248
  May 25 13:28:16.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2172" for this suite. @ 05/25/24 13:28:16.271
• [4.084 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 05/25/24 13:28:16.279
  May 25 13:28:16.279: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename configmap @ 05/25/24 13:28:16.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:28:16.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:28:16.297
  May 25 13:28:16.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6600" for this suite. @ 05/25/24 13:28:16.344
• [0.072 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 05/25/24 13:28:16.351
  May 25 13:28:16.351: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/25/24 13:28:16.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:28:16.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:28:16.369
  May 25 13:28:16.372: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  E0525 13:28:17.238190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/25/24 13:28:17.666
  May 25 13:28:17.666: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-8264 --namespace=crd-publish-openapi-8264 create -f -'
  E0525 13:28:18.238905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:19.239131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:28:19.722: INFO: stderr: ""
  May 25 13:28:19.722: INFO: stdout: "e2e-test-crd-publish-openapi-4796-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  May 25 13:28:19.722: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-8264 --namespace=crd-publish-openapi-8264 delete e2e-test-crd-publish-openapi-4796-crds test-cr'
  May 25 13:28:19.779: INFO: stderr: ""
  May 25 13:28:19.779: INFO: stdout: "e2e-test-crd-publish-openapi-4796-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  May 25 13:28:19.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-8264 --namespace=crd-publish-openapi-8264 apply -f -'
  May 25 13:28:19.833: INFO: stderr: ""
  May 25 13:28:19.833: INFO: stdout: "e2e-test-crd-publish-openapi-4796-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  May 25 13:28:19.833: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-8264 --namespace=crd-publish-openapi-8264 delete e2e-test-crd-publish-openapi-4796-crds test-cr'
  May 25 13:28:19.880: INFO: stderr: ""
  May 25 13:28:19.880: INFO: stdout: "e2e-test-crd-publish-openapi-4796-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/25/24 13:28:19.88
  May 25 13:28:19.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-8264 explain e2e-test-crd-publish-openapi-4796-crds'
  May 25 13:28:19.917: INFO: stderr: ""
  May 25 13:28:19.917: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4796-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0525 13:28:20.239736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:28:21.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8264" for this suite. @ 05/25/24 13:28:21.107
• [4.761 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 05/25/24 13:28:21.112
  May 25 13:28:21.112: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename gc @ 05/25/24 13:28:21.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:28:21.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:28:21.13
  STEP: create the rc1 @ 05/25/24 13:28:21.138
  STEP: create the rc2 @ 05/25/24 13:28:21.144
  E0525 13:28:21.240283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:22.240434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:23.246261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:24.247225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:25.247940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:26.249034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/25/24 13:28:27.151
  E0525 13:28:27.249381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/25/24 13:28:27.489
  STEP: wait for the rc to be deleted @ 05/25/24 13:28:27.497
  E0525 13:28:28.249993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:29.250111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:30.250295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:31.250687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:32.250855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:28:32.506: INFO: 70 pods remaining
  May 25 13:28:32.506: INFO: 70 pods has nil DeletionTimestamp
  May 25 13:28:32.506: INFO: 
  E0525 13:28:33.251211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:34.251336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:35.252112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:36.252287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:37.252467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/25/24 13:28:37.505
  W0525 13:28:37.511711      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May 25 13:28:37.511: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 25 13:28:37.511: INFO: Deleting pod "simpletest-rc-to-be-deleted-2bxx8" in namespace "gc-8001"
  May 25 13:28:37.527: INFO: Deleting pod "simpletest-rc-to-be-deleted-42m2r" in namespace "gc-8001"
  May 25 13:28:37.632: INFO: Deleting pod "simpletest-rc-to-be-deleted-4m7t2" in namespace "gc-8001"
  May 25 13:28:37.645: INFO: Deleting pod "simpletest-rc-to-be-deleted-4xrzr" in namespace "gc-8001"
  May 25 13:28:37.654: INFO: Deleting pod "simpletest-rc-to-be-deleted-59h8q" in namespace "gc-8001"
  May 25 13:28:37.670: INFO: Deleting pod "simpletest-rc-to-be-deleted-5cg9x" in namespace "gc-8001"
  May 25 13:28:37.683: INFO: Deleting pod "simpletest-rc-to-be-deleted-5d5rv" in namespace "gc-8001"
  May 25 13:28:37.693: INFO: Deleting pod "simpletest-rc-to-be-deleted-5kmlf" in namespace "gc-8001"
  May 25 13:28:37.707: INFO: Deleting pod "simpletest-rc-to-be-deleted-5tqtl" in namespace "gc-8001"
  May 25 13:28:37.722: INFO: Deleting pod "simpletest-rc-to-be-deleted-5vm8b" in namespace "gc-8001"
  May 25 13:28:37.737: INFO: Deleting pod "simpletest-rc-to-be-deleted-6946z" in namespace "gc-8001"
  May 25 13:28:37.748: INFO: Deleting pod "simpletest-rc-to-be-deleted-6q6zb" in namespace "gc-8001"
  May 25 13:28:37.763: INFO: Deleting pod "simpletest-rc-to-be-deleted-78xcw" in namespace "gc-8001"
  May 25 13:28:37.775: INFO: Deleting pod "simpletest-rc-to-be-deleted-7bsvh" in namespace "gc-8001"
  May 25 13:28:37.784: INFO: Deleting pod "simpletest-rc-to-be-deleted-7ds8q" in namespace "gc-8001"
  May 25 13:28:37.795: INFO: Deleting pod "simpletest-rc-to-be-deleted-84896" in namespace "gc-8001"
  May 25 13:28:37.813: INFO: Deleting pod "simpletest-rc-to-be-deleted-84vgl" in namespace "gc-8001"
  May 25 13:28:37.828: INFO: Deleting pod "simpletest-rc-to-be-deleted-882h2" in namespace "gc-8001"
  May 25 13:28:37.847: INFO: Deleting pod "simpletest-rc-to-be-deleted-89ghd" in namespace "gc-8001"
  May 25 13:28:37.858: INFO: Deleting pod "simpletest-rc-to-be-deleted-8j8tl" in namespace "gc-8001"
  May 25 13:28:37.870: INFO: Deleting pod "simpletest-rc-to-be-deleted-8jwhc" in namespace "gc-8001"
  May 25 13:28:37.882: INFO: Deleting pod "simpletest-rc-to-be-deleted-949dm" in namespace "gc-8001"
  May 25 13:28:37.893: INFO: Deleting pod "simpletest-rc-to-be-deleted-95vm8" in namespace "gc-8001"
  May 25 13:28:37.919: INFO: Deleting pod "simpletest-rc-to-be-deleted-9mt85" in namespace "gc-8001"
  May 25 13:28:37.930: INFO: Deleting pod "simpletest-rc-to-be-deleted-b42sk" in namespace "gc-8001"
  May 25 13:28:37.942: INFO: Deleting pod "simpletest-rc-to-be-deleted-bg8df" in namespace "gc-8001"
  May 25 13:28:37.959: INFO: Deleting pod "simpletest-rc-to-be-deleted-bgcf5" in namespace "gc-8001"
  May 25 13:28:37.974: INFO: Deleting pod "simpletest-rc-to-be-deleted-bs269" in namespace "gc-8001"
  May 25 13:28:38.002: INFO: Deleting pod "simpletest-rc-to-be-deleted-cch2n" in namespace "gc-8001"
  May 25 13:28:38.015: INFO: Deleting pod "simpletest-rc-to-be-deleted-ccxt6" in namespace "gc-8001"
  May 25 13:28:38.025: INFO: Deleting pod "simpletest-rc-to-be-deleted-ckcp5" in namespace "gc-8001"
  May 25 13:28:38.038: INFO: Deleting pod "simpletest-rc-to-be-deleted-dbcwq" in namespace "gc-8001"
  May 25 13:28:38.073: INFO: Deleting pod "simpletest-rc-to-be-deleted-dgbww" in namespace "gc-8001"
  May 25 13:28:38.087: INFO: Deleting pod "simpletest-rc-to-be-deleted-dldt6" in namespace "gc-8001"
  May 25 13:28:38.097: INFO: Deleting pod "simpletest-rc-to-be-deleted-dn5cr" in namespace "gc-8001"
  May 25 13:28:38.111: INFO: Deleting pod "simpletest-rc-to-be-deleted-f2fdp" in namespace "gc-8001"
  May 25 13:28:38.123: INFO: Deleting pod "simpletest-rc-to-be-deleted-f2n8l" in namespace "gc-8001"
  May 25 13:28:38.137: INFO: Deleting pod "simpletest-rc-to-be-deleted-fndvq" in namespace "gc-8001"
  May 25 13:28:38.147: INFO: Deleting pod "simpletest-rc-to-be-deleted-fzzp8" in namespace "gc-8001"
  May 25 13:28:38.159: INFO: Deleting pod "simpletest-rc-to-be-deleted-g2sz2" in namespace "gc-8001"
  May 25 13:28:38.173: INFO: Deleting pod "simpletest-rc-to-be-deleted-g4vj5" in namespace "gc-8001"
  May 25 13:28:38.183: INFO: Deleting pod "simpletest-rc-to-be-deleted-glvpx" in namespace "gc-8001"
  May 25 13:28:38.198: INFO: Deleting pod "simpletest-rc-to-be-deleted-gvqk8" in namespace "gc-8001"
  May 25 13:28:38.209: INFO: Deleting pod "simpletest-rc-to-be-deleted-gw85t" in namespace "gc-8001"
  May 25 13:28:38.222: INFO: Deleting pod "simpletest-rc-to-be-deleted-h2bg6" in namespace "gc-8001"
  May 25 13:28:38.235: INFO: Deleting pod "simpletest-rc-to-be-deleted-hb8qf" in namespace "gc-8001"
  May 25 13:28:38.250: INFO: Deleting pod "simpletest-rc-to-be-deleted-hnx2q" in namespace "gc-8001"
  E0525 13:28:38.253572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:28:38.266: INFO: Deleting pod "simpletest-rc-to-be-deleted-j28x9" in namespace "gc-8001"
  May 25 13:28:38.278: INFO: Deleting pod "simpletest-rc-to-be-deleted-j5fds" in namespace "gc-8001"
  May 25 13:28:38.295: INFO: Deleting pod "simpletest-rc-to-be-deleted-j6897" in namespace "gc-8001"
  May 25 13:28:38.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8001" for this suite. @ 05/25/24 13:28:38.31
• [17.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 05/25/24 13:28:38.318
  May 25 13:28:38.318: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename field-validation @ 05/25/24 13:28:38.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:28:38.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:28:38.35
  May 25 13:28:38.351: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  E0525 13:28:39.254609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:40.254873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:41.255167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:28:41.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9084" for this suite. @ 05/25/24 13:28:41.439
• [3.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 05/25/24 13:28:41.449
  May 25 13:28:41.449: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-runtime @ 05/25/24 13:28:41.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:28:41.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:28:41.47
  STEP: create the container @ 05/25/24 13:28:41.472
  W0525 13:28:41.478666      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/25/24 13:28:41.478
  E0525 13:28:42.255304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:43.256285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:44.256391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/25/24 13:28:44.494
  STEP: the container should be terminated @ 05/25/24 13:28:44.497
  STEP: the termination message should be set @ 05/25/24 13:28:44.497
  May 25 13:28:44.497: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/25/24 13:28:44.497
  May 25 13:28:44.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9930" for this suite. @ 05/25/24 13:28:44.52
• [3.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 05/25/24 13:28:44.528
  May 25 13:28:44.528: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 13:28:44.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:28:44.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:28:44.544
  STEP: creating service in namespace services-705 @ 05/25/24 13:28:44.546
  STEP: creating service affinity-clusterip in namespace services-705 @ 05/25/24 13:28:44.546
  STEP: creating replication controller affinity-clusterip in namespace services-705 @ 05/25/24 13:28:44.557
  I0525 13:28:44.563700      21 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-705, replica count: 3
  E0525 13:28:45.256479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:46.257229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:47.257324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0525 13:28:47.614859      21 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 25 13:28:47.622: INFO: Creating new exec pod
  E0525 13:28:48.257499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:49.257641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:50.258077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:28:50.636: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-705 exec execpod-affinityftmh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  May 25 13:28:50.727: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  May 25 13:28:50.727: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 13:28:50.727: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-705 exec execpod-affinityftmh9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.167 80'
  May 25 13:28:50.821: INFO: stderr: "+ nc -v -t -w 2 10.152.183.167 80\n+ echo hostName\nConnection to 10.152.183.167 80 port [tcp/http] succeeded!\n"
  May 25 13:28:50.821: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 13:28:50.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-705 exec execpod-affinityftmh9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.167:80/ ; done'
  May 25 13:28:50.971: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.167:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.167:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.167:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.167:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.167:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.167:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.167:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.167:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.167:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.167:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.167:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.167:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.167:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.167:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.167:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.167:80/\n"
  May 25 13:28:50.971: INFO: stdout: "\naffinity-clusterip-w74c7\naffinity-clusterip-w74c7\naffinity-clusterip-w74c7\naffinity-clusterip-w74c7\naffinity-clusterip-w74c7\naffinity-clusterip-w74c7\naffinity-clusterip-w74c7\naffinity-clusterip-w74c7\naffinity-clusterip-w74c7\naffinity-clusterip-w74c7\naffinity-clusterip-w74c7\naffinity-clusterip-w74c7\naffinity-clusterip-w74c7\naffinity-clusterip-w74c7\naffinity-clusterip-w74c7\naffinity-clusterip-w74c7"
  May 25 13:28:50.971: INFO: Received response from host: affinity-clusterip-w74c7
  May 25 13:28:50.971: INFO: Received response from host: affinity-clusterip-w74c7
  May 25 13:28:50.971: INFO: Received response from host: affinity-clusterip-w74c7
  May 25 13:28:50.971: INFO: Received response from host: affinity-clusterip-w74c7
  May 25 13:28:50.971: INFO: Received response from host: affinity-clusterip-w74c7
  May 25 13:28:50.971: INFO: Received response from host: affinity-clusterip-w74c7
  May 25 13:28:50.971: INFO: Received response from host: affinity-clusterip-w74c7
  May 25 13:28:50.971: INFO: Received response from host: affinity-clusterip-w74c7
  May 25 13:28:50.971: INFO: Received response from host: affinity-clusterip-w74c7
  May 25 13:28:50.971: INFO: Received response from host: affinity-clusterip-w74c7
  May 25 13:28:50.971: INFO: Received response from host: affinity-clusterip-w74c7
  May 25 13:28:50.971: INFO: Received response from host: affinity-clusterip-w74c7
  May 25 13:28:50.971: INFO: Received response from host: affinity-clusterip-w74c7
  May 25 13:28:50.972: INFO: Received response from host: affinity-clusterip-w74c7
  May 25 13:28:50.972: INFO: Received response from host: affinity-clusterip-w74c7
  May 25 13:28:50.972: INFO: Received response from host: affinity-clusterip-w74c7
  May 25 13:28:50.972: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-705, will wait for the garbage collector to delete the pods @ 05/25/24 13:28:50.986
  May 25 13:28:51.048: INFO: Deleting ReplicationController affinity-clusterip took: 6.815648ms
  May 25 13:28:51.148: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.359147ms
  E0525 13:28:51.258388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:52.258941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:53.260904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:28:53.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-705" for this suite. @ 05/25/24 13:28:53.972
• [9.451 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 05/25/24 13:28:53.979
  May 25 13:28:53.979: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename field-validation @ 05/25/24 13:28:53.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:28:53.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:28:53.996
  STEP: apply creating a deployment @ 05/25/24 13:28:53.998
  May 25 13:28:54.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4616" for this suite. @ 05/25/24 13:28:54.014
• [0.040 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 05/25/24 13:28:54.019
  May 25 13:28:54.019: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/25/24 13:28:54.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:28:54.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:28:54.036
  May 25 13:28:54.038: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  E0525 13:28:54.261868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:55.262040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/25/24 13:28:55.293
  May 25 13:28:55.293: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-5126 --namespace=crd-publish-openapi-5126 create -f -'
  E0525 13:28:56.262166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:28:57.262240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:28:57.358: INFO: stderr: ""
  May 25 13:28:57.358: INFO: stdout: "e2e-test-crd-publish-openapi-7402-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  May 25 13:28:57.358: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-5126 --namespace=crd-publish-openapi-5126 delete e2e-test-crd-publish-openapi-7402-crds test-cr'
  May 25 13:28:57.416: INFO: stderr: ""
  May 25 13:28:57.416: INFO: stdout: "e2e-test-crd-publish-openapi-7402-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  May 25 13:28:57.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-5126 --namespace=crd-publish-openapi-5126 apply -f -'
  May 25 13:28:57.463: INFO: stderr: ""
  May 25 13:28:57.464: INFO: stdout: "e2e-test-crd-publish-openapi-7402-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  May 25 13:28:57.464: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-5126 --namespace=crd-publish-openapi-5126 delete e2e-test-crd-publish-openapi-7402-crds test-cr'
  May 25 13:28:57.511: INFO: stderr: ""
  May 25 13:28:57.511: INFO: stdout: "e2e-test-crd-publish-openapi-7402-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/25/24 13:28:57.511
  May 25 13:28:57.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-5126 explain e2e-test-crd-publish-openapi-7402-crds'
  May 25 13:28:57.547: INFO: stderr: ""
  May 25 13:28:57.547: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-7402-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0525 13:28:58.262924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:28:58.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5126" for this suite. @ 05/25/24 13:28:58.737
• [4.725 seconds]
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 05/25/24 13:28:58.744
  May 25 13:28:58.744: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename job @ 05/25/24 13:28:58.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:28:58.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:28:58.762
  STEP: Creating a job @ 05/25/24 13:28:58.763
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/25/24 13:28:58.769
  E0525 13:28:59.263650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:00.264287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 05/25/24 13:29:00.775
  STEP: updating /status @ 05/25/24 13:29:00.782
  STEP: get /status @ 05/25/24 13:29:00.791
  May 25 13:29:00.793: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9308" for this suite. @ 05/25/24 13:29:00.795
• [2.059 seconds]
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 05/25/24 13:29:00.803
  May 25 13:29:00.803: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename security-context-test @ 05/25/24 13:29:00.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:29:00.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:29:00.82
  E0525 13:29:01.264391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:02.264593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:03.265520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:04.265673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:29:04.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6855" for this suite. @ 05/25/24 13:29:04.843
• [4.045 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 05/25/24 13:29:04.848
  May 25 13:29:04.848: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename gc @ 05/25/24 13:29:04.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:29:04.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:29:04.867
  STEP: create the deployment @ 05/25/24 13:29:04.868
  W0525 13:29:04.872143      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/25/24 13:29:04.872
  E0525 13:29:05.265823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 05/25/24 13:29:05.378
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/25/24 13:29:05.386
  STEP: Gathering metrics @ 05/25/24 13:29:05.9
  W0525 13:29:05.909178      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May 25 13:29:05.909: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 25 13:29:05.910: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3986" for this suite. @ 05/25/24 13:29:05.923
• [1.081 seconds]
------------------------------
SS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 05/25/24 13:29:05.929
  May 25 13:29:05.929: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename subjectreview @ 05/25/24 13:29:05.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:29:05.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:29:05.957
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-2254" @ 05/25/24 13:29:05.959
  May 25 13:29:05.964: INFO: saUsername: "system:serviceaccount:subjectreview-2254:e2e"
  May 25 13:29:05.964: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-2254"}
  May 25 13:29:05.964: INFO: saUID: "81195380-756c-4ca1-91dd-51b8450268e3"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-2254:e2e" @ 05/25/24 13:29:05.964
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-2254:e2e" @ 05/25/24 13:29:05.964
  May 25 13:29:05.965: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-2254:e2e" api 'list' configmaps in "subjectreview-2254" namespace @ 05/25/24 13:29:05.965
  May 25 13:29:05.966: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-2254:e2e" @ 05/25/24 13:29:05.966
  May 25 13:29:05.967: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  May 25 13:29:05.967: INFO: LocalSubjectAccessReview has been verified
  May 25 13:29:05.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-2254" for this suite. @ 05/25/24 13:29:05.983
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 05/25/24 13:29:05.996
  May 25 13:29:05.996: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename resourcequota @ 05/25/24 13:29:05.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:29:06.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:29:06.015
  STEP: Counting existing ResourceQuota @ 05/25/24 13:29:06.017
  E0525 13:29:06.265804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:07.266023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:08.266159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:09.266673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:10.267176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/25/24 13:29:11.02
  STEP: Ensuring resource quota status is calculated @ 05/25/24 13:29:11.025
  E0525 13:29:11.267595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:12.268028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:29:13.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7791" for this suite. @ 05/25/24 13:29:13.033
• [7.044 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 05/25/24 13:29:13.041
  May 25 13:29:13.041: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 13:29:13.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:29:13.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:29:13.06
  STEP: creating service in namespace services-6432 @ 05/25/24 13:29:13.061
  STEP: creating service affinity-nodeport-transition in namespace services-6432 @ 05/25/24 13:29:13.061
  STEP: creating replication controller affinity-nodeport-transition in namespace services-6432 @ 05/25/24 13:29:13.074
  I0525 13:29:13.079710      21 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-6432, replica count: 3
  E0525 13:29:13.268301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:14.268387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:15.268512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0525 13:29:16.131279      21 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 25 13:29:16.142: INFO: Creating new exec pod
  E0525 13:29:16.268925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:17.269023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:18.269082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:29:19.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-6432 exec execpod-affinity96w4z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  May 25 13:29:19.259: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  May 25 13:29:19.259: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 13:29:19.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-6432 exec execpod-affinity96w4z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.185 80'
  E0525 13:29:19.270089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:29:19.346: INFO: stderr: "+ nc -v -t -w 2 10.152.183.185 80\n+ echo hostName\nConnection to 10.152.183.185 80 port [tcp/http] succeeded!\n"
  May 25 13:29:19.346: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 13:29:19.346: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-6432 exec execpod-affinity96w4z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.106 30459'
  May 25 13:29:19.446: INFO: stderr: "+ nc -v -t -w 2 172.31.45.106 30459\n+ echo hostName\nConnection to 172.31.45.106 30459 port [tcp/*] succeeded!\n"
  May 25 13:29:19.446: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 13:29:19.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-6432 exec execpod-affinity96w4z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.138 30459'
  May 25 13:29:19.529: INFO: stderr: "+ nc -v -t -w 2 172.31.15.138 30459\n+ echo hostName\nConnection to 172.31.15.138 30459 port [tcp/*] succeeded!\n"
  May 25 13:29:19.529: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 13:29:19.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-6432 exec execpod-affinity96w4z -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.15.138:30459/ ; done'
  May 25 13:29:19.710: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n"
  May 25 13:29:19.710: INFO: stdout: "\naffinity-nodeport-transition-7mrcs\naffinity-nodeport-transition-msg22\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-msg22\naffinity-nodeport-transition-msg22\naffinity-nodeport-transition-msg22\naffinity-nodeport-transition-msg22\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-msg22\naffinity-nodeport-transition-msg22\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-7mrcs\naffinity-nodeport-transition-msg22\naffinity-nodeport-transition-msg22\naffinity-nodeport-transition-msg22\naffinity-nodeport-transition-msg22"
  May 25 13:29:19.710: INFO: Received response from host: affinity-nodeport-transition-7mrcs
  May 25 13:29:19.710: INFO: Received response from host: affinity-nodeport-transition-msg22
  May 25 13:29:19.710: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.710: INFO: Received response from host: affinity-nodeport-transition-msg22
  May 25 13:29:19.710: INFO: Received response from host: affinity-nodeport-transition-msg22
  May 25 13:29:19.710: INFO: Received response from host: affinity-nodeport-transition-msg22
  May 25 13:29:19.710: INFO: Received response from host: affinity-nodeport-transition-msg22
  May 25 13:29:19.710: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.710: INFO: Received response from host: affinity-nodeport-transition-msg22
  May 25 13:29:19.710: INFO: Received response from host: affinity-nodeport-transition-msg22
  May 25 13:29:19.710: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.710: INFO: Received response from host: affinity-nodeport-transition-7mrcs
  May 25 13:29:19.710: INFO: Received response from host: affinity-nodeport-transition-msg22
  May 25 13:29:19.710: INFO: Received response from host: affinity-nodeport-transition-msg22
  May 25 13:29:19.710: INFO: Received response from host: affinity-nodeport-transition-msg22
  May 25 13:29:19.710: INFO: Received response from host: affinity-nodeport-transition-msg22
  May 25 13:29:19.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-6432 exec execpod-affinity96w4z -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.15.138:30459/ ; done'
  May 25 13:29:19.869: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.138:30459/\n"
  May 25 13:29:19.870: INFO: stdout: "\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-d228j\naffinity-nodeport-transition-d228j"
  May 25 13:29:19.870: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.870: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.870: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.870: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.870: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.870: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.870: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.870: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.870: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.870: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.870: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.870: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.870: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.870: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.870: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.870: INFO: Received response from host: affinity-nodeport-transition-d228j
  May 25 13:29:19.870: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-6432, will wait for the garbage collector to delete the pods @ 05/25/24 13:29:19.884
  May 25 13:29:19.944: INFO: Deleting ReplicationController affinity-nodeport-transition took: 6.876292ms
  May 25 13:29:20.045: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.723709ms
  E0525 13:29:20.270694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:21.271212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:22.271350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:29:22.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6432" for this suite. @ 05/25/24 13:29:22.969
• [9.933 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 05/25/24 13:29:22.974
  May 25 13:29:22.974: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/25/24 13:29:22.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:29:22.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:29:22.991
  STEP: creating a target pod @ 05/25/24 13:29:22.992
  E0525 13:29:23.272142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:24.272206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/25/24 13:29:25.011
  E0525 13:29:25.272605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:26.272672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 05/25/24 13:29:27.024
  May 25 13:29:27.024: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-967 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:29:27.024: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:29:27.025: INFO: ExecWithOptions: Clientset creation
  May 25 13:29:27.025: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-967/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  May 25 13:29:27.070: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/25/24 13:29:27.082
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/25/24 13:29:27.085
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/25/24 13:29:27.096
  May 25 13:29:27.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-967" for this suite. @ 05/25/24 13:29:27.101
• [4.134 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 05/25/24 13:29:27.109
  May 25 13:29:27.109: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename secrets @ 05/25/24 13:29:27.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:29:27.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:29:27.159
  STEP: creating a secret @ 05/25/24 13:29:27.16
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/25/24 13:29:27.167
  STEP: patching the secret @ 05/25/24 13:29:27.169
  STEP: deleting the secret using a LabelSelector @ 05/25/24 13:29:27.177
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/25/24 13:29:27.183
  May 25 13:29:27.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4369" for this suite. @ 05/25/24 13:29:27.188
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 05/25/24 13:29:27.193
  May 25 13:29:27.193: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubelet-test @ 05/25/24 13:29:27.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:29:27.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:29:27.208
  STEP: Waiting for pod completion @ 05/25/24 13:29:27.218
  E0525 13:29:27.273448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:28.274200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:29:29.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3491" for this suite. @ 05/25/24 13:29:29.234
• [2.045 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 05/25/24 13:29:29.238
  May 25 13:29:29.238: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/25/24 13:29:29.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:29:29.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:29:29.257
  STEP: getting /apis @ 05/25/24 13:29:29.259
  STEP: getting /apis/storage.k8s.io @ 05/25/24 13:29:29.262
  STEP: getting /apis/storage.k8s.io/v1 @ 05/25/24 13:29:29.263
  STEP: creating @ 05/25/24 13:29:29.263
  E0525 13:29:29.274474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: watching @ 05/25/24 13:29:29.281
  May 25 13:29:29.282: INFO: starting watch
  STEP: getting @ 05/25/24 13:29:29.287
  STEP: listing in namespace @ 05/25/24 13:29:29.289
  STEP: listing across namespaces @ 05/25/24 13:29:29.292
  STEP: patching @ 05/25/24 13:29:29.294
  STEP: updating @ 05/25/24 13:29:29.299
  May 25 13:29:29.304: INFO: waiting for watch events with expected annotations in namespace
  May 25 13:29:29.304: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/25/24 13:29:29.304
  STEP: deleting a collection @ 05/25/24 13:29:29.313
  May 25 13:29:29.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2139" for this suite. @ 05/25/24 13:29:29.337
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 05/25/24 13:29:29.345
  May 25 13:29:29.345: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-runtime @ 05/25/24 13:29:29.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:29:29.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:29:29.369
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/25/24 13:29:29.378
  E0525 13:29:30.275482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:31.275824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:32.275977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:33.276036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:34.276132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:35.276906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:36.277038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:37.277795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:38.277894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:39.278116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:40.278432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:41.278565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:42.278577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:43.278705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:44.279222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/25/24 13:29:44.445
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/25/24 13:29:44.449
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/25/24 13:29:44.454
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 05/25/24 13:29:44.454
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/25/24 13:29:44.475
  E0525 13:29:45.279806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:46.280463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:47.280776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/25/24 13:29:47.491
  E0525 13:29:48.281413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/25/24 13:29:48.5
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/25/24 13:29:48.506
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 05/25/24 13:29:48.506
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/25/24 13:29:48.528
  E0525 13:29:49.281512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/25/24 13:29:49.535
  E0525 13:29:50.282210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:51.282335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/25/24 13:29:51.544
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/25/24 13:29:51.55
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 05/25/24 13:29:51.55
  May 25 13:29:51.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4579" for this suite. @ 05/25/24 13:29:51.571
• [22.232 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 05/25/24 13:29:51.578
  May 25 13:29:51.578: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename configmap @ 05/25/24 13:29:51.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:29:51.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:29:51.597
  STEP: Creating configMap with name configmap-test-upd-aa09e6de-4e05-477c-9867-bbcbb28dc8b6 @ 05/25/24 13:29:51.603
  STEP: Creating the pod @ 05/25/24 13:29:51.606
  E0525 13:29:52.282410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:53.282497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-aa09e6de-4e05-477c-9867-bbcbb28dc8b6 @ 05/25/24 13:29:53.631
  STEP: waiting to observe update in volume @ 05/25/24 13:29:53.636
  E0525 13:29:54.282958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:55.283725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:56.283826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:57.284058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:58.284174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:29:59.284270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:00.284371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:01.284469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:02.285328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:03.285421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:04.286360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:05.287323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:06.287425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:07.287528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:08.288302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:09.288434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:10.289323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:11.289418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:12.289558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:13.289659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:14.290455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:15.290731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:16.290827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:17.290944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:18.291599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:19.291902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:20.292805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:21.292990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:22.293907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:23.294261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:24.294366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:25.294655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:26.294768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:27.295028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:28.295233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:29.295316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:30.295477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:31.295577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:32.296266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:33.296358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:34.297190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:35.297461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:36.298158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:37.298345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:38.298407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:39.298514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:40.298611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:41.298711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:42.299508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:43.299558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:44.299662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:45.299873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:46.300179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:47.303782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:48.304307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:49.304401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:50.304508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:51.304587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:52.304975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:53.305102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:54.305224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:55.305569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:56.305728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:57.306018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:58.306148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:30:59.306419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:00.306651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:01.306985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:02.307234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:03.307329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:04.307706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:05.308339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:06.308455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:07.308550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:08.309398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:09.309507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:10.310281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:11.310489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:12.310569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:13.310664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:14.310763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:15.310845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:16.311203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:17.311284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:18.311550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:19.311634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:31:19.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9227" for this suite. @ 05/25/24 13:31:19.97
• [88.400 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 05/25/24 13:31:19.978
  May 25 13:31:19.978: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-runtime @ 05/25/24 13:31:19.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:31:19.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:31:19.996
  STEP: create the container @ 05/25/24 13:31:19.998
  W0525 13:31:20.003338      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/25/24 13:31:20.003
  E0525 13:31:20.311721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:21.312251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:22.313149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/25/24 13:31:23.018
  STEP: the container should be terminated @ 05/25/24 13:31:23.021
  STEP: the termination message should be set @ 05/25/24 13:31:23.021
  May 25 13:31:23.021: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/25/24 13:31:23.021
  May 25 13:31:23.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9682" for this suite. @ 05/25/24 13:31:23.126
• [3.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 05/25/24 13:31:23.133
  May 25 13:31:23.133: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename deployment @ 05/25/24 13:31:23.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:31:23.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:31:23.15
  May 25 13:31:23.152: INFO: Creating deployment "test-recreate-deployment"
  May 25 13:31:23.159: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  May 25 13:31:23.165: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0525 13:31:23.313846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:24.314032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:31:25.172: INFO: Waiting deployment "test-recreate-deployment" to complete
  May 25 13:31:25.179: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  May 25 13:31:25.193: INFO: Updating deployment test-recreate-deployment
  May 25 13:31:25.193: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  May 25 13:31:25.274: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b3b1cf8-50c9-45a9-a4d8-9256d189c572",
      ResourceVersion: (string) (len=5) "36714",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852240683,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240683,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 25 13:31:25.278: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "acd3695e-4aeb-484a-81ed-6a82d5aa0b92",
      ResourceVersion: (string) (len=5) "36712",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852240685,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "8b3b1cf8-50c9-45a9-a4d8-9256d189c572",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 62 33 62 31 63  66 38 2d 35 30 63 39 2d  |\"8b3b1cf8-50c9-|
              00000120  34 35 61 39 2d 61 34 64  38 2d 39 32 35 36 64 31  |45a9-a4d8-9256d1|
              00000130  38 39 63 35 37 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |89c572\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 25 13:31:25.279: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  May 25 13:31:25.279: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "36a7bd23-4594-424a-8988-95d8ac3dd242",
      ResourceVersion: (string) (len=5) "36703",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852240683,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "8b3b1cf8-50c9-45a9-a4d8-9256d189c572",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 62 33 62 31 63  66 38 2d 35 30 63 39 2d  |\"8b3b1cf8-50c9-|
              00000120  34 35 61 39 2d 61 34 64  38 2d 39 32 35 36 64 31  |45a9-a4d8-9256d1|
              00000130  38 39 63 35 37 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |89c572\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 25 13:31:25.283: INFO: Pod "test-recreate-deployment-76fb77d45-87j4r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-87j4r",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d73b622-08d0-4f5b-a7d9-8ac9b84b65d4",
      ResourceVersion: (string) (len=5) "36715",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852240685,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "acd3695e-4aeb-484a-81ed-6a82d5aa0b92",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 63  64 33 36 39 35 65 2d 34  |d\":\"acd3695e-4|
              00000090  61 65 62 2d 34 38 34 61  2d 38 31 65 64 2d 36 61  |aeb-484a-81ed-6a|
              000000a0  38 32 64 35 61 61 30 62  39 32 5c 22 7d 22 3a 7b  |82d5aa0b92\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q799f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q799f",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-106",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852240685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.106",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.106"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852240685,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:31:25.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-503" for this suite. @ 05/25/24 13:31:25.289
• [2.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 05/25/24 13:31:25.297
  May 25 13:31:25.297: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename resourcequota @ 05/25/24 13:31:25.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:31:25.312
  E0525 13:31:25.314233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:31:25.314
  STEP: Counting existing ResourceQuota @ 05/25/24 13:31:25.315
  E0525 13:31:26.314989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:27.315254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:28.315319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:29.315417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:30.315805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/25/24 13:31:30.319
  STEP: Ensuring resource quota status is calculated @ 05/25/24 13:31:30.326
  E0525 13:31:31.316020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:32.316076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 05/25/24 13:31:32.33
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/25/24 13:31:32.345
  E0525 13:31:33.316550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:34.316729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/25/24 13:31:34.35
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/25/24 13:31:34.352
  STEP: Ensuring a pod cannot update its resource requirements @ 05/25/24 13:31:34.353
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/25/24 13:31:34.357
  E0525 13:31:35.316995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:36.317135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/25/24 13:31:36.361
  STEP: Ensuring resource quota status released the pod usage @ 05/25/24 13:31:36.371
  E0525 13:31:37.317255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:38.317469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:31:38.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-742" for this suite. @ 05/25/24 13:31:38.378
• [13.088 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 05/25/24 13:31:38.385
  May 25 13:31:38.385: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl-logs @ 05/25/24 13:31:38.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:31:38.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:31:38.406
  STEP: creating an pod @ 05/25/24 13:31:38.408
  May 25 13:31:38.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-logs-9881 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  May 25 13:31:38.454: INFO: stderr: ""
  May 25 13:31:38.454: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/25/24 13:31:38.454
  May 25 13:31:38.454: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0525 13:31:39.318435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:40.318666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:31:40.464: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/25/24 13:31:40.464
  May 25 13:31:40.464: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-logs-9881 logs logs-generator logs-generator'
  May 25 13:31:40.516: INFO: stderr: ""
  May 25 13:31:40.516: INFO: stdout: "I0525 13:31:39.052710       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/v2j 267\nI0525 13:31:39.252780       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/9n9x 501\nI0525 13:31:39.453574       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/bpd 224\nI0525 13:31:39.652803       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/8tk 567\nI0525 13:31:39.853153       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/lpws 328\nI0525 13:31:40.053274       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/9cb 555\nI0525 13:31:40.253564       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/qmj 279\nI0525 13:31:40.452797       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/j5x6 446\n"
  STEP: limiting log lines @ 05/25/24 13:31:40.516
  May 25 13:31:40.516: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-logs-9881 logs logs-generator logs-generator --tail=1'
  May 25 13:31:40.567: INFO: stderr: ""
  May 25 13:31:40.567: INFO: stdout: "I0525 13:31:40.452797       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/j5x6 446\n"
  May 25 13:31:40.567: INFO: got output "I0525 13:31:40.452797       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/j5x6 446\n"
  STEP: limiting log bytes @ 05/25/24 13:31:40.568
  May 25 13:31:40.568: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-logs-9881 logs logs-generator logs-generator --limit-bytes=1'
  May 25 13:31:40.614: INFO: stderr: ""
  May 25 13:31:40.614: INFO: stdout: "I"
  May 25 13:31:40.614: INFO: got output "I"
  STEP: exposing timestamps @ 05/25/24 13:31:40.615
  May 25 13:31:40.615: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-logs-9881 logs logs-generator logs-generator --tail=1 --timestamps'
  May 25 13:31:40.663: INFO: stderr: ""
  May 25 13:31:40.663: INFO: stdout: "2024-05-25T13:31:40.653087378Z I0525 13:31:40.652998       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/rdpz 204\n"
  May 25 13:31:40.663: INFO: got output "2024-05-25T13:31:40.653087378Z I0525 13:31:40.652998       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/rdpz 204\n"
  STEP: restricting to a time range @ 05/25/24 13:31:40.663
  E0525 13:31:41.319179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:42.319281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:31:43.164: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-logs-9881 logs logs-generator logs-generator --since=1s'
  May 25 13:31:43.209: INFO: stderr: ""
  May 25 13:31:43.209: INFO: stdout: "I0525 13:31:42.252973       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/xvv2 506\nI0525 13:31:42.453265       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/dvrm 366\nI0525 13:31:42.653643       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/lzxz 584\nI0525 13:31:42.852798       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/hfk 209\nI0525 13:31:43.053099       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/mhjj 250\n"
  May 25 13:31:43.209: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-logs-9881 logs logs-generator logs-generator --since=24h'
  May 25 13:31:43.257: INFO: stderr: ""
  May 25 13:31:43.257: INFO: stdout: "I0525 13:31:39.052710       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/v2j 267\nI0525 13:31:39.252780       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/9n9x 501\nI0525 13:31:39.453574       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/bpd 224\nI0525 13:31:39.652803       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/8tk 567\nI0525 13:31:39.853153       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/lpws 328\nI0525 13:31:40.053274       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/9cb 555\nI0525 13:31:40.253564       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/qmj 279\nI0525 13:31:40.452797       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/j5x6 446\nI0525 13:31:40.652998       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/rdpz 204\nI0525 13:31:40.853142       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/sws 520\nI0525 13:31:41.053450       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/czk 594\nI0525 13:31:41.253749       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/pqw4 581\nI0525 13:31:41.453042       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/7dxj 317\nI0525 13:31:41.653335       1 logs_generator.go:76] 13 GET /api/v1/namespaces/default/pods/b8lw 520\nI0525 13:31:41.853636       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/xw8 287\nI0525 13:31:42.052794       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/tkq 440\nI0525 13:31:42.252973       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/xvv2 506\nI0525 13:31:42.453265       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/dvrm 366\nI0525 13:31:42.653643       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/lzxz 584\nI0525 13:31:42.852798       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/hfk 209\nI0525 13:31:43.053099       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/mhjj 250\nI0525 13:31:43.253391       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/x6v 542\n"
  May 25 13:31:43.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-logs-9881 delete pod logs-generator'
  E0525 13:31:43.319362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:31:44.152: INFO: stderr: ""
  May 25 13:31:44.152: INFO: stdout: "pod \"logs-generator\" deleted\n"
  May 25 13:31:44.152: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9881" for this suite. @ 05/25/24 13:31:44.155
• [5.775 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 05/25/24 13:31:44.16
  May 25 13:31:44.160: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename subpath @ 05/25/24 13:31:44.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:31:44.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:31:44.177
  STEP: Setting up data @ 05/25/24 13:31:44.179
  STEP: Creating pod pod-subpath-test-projected-77mh @ 05/25/24 13:31:44.188
  STEP: Creating a pod to test atomic-volume-subpath @ 05/25/24 13:31:44.188
  E0525 13:31:44.320323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:45.320429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:46.321199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:47.321494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:48.321939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:49.322108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:50.323082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:51.323231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:52.323603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:53.323684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:54.324741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:55.325654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:56.326723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:57.326920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:58.327730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:31:59.327991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:00.328441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:01.328662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:02.329359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:03.329537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:04.330326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:05.330485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:06.330729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:07.330891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:32:08.247
  May 25 13:32:08.251: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-subpath-test-projected-77mh container test-container-subpath-projected-77mh: <nil>
  STEP: delete the pod @ 05/25/24 13:32:08.256
  STEP: Deleting pod pod-subpath-test-projected-77mh @ 05/25/24 13:32:08.268
  May 25 13:32:08.268: INFO: Deleting pod "pod-subpath-test-projected-77mh" in namespace "subpath-8738"
  May 25 13:32:08.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8738" for this suite. @ 05/25/24 13:32:08.275
• [24.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 05/25/24 13:32:08.281
  May 25 13:32:08.281: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename secrets @ 05/25/24 13:32:08.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:32:08.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:32:08.3
  STEP: Creating secret with name secret-test-bab6e7d0-cb0f-44fb-a224-ee52d7b38d9c @ 05/25/24 13:32:08.323
  STEP: Creating a pod to test consume secrets @ 05/25/24 13:32:08.327
  E0525 13:32:08.330943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:09.331235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:10.332279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:11.332374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:12.332461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:32:12.348
  May 25 13:32:12.350: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-secrets-2b7f31bc-f870-4964-97a8-27a286f5008a container secret-volume-test: <nil>
  STEP: delete the pod @ 05/25/24 13:32:12.357
  May 25 13:32:12.370: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7732" for this suite. @ 05/25/24 13:32:12.374
  STEP: Destroying namespace "secret-namespace-5010" for this suite. @ 05/25/24 13:32:12.381
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 05/25/24 13:32:12.387
  May 25 13:32:12.387: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl @ 05/25/24 13:32:12.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:32:12.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:32:12.405
  STEP: creating a replication controller @ 05/25/24 13:32:12.407
  May 25 13:32:12.407: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-86 create -f -'
  May 25 13:32:12.483: INFO: stderr: ""
  May 25 13:32:12.483: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/25/24 13:32:12.483
  May 25 13:32:12.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-86 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 25 13:32:12.530: INFO: stderr: ""
  May 25 13:32:12.530: INFO: stdout: "update-demo-nautilus-hjqhs update-demo-nautilus-nwqjz "
  May 25 13:32:12.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-86 get pods update-demo-nautilus-hjqhs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 25 13:32:12.573: INFO: stderr: ""
  May 25 13:32:12.573: INFO: stdout: ""
  May 25 13:32:12.573: INFO: update-demo-nautilus-hjqhs is created but not running
  E0525 13:32:13.332547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:14.332662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:15.333410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:16.333510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:17.333610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:32:17.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-86 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May 25 13:32:17.616: INFO: stderr: ""
  May 25 13:32:17.616: INFO: stdout: "update-demo-nautilus-hjqhs update-demo-nautilus-nwqjz "
  May 25 13:32:17.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-86 get pods update-demo-nautilus-hjqhs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 25 13:32:17.659: INFO: stderr: ""
  May 25 13:32:17.659: INFO: stdout: "true"
  May 25 13:32:17.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-86 get pods update-demo-nautilus-hjqhs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 25 13:32:17.701: INFO: stderr: ""
  May 25 13:32:17.701: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 25 13:32:17.701: INFO: validating pod update-demo-nautilus-hjqhs
  May 25 13:32:17.706: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 25 13:32:17.706: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 25 13:32:17.706: INFO: update-demo-nautilus-hjqhs is verified up and running
  May 25 13:32:17.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-86 get pods update-demo-nautilus-nwqjz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May 25 13:32:17.746: INFO: stderr: ""
  May 25 13:32:17.746: INFO: stdout: "true"
  May 25 13:32:17.746: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-86 get pods update-demo-nautilus-nwqjz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May 25 13:32:17.787: INFO: stderr: ""
  May 25 13:32:17.787: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May 25 13:32:17.787: INFO: validating pod update-demo-nautilus-nwqjz
  May 25 13:32:17.792: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May 25 13:32:17.792: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May 25 13:32:17.792: INFO: update-demo-nautilus-nwqjz is verified up and running
  STEP: using delete to clean up resources @ 05/25/24 13:32:17.792
  May 25 13:32:17.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-86 delete --grace-period=0 --force -f -'
  May 25 13:32:17.838: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May 25 13:32:17.838: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  May 25 13:32:17.838: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-86 get rc,svc -l name=update-demo --no-headers'
  May 25 13:32:17.898: INFO: stderr: "No resources found in kubectl-86 namespace.\n"
  May 25 13:32:17.898: INFO: stdout: ""
  May 25 13:32:17.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-86 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May 25 13:32:17.954: INFO: stderr: ""
  May 25 13:32:17.954: INFO: stdout: ""
  May 25 13:32:17.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-86" for this suite. @ 05/25/24 13:32:17.958
• [5.580 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 05/25/24 13:32:17.967
  May 25 13:32:17.967: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename lease-test @ 05/25/24 13:32:17.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:32:17.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:32:17.985
  May 25 13:32:18.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-7265" for this suite. @ 05/25/24 13:32:18.049
• [0.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 05/25/24 13:32:18.064
  May 25 13:32:18.064: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename secrets @ 05/25/24 13:32:18.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:32:18.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:32:18.084
  May 25 13:32:18.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7311" for this suite. @ 05/25/24 13:32:18.121
• [0.065 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 05/25/24 13:32:18.129
  May 25 13:32:18.129: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename proxy @ 05/25/24 13:32:18.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:32:18.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:32:18.144
  STEP: starting an echo server on multiple ports @ 05/25/24 13:32:18.16
  STEP: creating replication controller proxy-service-d5r4g in namespace proxy-3966 @ 05/25/24 13:32:18.16
  I0525 13:32:18.169148      21 runners.go:197] Created replication controller with name: proxy-service-d5r4g, namespace: proxy-3966, replica count: 1
  E0525 13:32:18.333690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0525 13:32:19.220072      21 runners.go:197] proxy-service-d5r4g Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0525 13:32:19.334087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0525 13:32:20.221163      21 runners.go:197] proxy-service-d5r4g Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 25 13:32:20.225: INFO: setup took 2.079683366s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/25/24 13:32:20.226
  May 25 13:32:20.233: INFO: (0) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 7.704796ms)
  May 25 13:32:20.233: INFO: (0) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 7.484608ms)
  May 25 13:32:20.234: INFO: (0) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 7.724299ms)
  May 25 13:32:20.234: INFO: (0) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 8.15278ms)
  May 25 13:32:20.234: INFO: (0) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 8.110882ms)
  May 25 13:32:20.234: INFO: (0) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 8.298487ms)
  May 25 13:32:20.234: INFO: (0) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 8.118818ms)
  May 25 13:32:20.234: INFO: (0) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 8.41037ms)
  May 25 13:32:20.234: INFO: (0) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 8.381946ms)
  May 25 13:32:20.238: INFO: (0) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 11.887977ms)
  May 25 13:32:20.238: INFO: (0) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 11.839009ms)
  May 25 13:32:20.238: INFO: (0) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 12.166375ms)
  May 25 13:32:20.238: INFO: (0) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 12.190464ms)
  May 25 13:32:20.238: INFO: (0) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 11.988638ms)
  May 25 13:32:20.238: INFO: (0) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 11.91891ms)
  May 25 13:32:20.238: INFO: (0) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 11.89543ms)
  May 25 13:32:20.241: INFO: (1) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 3.124291ms)
  May 25 13:32:20.241: INFO: (1) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 2.998652ms)
  May 25 13:32:20.242: INFO: (1) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 3.635568ms)
  May 25 13:32:20.243: INFO: (1) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 4.842942ms)
  May 25 13:32:20.243: INFO: (1) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 4.474923ms)
  May 25 13:32:20.244: INFO: (1) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 5.413847ms)
  May 25 13:32:20.244: INFO: (1) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 5.786779ms)
  May 25 13:32:20.245: INFO: (1) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 6.650299ms)
  May 25 13:32:20.245: INFO: (1) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 6.985749ms)
  May 25 13:32:20.245: INFO: (1) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 7.294386ms)
  May 25 13:32:20.246: INFO: (1) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 7.572292ms)
  May 25 13:32:20.246: INFO: (1) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 8.100492ms)
  May 25 13:32:20.246: INFO: (1) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 8.320081ms)
  May 25 13:32:20.247: INFO: (1) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 9.048669ms)
  May 25 13:32:20.247: INFO: (1) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 9.227926ms)
  May 25 13:32:20.248: INFO: (1) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 9.870862ms)
  May 25 13:32:20.253: INFO: (2) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 4.4849ms)
  May 25 13:32:20.254: INFO: (2) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 5.308821ms)
  May 25 13:32:20.254: INFO: (2) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 5.684084ms)
  May 25 13:32:20.255: INFO: (2) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 5.857609ms)
  May 25 13:32:20.255: INFO: (2) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 6.136928ms)
  May 25 13:32:20.255: INFO: (2) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 6.474987ms)
  May 25 13:32:20.256: INFO: (2) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 6.945653ms)
  May 25 13:32:20.256: INFO: (2) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 7.65711ms)
  May 25 13:32:20.256: INFO: (2) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 7.472225ms)
  May 25 13:32:20.256: INFO: (2) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 7.548034ms)
  May 25 13:32:20.256: INFO: (2) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 7.535577ms)
  May 25 13:32:20.256: INFO: (2) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 7.450819ms)
  May 25 13:32:20.256: INFO: (2) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 7.417797ms)
  May 25 13:32:20.256: INFO: (2) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 7.552526ms)
  May 25 13:32:20.257: INFO: (2) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 7.89125ms)
  May 25 13:32:20.258: INFO: (2) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 9.4918ms)
  May 25 13:32:20.261: INFO: (3) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 2.759563ms)
  May 25 13:32:20.261: INFO: (3) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 3.086219ms)
  May 25 13:32:20.263: INFO: (3) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 4.083308ms)
  May 25 13:32:20.263: INFO: (3) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 4.346623ms)
  May 25 13:32:20.263: INFO: (3) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 4.61063ms)
  May 25 13:32:20.264: INFO: (3) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 5.179384ms)
  May 25 13:32:20.264: INFO: (3) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 5.311524ms)
  May 25 13:32:20.264: INFO: (3) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 5.464277ms)
  May 25 13:32:20.264: INFO: (3) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 5.786483ms)
  May 25 13:32:20.265: INFO: (3) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 6.238639ms)
  May 25 13:32:20.266: INFO: (3) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 7.113169ms)
  May 25 13:32:20.266: INFO: (3) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 7.145291ms)
  May 25 13:32:20.266: INFO: (3) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 7.275789ms)
  May 25 13:32:20.266: INFO: (3) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 7.419399ms)
  May 25 13:32:20.266: INFO: (3) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 7.697237ms)
  May 25 13:32:20.267: INFO: (3) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 8.190953ms)
  May 25 13:32:20.270: INFO: (4) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 3.171638ms)
  May 25 13:32:20.271: INFO: (4) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 3.287504ms)
  May 25 13:32:20.271: INFO: (4) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 3.7063ms)
  May 25 13:32:20.271: INFO: (4) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 4.455564ms)
  May 25 13:32:20.272: INFO: (4) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 4.237701ms)
  May 25 13:32:20.272: INFO: (4) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 5.126731ms)
  May 25 13:32:20.272: INFO: (4) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 5.158244ms)
  May 25 13:32:20.272: INFO: (4) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 4.899388ms)
  May 25 13:32:20.273: INFO: (4) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 5.240686ms)
  May 25 13:32:20.273: INFO: (4) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 5.496117ms)
  May 25 13:32:20.273: INFO: (4) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 5.592926ms)
  May 25 13:32:20.274: INFO: (4) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 6.363603ms)
  May 25 13:32:20.274: INFO: (4) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 6.494371ms)
  May 25 13:32:20.274: INFO: (4) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 7.053228ms)
  May 25 13:32:20.274: INFO: (4) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 7.243244ms)
  May 25 13:32:20.275: INFO: (4) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 7.850243ms)
  May 25 13:32:20.279: INFO: (5) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 3.377633ms)
  May 25 13:32:20.279: INFO: (5) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 3.887381ms)
  May 25 13:32:20.280: INFO: (5) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 4.356021ms)
  May 25 13:32:20.280: INFO: (5) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 4.589632ms)
  May 25 13:32:20.281: INFO: (5) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 5.311379ms)
  May 25 13:32:20.282: INFO: (5) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 5.832839ms)
  May 25 13:32:20.282: INFO: (5) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 5.83585ms)
  May 25 13:32:20.282: INFO: (5) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 6.018053ms)
  May 25 13:32:20.282: INFO: (5) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 6.285058ms)
  May 25 13:32:20.282: INFO: (5) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 6.376325ms)
  May 25 13:32:20.282: INFO: (5) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 6.4058ms)
  May 25 13:32:20.282: INFO: (5) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 6.337685ms)
  May 25 13:32:20.282: INFO: (5) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 6.56714ms)
  May 25 13:32:20.282: INFO: (5) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 6.771244ms)
  May 25 13:32:20.283: INFO: (5) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 7.054265ms)
  May 25 13:32:20.284: INFO: (5) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 7.925941ms)
  May 25 13:32:20.287: INFO: (6) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 2.913413ms)
  May 25 13:32:20.287: INFO: (6) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 3.317124ms)
  May 25 13:32:20.288: INFO: (6) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 4.104596ms)
  May 25 13:32:20.289: INFO: (6) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 4.670057ms)
  May 25 13:32:20.289: INFO: (6) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 4.760878ms)
  May 25 13:32:20.289: INFO: (6) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 5.067265ms)
  May 25 13:32:20.290: INFO: (6) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 5.639815ms)
  May 25 13:32:20.290: INFO: (6) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 5.622963ms)
  May 25 13:32:20.290: INFO: (6) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 5.797134ms)
  May 25 13:32:20.290: INFO: (6) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 6.052424ms)
  May 25 13:32:20.290: INFO: (6) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 6.195025ms)
  May 25 13:32:20.290: INFO: (6) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 6.206845ms)
  May 25 13:32:20.290: INFO: (6) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 6.546207ms)
  May 25 13:32:20.291: INFO: (6) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 6.935763ms)
  May 25 13:32:20.291: INFO: (6) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 7.362546ms)
  May 25 13:32:20.292: INFO: (6) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 8.111778ms)
  May 25 13:32:20.295: INFO: (7) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 2.920383ms)
  May 25 13:32:20.295: INFO: (7) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 3.117213ms)
  May 25 13:32:20.296: INFO: (7) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 3.746832ms)
  May 25 13:32:20.296: INFO: (7) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 3.857648ms)
  May 25 13:32:20.297: INFO: (7) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 4.375891ms)
  May 25 13:32:20.297: INFO: (7) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 4.855007ms)
  May 25 13:32:20.297: INFO: (7) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 4.705452ms)
  May 25 13:32:20.298: INFO: (7) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 5.304791ms)
  May 25 13:32:20.298: INFO: (7) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 5.507069ms)
  May 25 13:32:20.298: INFO: (7) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 6.018229ms)
  May 25 13:32:20.299: INFO: (7) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 6.062953ms)
  May 25 13:32:20.299: INFO: (7) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 6.315979ms)
  May 25 13:32:20.299: INFO: (7) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 6.433776ms)
  May 25 13:32:20.299: INFO: (7) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 6.751944ms)
  May 25 13:32:20.299: INFO: (7) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 6.767022ms)
  May 25 13:32:20.300: INFO: (7) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 7.670738ms)
  May 25 13:32:20.304: INFO: (8) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 3.488555ms)
  May 25 13:32:20.304: INFO: (8) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 3.839463ms)
  May 25 13:32:20.305: INFO: (8) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 4.627165ms)
  May 25 13:32:20.305: INFO: (8) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 4.467337ms)
  May 25 13:32:20.305: INFO: (8) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 4.503654ms)
  May 25 13:32:20.305: INFO: (8) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 4.635793ms)
  May 25 13:32:20.306: INFO: (8) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 5.321377ms)
  May 25 13:32:20.306: INFO: (8) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 5.457694ms)
  May 25 13:32:20.306: INFO: (8) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 5.599421ms)
  May 25 13:32:20.306: INFO: (8) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 5.644576ms)
  May 25 13:32:20.307: INFO: (8) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 6.36199ms)
  May 25 13:32:20.307: INFO: (8) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 6.655595ms)
  May 25 13:32:20.308: INFO: (8) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 7.275979ms)
  May 25 13:32:20.308: INFO: (8) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 7.382083ms)
  May 25 13:32:20.308: INFO: (8) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 8.080831ms)
  May 25 13:32:20.310: INFO: (8) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 9.286038ms)
  May 25 13:32:20.313: INFO: (9) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 2.867281ms)
  May 25 13:32:20.313: INFO: (9) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 2.887404ms)
  May 25 13:32:20.314: INFO: (9) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 3.884634ms)
  May 25 13:32:20.314: INFO: (9) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 3.999872ms)
  May 25 13:32:20.315: INFO: (9) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 4.285475ms)
  May 25 13:32:20.315: INFO: (9) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 4.699263ms)
  May 25 13:32:20.315: INFO: (9) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 4.773079ms)
  May 25 13:32:20.315: INFO: (9) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 4.946614ms)
  May 25 13:32:20.315: INFO: (9) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 5.298486ms)
  May 25 13:32:20.316: INFO: (9) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 5.892499ms)
  May 25 13:32:20.316: INFO: (9) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 6.078462ms)
  May 25 13:32:20.316: INFO: (9) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 6.381756ms)
  May 25 13:32:20.317: INFO: (9) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 6.396611ms)
  May 25 13:32:20.318: INFO: (9) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 7.81886ms)
  May 25 13:32:20.319: INFO: (9) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 8.665315ms)
  May 25 13:32:20.323: INFO: (9) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 12.567812ms)
  May 25 13:32:20.327: INFO: (10) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 4.601977ms)
  May 25 13:32:20.328: INFO: (10) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 5.193399ms)
  May 25 13:32:20.328: INFO: (10) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 5.339409ms)
  May 25 13:32:20.329: INFO: (10) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 5.994707ms)
  May 25 13:32:20.329: INFO: (10) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 6.160049ms)
  May 25 13:32:20.330: INFO: (10) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 6.560604ms)
  May 25 13:32:20.330: INFO: (10) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 6.792363ms)
  May 25 13:32:20.330: INFO: (10) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 7.202652ms)
  May 25 13:32:20.332: INFO: (10) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 8.915015ms)
  May 25 13:32:20.332: INFO: (10) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 8.900481ms)
  May 25 13:32:20.332: INFO: (10) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 9.225056ms)
  May 25 13:32:20.332: INFO: (10) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 9.218278ms)
  May 25 13:32:20.332: INFO: (10) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 9.151973ms)
  May 25 13:32:20.332: INFO: (10) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 8.996559ms)
  May 25 13:32:20.333: INFO: (10) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 9.693948ms)
  May 25 13:32:20.333: INFO: (10) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 9.777876ms)
  E0525 13:32:20.334818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:32:20.338: INFO: (11) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 4.696551ms)
  May 25 13:32:20.338: INFO: (11) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 4.739798ms)
  May 25 13:32:20.338: INFO: (11) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 5.028933ms)
  May 25 13:32:20.338: INFO: (11) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 5.218162ms)
  May 25 13:32:20.339: INFO: (11) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 5.601772ms)
  May 25 13:32:20.339: INFO: (11) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 6.051128ms)
  May 25 13:32:20.340: INFO: (11) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 6.807614ms)
  May 25 13:32:20.340: INFO: (11) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 7.532722ms)
  May 25 13:32:20.342: INFO: (11) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 8.50064ms)
  May 25 13:32:20.342: INFO: (11) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 8.499576ms)
  May 25 13:32:20.342: INFO: (11) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 8.946528ms)
  May 25 13:32:20.342: INFO: (11) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 8.852736ms)
  May 25 13:32:20.342: INFO: (11) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 8.81429ms)
  May 25 13:32:20.342: INFO: (11) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 8.808154ms)
  May 25 13:32:20.343: INFO: (11) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 9.633729ms)
  May 25 13:32:20.344: INFO: (11) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 10.625554ms)
  May 25 13:32:20.351: INFO: (12) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 6.852832ms)
  May 25 13:32:20.351: INFO: (12) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 7.05343ms)
  May 25 13:32:20.351: INFO: (12) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 7.511304ms)
  May 25 13:32:20.355: INFO: (12) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 10.808552ms)
  May 25 13:32:20.355: INFO: (12) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 10.810085ms)
  May 25 13:32:20.355: INFO: (12) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 10.811837ms)
  May 25 13:32:20.355: INFO: (12) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 10.798195ms)
  May 25 13:32:20.355: INFO: (12) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 10.807666ms)
  May 25 13:32:20.355: INFO: (12) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 11.128568ms)
  May 25 13:32:20.355: INFO: (12) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 10.90175ms)
  May 25 13:32:20.355: INFO: (12) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 10.92748ms)
  May 25 13:32:20.355: INFO: (12) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 11.008802ms)
  May 25 13:32:20.355: INFO: (12) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 11.083265ms)
  May 25 13:32:20.356: INFO: (12) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 11.562061ms)
  May 25 13:32:20.356: INFO: (12) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 12.460494ms)
  May 25 13:32:20.356: INFO: (12) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 12.450138ms)
  May 25 13:32:20.364: INFO: (13) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 7.415505ms)
  May 25 13:32:20.365: INFO: (13) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 8.913935ms)
  May 25 13:32:20.366: INFO: (13) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 9.31299ms)
  May 25 13:32:20.366: INFO: (13) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 9.257567ms)
  May 25 13:32:20.366: INFO: (13) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 9.78362ms)
  May 25 13:32:20.367: INFO: (13) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 10.089864ms)
  May 25 13:32:20.367: INFO: (13) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 10.028464ms)
  May 25 13:32:20.367: INFO: (13) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 10.539903ms)
  May 25 13:32:20.367: INFO: (13) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 10.653504ms)
  May 25 13:32:20.367: INFO: (13) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 10.690872ms)
  May 25 13:32:20.368: INFO: (13) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 11.198746ms)
  May 25 13:32:20.368: INFO: (13) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 11.798311ms)
  May 25 13:32:20.368: INFO: (13) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 11.780401ms)
  May 25 13:32:20.369: INFO: (13) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 12.357451ms)
  May 25 13:32:20.369: INFO: (13) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 12.76698ms)
  May 25 13:32:20.370: INFO: (13) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 13.225025ms)
  May 25 13:32:20.374: INFO: (14) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 4.087423ms)
  May 25 13:32:20.375: INFO: (14) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 4.635434ms)
  May 25 13:32:20.375: INFO: (14) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 5.399298ms)
  May 25 13:32:20.375: INFO: (14) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 5.368606ms)
  May 25 13:32:20.379: INFO: (14) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 8.466077ms)
  May 25 13:32:20.379: INFO: (14) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 8.395241ms)
  May 25 13:32:20.379: INFO: (14) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 8.706047ms)
  May 25 13:32:20.379: INFO: (14) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 8.387278ms)
  May 25 13:32:20.379: INFO: (14) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 8.727555ms)
  May 25 13:32:20.379: INFO: (14) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 8.681042ms)
  May 25 13:32:20.379: INFO: (14) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 8.6513ms)
  May 25 13:32:20.379: INFO: (14) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 8.617962ms)
  May 25 13:32:20.379: INFO: (14) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 8.551203ms)
  May 25 13:32:20.379: INFO: (14) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 9.097995ms)
  May 25 13:32:20.380: INFO: (14) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 9.603862ms)
  May 25 13:32:20.381: INFO: (14) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 10.251107ms)
  May 25 13:32:20.384: INFO: (15) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 3.386312ms)
  May 25 13:32:20.385: INFO: (15) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 4.641115ms)
  May 25 13:32:20.386: INFO: (15) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 5.588474ms)
  May 25 13:32:20.386: INFO: (15) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 5.687912ms)
  May 25 13:32:20.387: INFO: (15) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 5.732087ms)
  May 25 13:32:20.387: INFO: (15) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 6.640429ms)
  May 25 13:32:20.387: INFO: (15) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 6.697787ms)
  May 25 13:32:20.388: INFO: (15) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 6.899828ms)
  May 25 13:32:20.388: INFO: (15) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 7.606758ms)
  May 25 13:32:20.389: INFO: (15) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 7.588576ms)
  May 25 13:32:20.389: INFO: (15) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 7.902896ms)
  May 25 13:32:20.389: INFO: (15) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 8.067768ms)
  May 25 13:32:20.389: INFO: (15) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 8.469898ms)
  May 25 13:32:20.390: INFO: (15) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 8.692158ms)
  May 25 13:32:20.390: INFO: (15) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 9.435963ms)
  May 25 13:32:20.391: INFO: (15) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 10.195784ms)
  May 25 13:32:20.396: INFO: (16) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 5.311344ms)
  May 25 13:32:20.398: INFO: (16) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 6.498365ms)
  May 25 13:32:20.398: INFO: (16) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 6.423755ms)
  May 25 13:32:20.398: INFO: (16) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 7.119123ms)
  May 25 13:32:20.399: INFO: (16) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 7.831045ms)
  May 25 13:32:20.399: INFO: (16) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 8.136869ms)
  May 25 13:32:20.399: INFO: (16) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 8.097825ms)
  May 25 13:32:20.400: INFO: (16) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 8.37616ms)
  May 25 13:32:20.400: INFO: (16) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 8.715755ms)
  May 25 13:32:20.400: INFO: (16) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 9.09894ms)
  May 25 13:32:20.400: INFO: (16) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 9.025273ms)
  May 25 13:32:20.400: INFO: (16) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 9.199486ms)
  May 25 13:32:20.400: INFO: (16) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 9.081536ms)
  May 25 13:32:20.402: INFO: (16) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 10.971259ms)
  May 25 13:32:20.403: INFO: (16) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 11.296475ms)
  May 25 13:32:20.403: INFO: (16) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 11.544314ms)
  May 25 13:32:20.409: INFO: (17) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 6.429682ms)
  May 25 13:32:20.410: INFO: (17) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 6.665165ms)
  May 25 13:32:20.410: INFO: (17) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 6.905247ms)
  May 25 13:32:20.410: INFO: (17) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 6.93621ms)
  May 25 13:32:20.411: INFO: (17) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 7.218076ms)
  May 25 13:32:20.411: INFO: (17) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 7.968242ms)
  May 25 13:32:20.412: INFO: (17) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 9.036704ms)
  May 25 13:32:20.412: INFO: (17) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 9.466986ms)
  May 25 13:32:20.412: INFO: (17) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 9.488383ms)
  May 25 13:32:20.412: INFO: (17) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 9.279343ms)
  May 25 13:32:20.412: INFO: (17) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 9.157429ms)
  May 25 13:32:20.413: INFO: (17) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 9.391377ms)
  May 25 13:32:20.413: INFO: (17) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 9.616241ms)
  May 25 13:32:20.414: INFO: (17) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 10.509255ms)
  May 25 13:32:20.414: INFO: (17) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 10.579739ms)
  May 25 13:32:20.414: INFO: (17) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 11.001706ms)
  May 25 13:32:20.426: INFO: (18) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 11.972468ms)
  May 25 13:32:20.427: INFO: (18) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 12.790281ms)
  May 25 13:32:20.427: INFO: (18) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 12.795722ms)
  May 25 13:32:20.433: INFO: (18) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 18.147285ms)
  May 25 13:32:20.433: INFO: (18) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 18.122402ms)
  May 25 13:32:20.433: INFO: (18) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 18.312956ms)
  May 25 13:32:20.433: INFO: (18) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 18.208318ms)
  May 25 13:32:20.433: INFO: (18) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 18.363874ms)
  May 25 13:32:20.433: INFO: (18) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 18.322403ms)
  May 25 13:32:20.433: INFO: (18) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 18.31109ms)
  May 25 13:32:20.433: INFO: (18) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 18.320592ms)
  May 25 13:32:20.433: INFO: (18) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 18.301559ms)
  May 25 13:32:20.433: INFO: (18) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 18.461542ms)
  May 25 13:32:20.433: INFO: (18) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 18.436318ms)
  May 25 13:32:20.433: INFO: (18) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 18.399592ms)
  May 25 13:32:20.433: INFO: (18) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 18.433988ms)
  May 25 13:32:20.438: INFO: (19) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:462/proxy/: tls qux (200; 4.724585ms)
  May 25 13:32:20.438: INFO: (19) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 4.885797ms)
  May 25 13:32:20.438: INFO: (19) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:443/proxy/tlsrewritem... (200; 5.170613ms)
  May 25 13:32:20.439: INFO: (19) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 5.433546ms)
  May 25 13:32:20.439: INFO: (19) /api/v1/namespaces/proxy-3966/pods/https:proxy-service-d5r4g-pkjp9:460/proxy/: tls baz (200; 5.861195ms)
  May 25 13:32:20.440: INFO: (19) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">... (200; 6.356755ms)
  May 25 13:32:20.440: INFO: (19) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname1/proxy/: foo (200; 7.31845ms)
  May 25 13:32:20.441: INFO: (19) /api/v1/namespaces/proxy-3966/services/proxy-service-d5r4g:portname2/proxy/: bar (200; 7.256571ms)
  May 25 13:32:20.441: INFO: (19) /api/v1/namespaces/proxy-3966/pods/http:proxy-service-d5r4g-pkjp9:160/proxy/: foo (200; 7.204877ms)
  May 25 13:32:20.441: INFO: (19) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:162/proxy/: bar (200; 7.651803ms)
  May 25 13:32:20.441: INFO: (19) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9/proxy/rewriteme">test</a> (200; 8.280951ms)
  May 25 13:32:20.441: INFO: (19) /api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/: <a href="/api/v1/namespaces/proxy-3966/pods/proxy-service-d5r4g-pkjp9:1080/proxy/rewriteme">test<... (200; 8.103832ms)
  May 25 13:32:20.442: INFO: (19) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname2/proxy/: bar (200; 8.366717ms)
  May 25 13:32:20.442: INFO: (19) /api/v1/namespaces/proxy-3966/services/http:proxy-service-d5r4g:portname1/proxy/: foo (200; 8.646559ms)
  May 25 13:32:20.442: INFO: (19) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname2/proxy/: tls qux (200; 8.906985ms)
  May 25 13:32:20.442: INFO: (19) /api/v1/namespaces/proxy-3966/services/https:proxy-service-d5r4g:tlsportname1/proxy/: tls baz (200; 9.060382ms)
  STEP: deleting ReplicationController proxy-service-d5r4g in namespace proxy-3966, will wait for the garbage collector to delete the pods @ 05/25/24 13:32:20.443
  May 25 13:32:20.503: INFO: Deleting ReplicationController proxy-service-d5r4g took: 6.632461ms
  May 25 13:32:20.603: INFO: Terminating ReplicationController proxy-service-d5r4g pods took: 100.125777ms
  E0525 13:32:21.335366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:22.335606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:32:23.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3966" for this suite. @ 05/25/24 13:32:23.307
• [5.183 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 05/25/24 13:32:23.312
  May 25 13:32:23.312: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename subpath @ 05/25/24 13:32:23.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:32:23.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:32:23.333
  STEP: Setting up data @ 05/25/24 13:32:23.334
  E0525 13:32:23.335769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating pod pod-subpath-test-downwardapi-k2m7 @ 05/25/24 13:32:23.343
  STEP: Creating a pod to test atomic-volume-subpath @ 05/25/24 13:32:23.343
  E0525 13:32:24.335993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:25.336274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:26.337367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:27.337680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:28.337852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:29.337873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:30.337974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:31.338814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:32.339811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:33.339837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:34.340472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:35.341412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:36.342120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:37.342319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:38.342522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:39.342720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:40.342822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:41.343191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:42.343332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:43.343407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:44.343452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:45.343551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:32:45.401
  May 25 13:32:45.405: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-subpath-test-downwardapi-k2m7 container test-container-subpath-downwardapi-k2m7: <nil>
  STEP: delete the pod @ 05/25/24 13:32:45.418
  STEP: Deleting pod pod-subpath-test-downwardapi-k2m7 @ 05/25/24 13:32:45.43
  May 25 13:32:45.430: INFO: Deleting pod "pod-subpath-test-downwardapi-k2m7" in namespace "subpath-1729"
  May 25 13:32:45.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1729" for this suite. @ 05/25/24 13:32:45.436
• [22.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 05/25/24 13:32:45.443
  May 25 13:32:45.443: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename sysctl @ 05/25/24 13:32:45.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:32:45.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:32:45.461
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/25/24 13:32:45.462
  May 25 13:32:45.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4680" for this suite. @ 05/25/24 13:32:45.469
• [0.031 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 05/25/24 13:32:45.474
  May 25 13:32:45.474: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename replicaset @ 05/25/24 13:32:45.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:32:45.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:32:45.49
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/25/24 13:32:45.492
  May 25 13:32:45.498: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0525 13:32:46.343671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:47.343764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:48.344414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:49.344522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:50.344701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:32:50.501: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/25/24 13:32:50.501
  STEP: getting scale subresource @ 05/25/24 13:32:50.501
  STEP: updating a scale subresource @ 05/25/24 13:32:50.505
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/25/24 13:32:50.508
  STEP: Patch a scale subresource @ 05/25/24 13:32:50.51
  May 25 13:32:50.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9508" for this suite. @ 05/25/24 13:32:50.525
• [5.058 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 05/25/24 13:32:50.533
  May 25 13:32:50.533: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 13:32:50.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:32:50.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:32:50.557
  STEP: creating an Endpoint @ 05/25/24 13:32:50.561
  STEP: waiting for available Endpoint @ 05/25/24 13:32:50.569
  STEP: listing all Endpoints @ 05/25/24 13:32:50.57
  STEP: updating the Endpoint @ 05/25/24 13:32:50.574
  STEP: fetching the Endpoint @ 05/25/24 13:32:50.579
  STEP: patching the Endpoint @ 05/25/24 13:32:50.581
  STEP: fetching the Endpoint @ 05/25/24 13:32:50.587
  STEP: deleting the Endpoint by Collection @ 05/25/24 13:32:50.589
  STEP: waiting for Endpoint deletion @ 05/25/24 13:32:50.597
  STEP: fetching the Endpoint @ 05/25/24 13:32:50.598
  May 25 13:32:50.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2818" for this suite. @ 05/25/24 13:32:50.603
• [0.076 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 05/25/24 13:32:50.609
  May 25 13:32:50.609: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename podtemplate @ 05/25/24 13:32:50.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:32:50.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:32:50.629
  May 25 13:32:50.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8412" for this suite. @ 05/25/24 13:32:50.661
• [0.057 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 05/25/24 13:32:50.667
  May 25 13:32:50.667: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename configmap @ 05/25/24 13:32:50.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:32:50.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:32:50.686
  STEP: Creating configMap with name configmap-test-upd-2d413c9d-550a-40b0-b6f4-7c4afe8da76e @ 05/25/24 13:32:50.692
  STEP: Creating the pod @ 05/25/24 13:32:50.695
  E0525 13:32:51.345787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:52.345930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 05/25/24 13:32:52.712
  STEP: Waiting for pod with binary data @ 05/25/24 13:32:52.718
  May 25 13:32:52.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9607" for this suite. @ 05/25/24 13:32:52.727
• [2.067 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 05/25/24 13:32:52.734
  May 25 13:32:52.734: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/25/24 13:32:52.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:32:52.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:32:52.753
  May 25 13:32:52.755: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  E0525 13:32:53.346158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/25/24 13:32:53.96
  May 25 13:32:53.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-3317 --namespace=crd-publish-openapi-3317 create -f -'
  May 25 13:32:54.021: INFO: stderr: ""
  May 25 13:32:54.021: INFO: stdout: "e2e-test-crd-publish-openapi-6196-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  May 25 13:32:54.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-3317 --namespace=crd-publish-openapi-3317 delete e2e-test-crd-publish-openapi-6196-crds test-cr'
  May 25 13:32:54.066: INFO: stderr: ""
  May 25 13:32:54.066: INFO: stdout: "e2e-test-crd-publish-openapi-6196-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  May 25 13:32:54.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-3317 --namespace=crd-publish-openapi-3317 apply -f -'
  May 25 13:32:54.112: INFO: stderr: ""
  May 25 13:32:54.112: INFO: stdout: "e2e-test-crd-publish-openapi-6196-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  May 25 13:32:54.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-3317 --namespace=crd-publish-openapi-3317 delete e2e-test-crd-publish-openapi-6196-crds test-cr'
  May 25 13:32:54.157: INFO: stderr: ""
  May 25 13:32:54.157: INFO: stdout: "e2e-test-crd-publish-openapi-6196-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/25/24 13:32:54.157
  May 25 13:32:54.157: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=crd-publish-openapi-3317 explain e2e-test-crd-publish-openapi-6196-crds'
  May 25 13:32:54.196: INFO: stderr: ""
  May 25 13:32:54.196: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-6196-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0525 13:32:54.346633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:55.346624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:32:55.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3317" for this suite. @ 05/25/24 13:32:55.463
• [2.737 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 05/25/24 13:32:55.471
  May 25 13:32:55.471: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename downward-api @ 05/25/24 13:32:55.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:32:55.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:32:55.49
  STEP: Creating a pod to test downward api env vars @ 05/25/24 13:32:55.493
  E0525 13:32:56.347250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:57.347414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:58.347495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:32:59.348404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:32:59.519
  May 25 13:32:59.522: INFO: Trying to get logs from node ip-172-31-15-138 pod downward-api-61565e6f-8dc1-4cd9-a7c5-09d011912d82 container dapi-container: <nil>
  STEP: delete the pod @ 05/25/24 13:32:59.534
  May 25 13:32:59.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1683" for this suite. @ 05/25/24 13:32:59.555
• [4.090 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 05/25/24 13:32:59.562
  May 25 13:32:59.562: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename podtemplate @ 05/25/24 13:32:59.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:32:59.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:32:59.579
  STEP: Create a pod template @ 05/25/24 13:32:59.582
  STEP: Replace a pod template @ 05/25/24 13:32:59.588
  May 25 13:32:59.596: INFO: Found updated podtemplate annotation: "true"

  May 25 13:32:59.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1910" for this suite. @ 05/25/24 13:32:59.599
• [0.043 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 05/25/24 13:32:59.605
  May 25 13:32:59.605: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename daemonsets @ 05/25/24 13:32:59.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:32:59.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:32:59.622
  STEP: Creating simple DaemonSet "daemon-set" @ 05/25/24 13:32:59.65
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/25/24 13:32:59.655
  May 25 13:32:59.661: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:32:59.661: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:32:59.664: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 13:32:59.664: INFO: Node ip-172-31-15-138 is running 0 daemon pod, expected 1
  E0525 13:33:00.348502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:33:00.659: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:33:00.659: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:33:00.662: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 13:33:00.662: INFO: Node ip-172-31-15-138 is running 0 daemon pod, expected 1
  E0525 13:33:01.348525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:33:01.663: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:33:01.663: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:33:01.669: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 25 13:33:01.669: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 05/25/24 13:33:01.673
  May 25 13:33:01.677: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/25/24 13:33:01.677
  May 25 13:33:01.691: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/25/24 13:33:01.691
  May 25 13:33:01.692: INFO: Observed &DaemonSet event: ADDED
  May 25 13:33:01.693: INFO: Observed &DaemonSet event: MODIFIED
  May 25 13:33:01.693: INFO: Observed &DaemonSet event: MODIFIED
  May 25 13:33:01.693: INFO: Observed &DaemonSet event: MODIFIED
  May 25 13:33:01.693: INFO: Observed &DaemonSet event: MODIFIED
  May 25 13:33:01.693: INFO: Found daemon set daemon-set in namespace daemonsets-9481 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 25 13:33:01.693: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/25/24 13:33:01.693
  STEP: watching for the daemon set status to be patched @ 05/25/24 13:33:01.705
  May 25 13:33:01.707: INFO: Observed &DaemonSet event: ADDED
  May 25 13:33:01.707: INFO: Observed &DaemonSet event: MODIFIED
  May 25 13:33:01.707: INFO: Observed &DaemonSet event: MODIFIED
  May 25 13:33:01.707: INFO: Observed &DaemonSet event: MODIFIED
  May 25 13:33:01.707: INFO: Observed &DaemonSet event: MODIFIED
  May 25 13:33:01.707: INFO: Observed daemon set daemon-set in namespace daemonsets-9481 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May 25 13:33:01.707: INFO: Observed &DaemonSet event: MODIFIED
  May 25 13:33:01.708: INFO: Found daemon set daemon-set in namespace daemonsets-9481 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  May 25 13:33:01.708: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/25/24 13:33:01.712
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9481, will wait for the garbage collector to delete the pods @ 05/25/24 13:33:01.712
  May 25 13:33:01.777: INFO: Deleting DaemonSet.extensions daemon-set took: 7.180903ms
  May 25 13:33:01.878: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.955086ms
  E0525 13:33:02.348631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:03.348831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:04.349406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:33:04.384: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 13:33:04.384: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 25 13:33:04.389: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37572"},"items":null}

  May 25 13:33:04.396: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37572"},"items":null}

  May 25 13:33:04.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9481" for this suite. @ 05/25/24 13:33:04.422
• [4.824 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 05/25/24 13:33:04.429
  May 25 13:33:04.429: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl @ 05/25/24 13:33:04.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:33:04.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:33:04.447
  STEP: creating Agnhost RC @ 05/25/24 13:33:04.45
  May 25 13:33:04.450: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-5229 create -f -'
  May 25 13:33:04.527: INFO: stderr: ""
  May 25 13:33:04.527: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/25/24 13:33:04.527
  E0525 13:33:05.350103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:33:05.532: INFO: Selector matched 1 pods for map[app:agnhost]
  May 25 13:33:05.532: INFO: Found 1 / 1
  May 25 13:33:05.532: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/25/24 13:33:05.532
  May 25 13:33:05.536: INFO: Selector matched 1 pods for map[app:agnhost]
  May 25 13:33:05.536: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 25 13:33:05.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-5229 patch pod agnhost-primary-jc9lc -p {"metadata":{"annotations":{"x":"y"}}}'
  May 25 13:33:05.585: INFO: stderr: ""
  May 25 13:33:05.585: INFO: stdout: "pod/agnhost-primary-jc9lc patched\n"
  STEP: checking annotations @ 05/25/24 13:33:05.585
  May 25 13:33:05.589: INFO: Selector matched 1 pods for map[app:agnhost]
  May 25 13:33:05.589: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May 25 13:33:05.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5229" for this suite. @ 05/25/24 13:33:05.593
• [1.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 05/25/24 13:33:05.601
  May 25 13:33:05.601: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename daemonsets @ 05/25/24 13:33:05.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:33:05.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:33:05.619
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/25/24 13:33:05.639
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/25/24 13:33:05.645
  May 25 13:33:05.649: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:33:05.650: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:33:05.653: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 13:33:05.653: INFO: Node ip-172-31-15-138 is running 0 daemon pod, expected 1
  E0525 13:33:06.350636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:33:06.650: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:33:06.650: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:33:06.654: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 25 13:33:06.654: INFO: Node ip-172-31-15-138 is running 0 daemon pod, expected 1
  E0525 13:33:07.351453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:33:07.650: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:33:07.650: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:33:07.654: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 25 13:33:07.654: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/25/24 13:33:07.658
  May 25 13:33:07.673: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:33:07.673: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:33:07.676: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 25 13:33:07.676: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/25/24 13:33:07.676
  E0525 13:33:08.351523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 05/25/24 13:33:08.686
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8615, will wait for the garbage collector to delete the pods @ 05/25/24 13:33:08.686
  May 25 13:33:08.748: INFO: Deleting DaemonSet.extensions daemon-set took: 8.405049ms
  May 25 13:33:08.849: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.143354ms
  E0525 13:33:09.352013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:10.352922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:33:10.353: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 13:33:10.353: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 25 13:33:10.356: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37748"},"items":null}

  May 25 13:33:10.360: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37748"},"items":null}

  May 25 13:33:10.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8615" for this suite. @ 05/25/24 13:33:10.379
• [4.785 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 05/25/24 13:33:10.386
  May 25 13:33:10.386: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 13:33:10.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:33:10.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:33:10.403
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8216 @ 05/25/24 13:33:10.407
  STEP: changing the ExternalName service to type=NodePort @ 05/25/24 13:33:10.412
  STEP: creating replication controller externalname-service in namespace services-8216 @ 05/25/24 13:33:10.43
  I0525 13:33:10.439697      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-8216, replica count: 2
  E0525 13:33:11.353183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:12.353201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:13.353433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0525 13:33:13.491655      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 25 13:33:13.491: INFO: Creating new exec pod
  E0525 13:33:14.353959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:15.354411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:16.355036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:33:16.513: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-8216 exec execpod9rzs8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May 25 13:33:16.603: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May 25 13:33:16.603: INFO: stdout: "externalname-service-c5n5g"
  May 25 13:33:16.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-8216 exec execpod9rzs8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.18 80'
  May 25 13:33:16.693: INFO: stderr: "+ nc -v -t -w 2 10.152.183.18 80\n+ echo hostName\nConnection to 10.152.183.18 80 port [tcp/http] succeeded!\n"
  May 25 13:33:16.693: INFO: stdout: ""
  E0525 13:33:17.355169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:33:17.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-8216 exec execpod9rzs8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.18 80'
  May 25 13:33:17.700: INFO: stderr: "+ nc -v -t -w 2 10.152.183.18 80\nConnection to 10.152.183.18 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  May 25 13:33:17.700: INFO: stdout: ""
  E0525 13:33:18.356104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:33:18.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-8216 exec execpod9rzs8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.18 80'
  May 25 13:33:18.696: INFO: stderr: "+ nc -v -t -w 2 10.152.183.18 80\nConnection to 10.152.183.18 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  May 25 13:33:18.696: INFO: stdout: ""
  E0525 13:33:19.356348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:33:19.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-8216 exec execpod9rzs8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.18 80'
  May 25 13:33:19.688: INFO: stderr: "+ nc -v -t -w 2 10.152.183.18 80\nConnection to 10.152.183.18 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  May 25 13:33:19.688: INFO: stdout: ""
  E0525 13:33:20.356458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:33:20.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-8216 exec execpod9rzs8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.18 80'
  May 25 13:33:20.688: INFO: stderr: "+ nc -v -t -w 2 10.152.183.18 80\n+ echo hostName\nConnection to 10.152.183.18 80 port [tcp/http] succeeded!\n"
  May 25 13:33:20.688: INFO: stdout: "externalname-service-wcd22"
  May 25 13:33:20.688: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-8216 exec execpod9rzs8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.138 31186'
  May 25 13:33:20.778: INFO: stderr: "+ nc -v -t -w 2 172.31.15.138 31186\n+ echo hostName\nConnection to 172.31.15.138 31186 port [tcp/*] succeeded!\n"
  May 25 13:33:20.778: INFO: stdout: "externalname-service-wcd22"
  May 25 13:33:20.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-8216 exec execpod9rzs8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.106 31186'
  May 25 13:33:20.876: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.45.106 31186\nConnection to 172.31.45.106 31186 port [tcp/*] succeeded!\n"
  May 25 13:33:20.876: INFO: stdout: ""
  E0525 13:33:21.357271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:33:21.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-8216 exec execpod9rzs8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.106 31186'
  May 25 13:33:21.873: INFO: stderr: "+ nc -v -t -w 2 172.31.45.106 31186\n+ echo hostName\nConnection to 172.31.45.106 31186 port [tcp/*] succeeded!\n"
  May 25 13:33:21.873: INFO: stdout: ""
  E0525 13:33:22.358024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:33:22.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-8216 exec execpod9rzs8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.106 31186'
  May 25 13:33:22.872: INFO: stderr: "+ nc -v -t -w 2 172.31.45.106 31186\n+ echo hostName\nConnection to 172.31.45.106 31186 port [tcp/*] succeeded!\n"
  May 25 13:33:22.872: INFO: stdout: ""
  E0525 13:33:23.358403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:33:23.780: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-8216 exec execpod9rzs8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.106 31186'
  May 25 13:33:23.873: INFO: stderr: "+ nc -v -t -w 2 172.31.45.106 31186\n+ echo hostName\nConnection to 172.31.45.106 31186 port [tcp/*] succeeded!\n"
  May 25 13:33:23.873: INFO: stdout: ""
  E0525 13:33:24.358641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:33:24.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-8216 exec execpod9rzs8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.106 31186'
  May 25 13:33:24.873: INFO: stderr: "+ nc -v -t -w 2 172.31.45.106 31186\n+ echo hostName\nConnection to 172.31.45.106 31186 port [tcp/*] succeeded!\n"
  May 25 13:33:24.873: INFO: stdout: "externalname-service-c5n5g"
  May 25 13:33:24.873: INFO: Cleaning up the ExternalName to NodePort test service
  May 25 13:33:24.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8216" for this suite. @ 05/25/24 13:33:24.902
• [14.522 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 05/25/24 13:33:24.908
  May 25 13:33:24.908: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename var-expansion @ 05/25/24 13:33:24.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:33:24.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:33:24.925
  STEP: creating the pod with failed condition @ 05/25/24 13:33:24.928
  E0525 13:33:25.358748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:26.358828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:27.359551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:28.359612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:29.359696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:30.360381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:31.360439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:32.360712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:33.360841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:34.361925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:35.362000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:36.362096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:37.362155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:38.362357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:39.362916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:40.363011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:41.363204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:42.364262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:43.365271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:44.366079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:45.366757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:46.366892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:47.367679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:48.368344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:49.368432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:50.368516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:51.368620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:52.368663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:53.369522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:54.370706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:55.371355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:56.371443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:57.371986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:58.372081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:33:59.372158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:00.372477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:01.373218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:02.373448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:03.373538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:04.374214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:05.374909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:06.375217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:07.376153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:08.376414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:09.376497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:10.376557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:11.377132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:12.377429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:13.378110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:14.379322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:15.380234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:16.380721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:17.381700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:18.381800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:19.381898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:20.381971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:21.382911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:22.383010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:23.383832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:24.384306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:25.384836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:26.384934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:27.385066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:28.385151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:29.385929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:30.386145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:31.386992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:32.387244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:33.388026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:34.388304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:35.389049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:36.389135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:37.389852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:38.389961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:39.390048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:40.390131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:41.390784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:42.390875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:43.390960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:44.393716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:45.393379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:46.393490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:47.393581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:48.393876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:49.393989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:50.394137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:51.394647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:52.395019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:53.395980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:54.396951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:55.397136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:56.397649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:57.398114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:58.398211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:34:59.398525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:00.398707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:01.399777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:02.400395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:03.401001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:04.402902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:05.402409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:06.402612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:07.402733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:08.403109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:09.403663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:10.404272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:11.404686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:12.405710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:13.406707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:14.407572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:15.407702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:16.407784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:17.407838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:18.408260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:19.409014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:20.409465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:21.409817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:22.410002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:23.410544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:24.410790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 05/25/24 13:35:24.94
  E0525 13:35:25.411268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:35:25.453: INFO: Successfully updated pod "var-expansion-7bd1442b-fdd5-4e56-8b10-ed4c090c608f"
  STEP: waiting for pod running @ 05/25/24 13:35:25.453
  E0525 13:35:26.412285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:27.412372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 05/25/24 13:35:27.462
  May 25 13:35:27.462: INFO: Deleting pod "var-expansion-7bd1442b-fdd5-4e56-8b10-ed4c090c608f" in namespace "var-expansion-6268"
  May 25 13:35:27.472: INFO: Wait up to 5m0s for pod "var-expansion-7bd1442b-fdd5-4e56-8b10-ed4c090c608f" to be fully deleted
  E0525 13:35:28.413443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:29.413513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:30.413687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:31.413927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:32.414012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:33.414151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:34.414493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:35.414603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:36.414693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:37.414898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:38.415131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:39.415217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:40.415312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:41.415406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:42.415508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:43.415606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:44.415766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:45.415820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:46.416468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:47.416724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:48.417724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:49.417826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:50.417893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:51.417953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:52.418078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:53.418170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:54.418333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:55.418552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:56.419611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:57.419674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:58.420251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:35:59.420350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:35:59.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6268" for this suite. @ 05/25/24 13:35:59.562
• [154.661 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 05/25/24 13:35:59.57
  May 25 13:35:59.570: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 13:35:59.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:35:59.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:35:59.588
  STEP: Setting up server cert @ 05/25/24 13:35:59.611
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 13:35:59.729
  STEP: Deploying the webhook pod @ 05/25/24 13:35:59.737
  STEP: Wait for the deployment to be ready @ 05/25/24 13:35:59.749
  May 25 13:35:59.762: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0525 13:36:00.421042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:01.421130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/25/24 13:36:01.775
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 13:36:01.786
  E0525 13:36:02.422010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:36:02.786: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/25/24 13:36:02.795
  STEP: create a pod that should be denied by the webhook @ 05/25/24 13:36:02.807
  STEP: create a pod that causes the webhook to hang @ 05/25/24 13:36:02.814
  E0525 13:36:03.422291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:04.423122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:05.423714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:06.424101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:07.424272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:08.424376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:09.424450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:10.424625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:11.424779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:12.424897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 05/25/24 13:36:12.822
  STEP: create a configmap that should be admitted by the webhook @ 05/25/24 13:36:12.828
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/25/24 13:36:12.836
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/25/24 13:36:12.844
  STEP: create a namespace that bypass the webhook @ 05/25/24 13:36:12.848
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/25/24 13:36:12.861
  May 25 13:36:12.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2855" for this suite. @ 05/25/24 13:36:12.924
  STEP: Destroying namespace "webhook-markers-5045" for this suite. @ 05/25/24 13:36:12.931
  STEP: Destroying namespace "exempted-namespace-5976" for this suite. @ 05/25/24 13:36:12.937
• [13.374 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 05/25/24 13:36:12.944
  May 25 13:36:12.944: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-runtime @ 05/25/24 13:36:12.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:36:12.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:36:12.959
  STEP: create the container @ 05/25/24 13:36:12.962
  W0525 13:36:12.970158      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/25/24 13:36:12.97
  E0525 13:36:13.425236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:14.425476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/25/24 13:36:14.986
  STEP: the container should be terminated @ 05/25/24 13:36:14.989
  STEP: the termination message should be set @ 05/25/24 13:36:14.989
  May 25 13:36:14.989: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/25/24 13:36:14.989
  May 25 13:36:15.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4575" for this suite. @ 05/25/24 13:36:15.012
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 05/25/24 13:36:15.024
  May 25 13:36:15.024: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename var-expansion @ 05/25/24 13:36:15.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:36:15.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:36:15.041
  STEP: creating the pod @ 05/25/24 13:36:15.045
  STEP: waiting for pod running @ 05/25/24 13:36:15.054
  E0525 13:36:15.425617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:16.425653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 05/25/24 13:36:17.064
  May 25 13:36:17.068: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-7914 PodName:var-expansion-f97c35a6-e410-467b-8425-cb18b5f20802 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:36:17.068: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:36:17.068: INFO: ExecWithOptions: Clientset creation
  May 25 13:36:17.069: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-7914/pods/var-expansion-f97c35a6-e410-467b-8425-cb18b5f20802/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 05/25/24 13:36:17.123
  May 25 13:36:17.128: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-7914 PodName:var-expansion-f97c35a6-e410-467b-8425-cb18b5f20802 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:36:17.128: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:36:17.128: INFO: ExecWithOptions: Clientset creation
  May 25 13:36:17.128: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-7914/pods/var-expansion-f97c35a6-e410-467b-8425-cb18b5f20802/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 05/25/24 13:36:17.17
  E0525 13:36:17.426348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:36:17.686: INFO: Successfully updated pod "var-expansion-f97c35a6-e410-467b-8425-cb18b5f20802"
  STEP: waiting for annotated pod running @ 05/25/24 13:36:17.686
  STEP: deleting the pod gracefully @ 05/25/24 13:36:17.689
  May 25 13:36:17.689: INFO: Deleting pod "var-expansion-f97c35a6-e410-467b-8425-cb18b5f20802" in namespace "var-expansion-7914"
  May 25 13:36:17.697: INFO: Wait up to 5m0s for pod "var-expansion-f97c35a6-e410-467b-8425-cb18b5f20802" to be fully deleted
  E0525 13:36:18.426445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:19.426565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:20.427283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:21.427381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:22.428304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:23.428364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:24.428471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:25.428648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:26.428753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:27.428839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:28.429049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:29.429152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:30.429985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:31.430111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:32.430702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:33.430799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:34.431361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:35.431453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:36.432269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:37.432463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:38.432613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:39.432960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:40.433041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:41.433262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:42.433312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:43.433588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:44.434319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:45.434422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:46.434516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:47.435411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:48.435529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:49.435629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:50.436249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:51.436342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:36:51.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7914" for this suite. @ 05/25/24 13:36:51.793
• [36.776 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 05/25/24 13:36:51.8
  May 25 13:36:51.801: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 13:36:51.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:36:51.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:36:51.818
  STEP: Creating configMap with name projected-configmap-test-volume-map-9f38144a-7a7e-4a50-9bed-642b0acdcb65 @ 05/25/24 13:36:51.821
  STEP: Creating a pod to test consume configMaps @ 05/25/24 13:36:51.825
  E0525 13:36:52.436441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:53.436779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:54.436866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:55.437063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:36:55.849
  May 25 13:36:55.852: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-projected-configmaps-b4337671-14aa-4893-b250-0c2efff06407 container agnhost-container: <nil>
  STEP: delete the pod @ 05/25/24 13:36:55.863
  May 25 13:36:55.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-667" for this suite. @ 05/25/24 13:36:55.884
• [4.092 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 05/25/24 13:36:55.892
  May 25 13:36:55.892: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename init-container @ 05/25/24 13:36:55.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:36:55.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:36:55.907
  STEP: creating the pod @ 05/25/24 13:36:55.91
  May 25 13:36:55.910: INFO: PodSpec: initContainers in spec.initContainers
  E0525 13:36:56.437650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:57.438233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:58.439137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:36:59.439243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:00.440318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:01.440599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:02.440736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:03.441695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:04.441858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:05.441900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:06.442031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:07.442200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:08.442340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:09.442556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:10.442867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:11.442961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:12.443227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:13.444259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:14.444370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:15.444448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:16.444532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:17.444707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:18.444909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:19.445077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:20.445250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:21.445364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:22.445471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:23.446306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:24.446379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:25.446481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:26.446576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:27.446777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:28.446866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:29.447087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:30.447208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:31.447308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:32.447406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:33.447494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:34.447596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:37:34.775: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-ba689f99-e319-4775-a0c9-786f68feb96d", GenerateName:"", Namespace:"init-container-8786", SelfLink:"", UID:"d5139d35-5138-4dfb-931f-7b15cf774e75", ResourceVersion:"38706", Generation:0, CreationTimestamp:time.Date(2024, time.May, 25, 13, 36, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"910873757"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 13, 36, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c9908), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 25, 13, 37, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c9968), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-gt7f7", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00082cb60), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-gt7f7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-gt7f7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-gt7f7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00385e968), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-45-106", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0000f9650), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00385ea00)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00385ea20)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00385ea28), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00385ea2c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0015e9710), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 25, 13, 36, 56, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 25, 13, 36, 55, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 25, 13, 36, 55, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 25, 13, 36, 55, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 25, 13, 36, 55, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.45.106", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.45.106"}}, PodIP:"192.168.131.31", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.131.31"}}, StartTime:time.Date(2024, time.May, 25, 13, 36, 55, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0000f9810)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0000f9880)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://ba83cbf9a0676f87e462f3fa67127f285fd4b90f7681b6471b0325bbd9a95df6", Started:(*bool)(0xc00385eacf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00082cbc0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00385ead5), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00082cba0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00385eaa4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  May 25 13:37:34.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8786" for this suite. @ 05/25/24 13:37:34.779
• [38.893 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 05/25/24 13:37:34.786
  May 25 13:37:34.786: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir @ 05/25/24 13:37:34.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:37:34.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:37:34.802
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/25/24 13:37:34.805
  E0525 13:37:35.447698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:36.447802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:37.447917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:38.448276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:37:38.827
  May 25 13:37:38.830: INFO: Trying to get logs from node ip-172-31-15-138 pod pod-fb0e353b-c8f7-41e6-b785-8f1830291e49 container test-container: <nil>
  STEP: delete the pod @ 05/25/24 13:37:38.848
  May 25 13:37:38.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9616" for this suite. @ 05/25/24 13:37:38.868
• [4.089 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 05/25/24 13:37:38.875
  May 25 13:37:38.875: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 13:37:38.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:37:38.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:37:38.892
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 13:37:38.896
  E0525 13:37:39.449124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:40.449163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:41.450183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:42.450380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:37:42.917
  May 25 13:37:42.920: INFO: Trying to get logs from node ip-172-31-15-138 pod downwardapi-volume-9b612e5c-c078-451c-9c52-544df06a8b45 container client-container: <nil>
  STEP: delete the pod @ 05/25/24 13:37:42.927
  May 25 13:37:42.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2026" for this suite. @ 05/25/24 13:37:42.947
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 05/25/24 13:37:42.954
  May 25 13:37:42.954: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename daemonsets @ 05/25/24 13:37:42.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:37:42.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:37:42.971
  STEP: Creating simple DaemonSet "daemon-set" @ 05/25/24 13:37:42.992
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/25/24 13:37:42.999
  May 25 13:37:43.003: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:37:43.003: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:37:43.006: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 13:37:43.006: INFO: Node ip-172-31-15-138 is running 0 daemon pod, expected 1
  E0525 13:37:43.450997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:37:44.004: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:37:44.004: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:37:44.007: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 25 13:37:44.007: INFO: Node ip-172-31-15-138 is running 0 daemon pod, expected 1
  E0525 13:37:44.451215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:37:45.003: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:37:45.003: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:37:45.007: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 25 13:37:45.007: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/25/24 13:37:45.01
  STEP: DeleteCollection of the DaemonSets @ 05/25/24 13:37:45.014
  STEP: Verify that ReplicaSets have been deleted @ 05/25/24 13:37:45.022
  May 25 13:37:45.035: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38852"},"items":null}

  May 25 13:37:45.043: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38856"},"items":[{"metadata":{"name":"daemon-set-4gtmf","generateName":"daemon-set-","namespace":"daemonsets-633","uid":"cf9d31c5-30c3-4108-944a-2781eff14796","resourceVersion":"38855","creationTimestamp":"2024-05-25T13:37:43Z","deletionTimestamp":"2024-05-25T13:38:15Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"60c89d18-1dbb-43c0-b650-ba9c6a4bcdcf","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-25T13:37:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"60c89d18-1dbb-43c0-b650-ba9c6a4bcdcf\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-25T13:37:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.14.24\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-72knv","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-72knv","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-23-222","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-23-222"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-25T13:37:44Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-25T13:37:43Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-25T13:37:44Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-25T13:37:44Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-25T13:37:43Z"}],"hostIP":"172.31.23.222","hostIPs":[{"ip":"172.31.23.222"}],"podIP":"192.168.14.24","podIPs":[{"ip":"192.168.14.24"}],"startTime":"2024-05-25T13:37:43Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-25T13:37:43Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://473636eb053f93dcfee87e1c39b924439e5466b6e01aa77fc3c813dbdda55af4","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-fd5df","generateName":"daemon-set-","namespace":"daemonsets-633","uid":"2f81b046-0915-4896-b210-679976ab4e17","resourceVersion":"38856","creationTimestamp":"2024-05-25T13:37:43Z","deletionTimestamp":"2024-05-25T13:38:15Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"60c89d18-1dbb-43c0-b650-ba9c6a4bcdcf","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-25T13:37:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"60c89d18-1dbb-43c0-b650-ba9c6a4bcdcf\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-25T13:37:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.138.185\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-p2q25","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-p2q25","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-15-138","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-15-138"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-25T13:37:44Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-25T13:37:43Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-25T13:37:44Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-25T13:37:44Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-25T13:37:43Z"}],"hostIP":"172.31.15.138","hostIPs":[{"ip":"172.31.15.138"}],"podIP":"192.168.138.185","podIPs":[{"ip":"192.168.138.185"}],"startTime":"2024-05-25T13:37:43Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-25T13:37:43Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://8ae558dfb274e1ec2a99da75649bd29e8666526bb30201b1cea309d381ee948a","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-mr8wl","generateName":"daemon-set-","namespace":"daemonsets-633","uid":"74958c79-bb12-41d1-8e4e-989941f8e2b6","resourceVersion":"38854","creationTimestamp":"2024-05-25T13:37:43Z","deletionTimestamp":"2024-05-25T13:38:15Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"60c89d18-1dbb-43c0-b650-ba9c6a4bcdcf","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-25T13:37:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"60c89d18-1dbb-43c0-b650-ba9c6a4bcdcf\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-25T13:37:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.131.37\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2h8fw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2h8fw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-45-106","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-45-106"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-25T13:37:43Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-25T13:37:43Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-25T13:37:43Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-25T13:37:43Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-25T13:37:43Z"}],"hostIP":"172.31.45.106","hostIPs":[{"ip":"172.31.45.106"}],"podIP":"192.168.131.37","podIPs":[{"ip":"192.168.131.37"}],"startTime":"2024-05-25T13:37:43Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-25T13:37:43Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://219228a7c041a03952237ade0a8497cc29151b1825aebf694cdbd2b9da1d256b","started":true}],"qosClass":"BestEffort"}}]}

  May 25 13:37:45.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-633" for this suite. @ 05/25/24 13:37:45.06
• [2.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 05/25/24 13:37:45.067
  May 25 13:37:45.067: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 13:37:45.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:37:45.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:37:45.084
  STEP: Setting up server cert @ 05/25/24 13:37:45.11
  E0525 13:37:45.452272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 13:37:45.501
  STEP: Deploying the webhook pod @ 05/25/24 13:37:45.512
  STEP: Wait for the deployment to be ready @ 05/25/24 13:37:45.526
  May 25 13:37:45.535: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0525 13:37:46.452370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:47.452442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/25/24 13:37:47.547
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 13:37:47.562
  E0525 13:37:48.452549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:37:48.562: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/25/24 13:37:48.57
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/25/24 13:37:48.59
  STEP: Creating a configMap that should not be mutated @ 05/25/24 13:37:48.597
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/25/24 13:37:48.614
  STEP: Creating a configMap that should be mutated @ 05/25/24 13:37:48.623
  May 25 13:37:48.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9760" for this suite. @ 05/25/24 13:37:48.695
  STEP: Destroying namespace "webhook-markers-3391" for this suite. @ 05/25/24 13:37:48.702
• [3.642 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 05/25/24 13:37:48.71
  May 25 13:37:48.710: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename cronjob @ 05/25/24 13:37:48.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:37:48.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:37:48.727
  STEP: Creating a suspended cronjob @ 05/25/24 13:37:48.73
  STEP: Ensuring no jobs are scheduled @ 05/25/24 13:37:48.736
  E0525 13:37:49.453637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:50.454639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:51.455654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:52.455809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:53.455884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:54.456276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:55.457193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:56.457342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:57.457580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:58.457641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:37:59.458017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:00.458244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:01.458421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:02.458615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:03.458714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:04.458903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:05.459793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:06.459892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:07.460529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:08.460616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:09.460722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:10.460902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:11.461011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:12.461903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:13.461995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:14.462062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:15.462757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:16.462843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:17.462913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:18.463118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:19.463385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:20.463458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:21.464431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:22.464552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:23.464644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:24.464875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:25.465374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:26.465487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:27.466580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:28.466694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:29.466853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:30.466955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:31.467232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:32.467347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:33.467481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:34.468358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:35.468442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:36.468582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:37.468665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:38.468872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:39.469934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:40.470124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:41.470490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:42.470661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:43.470773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:44.471744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:45.472298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:46.472486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:47.473397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:48.473510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:49.473618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:50.473752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:51.473891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:52.474454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:53.474526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:54.474664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:55.474858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:56.475226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:57.475239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:58.475260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:38:59.476256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:00.476408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:01.476502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:02.476598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:03.477111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:04.477332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:05.478237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:06.479033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:07.479407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:08.479486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:09.480270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:10.480989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:11.481070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:12.482070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:13.482159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:14.482684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:15.483354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:16.484269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:17.484366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:18.484460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:19.484632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:20.484804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:21.485016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:22.485185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:23.486101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:24.486207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:25.487045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:26.487204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:27.487295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:28.488264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:29.489221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:30.489497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:31.490156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:32.490243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:33.490547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:34.490787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:35.490882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:36.491197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:37.491286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:38.492259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:39.492303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:40.492480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:41.493017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:42.493232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:43.494027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:44.494832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:45.495635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:46.495890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:47.496469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:48.496649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:49.497040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:50.497225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:51.498244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:52.498433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:53.498817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:54.499646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:55.499813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:56.499905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:57.500680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:58.501445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:39:59.502022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:00.502197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:01.502819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:02.503023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:03.503197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:04.503381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:05.503475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:06.504359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:07.504835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:08.505482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:09.506105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:10.506354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:11.507135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:12.507200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:13.507254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:14.507396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:15.508197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:16.508821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:17.508915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:18.509324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:19.509793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:20.509897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:21.510953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:22.511045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:23.511214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:24.511293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:25.511382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:26.511473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:27.511520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:28.512252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:29.513316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:30.513427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:31.514385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:32.514485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:33.515509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:34.515613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:35.516254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:36.516563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:37.516972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:38.517172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:39.517256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:40.518331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:41.518436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:42.519056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:43.519912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:44.519998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:45.520966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:46.521410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:47.521979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:48.522247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:49.522312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:50.523183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:51.524183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:52.524295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:53.524339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:54.524418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:55.524634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:56.524634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:57.524795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:58.524944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:40:59.525674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:00.526572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:01.526865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:02.527048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:03.527193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:04.528257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:05.528357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:06.529168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:07.529297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:08.529402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:09.529754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:10.529841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:11.530899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:12.531355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:13.532281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:14.532442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:15.532534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:16.532638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:17.532735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:18.533334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:19.534414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:20.534536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:21.534650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:22.534741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:23.534831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:24.535028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:25.535216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:26.535318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:27.535404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:28.535502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:29.535604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:30.535683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:31.536316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:32.536399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:33.536506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:34.536698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:35.536764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:36.537034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:37.537163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:38.537256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:39.537379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:40.537467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:41.537541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:42.537914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:43.538027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:44.538139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:45.538344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:46.538435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:47.539419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:48.539515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:49.539598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:50.539693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:51.540730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:52.541552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:53.541691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:54.541784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:55.542193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:56.542283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:57.542378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:58.542473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:41:59.542681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:00.542789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:01.543734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:02.543835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:03.543929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:04.544110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:05.544221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:06.544318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:07.545328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:08.545497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:09.545590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:10.545691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:11.545774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:12.545953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:13.546064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:14.546324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:15.547364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:16.547485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:17.547553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:18.548253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:19.548360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:20.548560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:21.548661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:22.548835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:23.549933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:24.550010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:25.550105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:26.550379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:27.550484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:28.550561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:29.550701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:30.551510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:31.551606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:32.551691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:33.551781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:34.551858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:35.551944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:36.552102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:37.552203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:38.553105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:39.553215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:40.553358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:41.553774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:42.553862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:43.554046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:44.554138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:45.554768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:46.555098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:47.555211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:48.555300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/25/24 13:42:48.745
  STEP: Removing cronjob @ 05/25/24 13:42:48.749
  May 25 13:42:48.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3645" for this suite. @ 05/25/24 13:42:48.759
• [300.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 05/25/24 13:42:48.767
  May 25 13:42:48.767: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename watch @ 05/25/24 13:42:48.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:42:48.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:42:48.785
  STEP: creating a watch on configmaps with label A @ 05/25/24 13:42:48.788
  STEP: creating a watch on configmaps with label B @ 05/25/24 13:42:48.79
  STEP: creating a watch on configmaps with label A or B @ 05/25/24 13:42:48.791
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/25/24 13:42:48.792
  May 25 13:42:48.797: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9552  a0a218de-3b0a-4eb9-961b-2cf60696dae2 39587 0 2024-05-25 13:42:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-25 13:42:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 25 13:42:48.797: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9552  a0a218de-3b0a-4eb9-961b-2cf60696dae2 39587 0 2024-05-25 13:42:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-25 13:42:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/25/24 13:42:48.797
  May 25 13:42:48.811: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9552  a0a218de-3b0a-4eb9-961b-2cf60696dae2 39588 0 2024-05-25 13:42:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-25 13:42:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 25 13:42:48.812: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9552  a0a218de-3b0a-4eb9-961b-2cf60696dae2 39588 0 2024-05-25 13:42:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-25 13:42:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/25/24 13:42:48.812
  May 25 13:42:48.821: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9552  a0a218de-3b0a-4eb9-961b-2cf60696dae2 39589 0 2024-05-25 13:42:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-25 13:42:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 25 13:42:48.822: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9552  a0a218de-3b0a-4eb9-961b-2cf60696dae2 39589 0 2024-05-25 13:42:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-25 13:42:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/25/24 13:42:48.822
  May 25 13:42:48.828: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9552  a0a218de-3b0a-4eb9-961b-2cf60696dae2 39590 0 2024-05-25 13:42:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-25 13:42:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 25 13:42:48.828: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9552  a0a218de-3b0a-4eb9-961b-2cf60696dae2 39590 0 2024-05-25 13:42:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-25 13:42:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/25/24 13:42:48.828
  May 25 13:42:48.833: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9552  dc39e616-6fbf-4e40-a31a-5d00d14ebbd3 39591 0 2024-05-25 13:42:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-25 13:42:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 25 13:42:48.833: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9552  dc39e616-6fbf-4e40-a31a-5d00d14ebbd3 39591 0 2024-05-25 13:42:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-25 13:42:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0525 13:42:49.556325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:50.556406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:51.556507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:52.556597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:53.556771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:54.556879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:55.557220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:56.557154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:57.557462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:42:58.557752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/25/24 13:42:58.834
  May 25 13:42:58.841: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9552  dc39e616-6fbf-4e40-a31a-5d00d14ebbd3 39618 0 2024-05-25 13:42:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-25 13:42:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 25 13:42:58.842: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9552  dc39e616-6fbf-4e40-a31a-5d00d14ebbd3 39618 0 2024-05-25 13:42:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-25 13:42:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0525 13:42:59.558473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:00.558569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:01.558675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:02.558876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:03.559101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:04.559205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:05.559308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:06.560408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:07.560532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:08.560709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:43:08.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9552" for this suite. @ 05/25/24 13:43:08.847
• [20.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 05/25/24 13:43:08.854
  May 25 13:43:08.854: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename svc-latency @ 05/25/24 13:43:08.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:43:08.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:43:08.872
  May 25 13:43:08.875: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-3962 @ 05/25/24 13:43:08.876
  I0525 13:43:08.882171      21 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-3962, replica count: 1
  E0525 13:43:09.561211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0525 13:43:09.932645      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0525 13:43:10.561329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0525 13:43:10.932801      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May 25 13:43:11.045: INFO: Created: latency-svc-b79ct
  May 25 13:43:11.054: INFO: Got endpoints: latency-svc-b79ct [21.563615ms]
  May 25 13:43:11.066: INFO: Created: latency-svc-5sshr
  May 25 13:43:11.074: INFO: Got endpoints: latency-svc-5sshr [19.190109ms]
  May 25 13:43:11.077: INFO: Created: latency-svc-g442h
  May 25 13:43:11.084: INFO: Got endpoints: latency-svc-g442h [29.577973ms]
  May 25 13:43:11.085: INFO: Created: latency-svc-xlbbm
  May 25 13:43:11.089: INFO: Got endpoints: latency-svc-xlbbm [34.49535ms]
  May 25 13:43:11.092: INFO: Created: latency-svc-tbxqd
  May 25 13:43:11.097: INFO: Got endpoints: latency-svc-tbxqd [42.296727ms]
  May 25 13:43:11.101: INFO: Created: latency-svc-s97vb
  May 25 13:43:11.106: INFO: Got endpoints: latency-svc-s97vb [51.293849ms]
  May 25 13:43:11.112: INFO: Created: latency-svc-znbgj
  May 25 13:43:11.121: INFO: Got endpoints: latency-svc-znbgj [65.988096ms]
  May 25 13:43:11.121: INFO: Created: latency-svc-5wqq6
  May 25 13:43:11.125: INFO: Got endpoints: latency-svc-5wqq6 [70.062655ms]
  May 25 13:43:11.130: INFO: Created: latency-svc-r7lgx
  May 25 13:43:11.137: INFO: Got endpoints: latency-svc-r7lgx [81.554691ms]
  May 25 13:43:11.140: INFO: Created: latency-svc-2nzbv
  May 25 13:43:11.146: INFO: Got endpoints: latency-svc-2nzbv [90.695603ms]
  May 25 13:43:11.151: INFO: Created: latency-svc-tnmls
  May 25 13:43:11.157: INFO: Got endpoints: latency-svc-tnmls [101.469734ms]
  May 25 13:43:11.160: INFO: Created: latency-svc-4hhc6
  May 25 13:43:11.168: INFO: Got endpoints: latency-svc-4hhc6 [113.040982ms]
  May 25 13:43:11.169: INFO: Created: latency-svc-sqx4s
  May 25 13:43:11.173: INFO: Got endpoints: latency-svc-sqx4s [118.229641ms]
  May 25 13:43:11.178: INFO: Created: latency-svc-b9kmh
  May 25 13:43:11.182: INFO: Got endpoints: latency-svc-b9kmh [126.970679ms]
  May 25 13:43:11.185: INFO: Created: latency-svc-dxpvv
  May 25 13:43:11.190: INFO: Created: latency-svc-8ltzp
  May 25 13:43:11.195: INFO: Got endpoints: latency-svc-dxpvv [140.359147ms]
  May 25 13:43:11.196: INFO: Got endpoints: latency-svc-8ltzp [140.71771ms]
  May 25 13:43:11.200: INFO: Created: latency-svc-mn865
  May 25 13:43:11.207: INFO: Created: latency-svc-lxw78
  May 25 13:43:11.208: INFO: Got endpoints: latency-svc-mn865 [133.917716ms]
  May 25 13:43:11.213: INFO: Got endpoints: latency-svc-lxw78 [128.833995ms]
  May 25 13:43:11.217: INFO: Created: latency-svc-lfl4n
  May 25 13:43:11.222: INFO: Got endpoints: latency-svc-lfl4n [132.766164ms]
  May 25 13:43:11.225: INFO: Created: latency-svc-wm28r
  May 25 13:43:11.231: INFO: Created: latency-svc-rrggv
  May 25 13:43:11.232: INFO: Got endpoints: latency-svc-wm28r [134.852859ms]
  May 25 13:43:11.240: INFO: Created: latency-svc-76fcm
  May 25 13:43:11.241: INFO: Got endpoints: latency-svc-rrggv [135.101165ms]
  May 25 13:43:11.251: INFO: Got endpoints: latency-svc-76fcm [129.834983ms]
  May 25 13:43:11.251: INFO: Created: latency-svc-7p5h4
  May 25 13:43:11.258: INFO: Got endpoints: latency-svc-7p5h4 [132.824514ms]
  May 25 13:43:11.263: INFO: Created: latency-svc-vzccw
  May 25 13:43:11.268: INFO: Got endpoints: latency-svc-vzccw [130.906269ms]
  May 25 13:43:11.270: INFO: Created: latency-svc-cxcwx
  May 25 13:43:11.276: INFO: Got endpoints: latency-svc-cxcwx [130.748882ms]
  May 25 13:43:11.280: INFO: Created: latency-svc-p7zf4
  May 25 13:43:11.287: INFO: Created: latency-svc-67lxb
  May 25 13:43:11.288: INFO: Got endpoints: latency-svc-p7zf4 [131.353353ms]
  May 25 13:43:11.291: INFO: Got endpoints: latency-svc-67lxb [123.089474ms]
  May 25 13:43:11.295: INFO: Created: latency-svc-rd4n5
  May 25 13:43:11.300: INFO: Got endpoints: latency-svc-rd4n5 [126.516255ms]
  May 25 13:43:11.303: INFO: Created: latency-svc-lsjx2
  May 25 13:43:11.309: INFO: Created: latency-svc-9l9zp
  May 25 13:43:11.310: INFO: Got endpoints: latency-svc-lsjx2 [127.971222ms]
  May 25 13:43:11.317: INFO: Got endpoints: latency-svc-9l9zp [121.906854ms]
  May 25 13:43:11.321: INFO: Created: latency-svc-tsglz
  May 25 13:43:11.326: INFO: Got endpoints: latency-svc-tsglz [129.91231ms]
  May 25 13:43:11.331: INFO: Created: latency-svc-52542
  May 25 13:43:11.335: INFO: Created: latency-svc-n7hdw
  May 25 13:43:11.336: INFO: Got endpoints: latency-svc-52542 [127.804482ms]
  May 25 13:43:11.345: INFO: Got endpoints: latency-svc-n7hdw [131.762758ms]
  May 25 13:43:11.347: INFO: Created: latency-svc-v9zm4
  May 25 13:43:11.351: INFO: Got endpoints: latency-svc-v9zm4 [128.662611ms]
  May 25 13:43:11.354: INFO: Created: latency-svc-xqr84
  May 25 13:43:11.360: INFO: Created: latency-svc-cxsww
  May 25 13:43:11.361: INFO: Got endpoints: latency-svc-xqr84 [128.997901ms]
  May 25 13:43:11.370: INFO: Created: latency-svc-ffmnh
  May 25 13:43:11.370: INFO: Got endpoints: latency-svc-cxsww [128.362229ms]
  May 25 13:43:11.375: INFO: Created: latency-svc-bvrtk
  May 25 13:43:11.379: INFO: Created: latency-svc-2sbhd
  May 25 13:43:11.386: INFO: Created: latency-svc-t8vtl
  May 25 13:43:11.392: INFO: Created: latency-svc-gd8rj
  May 25 13:43:11.398: INFO: Created: latency-svc-2x24l
  May 25 13:43:11.401: INFO: Got endpoints: latency-svc-ffmnh [150.486135ms]
  May 25 13:43:11.407: INFO: Created: latency-svc-qclzh
  May 25 13:43:11.415: INFO: Created: latency-svc-pdn4r
  May 25 13:43:11.419: INFO: Created: latency-svc-m8q59
  May 25 13:43:11.425: INFO: Created: latency-svc-sbj7w
  May 25 13:43:11.432: INFO: Created: latency-svc-5vg4b
  May 25 13:43:11.441: INFO: Created: latency-svc-vbrw5
  May 25 13:43:11.448: INFO: Created: latency-svc-jdnbc
  May 25 13:43:11.451: INFO: Got endpoints: latency-svc-bvrtk [192.932686ms]
  May 25 13:43:11.455: INFO: Created: latency-svc-bbmnc
  May 25 13:43:11.461: INFO: Created: latency-svc-7ghv7
  May 25 13:43:11.467: INFO: Created: latency-svc-84wv2
  May 25 13:43:11.474: INFO: Created: latency-svc-b6z9q
  May 25 13:43:11.500: INFO: Got endpoints: latency-svc-2sbhd [232.314995ms]
  May 25 13:43:11.511: INFO: Created: latency-svc-lplfm
  May 25 13:43:11.551: INFO: Got endpoints: latency-svc-t8vtl [274.184966ms]
  May 25 13:43:11.560: INFO: Created: latency-svc-c29fg
  E0525 13:43:11.561413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:43:11.603: INFO: Got endpoints: latency-svc-gd8rj [315.1586ms]
  May 25 13:43:11.613: INFO: Created: latency-svc-rgfh7
  May 25 13:43:11.652: INFO: Got endpoints: latency-svc-2x24l [360.938658ms]
  May 25 13:43:11.661: INFO: Created: latency-svc-pqwvk
  May 25 13:43:11.702: INFO: Got endpoints: latency-svc-qclzh [402.431434ms]
  May 25 13:43:11.713: INFO: Created: latency-svc-7289x
  May 25 13:43:11.750: INFO: Got endpoints: latency-svc-pdn4r [440.309327ms]
  May 25 13:43:11.762: INFO: Created: latency-svc-k5xbv
  May 25 13:43:11.802: INFO: Got endpoints: latency-svc-m8q59 [484.298336ms]
  May 25 13:43:11.812: INFO: Created: latency-svc-t4r6t
  May 25 13:43:11.853: INFO: Got endpoints: latency-svc-sbj7w [526.622882ms]
  May 25 13:43:11.864: INFO: Created: latency-svc-gjz42
  May 25 13:43:11.902: INFO: Got endpoints: latency-svc-5vg4b [566.16215ms]
  May 25 13:43:11.913: INFO: Created: latency-svc-cz5z4
  May 25 13:43:11.951: INFO: Got endpoints: latency-svc-vbrw5 [605.511224ms]
  May 25 13:43:11.962: INFO: Created: latency-svc-lwrd7
  May 25 13:43:12.001: INFO: Got endpoints: latency-svc-jdnbc [649.661369ms]
  May 25 13:43:12.011: INFO: Created: latency-svc-xg848
  May 25 13:43:12.051: INFO: Got endpoints: latency-svc-bbmnc [690.378539ms]
  May 25 13:43:12.061: INFO: Created: latency-svc-bjppj
  May 25 13:43:12.102: INFO: Got endpoints: latency-svc-7ghv7 [731.934008ms]
  May 25 13:43:12.119: INFO: Created: latency-svc-76ql2
  May 25 13:43:12.152: INFO: Got endpoints: latency-svc-84wv2 [750.864159ms]
  May 25 13:43:12.164: INFO: Created: latency-svc-78nbx
  May 25 13:43:12.200: INFO: Got endpoints: latency-svc-b6z9q [749.527389ms]
  May 25 13:43:12.211: INFO: Created: latency-svc-99hbk
  May 25 13:43:12.253: INFO: Got endpoints: latency-svc-lplfm [752.956806ms]
  May 25 13:43:12.262: INFO: Created: latency-svc-r7hlv
  May 25 13:43:12.302: INFO: Got endpoints: latency-svc-c29fg [751.42578ms]
  May 25 13:43:12.313: INFO: Created: latency-svc-bw8x9
  May 25 13:43:12.351: INFO: Got endpoints: latency-svc-rgfh7 [747.499716ms]
  May 25 13:43:12.361: INFO: Created: latency-svc-zlkt2
  May 25 13:43:12.402: INFO: Got endpoints: latency-svc-pqwvk [750.161912ms]
  May 25 13:43:12.413: INFO: Created: latency-svc-gbqbl
  May 25 13:43:12.450: INFO: Got endpoints: latency-svc-7289x [747.501246ms]
  May 25 13:43:12.460: INFO: Created: latency-svc-64tph
  May 25 13:43:12.501: INFO: Got endpoints: latency-svc-k5xbv [750.508782ms]
  May 25 13:43:12.511: INFO: Created: latency-svc-288qk
  May 25 13:43:12.553: INFO: Got endpoints: latency-svc-t4r6t [751.458345ms]
  E0525 13:43:12.561937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:43:12.563: INFO: Created: latency-svc-lkzkn
  May 25 13:43:12.603: INFO: Got endpoints: latency-svc-gjz42 [750.86028ms]
  May 25 13:43:12.615: INFO: Created: latency-svc-mhsrw
  May 25 13:43:12.652: INFO: Got endpoints: latency-svc-cz5z4 [749.914697ms]
  May 25 13:43:12.662: INFO: Created: latency-svc-pvdv4
  May 25 13:43:12.700: INFO: Got endpoints: latency-svc-lwrd7 [749.548211ms]
  May 25 13:43:12.713: INFO: Created: latency-svc-5wt4c
  May 25 13:43:12.750: INFO: Got endpoints: latency-svc-xg848 [749.255462ms]
  May 25 13:43:12.761: INFO: Created: latency-svc-b6dlf
  May 25 13:43:12.803: INFO: Got endpoints: latency-svc-bjppj [751.159088ms]
  May 25 13:43:12.813: INFO: Created: latency-svc-5h2xk
  May 25 13:43:12.854: INFO: Got endpoints: latency-svc-76ql2 [751.962261ms]
  May 25 13:43:12.864: INFO: Created: latency-svc-szk67
  May 25 13:43:12.903: INFO: Got endpoints: latency-svc-78nbx [750.62843ms]
  May 25 13:43:12.914: INFO: Created: latency-svc-9hskc
  May 25 13:43:12.951: INFO: Got endpoints: latency-svc-99hbk [750.903089ms]
  May 25 13:43:12.964: INFO: Created: latency-svc-p5mc8
  May 25 13:43:13.001: INFO: Got endpoints: latency-svc-r7hlv [747.977033ms]
  May 25 13:43:13.011: INFO: Created: latency-svc-swpms
  May 25 13:43:13.053: INFO: Got endpoints: latency-svc-bw8x9 [750.927346ms]
  May 25 13:43:13.066: INFO: Created: latency-svc-nb5dk
  May 25 13:43:13.102: INFO: Got endpoints: latency-svc-zlkt2 [751.046459ms]
  May 25 13:43:13.113: INFO: Created: latency-svc-djlvp
  May 25 13:43:13.152: INFO: Got endpoints: latency-svc-gbqbl [750.0351ms]
  May 25 13:43:13.164: INFO: Created: latency-svc-nng69
  May 25 13:43:13.202: INFO: Got endpoints: latency-svc-64tph [752.413662ms]
  May 25 13:43:13.214: INFO: Created: latency-svc-v8x4v
  May 25 13:43:13.253: INFO: Got endpoints: latency-svc-288qk [751.141669ms]
  May 25 13:43:13.264: INFO: Created: latency-svc-6tbnz
  May 25 13:43:13.302: INFO: Got endpoints: latency-svc-lkzkn [748.933838ms]
  May 25 13:43:13.313: INFO: Created: latency-svc-r4nst
  May 25 13:43:13.352: INFO: Got endpoints: latency-svc-mhsrw [748.184186ms]
  May 25 13:43:13.364: INFO: Created: latency-svc-w6jj4
  May 25 13:43:13.403: INFO: Got endpoints: latency-svc-pvdv4 [750.748625ms]
  May 25 13:43:13.414: INFO: Created: latency-svc-qg4fn
  May 25 13:43:13.452: INFO: Got endpoints: latency-svc-5wt4c [751.618052ms]
  May 25 13:43:13.462: INFO: Created: latency-svc-9m8bt
  May 25 13:43:13.501: INFO: Got endpoints: latency-svc-b6dlf [750.154319ms]
  May 25 13:43:13.511: INFO: Created: latency-svc-tbx9f
  May 25 13:43:13.550: INFO: Got endpoints: latency-svc-5h2xk [747.80057ms]
  May 25 13:43:13.561: INFO: Created: latency-svc-jwwdj
  E0525 13:43:13.562167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:43:13.602: INFO: Got endpoints: latency-svc-szk67 [748.339647ms]
  May 25 13:43:13.612: INFO: Created: latency-svc-f8586
  May 25 13:43:13.652: INFO: Got endpoints: latency-svc-9hskc [749.161046ms]
  May 25 13:43:13.663: INFO: Created: latency-svc-5kvbb
  May 25 13:43:13.701: INFO: Got endpoints: latency-svc-p5mc8 [749.346439ms]
  May 25 13:43:13.714: INFO: Created: latency-svc-lw27t
  May 25 13:43:13.750: INFO: Got endpoints: latency-svc-swpms [749.231213ms]
  May 25 13:43:13.760: INFO: Created: latency-svc-hrf8d
  May 25 13:43:13.802: INFO: Got endpoints: latency-svc-nb5dk [748.733852ms]
  May 25 13:43:13.813: INFO: Created: latency-svc-7vhtx
  May 25 13:43:13.853: INFO: Got endpoints: latency-svc-djlvp [750.239602ms]
  May 25 13:43:13.864: INFO: Created: latency-svc-5kh2n
  May 25 13:43:13.902: INFO: Got endpoints: latency-svc-nng69 [749.895714ms]
  May 25 13:43:13.915: INFO: Created: latency-svc-w6znj
  May 25 13:43:13.951: INFO: Got endpoints: latency-svc-v8x4v [747.653631ms]
  May 25 13:43:13.962: INFO: Created: latency-svc-n8mgg
  May 25 13:43:14.000: INFO: Got endpoints: latency-svc-6tbnz [746.987946ms]
  May 25 13:43:14.011: INFO: Created: latency-svc-42lcs
  May 25 13:43:14.052: INFO: Got endpoints: latency-svc-r4nst [749.75156ms]
  May 25 13:43:14.065: INFO: Created: latency-svc-zslnv
  May 25 13:43:14.102: INFO: Got endpoints: latency-svc-w6jj4 [749.466167ms]
  May 25 13:43:14.112: INFO: Created: latency-svc-b9rbx
  May 25 13:43:14.151: INFO: Got endpoints: latency-svc-qg4fn [747.461525ms]
  May 25 13:43:14.162: INFO: Created: latency-svc-65qtm
  May 25 13:43:14.202: INFO: Got endpoints: latency-svc-9m8bt [749.652803ms]
  May 25 13:43:14.212: INFO: Created: latency-svc-fl8p5
  May 25 13:43:14.253: INFO: Got endpoints: latency-svc-tbx9f [751.688151ms]
  May 25 13:43:14.262: INFO: Created: latency-svc-j9gst
  May 25 13:43:14.302: INFO: Got endpoints: latency-svc-jwwdj [751.028355ms]
  May 25 13:43:14.312: INFO: Created: latency-svc-vp42r
  May 25 13:43:14.351: INFO: Got endpoints: latency-svc-f8586 [749.019791ms]
  May 25 13:43:14.368: INFO: Created: latency-svc-qh82c
  May 25 13:43:14.401: INFO: Got endpoints: latency-svc-5kvbb [748.282725ms]
  May 25 13:43:14.421: INFO: Created: latency-svc-lmgcm
  May 25 13:43:14.451: INFO: Got endpoints: latency-svc-lw27t [750.821545ms]
  May 25 13:43:14.463: INFO: Created: latency-svc-f758l
  May 25 13:43:14.503: INFO: Got endpoints: latency-svc-hrf8d [752.428458ms]
  May 25 13:43:14.513: INFO: Created: latency-svc-zt26t
  May 25 13:43:14.553: INFO: Got endpoints: latency-svc-7vhtx [750.507942ms]
  E0525 13:43:14.562435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:43:14.563: INFO: Created: latency-svc-db22r
  May 25 13:43:14.603: INFO: Got endpoints: latency-svc-5kh2n [750.57297ms]
  May 25 13:43:14.614: INFO: Created: latency-svc-9kfp7
  May 25 13:43:14.651: INFO: Got endpoints: latency-svc-w6znj [748.254507ms]
  May 25 13:43:14.662: INFO: Created: latency-svc-nfjsb
  May 25 13:43:14.701: INFO: Got endpoints: latency-svc-n8mgg [749.882447ms]
  May 25 13:43:14.710: INFO: Created: latency-svc-dwtcz
  May 25 13:43:14.750: INFO: Got endpoints: latency-svc-42lcs [750.460063ms]
  May 25 13:43:14.762: INFO: Created: latency-svc-tngmd
  May 25 13:43:14.802: INFO: Got endpoints: latency-svc-zslnv [749.274583ms]
  May 25 13:43:14.812: INFO: Created: latency-svc-hf69m
  May 25 13:43:14.852: INFO: Got endpoints: latency-svc-b9rbx [749.772934ms]
  May 25 13:43:14.863: INFO: Created: latency-svc-cb82s
  May 25 13:43:14.901: INFO: Got endpoints: latency-svc-65qtm [750.222805ms]
  May 25 13:43:14.913: INFO: Created: latency-svc-q8wrv
  May 25 13:43:14.950: INFO: Got endpoints: latency-svc-fl8p5 [748.323261ms]
  May 25 13:43:14.961: INFO: Created: latency-svc-hc5f5
  May 25 13:43:15.003: INFO: Got endpoints: latency-svc-j9gst [750.01707ms]
  May 25 13:43:15.014: INFO: Created: latency-svc-nhfxm
  May 25 13:43:15.052: INFO: Got endpoints: latency-svc-vp42r [749.689655ms]
  May 25 13:43:15.063: INFO: Created: latency-svc-l54nb
  May 25 13:43:15.106: INFO: Got endpoints: latency-svc-qh82c [754.954856ms]
  May 25 13:43:15.117: INFO: Created: latency-svc-c9mbl
  May 25 13:43:15.150: INFO: Got endpoints: latency-svc-lmgcm [744.091945ms]
  May 25 13:43:15.162: INFO: Created: latency-svc-f4c5k
  May 25 13:43:15.200: INFO: Got endpoints: latency-svc-f758l [748.81173ms]
  May 25 13:43:15.211: INFO: Created: latency-svc-ctcw4
  May 25 13:43:15.250: INFO: Got endpoints: latency-svc-zt26t [746.859298ms]
  May 25 13:43:15.260: INFO: Created: latency-svc-j6nlg
  May 25 13:43:15.301: INFO: Got endpoints: latency-svc-db22r [747.855334ms]
  May 25 13:43:15.310: INFO: Created: latency-svc-tzd82
  May 25 13:43:15.352: INFO: Got endpoints: latency-svc-9kfp7 [748.3748ms]
  May 25 13:43:15.362: INFO: Created: latency-svc-4m4nf
  May 25 13:43:15.403: INFO: Got endpoints: latency-svc-nfjsb [752.658356ms]
  May 25 13:43:15.418: INFO: Created: latency-svc-pcx25
  May 25 13:43:15.450: INFO: Got endpoints: latency-svc-dwtcz [749.040861ms]
  May 25 13:43:15.460: INFO: Created: latency-svc-447mt
  May 25 13:43:15.502: INFO: Got endpoints: latency-svc-tngmd [751.295274ms]
  May 25 13:43:15.513: INFO: Created: latency-svc-fxmdw
  May 25 13:43:15.555: INFO: Got endpoints: latency-svc-hf69m [753.166893ms]
  E0525 13:43:15.563088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:43:15.565: INFO: Created: latency-svc-2p22j
  May 25 13:43:15.602: INFO: Got endpoints: latency-svc-cb82s [750.302552ms]
  May 25 13:43:15.612: INFO: Created: latency-svc-fltnq
  May 25 13:43:15.650: INFO: Got endpoints: latency-svc-q8wrv [749.542236ms]
  May 25 13:43:15.662: INFO: Created: latency-svc-lqnqz
  May 25 13:43:15.700: INFO: Got endpoints: latency-svc-hc5f5 [749.819579ms]
  May 25 13:43:15.711: INFO: Created: latency-svc-4f4gt
  May 25 13:43:15.752: INFO: Got endpoints: latency-svc-nhfxm [748.746266ms]
  May 25 13:43:15.762: INFO: Created: latency-svc-b626v
  May 25 13:43:15.803: INFO: Got endpoints: latency-svc-l54nb [750.843808ms]
  May 25 13:43:15.812: INFO: Created: latency-svc-zvjgx
  May 25 13:43:15.853: INFO: Got endpoints: latency-svc-c9mbl [746.219712ms]
  May 25 13:43:15.863: INFO: Created: latency-svc-vf2k4
  May 25 13:43:15.902: INFO: Got endpoints: latency-svc-f4c5k [751.957047ms]
  May 25 13:43:15.915: INFO: Created: latency-svc-qvcwj
  May 25 13:43:15.951: INFO: Got endpoints: latency-svc-ctcw4 [750.068074ms]
  May 25 13:43:15.963: INFO: Created: latency-svc-sn9jd
  May 25 13:43:16.001: INFO: Got endpoints: latency-svc-j6nlg [751.678538ms]
  May 25 13:43:16.019: INFO: Created: latency-svc-qvxc7
  May 25 13:43:16.052: INFO: Got endpoints: latency-svc-tzd82 [751.565179ms]
  May 25 13:43:16.065: INFO: Created: latency-svc-bn55f
  May 25 13:43:16.103: INFO: Got endpoints: latency-svc-4m4nf [751.587683ms]
  May 25 13:43:16.116: INFO: Created: latency-svc-phrjt
  May 25 13:43:16.154: INFO: Got endpoints: latency-svc-pcx25 [750.499028ms]
  May 25 13:43:16.164: INFO: Created: latency-svc-t4p27
  May 25 13:43:16.200: INFO: Got endpoints: latency-svc-447mt [749.74499ms]
  May 25 13:43:16.211: INFO: Created: latency-svc-5dgsr
  May 25 13:43:16.250: INFO: Got endpoints: latency-svc-fxmdw [748.008745ms]
  May 25 13:43:16.261: INFO: Created: latency-svc-fbhjs
  May 25 13:43:16.302: INFO: Got endpoints: latency-svc-2p22j [746.868806ms]
  May 25 13:43:16.313: INFO: Created: latency-svc-z9gtd
  May 25 13:43:16.353: INFO: Got endpoints: latency-svc-fltnq [750.233511ms]
  May 25 13:43:16.361: INFO: Created: latency-svc-zj6sv
  May 25 13:43:16.403: INFO: Got endpoints: latency-svc-lqnqz [751.948268ms]
  May 25 13:43:16.414: INFO: Created: latency-svc-2f5lv
  May 25 13:43:16.450: INFO: Got endpoints: latency-svc-4f4gt [750.395815ms]
  May 25 13:43:16.462: INFO: Created: latency-svc-mk6dg
  May 25 13:43:16.501: INFO: Got endpoints: latency-svc-b626v [749.367808ms]
  May 25 13:43:16.510: INFO: Created: latency-svc-k5vw8
  May 25 13:43:16.552: INFO: Got endpoints: latency-svc-zvjgx [749.439362ms]
  E0525 13:43:16.563311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:43:16.563: INFO: Created: latency-svc-68mpn
  May 25 13:43:16.605: INFO: Got endpoints: latency-svc-vf2k4 [752.085348ms]
  May 25 13:43:16.615: INFO: Created: latency-svc-swvwg
  May 25 13:43:16.652: INFO: Got endpoints: latency-svc-qvcwj [749.337337ms]
  May 25 13:43:16.661: INFO: Created: latency-svc-5jcf5
  May 25 13:43:16.701: INFO: Got endpoints: latency-svc-sn9jd [750.128851ms]
  May 25 13:43:16.714: INFO: Created: latency-svc-8rdss
  May 25 13:43:16.750: INFO: Got endpoints: latency-svc-qvxc7 [748.886508ms]
  May 25 13:43:16.761: INFO: Created: latency-svc-wdk75
  May 25 13:43:16.801: INFO: Got endpoints: latency-svc-bn55f [748.467274ms]
  May 25 13:43:16.811: INFO: Created: latency-svc-ghqlm
  May 25 13:43:16.852: INFO: Got endpoints: latency-svc-phrjt [748.785031ms]
  May 25 13:43:16.863: INFO: Created: latency-svc-wttf5
  May 25 13:43:16.902: INFO: Got endpoints: latency-svc-t4p27 [748.162512ms]
  May 25 13:43:16.914: INFO: Created: latency-svc-t2ztt
  May 25 13:43:16.951: INFO: Got endpoints: latency-svc-5dgsr [750.888732ms]
  May 25 13:43:16.963: INFO: Created: latency-svc-pdfb6
  May 25 13:43:17.002: INFO: Got endpoints: latency-svc-fbhjs [751.709018ms]
  May 25 13:43:17.014: INFO: Created: latency-svc-k6cpr
  May 25 13:43:17.051: INFO: Got endpoints: latency-svc-z9gtd [749.014413ms]
  May 25 13:43:17.064: INFO: Created: latency-svc-ld855
  May 25 13:43:17.102: INFO: Got endpoints: latency-svc-zj6sv [749.174872ms]
  May 25 13:43:17.112: INFO: Created: latency-svc-l5nps
  May 25 13:43:17.152: INFO: Got endpoints: latency-svc-2f5lv [749.261469ms]
  May 25 13:43:17.163: INFO: Created: latency-svc-mgqrl
  May 25 13:43:17.200: INFO: Got endpoints: latency-svc-mk6dg [749.618879ms]
  May 25 13:43:17.212: INFO: Created: latency-svc-n2zdv
  May 25 13:43:17.250: INFO: Got endpoints: latency-svc-k5vw8 [748.686543ms]
  May 25 13:43:17.260: INFO: Created: latency-svc-gzqfh
  May 25 13:43:17.303: INFO: Got endpoints: latency-svc-68mpn [750.449517ms]
  May 25 13:43:17.314: INFO: Created: latency-svc-66gz7
  May 25 13:43:17.352: INFO: Got endpoints: latency-svc-swvwg [747.445867ms]
  May 25 13:43:17.362: INFO: Created: latency-svc-wvxmw
  May 25 13:43:17.402: INFO: Got endpoints: latency-svc-5jcf5 [750.417793ms]
  May 25 13:43:17.413: INFO: Created: latency-svc-llk6g
  May 25 13:43:17.450: INFO: Got endpoints: latency-svc-8rdss [748.672242ms]
  May 25 13:43:17.462: INFO: Created: latency-svc-vvw5j
  May 25 13:43:17.500: INFO: Got endpoints: latency-svc-wdk75 [749.251207ms]
  May 25 13:43:17.512: INFO: Created: latency-svc-q76cv
  May 25 13:43:17.551: INFO: Got endpoints: latency-svc-ghqlm [749.516594ms]
  May 25 13:43:17.560: INFO: Created: latency-svc-xd9mz
  E0525 13:43:17.564219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:43:17.603: INFO: Got endpoints: latency-svc-wttf5 [749.849623ms]
  May 25 13:43:17.613: INFO: Created: latency-svc-hl2wd
  May 25 13:43:17.651: INFO: Got endpoints: latency-svc-t2ztt [748.841848ms]
  May 25 13:43:17.663: INFO: Created: latency-svc-w28wn
  May 25 13:43:17.700: INFO: Got endpoints: latency-svc-pdfb6 [748.811219ms]
  May 25 13:43:17.709: INFO: Created: latency-svc-qhrhd
  May 25 13:43:17.753: INFO: Got endpoints: latency-svc-k6cpr [750.879813ms]
  May 25 13:43:17.764: INFO: Created: latency-svc-9zlqn
  May 25 13:43:17.801: INFO: Got endpoints: latency-svc-ld855 [749.414843ms]
  May 25 13:43:17.812: INFO: Created: latency-svc-ndv6s
  May 25 13:43:17.853: INFO: Got endpoints: latency-svc-l5nps [751.064298ms]
  May 25 13:43:17.862: INFO: Created: latency-svc-xnzrb
  May 25 13:43:17.901: INFO: Got endpoints: latency-svc-mgqrl [748.852281ms]
  May 25 13:43:17.914: INFO: Created: latency-svc-sgcb4
  May 25 13:43:17.951: INFO: Got endpoints: latency-svc-n2zdv [751.094751ms]
  May 25 13:43:17.964: INFO: Created: latency-svc-5m6qp
  May 25 13:43:18.001: INFO: Got endpoints: latency-svc-gzqfh [750.949784ms]
  May 25 13:43:18.011: INFO: Created: latency-svc-4m4qp
  May 25 13:43:18.051: INFO: Got endpoints: latency-svc-66gz7 [748.373694ms]
  May 25 13:43:18.063: INFO: Created: latency-svc-r7mrt
  May 25 13:43:18.102: INFO: Got endpoints: latency-svc-wvxmw [749.717502ms]
  May 25 13:43:18.113: INFO: Created: latency-svc-9t7hg
  May 25 13:43:18.151: INFO: Got endpoints: latency-svc-llk6g [747.916303ms]
  May 25 13:43:18.162: INFO: Created: latency-svc-llshb
  May 25 13:43:18.201: INFO: Got endpoints: latency-svc-vvw5j [749.974471ms]
  May 25 13:43:18.213: INFO: Created: latency-svc-zrf22
  May 25 13:43:18.252: INFO: Got endpoints: latency-svc-q76cv [751.950169ms]
  May 25 13:43:18.262: INFO: Created: latency-svc-grwd8
  May 25 13:43:18.302: INFO: Got endpoints: latency-svc-xd9mz [751.033197ms]
  May 25 13:43:18.311: INFO: Created: latency-svc-spq4s
  May 25 13:43:18.352: INFO: Got endpoints: latency-svc-hl2wd [749.676198ms]
  May 25 13:43:18.364: INFO: Created: latency-svc-zljn5
  May 25 13:43:18.402: INFO: Got endpoints: latency-svc-w28wn [750.768879ms]
  May 25 13:43:18.415: INFO: Created: latency-svc-65h7d
  May 25 13:43:18.453: INFO: Got endpoints: latency-svc-qhrhd [753.037473ms]
  May 25 13:43:18.464: INFO: Created: latency-svc-vhk4n
  May 25 13:43:18.501: INFO: Got endpoints: latency-svc-9zlqn [748.497673ms]
  May 25 13:43:18.519: INFO: Created: latency-svc-qmlnc
  May 25 13:43:18.552: INFO: Got endpoints: latency-svc-ndv6s [751.377738ms]
  May 25 13:43:18.563: INFO: Created: latency-svc-dmtdh
  E0525 13:43:18.565076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:43:18.601: INFO: Got endpoints: latency-svc-xnzrb [747.78416ms]
  May 25 13:43:18.611: INFO: Created: latency-svc-dhmn4
  May 25 13:43:18.653: INFO: Got endpoints: latency-svc-sgcb4 [752.596789ms]
  May 25 13:43:18.665: INFO: Created: latency-svc-pprfl
  May 25 13:43:18.702: INFO: Got endpoints: latency-svc-5m6qp [749.989385ms]
  May 25 13:43:18.712: INFO: Created: latency-svc-krzw9
  May 25 13:43:18.750: INFO: Got endpoints: latency-svc-4m4qp [748.522791ms]
  May 25 13:43:18.765: INFO: Created: latency-svc-vq6m9
  May 25 13:43:18.802: INFO: Got endpoints: latency-svc-r7mrt [750.685393ms]
  May 25 13:43:18.813: INFO: Created: latency-svc-tmgjf
  May 25 13:43:18.852: INFO: Got endpoints: latency-svc-9t7hg [750.200917ms]
  May 25 13:43:18.864: INFO: Created: latency-svc-qqsdh
  May 25 13:43:18.903: INFO: Got endpoints: latency-svc-llshb [752.086115ms]
  May 25 13:43:18.951: INFO: Got endpoints: latency-svc-zrf22 [750.46818ms]
  May 25 13:43:19.001: INFO: Got endpoints: latency-svc-grwd8 [749.354715ms]
  May 25 13:43:19.051: INFO: Got endpoints: latency-svc-spq4s [749.144399ms]
  May 25 13:43:19.109: INFO: Got endpoints: latency-svc-zljn5 [756.254937ms]
  May 25 13:43:19.151: INFO: Got endpoints: latency-svc-65h7d [748.803569ms]
  May 25 13:43:19.202: INFO: Got endpoints: latency-svc-vhk4n [748.169552ms]
  May 25 13:43:19.251: INFO: Got endpoints: latency-svc-qmlnc [749.180081ms]
  May 25 13:43:19.302: INFO: Got endpoints: latency-svc-dmtdh [749.875274ms]
  May 25 13:43:19.352: INFO: Got endpoints: latency-svc-dhmn4 [750.20696ms]
  May 25 13:43:19.403: INFO: Got endpoints: latency-svc-pprfl [749.784315ms]
  May 25 13:43:19.453: INFO: Got endpoints: latency-svc-krzw9 [751.292071ms]
  May 25 13:43:19.503: INFO: Got endpoints: latency-svc-vq6m9 [752.490475ms]
  May 25 13:43:19.552: INFO: Got endpoints: latency-svc-tmgjf [749.555275ms]
  E0525 13:43:19.565399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:43:19.603: INFO: Got endpoints: latency-svc-qqsdh [750.704772ms]
  May 25 13:43:19.603: INFO: Latencies: [19.190109ms 29.577973ms 34.49535ms 42.296727ms 51.293849ms 65.988096ms 70.062655ms 81.554691ms 90.695603ms 101.469734ms 113.040982ms 118.229641ms 121.906854ms 123.089474ms 126.516255ms 126.970679ms 127.804482ms 127.971222ms 128.362229ms 128.662611ms 128.833995ms 128.997901ms 129.834983ms 129.91231ms 130.748882ms 130.906269ms 131.353353ms 131.762758ms 132.766164ms 132.824514ms 133.917716ms 134.852859ms 135.101165ms 140.359147ms 140.71771ms 150.486135ms 192.932686ms 232.314995ms 274.184966ms 315.1586ms 360.938658ms 402.431434ms 440.309327ms 484.298336ms 526.622882ms 566.16215ms 605.511224ms 649.661369ms 690.378539ms 731.934008ms 744.091945ms 746.219712ms 746.859298ms 746.868806ms 746.987946ms 747.445867ms 747.461525ms 747.499716ms 747.501246ms 747.653631ms 747.78416ms 747.80057ms 747.855334ms 747.916303ms 747.977033ms 748.008745ms 748.162512ms 748.169552ms 748.184186ms 748.254507ms 748.282725ms 748.323261ms 748.339647ms 748.373694ms 748.3748ms 748.467274ms 748.497673ms 748.522791ms 748.672242ms 748.686543ms 748.733852ms 748.746266ms 748.785031ms 748.803569ms 748.811219ms 748.81173ms 748.841848ms 748.852281ms 748.886508ms 748.933838ms 749.014413ms 749.019791ms 749.040861ms 749.144399ms 749.161046ms 749.174872ms 749.180081ms 749.231213ms 749.251207ms 749.255462ms 749.261469ms 749.274583ms 749.337337ms 749.346439ms 749.354715ms 749.367808ms 749.414843ms 749.439362ms 749.466167ms 749.516594ms 749.527389ms 749.542236ms 749.548211ms 749.555275ms 749.618879ms 749.652803ms 749.676198ms 749.689655ms 749.717502ms 749.74499ms 749.75156ms 749.772934ms 749.784315ms 749.819579ms 749.849623ms 749.875274ms 749.882447ms 749.895714ms 749.914697ms 749.974471ms 749.989385ms 750.01707ms 750.0351ms 750.068074ms 750.128851ms 750.154319ms 750.161912ms 750.200917ms 750.20696ms 750.222805ms 750.233511ms 750.239602ms 750.302552ms 750.395815ms 750.417793ms 750.449517ms 750.460063ms 750.46818ms 750.499028ms 750.507942ms 750.508782ms 750.57297ms 750.62843ms 750.685393ms 750.704772ms 750.748625ms 750.768879ms 750.821545ms 750.843808ms 750.86028ms 750.864159ms 750.879813ms 750.888732ms 750.903089ms 750.927346ms 750.949784ms 751.028355ms 751.033197ms 751.046459ms 751.064298ms 751.094751ms 751.141669ms 751.159088ms 751.292071ms 751.295274ms 751.377738ms 751.42578ms 751.458345ms 751.565179ms 751.587683ms 751.618052ms 751.678538ms 751.688151ms 751.709018ms 751.948268ms 751.950169ms 751.957047ms 751.962261ms 752.085348ms 752.086115ms 752.413662ms 752.428458ms 752.490475ms 752.596789ms 752.658356ms 752.956806ms 753.037473ms 753.166893ms 754.954856ms 756.254937ms]
  May 25 13:43:19.603: INFO: 50 %ile: 749.261469ms
  May 25 13:43:19.603: INFO: 90 %ile: 751.618052ms
  May 25 13:43:19.603: INFO: 99 %ile: 754.954856ms
  May 25 13:43:19.603: INFO: Total sample count: 200
  May 25 13:43:19.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-3962" for this suite. @ 05/25/24 13:43:19.608
• [10.761 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 05/25/24 13:43:19.616
  May 25 13:43:19.616: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename statefulset @ 05/25/24 13:43:19.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:43:19.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:43:19.635
  STEP: Creating service test in namespace statefulset-4927 @ 05/25/24 13:43:19.638
  STEP: Creating a new StatefulSet @ 05/25/24 13:43:19.644
  May 25 13:43:19.654: INFO: Found 0 stateful pods, waiting for 3
  E0525 13:43:20.565582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:21.565692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:22.566740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:23.566842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:24.566932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:25.567269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:26.567340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:27.568259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:28.569202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:29.569492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:43:29.655: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May 25 13:43:29.655: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May 25 13:43:29.655: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/25/24 13:43:29.666
  May 25 13:43:29.688: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 05/25/24 13:43:29.688
  E0525 13:43:30.569610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:31.569863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:32.570077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:33.570191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:34.570362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:35.570441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:36.570540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:37.570825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:38.570928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:39.571191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/25/24 13:43:39.696
  STEP: Performing a canary update @ 05/25/24 13:43:39.696
  May 25 13:43:39.717: INFO: Updating stateful set ss2
  May 25 13:43:39.729: INFO: Waiting for Pod statefulset-4927/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0525 13:43:40.571295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:41.571374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:42.571492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:43.571590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:44.571662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:45.571851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:46.572115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:47.572215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:48.572287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:49.572372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/25/24 13:43:49.726
  May 25 13:43:49.768: INFO: Found 2 stateful pods, waiting for 3
  E0525 13:43:50.572786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:51.572890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:52.572981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:53.573101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:54.573206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:55.573304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:56.573705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:57.573880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:58.574065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:43:59.574164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:43:59.769: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May 25 13:43:59.769: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May 25 13:43:59.769: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/25/24 13:43:59.776
  May 25 13:43:59.797: INFO: Updating stateful set ss2
  May 25 13:43:59.807: INFO: Waiting for Pod statefulset-4927/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0525 13:44:00.574408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:01.574577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:02.574657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:03.574770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:04.574992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:05.575112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:06.575235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:07.575342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:08.575430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:09.575505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:44:09.828: INFO: Updating stateful set ss2
  May 25 13:44:09.839: INFO: Waiting for StatefulSet statefulset-4927/ss2 to complete update
  May 25 13:44:09.839: INFO: Waiting for Pod statefulset-4927/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0525 13:44:10.576297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:11.576380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:12.577297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:13.577377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:14.577454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:15.577906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:16.577996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:17.578191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:18.578342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:19.578542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:44:19.838: INFO: Deleting all statefulset in ns statefulset-4927
  May 25 13:44:19.842: INFO: Scaling statefulset ss2 to 0
  E0525 13:44:20.579003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:21.579362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:22.579406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:23.580280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:24.580362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:25.580642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:26.581597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:27.581697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:28.581755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:29.581926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:44:29.855: INFO: Waiting for statefulset status.replicas updated to 0
  May 25 13:44:29.859: INFO: Deleting statefulset ss2
  May 25 13:44:29.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4927" for this suite. @ 05/25/24 13:44:29.879
• [70.271 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 05/25/24 13:44:29.887
  May 25 13:44:29.887: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pods @ 05/25/24 13:44:29.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:44:29.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:44:29.907
  STEP: creating the pod @ 05/25/24 13:44:29.909
  STEP: submitting the pod to kubernetes @ 05/25/24 13:44:29.909
  E0525 13:44:30.582333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:31.582415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 05/25/24 13:44:31.929
  STEP: updating the pod @ 05/25/24 13:44:31.933
  May 25 13:44:32.451: INFO: Successfully updated pod "pod-update-d16b1eee-0c8d-43d0-9250-334f3a91efbe"
  STEP: verifying the updated pod is in kubernetes @ 05/25/24 13:44:32.457
  May 25 13:44:32.460: INFO: Pod update OK
  May 25 13:44:32.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1941" for this suite. @ 05/25/24 13:44:32.463
• [2.587 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 05/25/24 13:44:32.474
  May 25 13:44:32.474: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename deployment @ 05/25/24 13:44:32.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:44:32.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:44:32.492
  May 25 13:44:32.495: INFO: Creating deployment "webserver-deployment"
  May 25 13:44:32.500: INFO: Waiting for observed generation 1
  E0525 13:44:32.583236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:33.583322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:44:34.511: INFO: Waiting for all required pods to come up
  May 25 13:44:34.515: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/25/24 13:44:34.515
  May 25 13:44:34.516: INFO: Waiting for deployment "webserver-deployment" to complete
  May 25 13:44:34.523: INFO: Updating deployment "webserver-deployment" with a non-existent image
  May 25 13:44:34.532: INFO: Updating deployment webserver-deployment
  May 25 13:44:34.532: INFO: Waiting for observed generation 2
  E0525 13:44:34.583379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:35.584349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:44:36.540: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  May 25 13:44:36.543: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  May 25 13:44:36.547: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  May 25 13:44:36.557: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  May 25 13:44:36.557: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  May 25 13:44:36.559: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  May 25 13:44:36.566: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  May 25 13:44:36.566: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  May 25 13:44:36.576: INFO: Updating deployment webserver-deployment
  May 25 13:44:36.576: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  E0525 13:44:36.584777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:44:36.587: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  May 25 13:44:36.593: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  May 25 13:44:36.619: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd58cfc2-afe9-448e-b01e-895e361ed1c4",
      ResourceVersion: (string) (len=5) "42111",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 25 13:44:36.631: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b5cce015-663a-48da-b374-a788e1dd7040",
      ResourceVersion: (string) (len=5) "42102",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "fd58cfc2-afe9-448e-b01e-895e361ed1c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 64 35 38 63 66  63 32 2d 61 66 65 39 2d  |\"fd58cfc2-afe9-|
              00000120  34 34 38 65 2d 62 30 31  65 2d 38 39 35 65 33 36  |448e-b01e-895e36|
              00000130  31 65 64 31 63 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1ed1c4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 25 13:44:36.631: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  May 25 13:44:36.632: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71f74e43-e218-40b4-9f9b-351d7e10e2ce",
      ResourceVersion: (string) (len=5) "42099",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "fd58cfc2-afe9-448e-b01e-895e361ed1c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 64 35 38 63 66  63 32 2d 61 66 65 39 2d  |\"fd58cfc2-afe9-|
              00000120  34 34 38 65 2d 62 30 31  65 2d 38 39 35 65 33 36  |448e-b01e-895e36|
              00000130  31 65 64 31 63 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1ed1c4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 25 13:44:36.648: INFO: Pod "webserver-deployment-557759b7c7-2gx24" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2gx24",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e208650-3e8b-44fa-b859-22c1381ade26",
      ResourceVersion: (string) (len=5) "41879",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "71f74e43-e218-40b4-9f9b-351d7e10e2ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  66 37 34 65 34 33 2d 65  |d\":\"71f74e43-e|
              00000090  32 31 38 2d 34 30 62 34  2d 39 66 39 62 2d 33 35  |218-40b4-9f9b-35|
              000000a0  31 64 37 65 31 30 65 32  63 65 5c 22 7d 22 3a 7b  |1d7e10e2ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  2e 33 30 5c 22 7d 22 3a  |2.168.14.30\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pcrhp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pcrhp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-222",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.222"
        }
      },
      PodIP: (string) (len=13) "192.168.14.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.14.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852241473,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://873c3609d4eca49adc0000cb271d69f702bc71a85f82043e8d87ddd87fbade9d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.650: INFO: Pod "webserver-deployment-557759b7c7-cd49c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cd49c",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73dc51c2-30a0-406b-a04a-dbbf2f073dee",
      ResourceVersion: (string) (len=5) "41929",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "71f74e43-e218-40b4-9f9b-351d7e10e2ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  66 37 34 65 34 33 2d 65  |d\":\"71f74e43-e|
              00000090  32 31 38 2d 34 30 62 34  2d 39 66 39 62 2d 33 35  |218-40b4-9f9b-35|
              000000a0  31 64 37 65 31 30 65 32  63 65 5c 22 7d 22 3a 7b  |1d7e10e2ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  2e 32 39 5c 22 7d 22 3a  |2.168.14.29\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c6qql",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c6qql",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-222",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.222"
        }
      },
      PodIP: (string) (len=13) "192.168.14.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.14.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852241473,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1e6915d17ebb977449e288d78b3bf10aa1a62ebd9cfa94e0dc8f4c5a5f360024",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.652: INFO: Pod "webserver-deployment-557759b7c7-cr2cx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cr2cx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "accb23fc-cd8d-4a81-80ab-b1aff9cc2a59",
      ResourceVersion: (string) (len=5) "41926",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "71f74e43-e218-40b4-9f9b-351d7e10e2ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  66 37 34 65 34 33 2d 65  |d\":\"71f74e43-e|
              00000090  32 31 38 2d 34 30 62 34  2d 39 66 39 62 2d 33 35  |218-40b4-9f9b-35|
              000000a0  31 64 37 65 31 30 65 32  63 65 5c 22 7d 22 3a 7b  |1d7e10e2ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  2e 32 38 5c 22 7d 22 3a  |2.168.14.28\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hpc6t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hpc6t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-222",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.222"
        }
      },
      PodIP: (string) (len=13) "192.168.14.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.14.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852241473,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d36a6e9b7f276a63d41f1f4397e8b2d6b34e3fd8c27e74be3505b4e6133189cd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.656: INFO: Pod "webserver-deployment-557759b7c7-gcs6v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gcs6v",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6148327-7234-4757-9f4c-142db0711721",
      ResourceVersion: (string) (len=5) "42120",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "71f74e43-e218-40b4-9f9b-351d7e10e2ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  66 37 34 65 34 33 2d 65  |d\":\"71f74e43-e|
              00000090  32 31 38 2d 34 30 62 34  2d 39 66 39 62 2d 33 35  |218-40b4-9f9b-35|
              000000a0  31 64 37 65 31 30 65 32  63 65 5c 22 7d 22 3a 7b  |1d7e10e2ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2wkt5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2wkt5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-106",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.106",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.106"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.659: INFO: Pod "webserver-deployment-557759b7c7-jn8ws" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jn8ws",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "08b1a7b4-896c-4e66-8e47-57313772b1d4",
      ResourceVersion: (string) (len=5) "42129",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "71f74e43-e218-40b4-9f9b-351d7e10e2ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  66 37 34 65 34 33 2d 65  |d\":\"71f74e43-e|
              00000090  32 31 38 2d 34 30 62 34  2d 39 66 39 62 2d 33 35  |218-40b4-9f9b-35|
              000000a0  31 64 37 65 31 30 65 32  63 65 5c 22 7d 22 3a 7b  |1d7e10e2ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tk9rw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tk9rw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-15-138",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.660: INFO: Pod "webserver-deployment-557759b7c7-jw9fk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jw9fk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "34e4bc57-e151-4383-9713-adc2a6254507",
      ResourceVersion: (string) (len=5) "41903",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "71f74e43-e218-40b4-9f9b-351d7e10e2ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  66 37 34 65 34 33 2d 65  |d\":\"71f74e43-e|
              00000090  32 31 38 2d 34 30 62 34  2d 39 66 39 62 2d 33 35  |218-40b4-9f9b-35|
              000000a0  31 64 37 65 31 30 65 32  63 65 5c 22 7d 22 3a 7b  |1d7e10e2ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 33  31 2e 33 30 5c 22 7d 22  |2.168.131.30\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6hcmd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6hcmd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-106",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.106",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.106"
        }
      },
      PodIP: (string) (len=14) "192.168.131.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.131.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852241473,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b786fea7a9df78a5e17b6bc29300058cbb5cc999e01ff8bbaf1ea08ada84cae6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.661: INFO: Pod "webserver-deployment-557759b7c7-kt6c7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kt6c7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed116bfc-e91b-4fc6-ba65-0b1f079c3133",
      ResourceVersion: (string) (len=5) "41920",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "71f74e43-e218-40b4-9f9b-351d7e10e2ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  66 37 34 65 34 33 2d 65  |d\":\"71f74e43-e|
              00000090  32 31 38 2d 34 30 62 34  2d 39 66 39 62 2d 33 35  |218-40b4-9f9b-35|
              000000a0  31 64 37 65 31 30 65 32  63 65 5c 22 7d 22 3a 7b  |1d7e10e2ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 33  38 2e 31 35 32 5c 22 7d  |2.168.138.152\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qdxkv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qdxkv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-15-138",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.138"
        }
      },
      PodIP: (string) (len=15) "192.168.138.152",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.138.152"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852241473,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://97a226d8e6fddf1dc4160b0f4085a112f08c7350a83e776fb754b5183df57f86",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.664: INFO: Pod "webserver-deployment-557759b7c7-ql52x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ql52x",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5bfcb47b-5d41-4b08-b66b-5584db4bce0a",
      ResourceVersion: (string) (len=5) "42117",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "71f74e43-e218-40b4-9f9b-351d7e10e2ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  66 37 34 65 34 33 2d 65  |d\":\"71f74e43-e|
              00000090  32 31 38 2d 34 30 62 34  2d 39 66 39 62 2d 33 35  |218-40b4-9f9b-35|
              000000a0  31 64 37 65 31 30 65 32  63 65 5c 22 7d 22 3a 7b  |1d7e10e2ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7w7dn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7w7dn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.665: INFO: Pod "webserver-deployment-557759b7c7-qwtt2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qwtt2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "87ddb558-8dd9-4490-9014-71c1c311e15d",
      ResourceVersion: (string) (len=5) "42122",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "71f74e43-e218-40b4-9f9b-351d7e10e2ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  66 37 34 65 34 33 2d 65  |d\":\"71f74e43-e|
              00000090  32 31 38 2d 34 30 62 34  2d 39 66 39 62 2d 33 35  |218-40b4-9f9b-35|
              000000a0  31 64 37 65 31 30 65 32  63 65 5c 22 7d 22 3a 7b  |1d7e10e2ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-26rjz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-26rjz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.666: INFO: Pod "webserver-deployment-557759b7c7-rnbwb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rnbwb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "94c6fa57-f60f-43fc-acf7-5e34f0b98f78",
      ResourceVersion: (string) (len=5) "41917",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "71f74e43-e218-40b4-9f9b-351d7e10e2ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  66 37 34 65 34 33 2d 65  |d\":\"71f74e43-e|
              00000090  32 31 38 2d 34 30 62 34  2d 39 66 39 62 2d 33 35  |218-40b4-9f9b-35|
              000000a0  31 64 37 65 31 30 65 32  63 65 5c 22 7d 22 3a 7b  |1d7e10e2ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 33  38 2e 31 35 31 5c 22 7d  |2.168.138.151\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z46xn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z46xn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-15-138",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.138"
        }
      },
      PodIP: (string) (len=15) "192.168.138.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.138.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852241473,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c44821fab1b69716648e2bd9bc836535e20cfb01e3c7235718d17f1bba916847",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.667: INFO: Pod "webserver-deployment-557759b7c7-rwjv8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rwjv8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2112dbc4-fa8b-445c-b349-5f94812e9da3",
      ResourceVersion: (string) (len=5) "41923",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "71f74e43-e218-40b4-9f9b-351d7e10e2ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  66 37 34 65 34 33 2d 65  |d\":\"71f74e43-e|
              00000090  32 31 38 2d 34 30 62 34  2d 39 66 39 62 2d 33 35  |218-40b4-9f9b-35|
              000000a0  31 64 37 65 31 30 65 32  63 65 5c 22 7d 22 3a 7b  |1d7e10e2ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 33  38 2e 31 35 35 5c 22 7d  |2.168.138.155\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xr69v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xr69v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-15-138",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.138"
        }
      },
      PodIP: (string) (len=15) "192.168.138.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.138.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852241473,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://58a0afaf84e4a7cbe7fef7b0543ae2b3e7d930aa65548b67e38167e0fd9f2379",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.668: INFO: Pod "webserver-deployment-557759b7c7-sfmgl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-sfmgl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e7c83ee-40e4-4eb4-90cd-d6199295a02a",
      ResourceVersion: (string) (len=5) "42112",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "71f74e43-e218-40b4-9f9b-351d7e10e2ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  66 37 34 65 34 33 2d 65  |d\":\"71f74e43-e|
              00000090  32 31 38 2d 34 30 62 34  2d 39 66 39 62 2d 33 35  |218-40b4-9f9b-35|
              000000a0  31 64 37 65 31 30 65 32  63 65 5c 22 7d 22 3a 7b  |1d7e10e2ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kqx6m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kqx6m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-15-138",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.672: INFO: Pod "webserver-deployment-557759b7c7-tjhnt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tjhnt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63d890c3-6ee9-4ca6-826f-e4a122aada3b",
      ResourceVersion: (string) (len=5) "41907",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "71f74e43-e218-40b4-9f9b-351d7e10e2ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  66 37 34 65 34 33 2d 65  |d\":\"71f74e43-e|
              00000090  32 31 38 2d 34 30 62 34  2d 39 66 39 62 2d 33 35  |218-40b4-9f9b-35|
              000000a0  31 64 37 65 31 30 65 32  63 65 5c 22 7d 22 3a 7b  |1d7e10e2ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 33  31 2e 31 31 5c 22 7d 22  |2.168.131.11\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-czvq8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-czvq8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-106",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241472,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.106",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.106"
        }
      },
      PodIP: (string) (len=14) "192.168.131.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.131.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241472,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852241473,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1eebffdc84d6248c35cbb3d0a6fe435972746416edf21fe8261e096479dff4a1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.673: INFO: Pod "webserver-deployment-557759b7c7-xzlpn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xzlpn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf180df3-fc88-4739-a61a-091ce8acfbae",
      ResourceVersion: (string) (len=5) "42119",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "71f74e43-e218-40b4-9f9b-351d7e10e2ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  66 37 34 65 34 33 2d 65  |d\":\"71f74e43-e|
              00000090  32 31 38 2d 34 30 62 34  2d 39 66 39 62 2d 33 35  |218-40b4-9f9b-35|
              000000a0  31 64 37 65 31 30 65 32  63 65 5c 22 7d 22 3a 7b  |1d7e10e2ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pqvrs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pqvrs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.674: INFO: Pod "webserver-deployment-557759b7c7-z92q7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-z92q7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6b754a8-155f-405f-b890-b29c99a8360d",
      ResourceVersion: (string) (len=5) "42115",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "71f74e43-e218-40b4-9f9b-351d7e10e2ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  66 37 34 65 34 33 2d 65  |d\":\"71f74e43-e|
              00000090  32 31 38 2d 34 30 62 34  2d 39 66 39 62 2d 33 35  |218-40b4-9f9b-35|
              000000a0  31 64 37 65 31 30 65 32  63 65 5c 22 7d 22 3a 7b  |1d7e10e2ce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fhshf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fhshf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-106",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.675: INFO: Pod "webserver-deployment-9b4f5bf69-d84h5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-d84h5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d84d544e-ffd6-4595-b2cc-decff11e9ffc",
      ResourceVersion: (string) (len=5) "42077",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b5cce015-663a-48da-b374-a788e1dd7040",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 35  63 63 65 30 31 35 2d 36  |d\":\"b5cce015-6|
              00000090  36 33 61 2d 34 38 64 61  2d 62 33 37 34 2d 61 37  |63a-48da-b374-a7|
              000000a0  38 38 65 31 64 64 37 30  34 30 5c 22 7d 22 3a 7b  |88e1dd7040\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 33 31 2e 34  32 5c 22 7d 22 3a 7b 22  |68.131.42\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nlk5d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nlk5d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-106",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.106",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.106"
        }
      },
      PodIP: (string) (len=14) "192.168.131.42",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.131.42"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.676: INFO: Pod "webserver-deployment-9b4f5bf69-g4gxf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-g4gxf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d349dfee-334a-4bf5-9a1d-b2e588d2eb3b",
      ResourceVersion: (string) (len=5) "42131",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b5cce015-663a-48da-b374-a788e1dd7040",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 35  63 63 65 30 31 35 2d 36  |d\":\"b5cce015-6|
              00000090  36 33 61 2d 34 38 64 61  2d 62 33 37 34 2d 61 37  |63a-48da-b374-a7|
              000000a0  38 38 65 31 64 64 37 30  34 30 5c 22 7d 22 3a 7b  |88e1dd7040\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ms4qf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ms4qf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.677: INFO: Pod "webserver-deployment-9b4f5bf69-k4894" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-k4894",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a106f7c3-9207-4a4d-b969-f24b0186e2df",
      ResourceVersion: (string) (len=5) "42084",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b5cce015-663a-48da-b374-a788e1dd7040",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 35  63 63 65 30 31 35 2d 36  |d\":\"b5cce015-6|
              00000090  36 33 61 2d 34 38 64 61  2d 62 33 37 34 2d 61 37  |63a-48da-b374-a7|
              000000a0  38 38 65 31 64 64 37 30  34 30 5c 22 7d 22 3a 7b  |88e1dd7040\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 33 31 2e 33  36 5c 22 7d 22 3a 7b 22  |68.131.36\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qsf42",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qsf42",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-106",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.106",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.106"
        }
      },
      PodIP: (string) (len=14) "192.168.131.36",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.131.36"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.680: INFO: Pod "webserver-deployment-9b4f5bf69-kfr7b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kfr7b",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "917eaa18-1bd7-4992-8f0a-66a8fa13cfcf",
      ResourceVersion: (string) (len=5) "42130",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b5cce015-663a-48da-b374-a788e1dd7040",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 35  63 63 65 30 31 35 2d 36  |d\":\"b5cce015-6|
              00000090  36 33 61 2d 34 38 64 61  2d 62 33 37 34 2d 61 37  |63a-48da-b374-a7|
              000000a0  38 38 65 31 64 64 37 30  34 30 5c 22 7d 22 3a 7b  |88e1dd7040\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gpkgg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gpkgg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-222",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.222"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.682: INFO: Pod "webserver-deployment-9b4f5bf69-krqvh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-krqvh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c466ba48-af85-498a-92da-928f59fef685",
      ResourceVersion: (string) (len=5) "42095",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b5cce015-663a-48da-b374-a788e1dd7040",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 35  63 63 65 30 31 35 2d 36  |d\":\"b5cce015-6|
              00000090  36 33 61 2d 34 38 64 61  2d 62 33 37 34 2d 61 37  |63a-48da-b374-a7|
              000000a0  38 38 65 31 64 64 37 30  34 30 5c 22 7d 22 3a 7b  |88e1dd7040\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 33 38 2e 31  35 37 5c 22 7d 22 3a 7b  |68.138.157\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dhql4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dhql4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-15-138",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.138"
        }
      },
      PodIP: (string) (len=15) "192.168.138.157",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.138.157"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.688: INFO: Pod "webserver-deployment-9b4f5bf69-ktgfk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ktgfk",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95bef8d6-f472-4022-9863-dbfb5fce64b6",
      ResourceVersion: (string) (len=5) "42092",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b5cce015-663a-48da-b374-a788e1dd7040",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 35  63 63 65 30 31 35 2d 36  |d\":\"b5cce015-6|
              00000090  36 33 61 2d 34 38 64 61  2d 62 33 37 34 2d 61 37  |63a-48da-b374-a7|
              000000a0  38 38 65 31 64 64 37 30  34 30 5c 22 7d 22 3a 7b  |88e1dd7040\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 33 38 2e 31  35 34 5c 22 7d 22 3a 7b  |68.138.154\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2tv2v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2tv2v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-15-138",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.138"
        }
      },
      PodIP: (string) (len=15) "192.168.138.154",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.138.154"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.691: INFO: Pod "webserver-deployment-9b4f5bf69-v5p7k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-v5p7k",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7214a6e-28f4-41df-b01f-d97e735b1f72",
      ResourceVersion: (string) (len=5) "42059",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b5cce015-663a-48da-b374-a788e1dd7040",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 35  63 63 65 30 31 35 2d 36  |d\":\"b5cce015-6|
              00000090  36 33 61 2d 34 38 64 61  2d 62 33 37 34 2d 61 37  |63a-48da-b374-a7|
              000000a0  38 38 65 31 64 64 37 30  34 30 5c 22 7d 22 3a 7b  |88e1dd7040\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 34 2e 33 31  5c 22 7d 22 3a 7b 22 2e  |68.14.31\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dnqkh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dnqkh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-23-222",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.23.222",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.23.222"
        }
      },
      PodIP: (string) (len=13) "192.168.14.31",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.14.31"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.693: INFO: Pod "webserver-deployment-9b4f5bf69-vblrp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vblrp",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7fef96e6-4775-45d4-8657-2497998cca89",
      ResourceVersion: (string) (len=5) "42123",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b5cce015-663a-48da-b374-a788e1dd7040",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 35  63 63 65 30 31 35 2d 36  |d\":\"b5cce015-6|
              00000090  36 33 61 2d 34 38 64 61  2d 62 33 37 34 2d 61 37  |63a-48da-b374-a7|
              000000a0  38 38 65 31 64 64 37 30  34 30 5c 22 7d 22 3a 7b  |88e1dd7040\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r7rgr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r7rgr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-15-138",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.696: INFO: Pod "webserver-deployment-9b4f5bf69-zfxz8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-zfxz8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2278381a-2edd-4df5-8097-f9ed10e093fb",
      ResourceVersion: (string) (len=5) "42128",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852241476,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b5cce015-663a-48da-b374-a788e1dd7040",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 35  63 63 65 30 31 35 2d 36  |d\":\"b5cce015-6|
              00000090  36 33 61 2d 34 38 64 61  2d 62 33 37 34 2d 61 37  |63a-48da-b374-a7|
              000000a0  38 38 65 31 64 64 37 30  34 30 5c 22 7d 22 3a 7b  |88e1dd7040\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pbt6p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pbt6p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-106",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852241476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:44:36.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1313" for this suite. @ 05/25/24 13:44:36.711
• [4.250 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 05/25/24 13:44:36.725
  May 25 13:44:36.725: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename field-validation @ 05/25/24 13:44:36.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:44:36.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:44:36.746
  May 25 13:44:36.749: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  W0525 13:44:36.749753      21 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc001622470 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0525 13:44:37.585849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:38.585881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0525 13:44:39.284508      21 warnings.go:70] unknown field "alpha"
  W0525 13:44:39.284526      21 warnings.go:70] unknown field "beta"
  W0525 13:44:39.284530      21 warnings.go:70] unknown field "delta"
  W0525 13:44:39.284532      21 warnings.go:70] unknown field "epsilon"
  W0525 13:44:39.284535      21 warnings.go:70] unknown field "gamma"
  E0525 13:44:39.586238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:44:39.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5756" for this suite. @ 05/25/24 13:44:39.829
• [3.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 05/25/24 13:44:39.836
  May 25 13:44:39.836: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename secrets @ 05/25/24 13:44:39.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:44:39.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:44:39.856
  STEP: Creating secret with name s-test-opt-del-8deb1de3-f2f4-42d3-84b0-220fed919b32 @ 05/25/24 13:44:39.865
  STEP: Creating secret with name s-test-opt-upd-24aeac7a-7b9b-4d08-a8e1-9df023362794 @ 05/25/24 13:44:39.87
  STEP: Creating the pod @ 05/25/24 13:44:39.875
  E0525 13:44:40.587184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:41.587264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-8deb1de3-f2f4-42d3-84b0-220fed919b32 @ 05/25/24 13:44:41.927
  STEP: Updating secret s-test-opt-upd-24aeac7a-7b9b-4d08-a8e1-9df023362794 @ 05/25/24 13:44:41.934
  STEP: Creating secret with name s-test-opt-create-0d0241be-f9fa-4959-a5f5-034588905620 @ 05/25/24 13:44:41.939
  STEP: waiting to observe update in volume @ 05/25/24 13:44:41.943
  E0525 13:44:42.588246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:43.588512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:44:43.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5503" for this suite. @ 05/25/24 13:44:43.971
• [4.142 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 05/25/24 13:44:43.978
  May 25 13:44:43.978: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pods @ 05/25/24 13:44:43.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:44:43.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:44:43.996
  May 25 13:44:43.999: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: creating the pod @ 05/25/24 13:44:43.999
  STEP: submitting the pod to kubernetes @ 05/25/24 13:44:43.999
  E0525 13:44:44.588653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:45.589320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:44:46.082: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3914" for this suite. @ 05/25/24 13:44:46.086
• [2.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 05/25/24 13:44:46.094
  May 25 13:44:46.094: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename gc @ 05/25/24 13:44:46.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:44:46.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:44:46.112
  STEP: create the deployment @ 05/25/24 13:44:46.115
  W0525 13:44:46.121686      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/25/24 13:44:46.121
  STEP: delete the deployment @ 05/25/24 13:44:46.127
  STEP: wait for all rs to be garbage collected @ 05/25/24 13:44:46.143
  STEP: expected 0 rs, got 1 rs @ 05/25/24 13:44:46.15
  STEP: expected 0 pods, got 2 pods @ 05/25/24 13:44:46.158
  E0525 13:44:46.589513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/25/24 13:44:46.655
  W0525 13:44:46.660513      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May 25 13:44:46.660: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 25 13:44:46.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9843" for this suite. @ 05/25/24 13:44:46.664
• [0.578 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 05/25/24 13:44:46.672
  May 25 13:44:46.672: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename secrets @ 05/25/24 13:44:46.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:44:46.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:44:46.689
  STEP: Creating projection with secret that has name secret-emptykey-test-86bea9fb-93bd-43c2-81dd-e04ace740dab @ 05/25/24 13:44:46.692
  May 25 13:44:46.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6219" for this suite. @ 05/25/24 13:44:46.697
• [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 05/25/24 13:44:46.703
  May 25 13:44:46.703: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename init-container @ 05/25/24 13:44:46.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:44:46.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:44:46.721
  STEP: creating the pod @ 05/25/24 13:44:46.724
  May 25 13:44:46.724: INFO: PodSpec: initContainers in spec.initContainers
  E0525 13:44:47.589600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:48.590459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:49.591383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:44:49.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3913" for this suite. @ 05/25/24 13:44:49.918
• [3.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 05/25/24 13:44:49.927
  May 25 13:44:49.927: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl @ 05/25/24 13:44:49.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:44:49.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:44:49.943
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/25/24 13:44:49.946
  May 25 13:44:49.946: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8527 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  May 25 13:44:49.993: INFO: stderr: ""
  May 25 13:44:49.993: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/25/24 13:44:49.993
  E0525 13:44:50.592135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:51.592222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:52.592322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:53.592480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:44:54.592644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/25/24 13:44:55.044
  May 25 13:44:55.044: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8527 get pod e2e-test-httpd-pod -o json'
  May 25 13:44:55.098: INFO: stderr: ""
  May 25 13:44:55.098: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-05-25T13:44:49Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8527\",\n        \"resourceVersion\": \"42672\",\n        \"uid\": \"9aa091ff-2102-4ff1-9338-dcc271f3bfe1\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-v7ljf\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-45-106\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-v7ljf\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-25T13:44:51Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-25T13:44:49Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-25T13:44:51Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-25T13:44:51Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-25T13:44:49Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://d9c057d42e2c7ac396ceefa7c86dd077f731607046ea69f4cf07c1529270b2d8\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-05-25T13:44:50Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.45.106\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.45.106\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.131.32\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.131.32\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-05-25T13:44:49Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/25/24 13:44:55.098
  May 25 13:44:55.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8527 replace -f -'
  May 25 13:44:55.233: INFO: stderr: ""
  May 25 13:44:55.233: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 05/25/24 13:44:55.233
  May 25 13:44:55.239: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-8527 delete pods e2e-test-httpd-pod'
  E0525 13:44:55.592941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:44:56.538: INFO: stderr: ""
  May 25 13:44:56.538: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May 25 13:44:56.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8527" for this suite. @ 05/25/24 13:44:56.542
• [6.621 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 05/25/24 13:44:56.548
  May 25 13:44:56.548: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename replication-controller @ 05/25/24 13:44:56.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:44:56.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:44:56.565
  STEP: Creating ReplicationController "e2e-rc-dmq6z" @ 05/25/24 13:44:56.568
  May 25 13:44:56.574: INFO: Get Replication Controller "e2e-rc-dmq6z" to confirm replicas
  E0525 13:44:56.593507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:44:57.574: INFO: Get Replication Controller "e2e-rc-dmq6z" to confirm replicas
  May 25 13:44:57.578: INFO: Found 1 replicas for "e2e-rc-dmq6z" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-dmq6z" @ 05/25/24 13:44:57.578
  STEP: Updating a scale subresource @ 05/25/24 13:44:57.581
  STEP: Verifying replicas where modified for replication controller "e2e-rc-dmq6z" @ 05/25/24 13:44:57.586
  May 25 13:44:57.586: INFO: Get Replication Controller "e2e-rc-dmq6z" to confirm replicas
  E0525 13:44:57.594400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:44:58.586: INFO: Get Replication Controller "e2e-rc-dmq6z" to confirm replicas
  May 25 13:44:58.591: INFO: Found 2 replicas for "e2e-rc-dmq6z" replication controller
  May 25 13:44:58.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0525 13:44:58.594453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-4297" for this suite. @ 05/25/24 13:44:58.595
• [2.055 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 05/25/24 13:44:58.603
  May 25 13:44:58.603: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename configmap @ 05/25/24 13:44:58.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:44:58.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:44:58.622
  STEP: Creating configMap with name configmap-test-volume-map-926e1279-3cb1-4357-94c3-7c7d880dfbdb @ 05/25/24 13:44:58.625
  STEP: Creating a pod to test consume configMaps @ 05/25/24 13:44:58.629
  E0525 13:44:59.594631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:00.595558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:45:00.732
  May 25 13:45:00.736: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-configmaps-acd36b5e-1007-43f1-a50b-c391f1c47990 container agnhost-container: <nil>
  STEP: delete the pod @ 05/25/24 13:45:00.742
  May 25 13:45:00.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1053" for this suite. @ 05/25/24 13:45:00.763
• [2.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 05/25/24 13:45:00.77
  May 25 13:45:00.770: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename resourcequota @ 05/25/24 13:45:00.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:45:00.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:45:00.786
  STEP: Counting existing ResourceQuota @ 05/25/24 13:45:00.789
  E0525 13:45:01.596336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:02.596423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:03.596533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:04.596596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:05.597304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/25/24 13:45:05.793
  STEP: Ensuring resource quota status is calculated @ 05/25/24 13:45:05.797
  E0525 13:45:06.597386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:07.597610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 05/25/24 13:45:07.803
  STEP: Ensuring resource quota status captures replication controller creation @ 05/25/24 13:45:07.816
  E0525 13:45:08.598222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:09.598427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 05/25/24 13:45:09.821
  STEP: Ensuring resource quota status released usage @ 05/25/24 13:45:09.827
  E0525 13:45:10.599466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:11.599555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:11.832: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7863" for this suite. @ 05/25/24 13:45:11.836
• [11.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 05/25/24 13:45:11.845
  May 25 13:45:11.845: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename daemonsets @ 05/25/24 13:45:11.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:45:11.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:45:11.861
  May 25 13:45:11.880: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/25/24 13:45:11.886
  May 25 13:45:11.890: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 13:45:11.890: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/25/24 13:45:11.89
  May 25 13:45:11.908: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 13:45:11.908: INFO: Node ip-172-31-45-106 is running 0 daemon pod, expected 1
  E0525 13:45:12.600451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:12.910: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 25 13:45:12.910: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/25/24 13:45:12.913
  May 25 13:45:12.930: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 25 13:45:12.930: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0525 13:45:13.601372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:13.931: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 13:45:13.931: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/25/24 13:45:13.931
  May 25 13:45:13.944: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 13:45:13.944: INFO: Node ip-172-31-45-106 is running 0 daemon pod, expected 1
  E0525 13:45:14.601779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:14.943: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 13:45:14.943: INFO: Node ip-172-31-45-106 is running 0 daemon pod, expected 1
  E0525 13:45:15.602419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:15.942: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 25 13:45:15.942: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/25/24 13:45:15.95
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9879, will wait for the garbage collector to delete the pods @ 05/25/24 13:45:15.95
  May 25 13:45:16.012: INFO: Deleting DaemonSet.extensions daemon-set took: 7.860726ms
  May 25 13:45:16.112: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.517583ms
  E0525 13:45:16.602898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:17.603440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:18.603721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:18.618: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 13:45:18.618: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 25 13:45:18.621: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"42983"},"items":null}

  May 25 13:45:18.624: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"42983"},"items":null}

  May 25 13:45:18.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9879" for this suite. @ 05/25/24 13:45:18.652
• [6.820 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 05/25/24 13:45:18.664
  May 25 13:45:18.664: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 13:45:18.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:45:18.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:45:18.682
  STEP: creating service multiprotocol-test in namespace services-5199 @ 05/25/24 13:45:18.685
  STEP: creating pod pod1 in namespace services-5199 @ 05/25/24 13:45:18.694
  STEP: Creating pod pod1 in namespace services-5199 @ 05/25/24 13:45:18.694
  E0525 13:45:19.603800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:20.604256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-5199 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 05/25/24 13:45:20.718
  May 25 13:45:20.729: INFO: successfully validated that service multiprotocol-test in namespace services-5199 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 05/25/24 13:45:20.729
  May 25 13:45:20.729: INFO: Creating new exec pod
  E0525 13:45:21.604446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:22.604667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:22.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-5199 exec execpodn7d4n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.53 80'
  May 25 13:45:22.845: INFO: stderr: "+ nc -v -t -w 2 10.152.183.53 80\nConnection to 10.152.183.53 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  May 25 13:45:22.845: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 13:45:22.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-5199 exec execpodn7d4n -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.53 80'
  E0525 13:45:23.605063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:24.605162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:25.605328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:26.605594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:26.937: INFO: stderr: "+ nc -v -u -w 2 10.152.183.53 80\n+ echo hostName\nConnection to 10.152.183.53 80 port [udp/*] succeeded!\n"
  May 25 13:45:26.937: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 05/25/24 13:45:26.937
  May 25 13:45:26.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-5199 exec execpodn7d4n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.53 80'
  May 25 13:45:27.048: INFO: stderr: "+ nc -v -t -w 2 10.152.183.53 80\nConnection to 10.152.183.53 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  May 25 13:45:27.048: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May 25 13:45:27.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-5199 exec execpodn7d4n -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.53 80'
  E0525 13:45:27.606472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:28.606558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:29.606835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:30.607366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:31.145: INFO: stderr: "+ nc -v -u -w 2 10.152.183.53 80\n+ echo hostName\nConnection to 10.152.183.53 80 port [udp/*] succeeded!\n"
  May 25 13:45:31.145: INFO: stdout: ""
  May 25 13:45:31.145: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-5199 exec execpodn7d4n -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.53 80'
  E0525 13:45:31.607436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:32.607535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:33.607888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:34.607994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:35.242: INFO: stderr: "+ nc -v -u -w 2 10.152.183.53 80\n+ echo hostName\nConnection to 10.152.183.53 80 port [udp/*] succeeded!\n"
  May 25 13:45:35.242: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 05/25/24 13:45:35.242
  May 25 13:45:35.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-5199 exec execpodn7d4n -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.53 80'
  E0525 13:45:35.608195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:36.608377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:37.608957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:38.609101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:39.386: INFO: stderr: "+ nc -v -u -w 2 10.152.183.53 80\n+ echo hostName\nConnection to 10.152.183.53 80 port [udp/*] succeeded!\n"
  May 25 13:45:39.386: INFO: stdout: "pod1"
  May 25 13:45:39.386: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-5199 exec execpodn7d4n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.53 80'
  E0525 13:45:39.609482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:40.610371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:41.481: INFO: rc: 1
  May 25 13:45:41.481: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-5199 exec execpodn7d4n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.53 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.53 80
  + echo hostName
  nc: connect to 10.152.183.53 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  May 25 13:45:41.481: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-5199 exec execpodn7d4n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.53 80'
  E0525 13:45:41.611107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:42.611207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:43.569: INFO: rc: 1
  May 25 13:45:43.569: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-5199 exec execpodn7d4n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.53 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.53 80
  + echo hostName
  nc: connect to 10.152.183.53 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  May 25 13:45:43.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-5199 exec execpodn7d4n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.53 80'
  E0525 13:45:43.611443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:44.612270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:45.612736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:45.665: INFO: rc: 1
  May 25 13:45:45.665: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-5199 exec execpodn7d4n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.53 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.53 80
  + echo hostName
  nc: connect to 10.152.183.53 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  May 25 13:45:45.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5199" for this suite. @ 05/25/24 13:45:45.67
• [27.014 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 05/25/24 13:45:45.679
  May 25 13:45:45.679: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename containers @ 05/25/24 13:45:45.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:45:45.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:45:45.699
  STEP: Creating a pod to test override all @ 05/25/24 13:45:45.701
  E0525 13:45:46.613417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:47.613512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:48.613600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:49.613721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:45:49.724
  May 25 13:45:49.728: INFO: Trying to get logs from node ip-172-31-15-138 pod client-containers-e9a80251-7ee7-4768-ade4-dd5d58a87e39 container agnhost-container: <nil>
  STEP: delete the pod @ 05/25/24 13:45:49.739
  May 25 13:45:49.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6499" for this suite. @ 05/25/24 13:45:49.757
• [4.085 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 05/25/24 13:45:49.764
  May 25 13:45:49.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename daemonsets @ 05/25/24 13:45:49.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:45:49.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:45:49.782
  STEP: Creating simple DaemonSet "daemon-set" @ 05/25/24 13:45:49.804
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/25/24 13:45:49.81
  May 25 13:45:49.814: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:45:49.815: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:45:49.818: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 13:45:49.818: INFO: Node ip-172-31-15-138 is running 0 daemon pod, expected 1
  E0525 13:45:50.614389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:50.815: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:45:50.815: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:45:50.819: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May 25 13:45:50.819: INFO: Node ip-172-31-15-138 is running 0 daemon pod, expected 1
  E0525 13:45:51.615266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:51.815: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:45:51.815: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:45:51.819: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 25 13:45:51.819: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/25/24 13:45:51.822
  May 25 13:45:51.839: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:45:51.839: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:45:51.842: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May 25 13:45:51.842: INFO: Node ip-172-31-45-106 is running 0 daemon pod, expected 1
  E0525 13:45:52.616290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:52.840: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:45:52.840: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:45:52.843: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May 25 13:45:52.843: INFO: Node ip-172-31-45-106 is running 0 daemon pod, expected 1
  E0525 13:45:53.616624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:53.841: INFO: DaemonSet pods can't tolerate node ip-172-31-44-4 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:45:53.841: INFO: DaemonSet pods can't tolerate node ip-172-31-5-132 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May 25 13:45:53.844: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May 25 13:45:53.844: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/25/24 13:45:53.848
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2363, will wait for the garbage collector to delete the pods @ 05/25/24 13:45:53.848
  May 25 13:45:53.912: INFO: Deleting DaemonSet.extensions daemon-set took: 10.775411ms
  May 25 13:45:54.013: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.076206ms
  E0525 13:45:54.616978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:55.617617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:56.618048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:45:56.718: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May 25 13:45:56.718: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May 25 13:45:56.721: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"43292"},"items":null}

  May 25 13:45:56.724: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"43292"},"items":null}

  May 25 13:45:56.737: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2363" for this suite. @ 05/25/24 13:45:56.74
• [6.983 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 05/25/24 13:45:56.747
  May 25 13:45:56.747: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename namespaces @ 05/25/24 13:45:56.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:45:56.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:45:56.765
  STEP: Read namespace status @ 05/25/24 13:45:56.768
  May 25 13:45:56.771: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/25/24 13:45:56.771
  May 25 13:45:56.777: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/25/24 13:45:56.777
  May 25 13:45:56.786: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  May 25 13:45:56.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8438" for this suite. @ 05/25/24 13:45:56.79
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 05/25/24 13:45:56.796
  May 25 13:45:56.796: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-probe @ 05/25/24 13:45:56.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:45:56.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:45:56.813
  STEP: Creating pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862 @ 05/25/24 13:45:56.816
  E0525 13:45:57.618296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:45:58.618408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/25/24 13:45:58.833
  May 25 13:45:58.836: INFO: Initial restart count of pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 is 0
  May 25 13:45:58.840: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:45:59.619297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:00.620344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:00.845: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:01.621143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:02.621349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:02.850: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:03.621596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:04.621698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:04.856: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:05.622297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:06.622397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:06.862: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:07.622909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:08.623124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:08.866: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:09.623507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:10.624329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:10.870: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:11.625316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:12.625439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:12.876: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:13.626012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:14.626104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:14.880: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:15.626368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:16.626472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:16.885: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:17.627368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:18.627448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:18.889: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:19.627553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:20.628325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:20.895: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:21.628413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:22.628502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:22.900: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:23.628598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:24.628770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:24.904: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:25.629340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:26.629537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:26.909: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:27.629705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:28.629887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:28.914: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:29.629992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:30.630458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:30.918: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:31.631288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:32.631381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:32.924: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:33.631468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:34.632262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:34.929: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:35.632668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:36.632865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:36.934: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:37.633338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:38.633648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:38.939: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:39.633970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:40.634449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:40.944: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:41.634617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:42.634741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:42.948: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:43.635200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:44.635366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:44.953: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:45.636351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:46.636446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:46.957: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:47.637289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:48.637509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:48.962: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:49.638390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:50.638619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:50.967: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:51.638654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:52.638742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:52.972: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:53.639224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:54.639342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:54.977: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:55.639701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:56.639580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:56.981: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:57.640273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:46:58.640570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:46:58.986: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:46:59.641250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:00.641303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:00.991: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:01.641410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:02.641621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:02.996: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:03.642174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:04.642371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:05.001: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:05.643331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:06.643423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:07.006: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:07.643871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:08.644342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:09.011: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:09.645427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:10.646396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:11.016: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:11.646515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:12.646713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:13.021: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:13.646970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:14.647225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:15.026: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:15.647211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:16.648261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:17.030: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:17.648380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:18.648483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:19.037: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:19.649097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:20.649365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:21.042: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:21.649478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:22.649668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:23.047: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:23.649925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:24.650197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:25.051: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:25.651231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:26.651327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:27.055: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:27.652261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:28.652991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:29.061: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:29.653100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:30.653471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:31.066: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:31.653555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:32.653756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:33.072: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:33.653855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:34.654064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:35.077: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:35.654993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:36.655196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:37.082: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:37.655853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:38.656831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:39.086: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:39.657436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:40.658414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:41.091: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:41.658515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:42.658735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:43.096: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:43.658976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:44.659191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:45.102: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:45.660191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:46.660278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:47.107: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:47.660766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:48.661654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:49.112: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:49.662293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:50.662338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:51.118: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:51.663129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:52.663196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:53.123: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:53.663231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:54.663332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:55.128: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:55.664249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:56.664932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:57.133: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:57.665009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:47:58.665184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:47:59.137: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:47:59.666037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:00.666355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:01.142: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:01.666938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:02.667219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:03.147: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:03.668269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:04.668370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:05.152: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:05.669347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:06.669435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:07.157: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:07.669614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:08.669804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:09.161: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:09.670760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:10.671404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:11.166: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:11.672265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:12.672359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:13.172: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:13.672708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:14.672893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:15.177: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:15.673302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:16.673469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:17.182: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:17.674421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:18.674514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:19.187: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:19.674609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:20.675543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:21.192: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:21.676264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:22.676364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:23.197: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:23.677222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:24.677309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:25.202: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:25.678349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:26.678522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:27.207: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:27.679196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:28.679237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:29.211: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:29.680182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:30.680436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:31.216: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:31.680527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:32.681508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:33.221: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:33.682319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:34.682516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:35.226: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:35.683412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:36.683511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:37.231: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:37.684282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:38.684462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:39.236: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:39.684628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:40.685326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:41.241: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:41.686101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:42.686205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:43.246: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:43.687192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:44.688240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:45.251: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:45.688735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:46.688832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:47.255: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:47.689109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:48.689288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:49.260: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:49.689586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:50.690426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:51.265: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:51.691200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:52.691223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:53.270: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:53.691532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:54.692279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:55.275: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:55.692513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:56.692726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:57.280: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:57.693060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:48:58.693312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:48:59.284: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:48:59.693430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:00.694377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:01.289: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:01.694814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:02.695342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:03.295: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:03.695442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:04.696463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:05.299: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:05.697306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:06.697414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:07.304: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:07.698049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:08.698148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:09.309: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:09.698848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:10.699428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:11.314: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:11.700257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:12.700378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:13.319: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:13.700572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:14.700657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:15.325: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:15.701612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:16.701705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:17.329: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:17.702179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:18.702360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:19.334: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:19.702975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:20.703280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:21.338: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:21.704164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:22.704603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:23.344: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:23.704693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:24.704791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:25.350: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:25.704835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:26.705081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:27.355: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:27.705664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:28.705758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:29.359: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:29.706571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:30.707447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:31.364: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:31.708280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:32.708499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:33.369: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:33.709146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:34.709237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:35.373: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:35.710278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:36.710346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:37.378: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:37.710397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:38.711445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:39.383: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:39.712270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:40.712360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:41.388: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:41.712930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:42.713134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:43.392: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:43.713227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:44.713338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:45.397: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:45.714003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:46.714189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:47.402: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:47.715184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:48.715222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:49.407: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:49.715866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:50.716552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:51.413: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:51.717497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:52.717528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:53.417: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:53.717613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:54.717795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:55.425: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:55.718771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:56.719036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:57.430: INFO: Get pod busybox-eb2b1c91-deaa-4b90-8e33-9e5cdc1b7529 in namespace container-probe-8862
  E0525 13:49:57.719588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:49:58.720564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/25/24 13:49:59.43
  May 25 13:49:59.446: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8862" for this suite. @ 05/25/24 13:49:59.451
• [242.662 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 05/25/24 13:49:59.459
  May 25 13:49:59.459: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename cronjob @ 05/25/24 13:49:59.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:49:59.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:49:59.487
  STEP: Creating a cronjob @ 05/25/24 13:49:59.49
  STEP: creating @ 05/25/24 13:49:59.49
  STEP: getting @ 05/25/24 13:49:59.496
  STEP: listing @ 05/25/24 13:49:59.5
  STEP: watching @ 05/25/24 13:49:59.503
  May 25 13:49:59.503: INFO: starting watch
  STEP: cluster-wide listing @ 05/25/24 13:49:59.504
  STEP: cluster-wide watching @ 05/25/24 13:49:59.508
  May 25 13:49:59.508: INFO: starting watch
  STEP: patching @ 05/25/24 13:49:59.509
  STEP: updating @ 05/25/24 13:49:59.516
  May 25 13:49:59.524: INFO: waiting for watch events with expected annotations
  May 25 13:49:59.524: INFO: saw patched and updated annotations
  STEP: patching /status @ 05/25/24 13:49:59.524
  STEP: updating /status @ 05/25/24 13:49:59.531
  STEP: get /status @ 05/25/24 13:49:59.538
  STEP: deleting @ 05/25/24 13:49:59.541
  STEP: deleting a collection @ 05/25/24 13:49:59.553
  May 25 13:49:59.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4393" for this suite. @ 05/25/24 13:49:59.567
• [0.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 05/25/24 13:49:59.574
  May 25 13:49:59.574: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename limitrange @ 05/25/24 13:49:59.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:49:59.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:49:59.591
  STEP: Creating a LimitRange @ 05/25/24 13:49:59.594
  STEP: Setting up watch @ 05/25/24 13:49:59.594
  STEP: Submitting a LimitRange @ 05/25/24 13:49:59.698
  STEP: Verifying LimitRange creation was observed @ 05/25/24 13:49:59.709
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/25/24 13:49:59.709
  May 25 13:49:59.712: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  May 25 13:49:59.712: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/25/24 13:49:59.712
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/25/24 13:49:59.719
  E0525 13:49:59.721117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:49:59.725: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  May 25 13:49:59.725: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/25/24 13:49:59.725
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/25/24 13:49:59.731
  May 25 13:49:59.737: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  May 25 13:49:59.737: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/25/24 13:49:59.737
  STEP: Failing to create a Pod with more than max resources @ 05/25/24 13:49:59.739
  STEP: Updating a LimitRange @ 05/25/24 13:49:59.741
  STEP: Verifying LimitRange updating is effective @ 05/25/24 13:49:59.745
  E0525 13:50:00.721347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:01.721435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 05/25/24 13:50:01.751
  STEP: Failing to create a Pod with more than max resources @ 05/25/24 13:50:01.756
  STEP: Deleting a LimitRange @ 05/25/24 13:50:01.759
  STEP: Verifying the LimitRange was deleted @ 05/25/24 13:50:01.768
  E0525 13:50:02.721970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:03.722182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:04.722258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:05.722377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:06.722481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:50:06.774: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/25/24 13:50:06.774
  May 25 13:50:06.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4894" for this suite. @ 05/25/24 13:50:06.789
• [7.222 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 05/25/24 13:50:06.796
  May 25 13:50:06.796: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename limitrange @ 05/25/24 13:50:06.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:50:06.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:50:06.813
  STEP: Creating LimitRange "e2e-limitrange-7sjck" in namespace "limitrange-8551" @ 05/25/24 13:50:06.815
  STEP: Creating another limitRange in another namespace @ 05/25/24 13:50:06.822
  May 25 13:50:06.833: INFO: Namespace "e2e-limitrange-7sjck-4170" created
  May 25 13:50:06.833: INFO: Creating LimitRange "e2e-limitrange-7sjck" in namespace "e2e-limitrange-7sjck-4170"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-7sjck" @ 05/25/24 13:50:06.838
  May 25 13:50:06.841: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-7sjck" in "limitrange-8551" namespace @ 05/25/24 13:50:06.841
  May 25 13:50:06.847: INFO: LimitRange "e2e-limitrange-7sjck" has been patched
  STEP: Delete LimitRange "e2e-limitrange-7sjck" by Collection with labelSelector: "e2e-limitrange-7sjck=patched" @ 05/25/24 13:50:06.847
  STEP: Confirm that the limitRange "e2e-limitrange-7sjck" has been deleted @ 05/25/24 13:50:06.856
  May 25 13:50:06.856: INFO: Requesting list of LimitRange to confirm quantity
  May 25 13:50:06.861: INFO: Found 0 LimitRange with label "e2e-limitrange-7sjck=patched"
  May 25 13:50:06.861: INFO: LimitRange "e2e-limitrange-7sjck" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-7sjck" @ 05/25/24 13:50:06.861
  May 25 13:50:06.864: INFO: Found 1 limitRange
  May 25 13:50:06.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8551" for this suite. @ 05/25/24 13:50:06.869
  STEP: Destroying namespace "e2e-limitrange-7sjck-4170" for this suite. @ 05/25/24 13:50:06.878
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 05/25/24 13:50:06.886
  May 25 13:50:06.886: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename replicaset @ 05/25/24 13:50:06.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:50:06.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:50:06.902
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/25/24 13:50:06.905
  E0525 13:50:07.722608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:08.722682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 05/25/24 13:50:08.929
  STEP: Then the orphan pod is adopted @ 05/25/24 13:50:08.935
  E0525 13:50:09.723226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 05/25/24 13:50:09.943
  May 25 13:50:09.947: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/25/24 13:50:09.958
  E0525 13:50:10.723527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:50:10.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8433" for this suite. @ 05/25/24 13:50:10.97
• [4.091 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 05/25/24 13:50:10.977
  May 25 13:50:10.977: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename statefulset @ 05/25/24 13:50:10.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:50:10.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:50:10.996
  STEP: Creating service test in namespace statefulset-439 @ 05/25/24 13:50:10.999
  STEP: Looking for a node to schedule stateful set and pod @ 05/25/24 13:50:11.003
  STEP: Creating pod with conflicting port in namespace statefulset-439 @ 05/25/24 13:50:11.007
  STEP: Waiting until pod test-pod will start running in namespace statefulset-439 @ 05/25/24 13:50:11.019
  E0525 13:50:11.723990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:12.724159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-439 @ 05/25/24 13:50:13.028
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-439 @ 05/25/24 13:50:13.033
  May 25 13:50:13.043: INFO: Observed stateful pod in namespace: statefulset-439, name: ss-0, uid: f3e7a8f3-84e7-40bd-b6be-d0136a0871ed, status phase: Pending. Waiting for statefulset controller to delete.
  May 25 13:50:13.066: INFO: Observed stateful pod in namespace: statefulset-439, name: ss-0, uid: f3e7a8f3-84e7-40bd-b6be-d0136a0871ed, status phase: Failed. Waiting for statefulset controller to delete.
  May 25 13:50:13.073: INFO: Observed stateful pod in namespace: statefulset-439, name: ss-0, uid: f3e7a8f3-84e7-40bd-b6be-d0136a0871ed, status phase: Failed. Waiting for statefulset controller to delete.
  May 25 13:50:13.077: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-439
  STEP: Removing pod with conflicting port in namespace statefulset-439 @ 05/25/24 13:50:13.077
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-439 and will be in running state @ 05/25/24 13:50:13.107
  E0525 13:50:13.724593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:14.724788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:50:15.130: INFO: Deleting all statefulset in ns statefulset-439
  May 25 13:50:15.134: INFO: Scaling statefulset ss to 0
  E0525 13:50:15.724840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:16.724939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:17.725132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:18.725678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:19.726070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:20.726508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:21.726798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:22.726919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:23.727164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:24.727311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:50:25.147: INFO: Waiting for statefulset status.replicas updated to 0
  May 25 13:50:25.151: INFO: Deleting statefulset ss
  May 25 13:50:25.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-439" for this suite. @ 05/25/24 13:50:25.169
• [14.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 05/25/24 13:50:25.177
  May 25 13:50:25.177: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename discovery @ 05/25/24 13:50:25.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:50:25.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:50:25.192
  STEP: Setting up server cert @ 05/25/24 13:50:25.197
  May 25 13:50:25.423: INFO: Checking APIGroup: apiregistration.k8s.io
  May 25 13:50:25.425: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  May 25 13:50:25.425: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  May 25 13:50:25.425: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  May 25 13:50:25.425: INFO: Checking APIGroup: apps
  May 25 13:50:25.426: INFO: PreferredVersion.GroupVersion: apps/v1
  May 25 13:50:25.426: INFO: Versions found [{apps/v1 v1}]
  May 25 13:50:25.426: INFO: apps/v1 matches apps/v1
  May 25 13:50:25.426: INFO: Checking APIGroup: events.k8s.io
  May 25 13:50:25.427: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  May 25 13:50:25.427: INFO: Versions found [{events.k8s.io/v1 v1}]
  May 25 13:50:25.427: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  May 25 13:50:25.427: INFO: Checking APIGroup: authentication.k8s.io
  May 25 13:50:25.428: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  May 25 13:50:25.428: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  May 25 13:50:25.428: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  May 25 13:50:25.428: INFO: Checking APIGroup: authorization.k8s.io
  May 25 13:50:25.429: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  May 25 13:50:25.429: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  May 25 13:50:25.429: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  May 25 13:50:25.429: INFO: Checking APIGroup: autoscaling
  May 25 13:50:25.430: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  May 25 13:50:25.430: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  May 25 13:50:25.430: INFO: autoscaling/v2 matches autoscaling/v2
  May 25 13:50:25.430: INFO: Checking APIGroup: batch
  May 25 13:50:25.431: INFO: PreferredVersion.GroupVersion: batch/v1
  May 25 13:50:25.431: INFO: Versions found [{batch/v1 v1}]
  May 25 13:50:25.431: INFO: batch/v1 matches batch/v1
  May 25 13:50:25.431: INFO: Checking APIGroup: certificates.k8s.io
  May 25 13:50:25.432: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  May 25 13:50:25.432: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  May 25 13:50:25.432: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  May 25 13:50:25.432: INFO: Checking APIGroup: networking.k8s.io
  May 25 13:50:25.434: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  May 25 13:50:25.434: INFO: Versions found [{networking.k8s.io/v1 v1}]
  May 25 13:50:25.434: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  May 25 13:50:25.434: INFO: Checking APIGroup: policy
  May 25 13:50:25.435: INFO: PreferredVersion.GroupVersion: policy/v1
  May 25 13:50:25.435: INFO: Versions found [{policy/v1 v1}]
  May 25 13:50:25.435: INFO: policy/v1 matches policy/v1
  May 25 13:50:25.435: INFO: Checking APIGroup: rbac.authorization.k8s.io
  May 25 13:50:25.436: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  May 25 13:50:25.436: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  May 25 13:50:25.436: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  May 25 13:50:25.436: INFO: Checking APIGroup: storage.k8s.io
  May 25 13:50:25.437: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  May 25 13:50:25.437: INFO: Versions found [{storage.k8s.io/v1 v1}]
  May 25 13:50:25.437: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  May 25 13:50:25.437: INFO: Checking APIGroup: admissionregistration.k8s.io
  May 25 13:50:25.438: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  May 25 13:50:25.438: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  May 25 13:50:25.438: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  May 25 13:50:25.438: INFO: Checking APIGroup: apiextensions.k8s.io
  May 25 13:50:25.439: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  May 25 13:50:25.439: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  May 25 13:50:25.439: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  May 25 13:50:25.439: INFO: Checking APIGroup: scheduling.k8s.io
  May 25 13:50:25.440: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  May 25 13:50:25.440: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  May 25 13:50:25.440: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  May 25 13:50:25.440: INFO: Checking APIGroup: coordination.k8s.io
  May 25 13:50:25.441: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  May 25 13:50:25.441: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  May 25 13:50:25.441: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  May 25 13:50:25.441: INFO: Checking APIGroup: node.k8s.io
  May 25 13:50:25.442: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  May 25 13:50:25.442: INFO: Versions found [{node.k8s.io/v1 v1}]
  May 25 13:50:25.442: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  May 25 13:50:25.442: INFO: Checking APIGroup: discovery.k8s.io
  May 25 13:50:25.443: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  May 25 13:50:25.443: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  May 25 13:50:25.443: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  May 25 13:50:25.443: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  May 25 13:50:25.444: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  May 25 13:50:25.444: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  May 25 13:50:25.444: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  May 25 13:50:25.444: INFO: Checking APIGroup: metrics.k8s.io
  May 25 13:50:25.445: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  May 25 13:50:25.445: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  May 25 13:50:25.445: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  May 25 13:50:25.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8847" for this suite. @ 05/25/24 13:50:25.449
• [0.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 05/25/24 13:50:25.458
  May 25 13:50:25.458: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename downward-api @ 05/25/24 13:50:25.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:50:25.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:50:25.476
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 13:50:25.478
  E0525 13:50:25.727722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:26.728781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:27.728895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:28.729006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:50:29.502
  May 25 13:50:29.506: INFO: Trying to get logs from node ip-172-31-45-106 pod downwardapi-volume-74fe3092-c684-4652-acf6-871683579151 container client-container: <nil>
  STEP: delete the pod @ 05/25/24 13:50:29.523
  May 25 13:50:29.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6439" for this suite. @ 05/25/24 13:50:29.546
• [4.096 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 05/25/24 13:50:29.554
  May 25 13:50:29.554: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 13:50:29.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:50:29.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:50:29.573
  STEP: Setting up server cert @ 05/25/24 13:50:29.597
  E0525 13:50:29.729282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 13:50:30.046
  STEP: Deploying the webhook pod @ 05/25/24 13:50:30.054
  STEP: Wait for the deployment to be ready @ 05/25/24 13:50:30.065
  May 25 13:50:30.072: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0525 13:50:30.730235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:31.730369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/25/24 13:50:32.083
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 13:50:32.095
  E0525 13:50:32.731212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:50:33.095: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 25 13:50:33.104: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-213-crds.webhook.example.com via the AdmissionRegistration API @ 05/25/24 13:50:33.616
  E0525 13:50:33.731505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:50:33.739: INFO: Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/25/24 13:50:33.845
  E0525 13:50:34.732274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:35.732425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:50:36.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3478" for this suite. @ 05/25/24 13:50:36.444
  STEP: Destroying namespace "webhook-markers-7412" for this suite. @ 05/25/24 13:50:36.452
• [6.904 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 05/25/24 13:50:36.459
  May 25 13:50:36.459: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 13:50:36.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:50:36.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:50:36.479
  STEP: Creating projection with secret that has name projected-secret-test-67197ef8-99d1-4439-8a4c-e5f79d677475 @ 05/25/24 13:50:36.484
  STEP: Creating a pod to test consume secrets @ 05/25/24 13:50:36.489
  E0525 13:50:36.733385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:37.733749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:38.734230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:39.734302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:50:40.511
  May 25 13:50:40.515: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-projected-secrets-d5de5ab3-87d3-4f15-b05c-7503cdc11f20 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/25/24 13:50:40.522
  May 25 13:50:40.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4375" for this suite. @ 05/25/24 13:50:40.544
• [4.091 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 05/25/24 13:50:40.55
  May 25 13:50:40.550: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename statefulset @ 05/25/24 13:50:40.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:50:40.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:50:40.568
  STEP: Creating service test in namespace statefulset-4067 @ 05/25/24 13:50:40.571
  May 25 13:50:40.590: INFO: Found 0 stateful pods, waiting for 1
  E0525 13:50:40.734695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:41.735774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:42.735774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:43.736359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:44.736391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:45.736582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:46.736812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:47.737122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:48.737299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:49.737414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:50:50.590: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/25/24 13:50:50.597
  W0525 13:50:50.603531      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  May 25 13:50:50.616: INFO: Found 1 stateful pods, waiting for 2
  E0525 13:50:50.737735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:51.738518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:52.738706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:53.738775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:54.738902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:55.739118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:56.739271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:57.740269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:58.740346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:50:59.740437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:51:00.615: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May 25 13:51:00.615: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/25/24 13:51:00.621
  STEP: Delete all of the StatefulSets @ 05/25/24 13:51:00.625
  STEP: Verify that StatefulSets have been deleted @ 05/25/24 13:51:00.634
  May 25 13:51:00.637: INFO: Deleting all statefulset in ns statefulset-4067
  May 25 13:51:00.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4067" for this suite. @ 05/25/24 13:51:00.66
• [20.120 seconds]
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 05/25/24 13:51:00.67
  May 25 13:51:00.670: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename events @ 05/25/24 13:51:00.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:51:00.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:51:00.691
  STEP: creating a test event @ 05/25/24 13:51:00.694
  STEP: listing events in all namespaces @ 05/25/24 13:51:00.701
  STEP: listing events in test namespace @ 05/25/24 13:51:00.704
  STEP: listing events with field selection filtering on source @ 05/25/24 13:51:00.707
  STEP: listing events with field selection filtering on reportingController @ 05/25/24 13:51:00.71
  STEP: getting the test event @ 05/25/24 13:51:00.713
  STEP: patching the test event @ 05/25/24 13:51:00.716
  STEP: getting the test event @ 05/25/24 13:51:00.723
  STEP: updating the test event @ 05/25/24 13:51:00.726
  STEP: getting the test event @ 05/25/24 13:51:00.734
  STEP: deleting the test event @ 05/25/24 13:51:00.737
  E0525 13:51:00.741062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing events in all namespaces @ 05/25/24 13:51:00.746
  STEP: listing events in test namespace @ 05/25/24 13:51:00.751
  May 25 13:51:00.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8760" for this suite. @ 05/25/24 13:51:00.758
• [0.096 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 05/25/24 13:51:00.766
  May 25 13:51:00.766: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pod-network-test @ 05/25/24 13:51:00.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:51:00.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:51:00.784
  STEP: Performing setup for networking test in namespace pod-network-test-9445 @ 05/25/24 13:51:00.789
  STEP: creating a selector @ 05/25/24 13:51:00.789
  STEP: Creating the service pods in kubernetes @ 05/25/24 13:51:00.789
  May 25 13:51:00.789: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0525 13:51:01.741199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:02.741295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:03.741370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:04.741460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:05.742441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:06.742572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:07.742738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:08.742930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:09.743262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:10.743316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:11.743417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:12.743495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/25/24 13:51:12.869
  E0525 13:51:13.743594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:14.743687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:51:14.902: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  May 25 13:51:14.902: INFO: Going to poll 192.168.138.165 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  May 25 13:51:14.905: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.138.165 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9445 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:51:14.905: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:51:14.905: INFO: ExecWithOptions: Clientset creation
  May 25 13:51:14.905: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9445/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.138.165+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0525 13:51:15.744494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:51:15.961: INFO: Found all 1 expected endpoints: [netserver-0]
  May 25 13:51:15.961: INFO: Going to poll 192.168.14.10 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  May 25 13:51:15.965: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.14.10 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9445 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:51:15.965: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:51:15.966: INFO: ExecWithOptions: Clientset creation
  May 25 13:51:15.966: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9445/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.14.10+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0525 13:51:16.744589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:51:17.014: INFO: Found all 1 expected endpoints: [netserver-1]
  May 25 13:51:17.014: INFO: Going to poll 192.168.131.39 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  May 25 13:51:17.018: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.131.39 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9445 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 13:51:17.018: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 13:51:17.019: INFO: ExecWithOptions: Clientset creation
  May 25 13:51:17.019: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9445/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.131.39+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0525 13:51:17.744659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:51:18.068: INFO: Found all 1 expected endpoints: [netserver-2]
  May 25 13:51:18.068: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9445" for this suite. @ 05/25/24 13:51:18.073
• [17.314 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 05/25/24 13:51:18.081
  May 25 13:51:18.081: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir @ 05/25/24 13:51:18.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:51:18.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:51:18.103
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/25/24 13:51:18.106
  E0525 13:51:18.744766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:19.744861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:20.745407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:21.745526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:51:22.129
  May 25 13:51:22.133: INFO: Trying to get logs from node ip-172-31-15-138 pod pod-e914a435-3057-4572-92b8-d995c2adf1ea container test-container: <nil>
  STEP: delete the pod @ 05/25/24 13:51:22.149
  May 25 13:51:22.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5253" for this suite. @ 05/25/24 13:51:22.171
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 05/25/24 13:51:22.178
  May 25 13:51:22.178: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 13:51:22.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:51:22.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:51:22.197
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-3544 @ 05/25/24 13:51:22.199
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/25/24 13:51:22.214
  STEP: creating service externalsvc in namespace services-3544 @ 05/25/24 13:51:22.214
  STEP: creating replication controller externalsvc in namespace services-3544 @ 05/25/24 13:51:22.233
  I0525 13:51:22.239518      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-3544, replica count: 2
  E0525 13:51:22.745726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:23.745789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:24.745969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0525 13:51:25.290803      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 05/25/24 13:51:25.296
  May 25 13:51:25.315: INFO: Creating new exec pod
  E0525 13:51:25.746711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:26.746891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:51:27.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=services-3544 exec execpodmbh6f -- /bin/sh -x -c nslookup nodeport-service.services-3544.svc.cluster.local'
  May 25 13:51:27.438: INFO: stderr: "+ nslookup nodeport-service.services-3544.svc.cluster.local\n"
  May 25 13:51:27.438: INFO: stdout: "Server:\t\t10.152.183.207\nAddress:\t10.152.183.207#53\n\nnodeport-service.services-3544.svc.cluster.local\tcanonical name = externalsvc.services-3544.svc.cluster.local.\nName:\texternalsvc.services-3544.svc.cluster.local\nAddress: 10.152.183.108\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-3544, will wait for the garbage collector to delete the pods @ 05/25/24 13:51:27.438
  May 25 13:51:27.501: INFO: Deleting ReplicationController externalsvc took: 8.10824ms
  May 25 13:51:27.601: INFO: Terminating ReplicationController externalsvc pods took: 100.131604ms
  E0525 13:51:27.747973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:28.748347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:29.748959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:51:30.622: INFO: Cleaning up the NodePort to ExternalName test service
  May 25 13:51:30.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3544" for this suite. @ 05/25/24 13:51:30.637
• [8.465 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 05/25/24 13:51:30.644
  May 25 13:51:30.644: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/25/24 13:51:30.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:51:30.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:51:30.661
  STEP: set up a multi version CRD @ 05/25/24 13:51:30.664
  May 25 13:51:30.664: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  E0525 13:51:30.750038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:31.750382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:32.751228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 05/25/24 13:51:33.681
  STEP: check the new version name is served @ 05/25/24 13:51:33.694
  E0525 13:51:33.752181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 05/25/24 13:51:34.55
  E0525 13:51:34.752722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 05/25/24 13:51:35.163
  E0525 13:51:35.752842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:36.753480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:51:37.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4976" for this suite. @ 05/25/24 13:51:37.564
• [6.926 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 05/25/24 13:51:37.571
  May 25 13:51:37.571: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl @ 05/25/24 13:51:37.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:51:37.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:51:37.59
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/25/24 13:51:37.592
  May 25 13:51:37.592: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-3383 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  May 25 13:51:37.637: INFO: stderr: ""
  May 25 13:51:37.637: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/25/24 13:51:37.637
  May 25 13:51:37.637: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-3383 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  May 25 13:51:37.683: INFO: stderr: ""
  May 25 13:51:37.683: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/25/24 13:51:37.683
  May 25 13:51:37.686: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-3383 delete pods e2e-test-httpd-pod'
  E0525 13:51:37.753732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:38.753935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:51:39.277: INFO: stderr: ""
  May 25 13:51:39.277: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May 25 13:51:39.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3383" for this suite. @ 05/25/24 13:51:39.28
• [1.714 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 05/25/24 13:51:39.285
  May 25 13:51:39.285: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename configmap @ 05/25/24 13:51:39.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:51:39.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:51:39.302
  STEP: Creating configMap with name configmap-test-volume-8aa30c9d-4514-4f1a-ac63-a34143478f5f @ 05/25/24 13:51:39.303
  STEP: Creating a pod to test consume configMaps @ 05/25/24 13:51:39.309
  E0525 13:51:39.754695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:40.755510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:41.755611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:42.755697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:51:43.325
  May 25 13:51:43.328: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-configmaps-8250ac4b-a35c-44c7-9b77-0a5f867736a2 container agnhost-container: <nil>
  STEP: delete the pod @ 05/25/24 13:51:43.339
  May 25 13:51:43.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5919" for this suite. @ 05/25/24 13:51:43.358
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 05/25/24 13:51:43.365
  May 25 13:51:43.365: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename svcaccounts @ 05/25/24 13:51:43.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:51:43.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:51:43.384
  STEP: Creating a pod to test service account token:  @ 05/25/24 13:51:43.385
  E0525 13:51:43.755727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:44.755806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:45.756641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:46.757412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:51:47.407
  May 25 13:51:47.409: INFO: Trying to get logs from node ip-172-31-45-106 pod test-pod-89bac5c0-636c-462f-8ccb-1d2095282096 container agnhost-container: <nil>
  STEP: delete the pod @ 05/25/24 13:51:47.415
  May 25 13:51:47.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9787" for this suite. @ 05/25/24 13:51:47.435
• [4.076 seconds]
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 05/25/24 13:51:47.441
  May 25 13:51:47.441: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-probe @ 05/25/24 13:51:47.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:51:47.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:51:47.459
  STEP: Creating pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499 @ 05/25/24 13:51:47.46
  E0525 13:51:47.758484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:48.758704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/25/24 13:51:49.475
  May 25 13:51:49.478: INFO: Initial restart count of pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e is 0
  May 25 13:51:49.480: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:51:49.759552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:50.760529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:51:51.485: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:51:51.760637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:52.761539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:51:53.489: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:51:53.762299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:54.762368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:51:55.495: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:51:55.762701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:56.762804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:51:57.499: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:51:57.763492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:51:58.763609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:51:59.503: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:51:59.764210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:00.764538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:01.509: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:01.764977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:02.765403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:03.514: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:03.765985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:04.766042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:05.517: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:05.766725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:06.766967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:07.523: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:07.767454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:08.767565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:09.527: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:09.767674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:10.768518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:11.532: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:11.769142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:12.769316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:13.537: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:13.769379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:14.769576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:15.540: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:15.769697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:16.769887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:17.545: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:17.769993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:18.770966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:19.549: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:19.771572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:20.772537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:21.552: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:21.772822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:22.773017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:23.558: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:23.773778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:24.773953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:25.562: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:25.774427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:26.774641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:27.566: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:27.775523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:28.776360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:29.570: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:29.776845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:30.777569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:31.574: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:31.777991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:32.778152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:33.580: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:33.778294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:34.778499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:35.584: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:35.779503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:36.779592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:37.588: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:37.780601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:38.780692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:39.594: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:39.781687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:40.782602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:41.598: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:41.782644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:42.782848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:43.603: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:43.783577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:44.783732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:45.607: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:45.784322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:46.784418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:47.613: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:47.785454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:48.785589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:49.616: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:49.786109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:50.786825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:51.622: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:51.787293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:52.787390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:53.626: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:53.787949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:54.788064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:55.630: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:55.788881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:56.789110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:57.636: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:57.789736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:52:58.789835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:52:59.639: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:52:59.790001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:00.790469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:53:01.644: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  E0525 13:53:01.790923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:02.790987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:53:03.648: INFO: Get pod test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e in namespace container-probe-4499
  May 25 13:53:03.648: INFO: Restart count of pod container-probe-4499/test-grpc-0a076900-04e9-467c-b447-8c597fda7a4e is now 1 (1m14.169696572s elapsed)
  STEP: deleting the pod @ 05/25/24 13:53:03.648
  May 25 13:53:03.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4499" for this suite. @ 05/25/24 13:53:03.669
• [76.238 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 05/25/24 13:53:03.679
  May 25 13:53:03.679: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename endpointslice @ 05/25/24 13:53:03.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:53:03.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:53:03.699
  May 25 13:53:03.708: INFO: Endpoints addresses: [172.31.44.4 172.31.5.132] , ports: [6443]
  May 25 13:53:03.708: INFO: EndpointSlices addresses: [172.31.44.4 172.31.5.132] , ports: [6443]
  May 25 13:53:03.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9889" for this suite. @ 05/25/24 13:53:03.71
• [0.036 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 05/25/24 13:53:03.716
  May 25 13:53:03.716: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl @ 05/25/24 13:53:03.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:53:03.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:53:03.734
  STEP: Starting the proxy @ 05/25/24 13:53:03.735
  May 25 13:53:03.736: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-6948 proxy --unix-socket=/tmp/kubectl-proxy-unix1612715197/test'
  STEP: retrieving proxy /api/ output @ 05/25/24 13:53:03.767
  May 25 13:53:03.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6948" for this suite. @ 05/25/24 13:53:03.773
• [0.064 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 05/25/24 13:53:03.78
  May 25 13:53:03.780: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename replication-controller @ 05/25/24 13:53:03.781
  E0525 13:53:03.791369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:53:03.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:53:03.797
  STEP: Given a ReplicationController is created @ 05/25/24 13:53:03.799
  STEP: When the matched label of one of its pods change @ 05/25/24 13:53:03.802
  May 25 13:53:03.805: INFO: Pod name pod-release: Found 0 pods out of 1
  E0525 13:53:04.791515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:05.792387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:06.792454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:07.792710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:08.792809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:53:08.810: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/25/24 13:53:08.82
  E0525 13:53:09.793490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:53:09.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3335" for this suite. @ 05/25/24 13:53:09.831
• [6.057 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 05/25/24 13:53:09.837
  May 25 13:53:09.837: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename emptydir @ 05/25/24 13:53:09.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:53:09.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:53:09.875
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/25/24 13:53:09.877
  E0525 13:53:10.793557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:11.793923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:53:11.897
  May 25 13:53:11.899: INFO: Trying to get logs from node ip-172-31-15-138 pod pod-21c7a828-d9b1-42e2-973b-9314f5fbae14 container test-container: <nil>
  STEP: delete the pod @ 05/25/24 13:53:11.907
  May 25 13:53:11.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4803" for this suite. @ 05/25/24 13:53:11.929
• [2.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 05/25/24 13:53:11.936
  May 25 13:53:11.936: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename job @ 05/25/24 13:53:11.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:53:11.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:53:11.953
  STEP: Creating Indexed job @ 05/25/24 13:53:11.955
  STEP: Ensuring job reaches completions @ 05/25/24 13:53:11.959
  E0525 13:53:12.794054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:13.794587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:14.795159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:15.795508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:16.799715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:17.799754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 05/25/24 13:53:17.962
  May 25 13:53:17.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1687" for this suite. @ 05/25/24 13:53:17.969
• [6.041 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 05/25/24 13:53:17.977
  May 25 13:53:17.977: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 13:53:17.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:53:17.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:53:17.996
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 13:53:17.997
  E0525 13:53:18.800020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:19.800231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:20.800690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:21.801522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:53:22.016
  May 25 13:53:22.019: INFO: Trying to get logs from node ip-172-31-45-106 pod downwardapi-volume-ec6ec07f-983a-4dfc-8424-0e8430af966b container client-container: <nil>
  STEP: delete the pod @ 05/25/24 13:53:22.031
  May 25 13:53:22.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9824" for this suite. @ 05/25/24 13:53:22.05
• [4.077 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 05/25/24 13:53:22.054
  May 25 13:53:22.054: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename watch @ 05/25/24 13:53:22.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:53:22.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:53:22.071
  STEP: creating a watch on configmaps with a certain label @ 05/25/24 13:53:22.073
  STEP: creating a new configmap @ 05/25/24 13:53:22.074
  STEP: modifying the configmap once @ 05/25/24 13:53:22.078
  STEP: changing the label value of the configmap @ 05/25/24 13:53:22.085
  STEP: Expecting to observe a delete notification for the watched object @ 05/25/24 13:53:22.09
  May 25 13:53:22.090: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1609  e8f16705-8fec-49dc-9563-d81b63b2a7ec 45497 0 2024-05-25 13:53:22 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-25 13:53:22 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May 25 13:53:22.091: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1609  e8f16705-8fec-49dc-9563-d81b63b2a7ec 45498 0 2024-05-25 13:53:22 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-25 13:53:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 25 13:53:22.091: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1609  e8f16705-8fec-49dc-9563-d81b63b2a7ec 45499 0 2024-05-25 13:53:22 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-25 13:53:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/25/24 13:53:22.091
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/25/24 13:53:22.099
  E0525 13:53:22.801735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:23.801816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:24.801958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:25.802452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:26.802659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:27.802758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:28.802827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:29.803087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:30.803684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:31.803773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 05/25/24 13:53:32.1
  STEP: modifying the configmap a third time @ 05/25/24 13:53:32.115
  STEP: deleting the configmap @ 05/25/24 13:53:32.122
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/25/24 13:53:32.127
  May 25 13:53:32.128: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1609  e8f16705-8fec-49dc-9563-d81b63b2a7ec 45566 0 2024-05-25 13:53:22 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-25 13:53:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 25 13:53:32.128: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1609  e8f16705-8fec-49dc-9563-d81b63b2a7ec 45568 0 2024-05-25 13:53:22 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-25 13:53:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 25 13:53:32.128: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1609  e8f16705-8fec-49dc-9563-d81b63b2a7ec 45569 0 2024-05-25 13:53:22 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-25 13:53:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  May 25 13:53:32.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1609" for this suite. @ 05/25/24 13:53:32.132
• [10.083 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 05/25/24 13:53:32.138
  May 25 13:53:32.138: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename replication-controller @ 05/25/24 13:53:32.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:53:32.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:53:32.155
  May 25 13:53:32.157: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0525 13:53:32.803865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/25/24 13:53:33.169
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/25/24 13:53:33.173
  E0525 13:53:33.803958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/25/24 13:53:34.18
  May 25 13:53:34.186: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/25/24 13:53:34.187
  E0525 13:53:34.805009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:53:35.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-909" for this suite. @ 05/25/24 13:53:35.197
• [3.067 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 05/25/24 13:53:35.205
  May 25 13:53:35.205: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 13:53:35.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:53:35.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:53:35.223
  STEP: Creating projection with secret that has name projected-secret-test-map-1ab44278-91de-4593-8d17-299871f06fb4 @ 05/25/24 13:53:35.224
  STEP: Creating a pod to test consume secrets @ 05/25/24 13:53:35.229
  E0525 13:53:35.805747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:36.805857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:37.806016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:38.806180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:53:39.245
  May 25 13:53:39.249: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-projected-secrets-c37fd2e8-89f4-46aa-ad6a-8adc4b22b0d3 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/25/24 13:53:39.255
  May 25 13:53:39.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1163" for this suite. @ 05/25/24 13:53:39.272
• [4.073 seconds]
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 05/25/24 13:53:39.278
  May 25 13:53:39.278: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename deployment @ 05/25/24 13:53:39.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:53:39.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:53:39.298
  May 25 13:53:39.300: INFO: Creating simple deployment test-new-deployment
  May 25 13:53:39.310: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0525 13:53:39.807202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:40.807404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 05/25/24 13:53:41.323
  STEP: updating a scale subresource @ 05/25/24 13:53:41.326
  STEP: verifying the deployment Spec.Replicas was modified @ 05/25/24 13:53:41.332
  STEP: Patch a scale subresource @ 05/25/24 13:53:41.337
  May 25 13:53:41.351: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4354",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b9511b48-7c1f-4de3-9ec7-4c570bde7780",
      ResourceVersion: (string) (len=5) "45734",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852242019,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242019,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242019,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 25 13:53:41.359: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4354",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "413b531d-1d25-496e-b1c7-6f718f65e056",
      ResourceVersion: (string) (len=5) "45733",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852242019,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "b9511b48-7c1f-4de3-9ec7-4c570bde7780",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 39 35 31 31 62  34 38 2d 37 63 31 66 2d  |\"b9511b48-7c1f-|
              00000120  34 64 65 33 2d 39 65 63  37 2d 34 63 35 37 30 62  |4de3-9ec7-4c570b|
              00000130  64 65 37 37 38 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |de7780\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 25 13:53:41.370: INFO: Pod "test-new-deployment-557759b7c7-cfj6q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-cfj6q",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4354",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f120071b-2506-4bcd-a00b-b4cf5cd99907",
      ResourceVersion: (string) (len=5) "45737",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852242021,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "413b531d-1d25-496e-b1c7-6f718f65e056",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  33 62 35 33 31 64 2d 31  |d\":\"413b531d-1|
              00000090  64 32 35 2d 34 39 36 65  2d 62 31 63 37 2d 36 66  |d25-496e-b1c7-6f|
              000000a0  37 31 38 66 36 35 65 30  35 36 5c 22 7d 22 3a 7b  |718f65e056\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wqbg8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wqbg8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-15-138",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242021,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:53:41.371: INFO: Pod "test-new-deployment-557759b7c7-jk2gb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-jk2gb",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4354",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "626e8818-9558-4591-b6b6-f9890d82a43b",
      ResourceVersion: (string) (len=5) "45723",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852242019,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "413b531d-1d25-496e-b1c7-6f718f65e056",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242019,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  33 62 35 33 31 64 2d 31  |d\":\"413b531d-1|
              00000090  64 32 35 2d 34 39 36 65  2d 62 31 63 37 2d 36 66  |d25-496e-b1c7-6f|
              000000a0  37 31 38 66 36 35 65 30  35 36 5c 22 7d 22 3a 7b  |718f65e056\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 33  31 2e 39 5c 22 7d 22 3a  |2.168.131.9\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9dldd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9dldd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-106",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242019,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242019,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.106",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.106"
        }
      },
      PodIP: (string) (len=13) "192.168.131.9",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.131.9"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852242019,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852242019,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://271ed532552741deaf382b3f478487efc279cee1eb409573e796682029c654da",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 13:53:41.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4354" for this suite. @ 05/25/24 13:53:41.377
• [2.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 05/25/24 13:53:41.387
  May 25 13:53:41.387: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pods @ 05/25/24 13:53:41.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:53:41.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:53:41.418
  E0525 13:53:41.808276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:42.808485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:43.809241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:44.809466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:45.809911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:46.810012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:53:47.471
  May 25 13:53:47.473: INFO: Trying to get logs from node ip-172-31-15-138 pod client-envvars-b57f30d2-5616-4555-bb18-e63994e27741 container env3cont: <nil>
  STEP: delete the pod @ 05/25/24 13:53:47.481
  May 25 13:53:47.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3629" for this suite. @ 05/25/24 13:53:47.498
• [6.116 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:470
  STEP: Creating a kubernetes client @ 05/25/24 13:53:47.503
  May 25 13:53:47.503: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename sched-pred @ 05/25/24 13:53:47.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:53:47.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:53:47.522
  May 25 13:53:47.523: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May 25 13:53:47.529: INFO: Waiting for terminating namespaces to be deleted...
  May 25 13:53:47.531: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-15-138 before test
  May 25 13:53:47.535: INFO: nginx-ingress-controller-kubernetes-worker-fczx7 from ingress-nginx-kubernetes-worker started at 2024-05-25 12:10:29 +0000 UTC (1 container statuses recorded)
  May 25 13:53:47.535: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 25 13:53:47.535: INFO: calico-node-zcfdr from kube-system started at 2024-05-25 12:11:54 +0000 UTC (1 container statuses recorded)
  May 25 13:53:47.535: INFO: 	Container calico-node ready: true, restart count 0
  May 25 13:53:47.535: INFO: sonobuoy-e2e-job-f71b16864db44f61 from sonobuoy started at 2024-05-25 12:14:50 +0000 UTC (2 container statuses recorded)
  May 25 13:53:47.535: INFO: 	Container e2e ready: true, restart count 0
  May 25 13:53:47.535: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 25 13:53:47.535: INFO: sonobuoy-systemd-logs-daemon-set-61d532afa6f144b3-tg5ts from sonobuoy started at 2024-05-25 12:14:50 +0000 UTC (2 container statuses recorded)
  May 25 13:53:47.535: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 25 13:53:47.535: INFO: 	Container systemd-logs ready: true, restart count 0
  May 25 13:53:47.535: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-23-222 before test
  May 25 13:53:47.538: INFO: nginx-ingress-controller-kubernetes-worker-zvbpv from ingress-nginx-kubernetes-worker started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 13:53:47.538: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 25 13:53:47.538: INFO: calico-node-zpkdg from kube-system started at 2024-05-25 12:12:04 +0000 UTC (1 container statuses recorded)
  May 25 13:53:47.538: INFO: 	Container calico-node ready: true, restart count 0
  May 25 13:53:47.538: INFO: coredns-bddfd76d7-x6hfl from kube-system started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 13:53:47.538: INFO: 	Container coredns ready: true, restart count 0
  May 25 13:53:47.538: INFO: kube-state-metrics-6f48cdd76-5mtk5 from kube-system started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 13:53:47.538: INFO: 	Container kube-state-metrics ready: true, restart count 0
  May 25 13:53:47.538: INFO: metrics-server-v0.6.3-69d7fbfdf8-82qd4 from kube-system started at 2024-05-25 12:07:22 +0000 UTC (2 container statuses recorded)
  May 25 13:53:47.539: INFO: 	Container metrics-server ready: true, restart count 0
  May 25 13:53:47.539: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  May 25 13:53:47.539: INFO: dashboard-metrics-scraper-5dd7cb5fc-gxms9 from kubernetes-dashboard started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 13:53:47.539: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  May 25 13:53:47.539: INFO: kubernetes-dashboard-7b899cb9d9-fl78g from kubernetes-dashboard started at 2024-05-25 12:07:22 +0000 UTC (1 container statuses recorded)
  May 25 13:53:47.539: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  May 25 13:53:47.539: INFO: sonobuoy-systemd-logs-daemon-set-61d532afa6f144b3-8jjrn from sonobuoy started at 2024-05-25 12:14:50 +0000 UTC (2 container statuses recorded)
  May 25 13:53:47.539: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 25 13:53:47.539: INFO: 	Container systemd-logs ready: true, restart count 0
  May 25 13:53:47.539: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-45-106 before test
  May 25 13:53:47.544: INFO: nginx-ingress-controller-kubernetes-worker-jdbhq from ingress-nginx-kubernetes-worker started at 2024-05-25 13:19:42 +0000 UTC (1 container statuses recorded)
  May 25 13:53:47.544: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May 25 13:53:47.544: INFO: calico-node-b4lmv from kube-system started at 2024-05-25 12:11:54 +0000 UTC (1 container statuses recorded)
  May 25 13:53:47.544: INFO: 	Container calico-node ready: true, restart count 0
  May 25 13:53:47.544: INFO: server-envvars-2d49f962-034e-459f-91c3-f597b1fa5092 from pods-3629 started at 2024-05-25 13:53:41 +0000 UTC (1 container statuses recorded)
  May 25 13:53:47.544: INFO: 	Container srv ready: true, restart count 0
  May 25 13:53:47.544: INFO: sonobuoy from sonobuoy started at 2024-05-25 12:14:48 +0000 UTC (1 container statuses recorded)
  May 25 13:53:47.544: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May 25 13:53:47.544: INFO: sonobuoy-systemd-logs-daemon-set-61d532afa6f144b3-fz7f5 from sonobuoy started at 2024-05-25 12:14:50 +0000 UTC (2 container statuses recorded)
  May 25 13:53:47.544: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May 25 13:53:47.544: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/25/24 13:53:47.544
  E0525 13:53:47.810433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:48.810466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/25/24 13:53:49.56
  STEP: Trying to apply a random label on the found node. @ 05/25/24 13:53:49.573
  STEP: verifying the node has the label kubernetes.io/e2e-c9578c9d-946c-4fe6-b74a-1fa8f5ec3998 42 @ 05/25/24 13:53:49.58
  STEP: Trying to relaunch the pod, now with labels. @ 05/25/24 13:53:49.587
  E0525 13:53:49.811265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:50.811555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-c9578c9d-946c-4fe6-b74a-1fa8f5ec3998 off the node ip-172-31-15-138 @ 05/25/24 13:53:51.603
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-c9578c9d-946c-4fe6-b74a-1fa8f5ec3998 @ 05/25/24 13:53:51.613
  May 25 13:53:51.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8143" for this suite. @ 05/25/24 13:53:51.624
• [4.126 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 05/25/24 13:53:51.63
  May 25 13:53:51.630: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename var-expansion @ 05/25/24 13:53:51.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:53:51.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:53:51.65
  STEP: Creating a pod to test substitution in container's args @ 05/25/24 13:53:51.653
  E0525 13:53:51.812641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:52.812832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:53.813768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:54.813935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:53:55.673
  May 25 13:53:55.676: INFO: Trying to get logs from node ip-172-31-45-106 pod var-expansion-89d937ec-acd3-4f88-8a83-c930d63a8683 container dapi-container: <nil>
  STEP: delete the pod @ 05/25/24 13:53:55.682
  May 25 13:53:55.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9047" for this suite. @ 05/25/24 13:53:55.699
• [4.075 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 05/25/24 13:53:55.705
  May 25 13:53:55.705: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename runtimeclass @ 05/25/24 13:53:55.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:53:55.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:53:55.728
  STEP: Deleting RuntimeClass runtimeclass-8259-delete-me @ 05/25/24 13:53:55.734
  STEP: Waiting for the RuntimeClass to disappear @ 05/25/24 13:53:55.74
  May 25 13:53:55.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8259" for this suite. @ 05/25/24 13:53:55.75
• [0.049 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 05/25/24 13:53:55.754
  May 25 13:53:55.754: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename aggregator @ 05/25/24 13:53:55.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:53:55.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:53:55.773
  May 25 13:53:55.775: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Registering the sample API server. @ 05/25/24 13:53:55.775
  E0525 13:53:55.814562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:53:55.997: INFO: Found ClusterRoles; assuming RBAC is enabled.
  May 25 13:53:56.022: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0525 13:53:56.815389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:57.815457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:53:58.064: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:53:58.815537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:53:59.815633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:54:00.069: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:54:00.816543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:01.816698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:54:02.069: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:54:02.816748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:03.816963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:54:04.068: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:54:04.817175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:05.817556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:54:06.070: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:54:06.817900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:07.817990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:54:08.067: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:54:08.818229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:09.818341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:54:10.067: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:54:10.819202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:11.819299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:54:12.069: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:54:12.820308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:13.820385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:54:14.068: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:54:14.820903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:15.821363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:54:16.068: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:54:16.821899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:17.821970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:54:18.070: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:54:18.822152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:19.822241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:54:20.067: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 25, 13, 53, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0525 13:54:20.822326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:21.822433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:54:22.183: INFO: Waited 110.020499ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/25/24 13:54:22.209
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/25/24 13:54:22.212
  STEP: List APIServices @ 05/25/24 13:54:22.219
  May 25 13:54:22.223: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/25/24 13:54:22.223
  May 25 13:54:22.234: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/25/24 13:54:22.234
  May 25 13:54:22.241: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.May, 25, 13, 54, 22, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/25/24 13:54:22.241
  May 25 13:54:22.245: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-05-25 13:54:22 +0000 UTC Passed all checks passed}
  May 25 13:54:22.245: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 25 13:54:22.245: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/25/24 13:54:22.245
  May 25 13:54:22.253: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1559860912" @ 05/25/24 13:54:22.253
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/25/24 13:54:22.262
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/25/24 13:54:22.266
  STEP: Patch APIService Status @ 05/25/24 13:54:22.27
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/25/24 13:54:22.276
  May 25 13:54:22.278: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-05-25 13:54:22 +0000 UTC Passed all checks passed}
  May 25 13:54:22.278: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May 25 13:54:22.278: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  May 25 13:54:22.278: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 05/25/24 13:54:22.278
  STEP: Confirm that the generated APIService has been deleted @ 05/25/24 13:54:22.286
  May 25 13:54:22.286: INFO: Requesting list of APIServices to confirm quantity
  May 25 13:54:22.290: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  May 25 13:54:22.291: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  May 25 13:54:22.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1615" for this suite. @ 05/25/24 13:54:22.397
• [26.648 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 05/25/24 13:54:22.403
  May 25 13:54:22.403: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename gc @ 05/25/24 13:54:22.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:54:22.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:54:22.421
  STEP: create the rc @ 05/25/24 13:54:22.423
  W0525 13:54:22.427457      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0525 13:54:22.822710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:23.822978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:24.824396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:25.825229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:26.825322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/25/24 13:54:27.431
  STEP: wait for all pods to be garbage collected @ 05/25/24 13:54:27.436
  E0525 13:54:27.826398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:28.826670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:29.826789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:30.827573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:31.827684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/25/24 13:54:32.443
  W0525 13:54:32.448637      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May 25 13:54:32.448: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May 25 13:54:32.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3785" for this suite. @ 05/25/24 13:54:32.452
• [10.057 seconds]
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 05/25/24 13:54:32.461
  May 25 13:54:32.461: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename configmap @ 05/25/24 13:54:32.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:54:32.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:54:32.479
  STEP: Creating configMap that has name configmap-test-emptyKey-64576f16-c0eb-4415-acf2-4c7c94597045 @ 05/25/24 13:54:32.48
  May 25 13:54:32.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7485" for this suite. @ 05/25/24 13:54:32.484
• [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 05/25/24 13:54:32.492
  May 25 13:54:32.492: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename disruption @ 05/25/24 13:54:32.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:54:32.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:54:32.545
  STEP: creating the pdb @ 05/25/24 13:54:32.547
  STEP: Waiting for the pdb to be processed @ 05/25/24 13:54:32.552
  E0525 13:54:32.828282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:33.828480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 05/25/24 13:54:34.558
  STEP: Waiting for the pdb to be processed @ 05/25/24 13:54:34.565
  E0525 13:54:34.828871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:35.829457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 05/25/24 13:54:36.568
  STEP: Waiting for the pdb to be processed @ 05/25/24 13:54:36.577
  E0525 13:54:36.830391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:37.830471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 05/25/24 13:54:38.587
  May 25 13:54:38.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9157" for this suite. @ 05/25/24 13:54:38.593
• [6.108 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 05/25/24 13:54:38.6
  May 25 13:54:38.600: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 13:54:38.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:54:38.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:54:38.616
  STEP: Setting up server cert @ 05/25/24 13:54:38.637
  E0525 13:54:38.831237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 13:54:38.855
  STEP: Deploying the webhook pod @ 05/25/24 13:54:38.862
  STEP: Wait for the deployment to be ready @ 05/25/24 13:54:38.873
  May 25 13:54:38.878: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0525 13:54:39.832240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:40.832679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/25/24 13:54:40.889
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 13:54:40.899
  E0525 13:54:41.832797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:54:41.900: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/25/24 13:54:41.906
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/25/24 13:54:41.906
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/25/24 13:54:41.919
  E0525 13:54:42.833603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/25/24 13:54:42.931
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/25/24 13:54:42.931
  May 25 13:54:42.945: INFO: Waiting for webhook configuration to be ready...
  E0525 13:54:43.834023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 05/25/24 13:54:44.068
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/25/24 13:54:44.068
  May 25 13:54:44.083: INFO: Waiting for webhook configuration to be ready...
  E0525 13:54:44.834145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:45.834784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:46.834837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:47.834997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:48.835221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/25/24 13:54:49.209
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/25/24 13:54:49.209
  E0525 13:54:49.835329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:50.835400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:51.835521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:52.835626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:53.835727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:54:54.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7309" for this suite. @ 05/25/24 13:54:54.288
  STEP: Destroying namespace "webhook-markers-8098" for this suite. @ 05/25/24 13:54:54.294
• [15.702 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 05/25/24 13:54:54.302
  May 25 13:54:54.302: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename resourcequota @ 05/25/24 13:54:54.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:54:54.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:54:54.318
  STEP: Counting existing ResourceQuota @ 05/25/24 13:54:54.32
  E0525 13:54:54.836303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:55.836630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:56.837562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:57.837646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:54:58.837744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/25/24 13:54:59.323
  STEP: Ensuring resource quota status is calculated @ 05/25/24 13:54:59.327
  E0525 13:54:59.837871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:00.838580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 05/25/24 13:55:01.332
  STEP: Ensuring resource quota status captures replicaset creation @ 05/25/24 13:55:01.342
  E0525 13:55:01.839336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:02.840273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 05/25/24 13:55:03.346
  STEP: Ensuring resource quota status released usage @ 05/25/24 13:55:03.353
  E0525 13:55:03.840490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:04.840545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:55:05.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6125" for this suite. @ 05/25/24 13:55:05.361
• [11.065 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 05/25/24 13:55:05.367
  May 25 13:55:05.367: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename configmap @ 05/25/24 13:55:05.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:55:05.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:55:05.386
  STEP: Creating configMap with name configmap-test-volume-2f4cd4dc-27b6-4a84-8f68-8c44cb9bd8ce @ 05/25/24 13:55:05.388
  STEP: Creating a pod to test consume configMaps @ 05/25/24 13:55:05.393
  E0525 13:55:05.841072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:06.841268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:07.841703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:08.841791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:55:09.413
  May 25 13:55:09.416: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-configmaps-5ce85b97-b7fe-45fd-83a4-f2c9121536b0 container agnhost-container: <nil>
  STEP: delete the pod @ 05/25/24 13:55:09.421
  May 25 13:55:09.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6388" for this suite. @ 05/25/24 13:55:09.44
• [4.081 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 05/25/24 13:55:09.448
  May 25 13:55:09.448: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename namespaces @ 05/25/24 13:55:09.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:55:09.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:55:09.464
  STEP: Creating a test namespace @ 05/25/24 13:55:09.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:55:09.481
  STEP: Creating a service in the namespace @ 05/25/24 13:55:09.482
  STEP: Deleting the namespace @ 05/25/24 13:55:09.49
  STEP: Waiting for the namespace to be removed. @ 05/25/24 13:55:09.496
  E0525 13:55:09.842674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:10.843096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:11.843121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:12.844114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:13.844205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:14.845217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/25/24 13:55:15.499
  STEP: Verifying there is no service in the namespace @ 05/25/24 13:55:15.518
  May 25 13:55:15.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5755" for this suite. @ 05/25/24 13:55:15.525
  STEP: Destroying namespace "nsdeletetest-112" for this suite. @ 05/25/24 13:55:15.53
  May 25 13:55:15.533: INFO: Namespace nsdeletetest-112 was already deleted
  STEP: Destroying namespace "nsdeletetest-9397" for this suite. @ 05/25/24 13:55:15.533
• [6.090 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 05/25/24 13:55:15.537
  May 25 13:55:15.537: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename events @ 05/25/24 13:55:15.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:55:15.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:55:15.553
  STEP: creating a test event @ 05/25/24 13:55:15.555
  STEP: listing all events in all namespaces @ 05/25/24 13:55:15.558
  STEP: patching the test event @ 05/25/24 13:55:15.562
  STEP: fetching the test event @ 05/25/24 13:55:15.566
  STEP: updating the test event @ 05/25/24 13:55:15.569
  STEP: getting the test event @ 05/25/24 13:55:15.577
  STEP: deleting the test event @ 05/25/24 13:55:15.581
  STEP: listing all events in all namespaces @ 05/25/24 13:55:15.587
  May 25 13:55:15.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3158" for this suite. @ 05/25/24 13:55:15.592
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 05/25/24 13:55:15.597
  May 25 13:55:15.597: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename svcaccounts @ 05/25/24 13:55:15.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:55:15.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:55:15.615
  May 25 13:55:15.630: INFO: created pod pod-service-account-defaultsa
  May 25 13:55:15.630: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  May 25 13:55:15.638: INFO: created pod pod-service-account-mountsa
  May 25 13:55:15.638: INFO: pod pod-service-account-mountsa service account token volume mount: true
  May 25 13:55:15.643: INFO: created pod pod-service-account-nomountsa
  May 25 13:55:15.643: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  May 25 13:55:15.649: INFO: created pod pod-service-account-defaultsa-mountspec
  May 25 13:55:15.649: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  May 25 13:55:15.653: INFO: created pod pod-service-account-mountsa-mountspec
  May 25 13:55:15.653: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  May 25 13:55:15.658: INFO: created pod pod-service-account-nomountsa-mountspec
  May 25 13:55:15.658: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  May 25 13:55:15.662: INFO: created pod pod-service-account-defaultsa-nomountspec
  May 25 13:55:15.662: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  May 25 13:55:15.669: INFO: created pod pod-service-account-mountsa-nomountspec
  May 25 13:55:15.669: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  May 25 13:55:15.681: INFO: created pod pod-service-account-nomountsa-nomountspec
  May 25 13:55:15.681: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  May 25 13:55:15.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5666" for this suite. @ 05/25/24 13:55:15.69
• [0.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 05/25/24 13:55:15.697
  May 25 13:55:15.697: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename cronjob @ 05/25/24 13:55:15.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:55:15.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:55:15.719
  STEP: Creating a ReplaceConcurrent cronjob @ 05/25/24 13:55:15.726
  STEP: Ensuring a job is scheduled @ 05/25/24 13:55:15.732
  E0525 13:55:15.846168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:16.846558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:17.846943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:18.847099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:19.848130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:20.848227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:21.848568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:22.848833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:23.849889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:24.849980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:25.850982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:26.851219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:27.851315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:28.851427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:29.851894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:30.852260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:31.853016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:32.853138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:33.853649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:34.853770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:35.854097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:36.854210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:37.854782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:38.854985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:39.855586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:40.856571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:41.857117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:42.857241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:43.857968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:44.858139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:45.858617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:46.858895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:47.859020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:48.859218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:49.859729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:50.860702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:51.861550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:52.861641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:53.861902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:54.862883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:55.863580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:56.864321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:57.865258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:58.865338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:55:59.866221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:00.866678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/25/24 13:56:01.736
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/25/24 13:56:01.739
  STEP: Ensuring the job is replaced with a new one @ 05/25/24 13:56:01.741
  E0525 13:56:01.867373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:02.867472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:03.867961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:04.868150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:05.868976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:06.869166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:07.869783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:08.869927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:09.870507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:10.870558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:11.870888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:12.871437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:13.871493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:14.871598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:15.872578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:16.872689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:17.873720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:18.873947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:19.874861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:20.875375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:21.875996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:22.876265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:23.876674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:24.876769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:25.876835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:26.876929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:27.877684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:28.877777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:29.878196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:30.878465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:31.879126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:32.879245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:33.879639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:34.879712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:35.880483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:36.880609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:37.881507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:38.881603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:39.882142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:40.882247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:41.882319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:42.882403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:43.882626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:44.882800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:45.883745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:46.883833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:47.883922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:48.884026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:49.884953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:50.885127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:51.885666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:52.885861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:53.886666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:54.886749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:55.887718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:56.887860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:57.888606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:58.888792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:56:59.889386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:00.889467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 05/25/24 13:57:01.746
  May 25 13:57:01.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4371" for this suite. @ 05/25/24 13:57:01.754
• [106.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 05/25/24 13:57:01.762
  May 25 13:57:01.762: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 13:57:01.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:57:01.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:57:01.789
  STEP: Creating secret with name s-test-opt-del-9bb62f7e-1b62-4ad3-b288-5a082a5b63ca @ 05/25/24 13:57:01.795
  STEP: Creating secret with name s-test-opt-upd-6f7e743b-0baa-4ded-9555-a102aa30ee5e @ 05/25/24 13:57:01.8
  STEP: Creating the pod @ 05/25/24 13:57:01.803
  E0525 13:57:01.890093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:02.890207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-9bb62f7e-1b62-4ad3-b288-5a082a5b63ca @ 05/25/24 13:57:03.845
  STEP: Updating secret s-test-opt-upd-6f7e743b-0baa-4ded-9555-a102aa30ee5e @ 05/25/24 13:57:03.851
  STEP: Creating secret with name s-test-opt-create-a26f713e-3ee2-4aff-b36c-e585a3a46360 @ 05/25/24 13:57:03.856
  STEP: waiting to observe update in volume @ 05/25/24 13:57:03.86
  E0525 13:57:03.890257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:04.890495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:05.891105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:06.891227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:07.891603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:08.891719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:09.892267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:10.892405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:11.892411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:12.892508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:13.892826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:14.893018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:15.893491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:16.893648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:17.893721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:18.893835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:19.893980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:20.894451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:21.894538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:22.895212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:23.895248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:24.895341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:25.895437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:26.895524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:27.895606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:28.896309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:29.896403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:30.897462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:31.897568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:32.898232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:33.898457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:34.898505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:35.898670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:36.898875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:37.898968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:38.899089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:39.899245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:40.899324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:41.899410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:42.899448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:43.899537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:44.899632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:45.900323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:46.900440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:47.900560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:48.900643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:49.900683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:50.901403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:51.901500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:52.902032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:53.902131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:54.902243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:55.902677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:56.902788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:57.902985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:58.903209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:57:59.904267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:00.904326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:01.904434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:02.904532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:03.904710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:04.905399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:05.905512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:58:06.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6640" for this suite. @ 05/25/24 13:58:06.124
• [64.368 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 05/25/24 13:58:06.131
  May 25 13:58:06.131: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename kubectl @ 05/25/24 13:58:06.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:58:06.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:58:06.148
  May 25 13:58:06.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2440777291 --namespace=kubectl-5689 version'
  May 25 13:58:06.185: INFO: stderr: ""
  May 25 13:58:06.185: INFO: stdout: "Client Version: v1.29.5\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.5\n"
  May 25 13:58:06.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5689" for this suite. @ 05/25/24 13:58:06.188
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 05/25/24 13:58:06.193
  May 25 13:58:06.193: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename namespaces @ 05/25/24 13:58:06.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:58:06.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:58:06.209
  STEP: Creating a test namespace @ 05/25/24 13:58:06.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:58:06.226
  STEP: Creating a pod in the namespace @ 05/25/24 13:58:06.227
  STEP: Waiting for the pod to have running status @ 05/25/24 13:58:06.235
  E0525 13:58:06.905611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:07.905790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 05/25/24 13:58:08.242
  STEP: Waiting for the namespace to be removed. @ 05/25/24 13:58:08.249
  E0525 13:58:08.906796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:09.907105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:10.907292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:11.907883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:12.907971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:13.908143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:14.908203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:15.908391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:16.909387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:17.909476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:18.909859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/25/24 13:58:19.254
  STEP: Verifying there are no pods in the namespace @ 05/25/24 13:58:19.271
  May 25 13:58:19.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7106" for this suite. @ 05/25/24 13:58:19.277
  STEP: Destroying namespace "nsdeletetest-9838" for this suite. @ 05/25/24 13:58:19.284
  May 25 13:58:19.286: INFO: Namespace nsdeletetest-9838 was already deleted
  STEP: Destroying namespace "nsdeletetest-3291" for this suite. @ 05/25/24 13:58:19.286
• [13.099 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 05/25/24 13:58:19.292
  May 25 13:58:19.292: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/25/24 13:58:19.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:58:19.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:58:19.31
  May 25 13:58:19.312: INFO: Waiting up to 1m0s for all nodes to be ready
  E0525 13:58:19.910605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:20.911399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:21.911510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:22.911578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:23.911684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:24.911763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:25.912778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:26.912843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:27.913842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:28.914033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:29.914145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:30.914487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:31.914663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:32.914755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:33.915598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:34.915678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:35.915789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:36.915861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:37.916079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:38.916212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:39.916295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:40.916393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:41.917146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:42.917335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:43.917993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:44.918101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:45.918198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:46.918298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:47.919287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:48.919445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:49.920293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:50.920353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:51.921236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:52.921436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:53.921527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:54.921632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:55.921719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:56.921958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:57.922065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:58.922142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:58:59.923169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:00.923739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:01.924382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:02.924484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:03.925524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:04.925618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:05.925880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:06.926071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:07.926712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:08.926834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:09.927166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:10.928187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:11.928281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:12.928451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:13.928546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:14.928672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:15.928772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:16.928866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:17.929142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:18.929383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:59:19.313: INFO: Waiting for terminating namespaces to be deleted...
  May 25 13:59:19.316: INFO: Starting informer...
  STEP: Starting pods... @ 05/25/24 13:59:19.316
  May 25 13:59:19.532: INFO: Pod1 is running on ip-172-31-45-106. Tainting Node
  E0525 13:59:19.929518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:20.930051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:59:21.751: INFO: Pod2 is running on ip-172-31-45-106. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/25/24 13:59:21.751
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/25/24 13:59:21.759
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/25/24 13:59:21.764
  E0525 13:59:21.930850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:22.931029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:23.931202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:24.931291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:25.931402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:26.932301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:59:27.402: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0525 13:59:27.932418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:28.932496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:29.932591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:30.933340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:31.933531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:32.933766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:33.933963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:34.934101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:35.934197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:36.934793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:37.934967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:38.935188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:39.935443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:40.935504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:41.935600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:42.935770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:43.936272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:44.937010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:45.937582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:46.938529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:59:47.437: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/25/24 13:59:47.446
  May 25 13:59:47.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-8104" for this suite. @ 05/25/24 13:59:47.452
• [88.165 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 05/25/24 13:59:47.457
  May 25 13:59:47.457: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename webhook @ 05/25/24 13:59:47.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:59:47.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:59:47.489
  STEP: Setting up server cert @ 05/25/24 13:59:47.511
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/25/24 13:59:47.687
  STEP: Deploying the webhook pod @ 05/25/24 13:59:47.696
  STEP: Wait for the deployment to be ready @ 05/25/24 13:59:47.707
  May 25 13:59:47.713: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0525 13:59:47.939378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:48.940406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/25/24 13:59:49.725
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 13:59:49.737
  E0525 13:59:49.941239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 13:59:50.738: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May 25 13:59:50.743: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  E0525 13:59:50.941539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7212-crds.webhook.example.com via the AdmissionRegistration API @ 05/25/24 13:59:51.252
  STEP: Creating a custom resource while v1 is storage version @ 05/25/24 13:59:51.266
  E0525 13:59:51.942380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:52.942484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/25/24 13:59:53.298
  STEP: Patching the custom resource while v2 is storage version @ 05/25/24 13:59:53.314
  May 25 13:59:53.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6093" for this suite. @ 05/25/24 13:59:53.894
  STEP: Destroying namespace "webhook-markers-9390" for this suite. @ 05/25/24 13:59:53.899
• [6.449 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 05/25/24 13:59:53.906
  May 25 13:59:53.906: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 13:59:53.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:59:53.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:59:53.927
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 13:59:53.928
  E0525 13:59:53.942637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:54.943412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:55.944312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:56.944449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:57.944694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 13:59:57.946
  May 25 13:59:57.949: INFO: Trying to get logs from node ip-172-31-45-106 pod downwardapi-volume-63123cd1-174d-437b-85a8-5caed77b4e1e container client-container: <nil>
  STEP: delete the pod @ 05/25/24 13:59:57.966
  May 25 13:59:57.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6121" for this suite. @ 05/25/24 13:59:57.982
• [4.081 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 05/25/24 13:59:57.987
  May 25 13:59:57.987: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename pod-network-test @ 05/25/24 13:59:57.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 13:59:58.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 13:59:58.006
  STEP: Performing setup for networking test in namespace pod-network-test-6936 @ 05/25/24 13:59:58.007
  STEP: creating a selector @ 05/25/24 13:59:58.007
  STEP: Creating the service pods in kubernetes @ 05/25/24 13:59:58.007
  May 25 13:59:58.007: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0525 13:59:58.944864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 13:59:59.944931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:00.945703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:01.946545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:02.947265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:03.947367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:04.947409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:05.947511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:06.948290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:07.948642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:08.948831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:09.948900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/25/24 14:00:10.077
  E0525 14:00:10.949737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:11.950577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:00:12.090: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  May 25 14:00:12.090: INFO: Breadth first check of 192.168.138.190 on host 172.31.15.138...
  May 25 14:00:12.092: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.131.46:9080/dial?request=hostname&protocol=http&host=192.168.138.190&port=8083&tries=1'] Namespace:pod-network-test-6936 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 14:00:12.092: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 14:00:12.092: INFO: ExecWithOptions: Clientset creation
  May 25 14:00:12.092: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6936/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.131.46%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.138.190%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 25 14:00:12.162: INFO: Waiting for responses: map[]
  May 25 14:00:12.162: INFO: reached 192.168.138.190 after 0/1 tries
  May 25 14:00:12.162: INFO: Breadth first check of 192.168.14.26 on host 172.31.23.222...
  May 25 14:00:12.165: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.131.46:9080/dial?request=hostname&protocol=http&host=192.168.14.26&port=8083&tries=1'] Namespace:pod-network-test-6936 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 14:00:12.165: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 14:00:12.165: INFO: ExecWithOptions: Clientset creation
  May 25 14:00:12.165: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6936/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.131.46%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.14.26%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 25 14:00:12.222: INFO: Waiting for responses: map[]
  May 25 14:00:12.222: INFO: reached 192.168.14.26 after 0/1 tries
  May 25 14:00:12.222: INFO: Breadth first check of 192.168.131.45 on host 172.31.45.106...
  May 25 14:00:12.227: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.131.46:9080/dial?request=hostname&protocol=http&host=192.168.131.45&port=8083&tries=1'] Namespace:pod-network-test-6936 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May 25 14:00:12.227: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  May 25 14:00:12.227: INFO: ExecWithOptions: Clientset creation
  May 25 14:00:12.227: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6936/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.131.46%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.131.45%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May 25 14:00:12.272: INFO: Waiting for responses: map[]
  May 25 14:00:12.272: INFO: reached 192.168.131.45 after 0/1 tries
  May 25 14:00:12.272: INFO: Going to retry 0 out of 3 pods....
  May 25 14:00:12.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6936" for this suite. @ 05/25/24 14:00:12.276
• [14.297 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 05/25/24 14:00:12.285
  May 25 14:00:12.285: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 14:00:12.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 14:00:12.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 14:00:12.303
  STEP: Creating secret with name projected-secret-test-6ee2dca9-c6f1-4ebd-a8a3-238f8042963e @ 05/25/24 14:00:12.305
  STEP: Creating a pod to test consume secrets @ 05/25/24 14:00:12.308
  E0525 14:00:12.950676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:13.951756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:14.952214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:15.953155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 14:00:16.328
  May 25 14:00:16.332: INFO: Trying to get logs from node ip-172-31-15-138 pod pod-projected-secrets-1470faea-d768-43b2-8aeb-b4b3f72c4630 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/25/24 14:00:16.341
  May 25 14:00:16.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9594" for this suite. @ 05/25/24 14:00:16.357
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 05/25/24 14:00:16.363
  May 25 14:00:16.363: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename var-expansion @ 05/25/24 14:00:16.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 14:00:16.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 14:00:16.385
  E0525 14:00:16.953966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:17.954057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:00:18.401: INFO: Deleting pod "var-expansion-c4282ecb-ea57-4ff9-9639-d3981670c3d5" in namespace "var-expansion-429"
  May 25 14:00:18.407: INFO: Wait up to 5m0s for pod "var-expansion-c4282ecb-ea57-4ff9-9639-d3981670c3d5" to be fully deleted
  E0525 14:00:18.954973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:19.955230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:00:20.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-429" for this suite. @ 05/25/24 14:00:20.418
• [4.063 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 05/25/24 14:00:20.427
  May 25 14:00:20.427: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/25/24 14:00:20.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 14:00:20.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 14:00:20.446
  May 25 14:00:20.447: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  E0525 14:00:20.955685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:21.955930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:22.956001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:00:23.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8397" for this suite. @ 05/25/24 14:00:23.547
• [3.128 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 05/25/24 14:00:23.555
  May 25 14:00:23.555: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename security-context-test @ 05/25/24 14:00:23.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 14:00:23.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 14:00:23.574
  E0525 14:00:23.956139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:24.956260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:25.956713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:26.956936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:00:27.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6900" for this suite. @ 05/25/24 14:00:27.597
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 05/25/24 14:00:27.604
  May 25 14:00:27.604: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename services @ 05/25/24 14:00:27.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 14:00:27.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 14:00:27.621
  STEP: fetching services @ 05/25/24 14:00:27.622
  May 25 14:00:27.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9312" for this suite. @ 05/25/24 14:00:27.629
• [0.032 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 05/25/24 14:00:27.636
  May 25 14:00:27.636: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 14:00:27.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 14:00:27.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 14:00:27.654
  STEP: Creating configMap with name configmap-projected-all-test-volume-56f16663-afb4-45fc-bea3-cbc9af05c761 @ 05/25/24 14:00:27.655
  STEP: Creating secret with name secret-projected-all-test-volume-f2ae8ecd-7aeb-4a2a-b8d2-6aea9594c632 @ 05/25/24 14:00:27.66
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/25/24 14:00:27.664
  E0525 14:00:27.957448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:28.957572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:29.958275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:30.958358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 14:00:31.681
  May 25 14:00:31.685: INFO: Trying to get logs from node ip-172-31-45-106 pod projected-volume-430fd36e-8d5c-4a4a-ae5f-b5a3823efcf3 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/25/24 14:00:31.692
  May 25 14:00:31.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4490" for this suite. @ 05/25/24 14:00:31.706
• [4.076 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 05/25/24 14:00:31.712
  May 25 14:00:31.712: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 14:00:31.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 14:00:31.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 14:00:31.731
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 14:00:31.733
  E0525 14:00:31.959218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:32.959230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:33.960058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:34.960313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 14:00:35.754
  May 25 14:00:35.757: INFO: Trying to get logs from node ip-172-31-45-106 pod downwardapi-volume-7f4d0ea9-b6f1-48f9-8595-ba61deb68500 container client-container: <nil>
  STEP: delete the pod @ 05/25/24 14:00:35.764
  May 25 14:00:35.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8145" for this suite. @ 05/25/24 14:00:35.782
• [4.075 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 05/25/24 14:00:35.787
  May 25 14:00:35.787: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename crd-webhook @ 05/25/24 14:00:35.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 14:00:35.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 14:00:35.807
  STEP: Setting up server cert @ 05/25/24 14:00:35.808
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/25/24 14:00:35.955
  E0525 14:00:35.960855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the custom resource conversion webhook pod @ 05/25/24 14:00:35.962
  STEP: Wait for the deployment to be ready @ 05/25/24 14:00:35.974
  May 25 14:00:35.981: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0525 14:00:36.961010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:37.961403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/25/24 14:00:37.99
  STEP: Verifying the service has paired with the endpoint @ 05/25/24 14:00:38
  E0525 14:00:38.961662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:00:39.000: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  May 25 14:00:39.006: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  E0525 14:00:39.962339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:40.962622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/25/24 14:00:41.559
  STEP: v2 custom resource should be converted @ 05/25/24 14:00:41.565
  E0525 14:00:41.962867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:00:42.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9677" for this suite. @ 05/25/24 14:00:42.123
• [6.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 05/25/24 14:00:42.136
  May 25 14:00:42.136: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename deployment @ 05/25/24 14:00:42.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 14:00:42.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 14:00:42.156
  May 25 14:00:42.158: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  May 25 14:00:42.166: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0525 14:00:42.963756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:43.963842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:44.964642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:45.964931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:46.965135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:00:47.171: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/25/24 14:00:47.171
  May 25 14:00:47.171: INFO: Creating deployment "test-rolling-update-deployment"
  May 25 14:00:47.176: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  May 25 14:00:47.180: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0525 14:00:47.965614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:48.965734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:00:49.188: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  May 25 14:00:49.190: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  May 25 14:00:49.200: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8801",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7915e06f-ced0-44a1-acb5-e697365ca853",
      ResourceVersion: (string) (len=5) "48226",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852242447,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242448,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242448,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May 25 14:00:49.203: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8801",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7cb056a3-96ed-4e20-bac3-b0721ed93546",
      ResourceVersion: (string) (len=5) "48216",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852242447,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "7915e06f-ced0-44a1-acb5-e697365ca853",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 39 31 35 65 30  36 66 2d 63 65 64 30 2d  |\"7915e06f-ced0-|
              00000120  34 34 61 31 2d 61 63 62  35 2d 65 36 39 37 33 36  |44a1-acb5-e69736|
              00000130  35 63 61 38 35 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5ca853\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242448,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 25 14:00:49.204: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  May 25 14:00:49.204: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8801",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04cee18d-78e7-4805-8c23-71518a506221",
      ResourceVersion: (string) (len=5) "48225",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852242442,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "7915e06f-ced0-44a1-acb5-e697365ca853",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242448,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 37 39 31 35 65 30 36  |"uid\":\"7915e06|
              000000b0  66 2d 63 65 64 30 2d 34  34 61 31 2d 61 63 62 35  |f-ced0-44a1-acb5|
              000000c0  2d 65 36 39 37 33 36 35  63 61 38 35 33 5c 22 7d  |-e697365ca853\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242448,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May 25 14:00:49.208: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-tpgn2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-tpgn2",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-8801",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4556892-a499-4ad0-a8fc-d1709fbfd92d",
      ResourceVersion: (string) (len=5) "48215",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852242447,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "7cb056a3-96ed-4e20-bac3-b0721ed93546",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 63  62 30 35 36 61 33 2d 39  |d\":\"7cb056a3-9|
              00000090  36 65 64 2d 34 65 32 30  2d 62 61 63 33 2d 62 30  |6ed-4e20-bac3-b0|
              000000a0  37 32 31 65 64 39 33 35  34 36 5c 22 7d 22 3a 7b  |721ed93546\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242448,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 33  38 2e 31 33 33 5c 22 7d  |2.168.138.133\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-66767",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-66767",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-15-138",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242448,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242448,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242448,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852242447,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.138",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.15.138"
        }
      },
      PodIP: (string) (len=15) "192.168.138.133",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.138.133"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852242447,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852242447,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://8a1bb2a1eab26716ca98b002fc108729731b1febb68133bea3d08367e4838c95",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May 25 14:00:49.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8801" for this suite. @ 05/25/24 14:00:49.213
• [7.084 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 05/25/24 14:00:49.22
  May 25 14:00:49.220: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 14:00:49.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 14:00:49.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 14:00:49.237
  STEP: Creating a pod to test downward API volume plugin @ 05/25/24 14:00:49.239
  E0525 14:00:49.966584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:50.966691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:51.966813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:52.967050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 14:00:53.258
  May 25 14:00:53.261: INFO: Trying to get logs from node ip-172-31-45-106 pod downwardapi-volume-b41dc2aa-458a-454c-b694-76c97288ad11 container client-container: <nil>
  STEP: delete the pod @ 05/25/24 14:00:53.267
  May 25 14:00:53.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7622" for this suite. @ 05/25/24 14:00:53.289
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 05/25/24 14:00:53.295
  May 25 14:00:53.295: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename projected @ 05/25/24 14:00:53.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 14:00:53.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 14:00:53.311
  STEP: Creating projection with secret that has name projected-secret-test-map-4c0ba660-7b5d-4422-8efd-eee586426586 @ 05/25/24 14:00:53.313
  STEP: Creating a pod to test consume secrets @ 05/25/24 14:00:53.319
  E0525 14:00:53.967987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:54.968072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:55.968524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:56.968603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 14:00:57.34
  May 25 14:00:57.342: INFO: Trying to get logs from node ip-172-31-45-106 pod pod-projected-secrets-f974cb38-636d-45b3-bd13-0b222afafd45 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/25/24 14:00:57.351
  May 25 14:00:57.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1659" for this suite. @ 05/25/24 14:00:57.37
• [4.082 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 05/25/24 14:00:57.377
  May 25 14:00:57.377: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename resourcequota @ 05/25/24 14:00:57.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 14:00:57.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 14:00:57.398
  STEP: Discovering how many secrets are in namespace by default @ 05/25/24 14:00:57.4
  E0525 14:00:57.968763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:58.969026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:00:59.969117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:00.969471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:01.970288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/25/24 14:01:02.403
  E0525 14:01:02.970438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:03.970802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:04.971283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:05.971375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:06.972214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/25/24 14:01:07.406
  STEP: Ensuring resource quota status is calculated @ 05/25/24 14:01:07.413
  E0525 14:01:07.972676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:08.972982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 05/25/24 14:01:09.417
  STEP: Ensuring resource quota status captures secret creation @ 05/25/24 14:01:09.428
  E0525 14:01:09.973826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:10.974727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 05/25/24 14:01:11.432
  STEP: Ensuring resource quota status released usage @ 05/25/24 14:01:11.439
  E0525 14:01:11.975153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:12.975220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:01:13.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1299" for this suite. @ 05/25/24 14:01:13.446
• [16.076 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 05/25/24 14:01:13.453
  May 25 14:01:13.453: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename container-probe @ 05/25/24 14:01:13.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 14:01:13.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 14:01:13.472
  STEP: Creating pod liveness-ce7421c0-fce0-4fab-9f4a-c285fb6ee1be in namespace container-probe-3975 @ 05/25/24 14:01:13.473
  E0525 14:01:13.975845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:14.975901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/25/24 14:01:15.487
  May 25 14:01:15.491: INFO: Initial restart count of pod liveness-ce7421c0-fce0-4fab-9f4a-c285fb6ee1be is 0
  May 25 14:01:15.493: INFO: Get pod liveness-ce7421c0-fce0-4fab-9f4a-c285fb6ee1be in namespace container-probe-3975
  E0525 14:01:15.976294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:16.976476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:01:17.497: INFO: Get pod liveness-ce7421c0-fce0-4fab-9f4a-c285fb6ee1be in namespace container-probe-3975
  E0525 14:01:17.976579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:18.976661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:01:19.502: INFO: Get pod liveness-ce7421c0-fce0-4fab-9f4a-c285fb6ee1be in namespace container-probe-3975
  E0525 14:01:19.977677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:20.977859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:01:21.506: INFO: Get pod liveness-ce7421c0-fce0-4fab-9f4a-c285fb6ee1be in namespace container-probe-3975
  E0525 14:01:21.978269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:22.978369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:01:23.510: INFO: Get pod liveness-ce7421c0-fce0-4fab-9f4a-c285fb6ee1be in namespace container-probe-3975
  E0525 14:01:23.979157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:24.979356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:01:25.515: INFO: Get pod liveness-ce7421c0-fce0-4fab-9f4a-c285fb6ee1be in namespace container-probe-3975
  E0525 14:01:25.979464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:26.979567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:01:27.519: INFO: Get pod liveness-ce7421c0-fce0-4fab-9f4a-c285fb6ee1be in namespace container-probe-3975
  E0525 14:01:27.979655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:28.979772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:01:29.525: INFO: Get pod liveness-ce7421c0-fce0-4fab-9f4a-c285fb6ee1be in namespace container-probe-3975
  E0525 14:01:29.979989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:30.980089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:01:31.529: INFO: Get pod liveness-ce7421c0-fce0-4fab-9f4a-c285fb6ee1be in namespace container-probe-3975
  E0525 14:01:31.981107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:32.981196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:01:33.533: INFO: Get pod liveness-ce7421c0-fce0-4fab-9f4a-c285fb6ee1be in namespace container-probe-3975
  E0525 14:01:33.981725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:34.981915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:01:35.537: INFO: Get pod liveness-ce7421c0-fce0-4fab-9f4a-c285fb6ee1be in namespace container-probe-3975
  May 25 14:01:35.537: INFO: Restart count of pod container-probe-3975/liveness-ce7421c0-fce0-4fab-9f4a-c285fb6ee1be is now 1 (20.046054081s elapsed)
  STEP: deleting the pod @ 05/25/24 14:01:35.537
  May 25 14:01:35.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3975" for this suite. @ 05/25/24 14:01:35.551
• [22.105 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 05/25/24 14:01:35.558
  May 25 14:01:35.558: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename configmap @ 05/25/24 14:01:35.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 14:01:35.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 14:01:35.592
  STEP: Creating configMap with name cm-test-opt-del-fc0e96b3-9428-4530-92a5-f5ad32be8464 @ 05/25/24 14:01:35.597
  STEP: Creating configMap with name cm-test-opt-upd-30dba161-eb77-4245-8cb6-2706f29a2333 @ 05/25/24 14:01:35.602
  STEP: Creating the pod @ 05/25/24 14:01:35.605
  E0525 14:01:35.982601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:36.982687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-fc0e96b3-9428-4530-92a5-f5ad32be8464 @ 05/25/24 14:01:37.641
  STEP: Updating configmap cm-test-opt-upd-30dba161-eb77-4245-8cb6-2706f29a2333 @ 05/25/24 14:01:37.646
  STEP: Creating configMap with name cm-test-opt-create-670987c8-0d07-4efa-9957-68752ab03039 @ 05/25/24 14:01:37.651
  STEP: waiting to observe update in volume @ 05/25/24 14:01:37.654
  E0525 14:01:37.983388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:38.983500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:39.983970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:40.984150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:41.984188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:42.984874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:43.985375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:44.985866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:45.986666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:46.986755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:47.986927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:48.987046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:49.987518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:50.987618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:51.988318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:52.988416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:53.988498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:54.988765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:55.989823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:56.989928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:57.990768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:58.990834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:01:59.990954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:00.991236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:01.991276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:02.991373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:03.991748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:04.992358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:05.992824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:06.993224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:07.993911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:08.994122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:09.994676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:10.995488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:11.996246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:12.996363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:13.997034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:14.997425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:15.997958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:16.999048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:17.999692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:18.999798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:20.000248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:21.000345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:22.000674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:23.000764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:24.000879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:25.000924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:26.001834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:27.001923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:28.002608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:29.002748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:30.003052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:31.003224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:32.003341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:33.003405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:34.003961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:35.004425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:36.005353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:37.005374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:38.005949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:39.006052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:40.006661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:41.006714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:42.007173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:43.007294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:44.008097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:45.008557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:46.009245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:47.009442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:48.009550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:49.009644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:50.010252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:51.010295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  May 25 14:02:51.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2964" for this suite. @ 05/25/24 14:02:51.989
• [76.436 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 05/25/24 14:02:51.995
  May 25 14:02:51.995: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename secrets @ 05/25/24 14:02:51.995
  E0525 14:02:52.011233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 14:02:52.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 14:02:52.014
  STEP: Creating secret with name secret-test-1cb60e80-7532-44b7-b7e7-5ba70a7f7b53 @ 05/25/24 14:02:52.016
  STEP: Creating a pod to test consume secrets @ 05/25/24 14:02:52.021
  E0525 14:02:53.011375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:54.011440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:55.012503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:56.012612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/25/24 14:02:56.036
  May 25 14:02:56.040: INFO: Trying to get logs from node ip-172-31-15-138 pod pod-secrets-60557294-633c-4854-8b45-9f748a3f15fc container secret-volume-test: <nil>
  STEP: delete the pod @ 05/25/24 14:02:56.055
  May 25 14:02:56.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7649" for this suite. @ 05/25/24 14:02:56.07
• [4.082 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 05/25/24 14:02:56.077
  May 25 14:02:56.077: INFO: >>> kubeConfig: /tmp/kubeconfig-2440777291
  STEP: Building a namespace api object, basename dns @ 05/25/24 14:02:56.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/25/24 14:02:56.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/25/24 14:02:56.095
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/25/24 14:02:56.097
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/25/24 14:02:56.097
  STEP: creating a pod to probe DNS @ 05/25/24 14:02:56.097
  STEP: submitting the pod to kubernetes @ 05/25/24 14:02:56.097
  E0525 14:02:57.012828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0525 14:02:58.013609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/25/24 14:02:58.111
  STEP: looking for the results for each expected name from probers @ 05/25/24 14:02:58.115
  May 25 14:02:58.127: INFO: DNS probes using dns-9119/dns-test-8807bb0e-e938-40e5-a7aa-e01239fbb950 succeeded

  STEP: deleting the pod @ 05/25/24 14:02:58.127
  May 25 14:02:58.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9119" for this suite. @ 05/25/24 14:02:58.14
• [2.069 seconds]
------------------------------
SSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  May 25 14:02:58.147: INFO: Running AfterSuite actions on node 1
  May 25 14:02:58.147: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.030 seconds]
------------------------------

Ran 388 of 7408 Specs in 6482.299 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7020 Skipped
PASS

Ginkgo ran 1 suite in 1h48m3.262069081s
Test Suite Passed
